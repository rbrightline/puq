var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/coverage.html",[0,1.706]],["body/coverage.html",[0,1.226,1,1.226,2,1.764,3,1.226,4,1.764,5,1.764,6,1.226,7,3.242,8,0.871,9,3.242,10,0.128,11,3.242,12,1.226,13,1.226,14,1.226,15,1.226,16,1.226,17,0.871,18,1.226,19,0.871,20,1.226,21,0.871,22,1.226,23,0.871,24,1.226,25,1.226,26,1.226,27,1.764,28,1.764,29,0.092,30,0.092]],["title/dependencies.html",[31,1.089,32,1.086]],["body/dependencies.html",[10,0.127,29,0.115,30,0.115,32,1.244,33,2.518,34,1.75,35,2.518,36,2.518]],["title/miscellaneous/functions.html",[37,1.089,38,0.756]],["body/miscellaneous/functions.html",[3,1.539,6,0.593,8,0.685,10,0.121,12,0.593,13,1.216,14,0.593,15,1.649,16,0.593,17,0.864,18,0.593,19,0.685,20,0.593,21,0.685,22,0.593,23,0.685,24,0.593,25,1.539,29,0.053,30,0.053,37,0.593,38,0.294,39,0.593,40,0.854,41,0.854,42,0.854,43,0.854,44,0.854,45,0.854,46,0.854,47,0.854,48,0.593,49,1.386,50,1.386,51,1.613,52,1.235,53,1.235,54,0.854,55,0.854,56,0.963,57,2.83,58,2.604,59,1.81,60,2.604,61,1.81,62,0.995,63,2.604,64,0.854,65,0.593,66,1.386,67,0.854,68,0.854,69,0.854,70,0.854,71,1.75,72,0.854,73,2.692,74,0.854,75,2.215,76,1.386,77,2.014,78,2.014,79,1.75,80,0.854,81,0.854,82,0.854,83,0.854,84,0.685,85,0.854,86,2.215,87,0.963,88,0.593,89,0.854,90,1.386,91,0.854,92,0.593,93,0.854,94,0.854,95,0.854,96,0.593,97,0.854]],["title/index.html",[39,1.089,98,1.567,99,1.567]],["body/index.html",[1,0.86,8,0.611,10,0.107,17,0.611,19,0.611,21,0.611,23,0.611,26,0.86,29,0.071,30,0.071,32,0.611,38,0.425,48,0.86,51,1.491,52,1.097,53,0.915,56,1.288,59,0.86,62,1.368,65,1.713,84,1.097,87,1.288,88,1.543,92,0.86,96,0.86,100,1.853,101,1.238,102,0.86,103,0.86,104,1.853,105,1.853,106,1.238,107,1.853,108,1.238,109,1.238,110,1.238,111,1.238,112,1.238,113,1.238,114,1.238,115,1.238,116,1.238,117,1.853,118,1.238,119,1.238,120,1.238,121,1.238,122,1.238,123,2.465,124,1.238,125,1.238,126,1.238,127,1.238,128,1.238,129,1.238,130,1.238,131,1.853,132,1.238,133,1.238,134,1.238,135,1.238,136,1.238,137,1.238,138,1.238,139,1.853,140,1.238,141,1.238,142,1.238,143,1.238,144,1.238,145,1.238,146,1.238,147,1.238,148,1.238,149,1.238,150,1.238,151,1.238,152,1.238,153,1.238,154,1.238,155,1.238,156,1.238,157,1.238,158,1.238,159,1.238,160,1.238,161,1.238,162,1.238,163,1.853,164,1.238,165,1.238]],["title/modules.html",[166,1.706]],["body/modules.html",[10,0.119,29,0.119,30,0.119,166,1.844]],["title/overview.html",[167,1.706]],["body/overview.html",[10,0.119,29,0.119,30,0.119,167,1.844]],["title/properties.html",[31,1.089,168,1.528]],["body/properties.html",[10,0.132,29,0.102,30,0.102,34,1.432,38,0.708,51,1.017,52,1.017,53,1.017,61,1.432,62,1.017,84,1.017,102,1.432,103,1.432,168,1.432,169,2.06,170,2.06,171,2.06,172,2.06,173,2.06,174,2.06,175,2.06,176,2.06,177,2.06,178,2.06,179,2.06,180,2.06,181,2.06,182,2.06]]],"invertedIndex":[["",{"_index":10,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0.4.11",{"_index":34,"title":{},"body":{"dependencies.html":{},"properties.html":{}}}],["0.5.15",{"_index":36,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":11,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":9,"title":{},"body":{"coverage.html":{}}}],["acts",{"_index":54,"title":{},"body":{"miscellaneous/functions.html":{}}}],["add",{"_index":109,"title":{},"body":{"index.html":{}}}],["array",{"_index":75,"title":{},"body":{"miscellaneous/functions.html":{}}}],["author",{"_index":180,"title":{},"body":{"properties.html":{}}}],["brightline",{"_index":182,"title":{},"body":{"properties.html":{}}}],["bug",{"_index":142,"title":{},"body":{"index.html":{}}}],["bugs",{"_index":174,"title":{},"body":{"properties.html":{}}}],["check",{"_index":62,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["checks",{"_index":49,"title":{},"body":{"miscellaneous/functions.html":{}}}],["compatibility",{"_index":145,"title":{},"body":{"index.html":{}}}],["consider",{"_index":126,"title":{},"body":{"index.html":{}}}],["contact",{"_index":162,"title":{},"body":{"index.html":{}}}],["contributions",{"_index":130,"title":{},"body":{"index.html":{}}}],["corresponding",{"_index":80,"title":{},"body":{"miscellaneous/functions.html":{}}}],["coverage",{"_index":0,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["date",{"_index":134,"title":{},"body":{"index.html":{}}}],["def",{"_index":8,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["def(value",{"_index":48,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["default",{"_index":91,"title":{},"body":{"miscellaneous/functions.html":{}}}],["defaultvalue",{"_index":86,"title":{},"body":{"miscellaneous/functions.html":{}}}],["defined",{"_index":65,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["dependencies",{"_index":32,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["description",{"_index":61,"title":{},"body":{"miscellaneous/functions.html":{},"properties.html":{}}}],["developer",{"_index":163,"title":{},"body":{"index.html":{}}}],["development",{"_index":129,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["effort",{"_index":121,"title":{},"body":{"index.html":{}}}],["empty",{"_index":84,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["ensure",{"_index":56,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["ensures",{"_index":93,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entries",{"_index":13,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["entries(instance",{"_index":68,"title":{},"body":{"miscellaneous/functions.html":{}}}],["enumerable",{"_index":70,"title":{},"body":{"miscellaneous/functions.html":{}}}],["error",{"_index":105,"title":{},"body":{"index.html":{}}}],["errorcode.requiredfieldmissing",{"_index":94,"title":{},"body":{"miscellaneous/functions.html":{}}}],["even",{"_index":150,"title":{},"body":{"index.html":{}}}],["example",{"_index":107,"title":{},"body":{"index.html":{}}}],["extract",{"_index":78,"title":{},"body":{"miscellaneous/functions.html":{}}}],["extracted",{"_index":82,"title":{},"body":{"miscellaneous/functions.html":{}}}],["extracts",{"_index":69,"title":{},"body":{"miscellaneous/functions.html":{}}}],["false",{"_index":67,"title":{},"body":{"miscellaneous/functions.html":{}}}],["features",{"_index":148,"title":{},"body":{"index.html":{}}}],["file",{"_index":2,"title":{},"body":{"coverage.html":{}}}],["find",{"_index":122,"title":{},"body":{"index.html":{}}}],["fixes",{"_index":143,"title":{},"body":{"index.html":{}}}],["function",{"_index":7,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":38,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["funding",{"_index":139,"title":{},"body":{"index.html":{}}}],["general",{"_index":156,"title":{},"body":{"index.html":{}}}],["getting",{"_index":98,"title":{"index.html":{}},"body":{}}],["given",{"_index":50,"title":{},"body":{"miscellaneous/functions.html":{}}}],["go",{"_index":140,"title":{},"body":{"index.html":{}}}],["guard",{"_index":55,"title":{},"body":{"miscellaneous/functions.html":{}}}],["help",{"_index":131,"title":{},"body":{"index.html":{}}}],["homepage",{"_index":172,"title":{},"body":{"properties.html":{}}}],["https://github.com/rbrightline/puq/tree/main",{"_index":179,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io",{"_index":175,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io/puq/is",{"_index":173,"title":{},"body":{"properties.html":{}}}],["identifier",{"_index":4,"title":{},"body":{"coverage.html":{}}}],["improvements",{"_index":153,"title":{},"body":{"index.html":{}}}],["index",{"_index":39,"title":{"index.html":{}},"body":{"miscellaneous/functions.html":{}}}],["install",{"_index":106,"title":{},"body":{"index.html":{}}}],["instance",{"_index":77,"title":{},"body":{"miscellaneous/functions.html":{}}}],["instant",{"_index":138,"title":{},"body":{"index.html":{}}}],["it's",{"_index":114,"title":{},"body":{"index.html":{}}}],["keep",{"_index":158,"title":{},"body":{"index.html":{}}}],["key",{"_index":71,"title":{},"body":{"miscellaneous/functions.html":{}}}],["keys",{"_index":15,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["keys(instance",{"_index":81,"title":{},"body":{"miscellaneous/functions.html":{}}}],["keywords",{"_index":170,"title":{},"body":{"properties.html":{}}}],["latest",{"_index":146,"title":{},"body":{"index.html":{}}}],["library",{"_index":123,"title":{},"body":{"index.html":{}}}],["license",{"_index":176,"title":{},"body":{"properties.html":{}}}],["maintained",{"_index":137,"title":{},"body":{"index.html":{}}}],["maintaining",{"_index":118,"title":{},"body":{"index.html":{}}}],["maintenance",{"_index":157,"title":{},"body":{"index.html":{}}}],["make",{"_index":149,"title":{},"body":{"index.html":{}}}],["matching",{"_index":30,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["means",{"_index":104,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":37,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":177,"title":{},"body":{"properties.html":{}}}],["modules",{"_index":166,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":151,"title":{},"body":{"index.html":{}}}],["name",{"_index":59,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["ne",{"_index":17,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["ne(value",{"_index":83,"title":{},"body":{"miscellaneous/functions.html":{}}}],["new",{"_index":26,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["null",{"_index":53,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["object",{"_index":73,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ongoing",{"_index":128,"title":{},"body":{"index.html":{}}}],["open",{"_index":115,"title":{},"body":{"index.html":{}}}],["optional",{"_index":60,"title":{},"body":{"miscellaneous/functions.html":{}}}],["otherwise",{"_index":66,"title":{},"body":{"miscellaneous/functions.html":{}}}],["out",{"_index":155,"title":{},"body":{"index.html":{}}}],["overview",{"_index":167,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":31,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pairs",{"_index":72,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parameters",{"_index":58,"title":{},"body":{"miscellaneous/functions.html":{}}}],["please",{"_index":125,"title":{},"body":{"index.html":{}}}],["pnpm",{"_index":108,"title":{},"body":{"index.html":{}}}],["powerful",{"_index":152,"title":{},"body":{"index.html":{}}}],["project",{"_index":117,"title":{},"body":{"index.html":{}}}],["properties",{"_index":168,"title":{"properties.html":{}},"body":{"properties.html":{}}}],["puq",{"_index":171,"title":{},"body":{"properties.html":{}}}],["puq/error",{"_index":33,"title":{},"body":{"dependencies.html":{}}}],["puq/is",{"_index":100,"title":{},"body":{"index.html":{}}}],["puq/isexamples",{"_index":110,"title":{},"body":{"index.html":{}}}],["repository",{"_index":178,"title":{},"body":{"properties.html":{}}}],["requiredvalueerror",{"_index":89,"title":{},"body":{"miscellaneous/functions.html":{}}}],["requiredvalueerrorfunding",{"_index":111,"title":{},"body":{"index.html":{}}}],["results",{"_index":29,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["return",{"_index":87,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["returns",{"_index":63,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rne",{"_index":19,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["rne(value",{"_index":85,"title":{},"body":{"miscellaneous/functions.html":{}}}],["robert",{"_index":181,"title":{},"body":{"properties.html":{}}}],["robert.brightline@gmail.com",{"_index":164,"title":{},"body":{"index.html":{}}}],["running",{"_index":159,"title":{},"body":{"index.html":{}}}],["rval",{"_index":21,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["rval(value",{"_index":92,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["secure",{"_index":135,"title":{},"body":{"index.html":{}}}],["securely",{"_index":161,"title":{},"body":{"index.html":{}}}],["set",{"_index":102,"title":{},"body":{"index.html":{},"properties.html":{}}}],["smoothly",{"_index":160,"title":{},"body":{"index.html":{}}}],["source",{"_index":116,"title":{},"body":{"index.html":{}}}],["src/.../def.ts",{"_index":40,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../entries.ts",{"_index":41,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../keys.ts",{"_index":42,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../ne.ts",{"_index":43,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../rne.ts",{"_index":44,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../rval.ts",{"_index":45,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../udef.ts",{"_index":46,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../values.ts",{"_index":47,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/lib/def.ts",{"_index":6,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/entries.ts",{"_index":12,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/keys.ts",{"_index":14,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/ne.ts",{"_index":16,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/rne.ts",{"_index":18,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/rval.ts",{"_index":20,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/udef.ts",{"_index":22,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/values.ts",{"_index":24,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["started",{"_index":99,"title":{"index.html":{}},"body":{}}],["statements",{"_index":5,"title":{},"body":{"coverage.html":{}}}],["stays",{"_index":132,"title":{},"body":{"index.html":{}}}],["string",{"_index":79,"title":{},"body":{"miscellaneous/functions.html":{}}}],["summary",{"_index":101,"title":{},"body":{"index.html":{}}}],["support",{"_index":165,"title":{},"body":{"index.html":{}}}],["supporting",{"_index":127,"title":{},"body":{"index.html":{}}}],["swc/helpers",{"_index":35,"title":{},"body":{"dependencies.html":{}}}],["t",{"_index":57,"title":{},"body":{"miscellaneous/functions.html":{}}}],["table",{"_index":28,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":27,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":119,"title":{},"body":{"index.html":{}}}],["thank",{"_index":112,"title":{},"body":{"index.html":{}}}],["throw",{"_index":88,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["time",{"_index":120,"title":{},"body":{"index.html":{}}}],["toward",{"_index":141,"title":{},"body":{"index.html":{}}}],["true",{"_index":64,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tuples",{"_index":76,"title":{},"body":{"miscellaneous/functions.html":{}}}],["type",{"_index":3,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["typed",{"_index":74,"title":{},"body":{"miscellaneous/functions.html":{}}}],["udef",{"_index":23,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["udef(value",{"_index":96,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["undefined",{"_index":52,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["up",{"_index":133,"title":{},"body":{"index.html":{}}}],["updates",{"_index":144,"title":{},"body":{"index.html":{}}}],["useful",{"_index":124,"title":{},"body":{"index.html":{}}}],["users",{"_index":154,"title":{},"body":{"index.html":{}}}],["using",{"_index":113,"title":{},"body":{"index.html":{}}}],["utility",{"_index":103,"title":{},"body":{"index.html":{},"properties.html":{}}}],["validate",{"_index":95,"title":{},"body":{"miscellaneous/functions.html":{}}}],["value",{"_index":51,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["values",{"_index":25,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["values(instance",{"_index":97,"title":{},"body":{"miscellaneous/functions.html":{}}}],["version",{"_index":169,"title":{},"body":{"properties.html":{}}}],["versions",{"_index":147,"title":{},"body":{"index.html":{}}}],["well",{"_index":136,"title":{},"body":{"index.html":{}}}],["yes",{"_index":90,"title":{},"body":{"miscellaneous/functions.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/lib/def.ts\n            \n            function\n            def\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/entries.ts\n            \n            function\n            entries\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/keys.ts\n            \n            function\n            keys\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/ne.ts\n            \n            function\n            ne\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/rne.ts\n            \n            function\n            rne\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/rval.ts\n            \n            function\n            rval\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/udef.ts\n            \n            function\n            udef\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/values.ts\n            \n            function\n            values\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @puq/error : ^0.4.11\n        \n            @swc/helpers : ^0.5.15\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            def   (src/.../def.ts)\n                        \n                        \n                            entries   (src/.../entries.ts)\n                        \n                        \n                            keys   (src/.../keys.ts)\n                        \n                        \n                            ne   (src/.../ne.ts)\n                        \n                        \n                            rne   (src/.../rne.ts)\n                        \n                        \n                            rval   (src/.../rval.ts)\n                        \n                        \n                            udef   (src/.../udef.ts)\n                        \n                        \n                            values   (src/.../values.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/def.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        def\n                        \n                    \n                \n            \n            \n                \ndef(value)\n                \n            \n\n\n\n\n            \n                \n                        Checks if the given value is neither undefined nor null.\nActs as a type guard to ensure value is of type T.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe value to check.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                true if the value is defined (not undefined or null), otherwise false.\n\n                            \n                \n            \n        \n    \n    src/lib/entries.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        entries\n                        \n                    \n                \n            \n            \n                \nentries(instance: T)\n                \n            \n\n\n\n\n            \n                \n                        Extracts the enumerable key-value pairs of an object as a typed array of tuples.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                instance\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe object to extract entries from.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Array<>\n\n                        \n                            \n                                An array of [key, value] tuples, where key is a string and value is the corresponding value from instance.\n\n                            \n                \n            \n        \n    \n    src/lib/keys.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        keys\n                        \n                    \n                \n            \n            \n                \nkeys(instance: T)\n                \n            \n\n\n\n\n            \n                \n                        Extract the keys of the object\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                instance\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nthe object value that the keys are extracted from\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Keys\n\n                        \n                            \n                                the keys of the object as string[]\n\n                            \n                \n            \n        \n    \n    src/lib/ne.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ne\n                        \n                    \n                \n            \n            \n                \nne(value)\n                \n            \n\n\n\n\n            \n                \n                        Check the value is not empty string, array, object, undefined, or null\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    any value\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/rne.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        rne\n                        \n                    \n                \n            \n            \n                \nrne(value, defaultValue?)\n                \n            \n\n\n\n\n            \n                \n                        Ensure the value or defaultValue is neither undefined, null, or empty (check ne), and return the value, or throw RequiredValueError\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    any value\n\n                                            \n                                        \n                                        \n                                                defaultValue\n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    default value\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/rval.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        rval\n                        \n                    \n                \n            \n            \n                \nrval(value, defaultValue?)\n                \n            \n\n\n\n\n            \n                \n                        Ensures the value is neither undefined nor null and return the value, otherwise ErrorCode.RequiredFieldMissing.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe value to validate.\n\n\n                                            \n                                        \n                                        \n                                                defaultValue\n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/udef.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        udef\n                        \n                    \n                \n            \n            \n                \nudef(value)\n                \n            \n\n\n\n\n            \n                \n                        Checks if the given value is either null or undefined\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe value to check.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     undefined | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/values.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        values\n                        \n                    \n                \n            \n            \n                \nvalues(instance: T)\n                \n            \n\n\n\n\n            \n                \n                        Extract the values of an object\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                instance\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nthe object value to extract the values from\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     any[]\n\n                        \n                            \n                                Array of values of the object\n\n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n@puq/is\nSummary\nA set of utility functions to check the value is undefined, null, or empty\n\ndef: check the value is defined\nudef: check the value is not defined\nne: check the value is not empty in any means\nrne: check the value is not empty in any means and return it or throw error\nrval: check the value is neither undefined nor null and return it or throw error\n\nInstall\nExample :  pnpm add @puq/isExamples\nExample :if (def(value))   // Value is defined\nif (udef(value))  // Value is undefined\nif (rval(value))  // Value is defined or throw RequiredValueErrorFunding\nThank you for using @puq/is It's an open-source project, and maintaining it takes time and effort. If you find this library useful, please consider supporting its ongoing development. Your contributions help ensure that the project stays up-to-date, secure, and well-maintained.\nInstant Funding\nYour funding will go toward\n\nBug fixes and updates to ensure compatibility with the latest versions of dependencies.\nNew features that will make the library even more powerful.\nDocumentation improvements to help users get the most out of [Your Library Name].\nGeneral maintenance to keep the library running smoothly and securely.\n\nContact to the developer: [robert.brightline@gmail.com]\nSupport the developer\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.4.11\n        \n            Description : A set of utility functions to check the value is undefined, null, or empty\n        \n            Keywords : puq, is\n        \n            Homepage : https://rbrightline.github.io/puq/is\n        \n            Bugs : https://rbrightline.github.io\n        \n            License : MIT\n        \n            Repository : https://github.com/rbrightline/puq/tree/main\n        \n            Author : Robert Brightline\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
