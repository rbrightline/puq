var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/coverage.html",[0,1.888]],["body/coverage.html",[0,1.035,1,1.035,2,1.035,3,1.709,4,1.447,5,1.447,6,1.035,7,2.509,8,1.035,9,3.51,10,0.117,11,3.51,12,1.035,13,1.035,14,1.035,15,1.035,16,1.035,17,0.763,18,1.452,19,1.709,20,1.035,21,3.163,22,0.763,23,3.163,24,3.163,25,1.116,26,1.035,27,0.763,28,1.035,29,1.035,30,1.035,31,1.513,32,1.035,33,1.035,34,1.035,35,1.035,36,1.035,37,1.116,38,1.035,39,0.763,40,1.116,41,1.035,42,0.763,43,1.116,44,0.763,45,1.035,46,1.32,47,1.035,48,0.763,49,0.763,50,1.035,51,1.447,52,1.447,53,0.068,54,0.068]],["title/dependencies.html",[55,1.21,56,1.248]],["body/dependencies.html",[10,0.116,53,0.103,54,0.103,56,1.441,57,2.733,58,3.228,59,2.733,60,2.733,61,2.733]],["title/miscellaneous/functions.html",[62,0.655,63,1.248]],["body/miscellaneous/functions.html",[2,2.124,3,1.596,6,0.573,8,1.221,10,0.113,12,0.573,13,0.952,14,0.573,15,1.579,16,0.573,17,1.256,18,0.702,19,1.447,20,0.952,22,0.702,25,0.702,26,0.952,27,0.702,28,0.573,29,0.952,30,0.952,31,0.952,32,0.952,33,0.952,34,0.952,35,0.573,36,0.952,37,0.422,38,0.952,39,0.702,40,0.422,41,0.952,42,0.702,43,0.422,44,1.049,46,0.422,47,0.952,48,0.702,49,0.702,53,0.042,54,0.042,62,0.31,63,0.422,64,0.422,65,0.801,66,0.801,67,0.801,68,0.801,69,0.952,70,0.801,71,1.331,72,0.801,73,0.573,74,0.573,75,0.573,76,0.573,77,0.801,78,2.492,79,1.331,80,3.125,81,3.079,82,2.234,83,3.125,84,1.963,85,0.801,86,1.579,87,0.952,88,1.99,89,2.234,90,1.579,91,1.708,92,2.906,93,2.745,94,0.801,95,0.801,96,1.331,97,0.801,98,1.331,99,2.384,100,0.801,101,2.831,102,1.331,103,1.708,104,1.331,105,2.645,106,2.209,107,0.801,108,0.801,109,1.331,110,1.331,111,0.801,112,0.801,113,1.331,114,0.573,115,0.801,116,0.801,117,0.801,118,0.801,119,0.801,120,0.801,121,1.708,122,0.573,123,0.801,124,0.801,125,0.801,126,0.801,127,0.801,128,0.952,129,0.801,130,0.801,131,0.801,132,0.801,133,0.801,134,0.801,135,0.801,136,0.801,137,0.573,138,0.801,139,1.331,140,0.801,141,0.801,142,0.801,143,0.801,144,1.331,145,0.801,146,0.801]],["title/index.html",[64,0.892,147,1.693,148,1.693]],["body/index.html",[1,1.232,10,0.088,17,0.908,44,1.264,50,1.232,53,0.076,54,0.076,56,0.908,63,0.908,82,1.232,86,1.232,87,1.232,89,1.972,90,1.232,114,1.232,122,1.232,128,1.232,137,1.232,149,2.398,150,1.723,151,3.134,152,1.723,153,1.723,154,2.398,155,2.758,156,1.723,157,2.398,158,1.723,159,1.723,160,1.723,161,1.723,162,1.723,163,1.723,164,1.723,165,1.723,166,1.723,167,1.723,168,1.723,169,1.723,170,1.723,171,1.723,172,1.723,173,1.723,174,1.723,175,1.723,176,1.723,177,1.723,178,1.723,179,1.723,180,1.723,181,1.723,182,1.723,183,1.723,184,1.723,185,1.723,186,1.723,187,1.723,188,2.398,189,2.398,190,1.723,191,1.723,192,1.723,193,1.723,194,1.723,195,1.723,196,1.723,197,2.398,198,1.723,199,1.723,200,1.723,201,1.723,202,1.723,203,1.723,204,1.723,205,1.723,206,1.723,207,1.723,208,1.723,209,1.723,210,1.723,211,1.723,212,1.723,213,1.723,214,1.723,215,1.723,216,1.723,217,1.723,218,1.723,219,2.398,220,1.723,221,1.723]],["title/modules.html",[222,1.888]],["body/modules.html",[10,0.106,53,0.106,54,0.106,222,2.069]],["title/overview.html",[223,1.888]],["body/overview.html",[10,0.106,53,0.106,54,0.106,223,2.069]],["title/properties.html",[55,1.21,224,1.693]],["body/properties.html",[10,0.119,53,0.097,54,0.097,84,1.768,224,1.768,225,2.473,226,2.473,227,3.04,228,2.473,229,2.473,230,2.473,231,2.473,232,2.473,233,2.473,234,2.473,235,2.473,236,2.473,237,2.473,238,2.473,239,2.473,240,2.473]],["title/miscellaneous/typealiases.html",[62,0.655,241,2.369]],["body/miscellaneous/typealiases.html",[3,1.759,7,1.479,10,0.113,18,1.43,19,1.84,22,1.43,25,1.43,27,1.43,37,1.091,39,1.43,40,1.091,42,1.43,43,1.091,45,1.94,46,1.091,48,1.43,49,1.43,53,0.087,54,0.087,62,0.8,64,1.091,69,1.94,73,1.479,74,1.479,75,1.479,76,1.94,78,1.479,242,2.069,243,2.069,244,2.069,245,2.069,246,2.069,247,2.069,248,2.069,249,3.214]]],"invertedIndex":[["",{"_index":10,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":23,"title":{},"body":{"coverage.html":{}}}],["0.0.2",{"_index":58,"title":{},"body":{"dependencies.html":{}}}],["0.0.4",{"_index":60,"title":{},"body":{"dependencies.html":{}}}],["0.0.8",{"_index":226,"title":{},"body":{"properties.html":{}}}],["0/1",{"_index":24,"title":{},"body":{"coverage.html":{}}}],["1/1",{"_index":11,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":9,"title":{},"body":{"coverage.html":{}}}],["absolute",{"_index":103,"title":{},"body":{"miscellaneous/functions.html":{}}}],["access",{"_index":137,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["accessing",{"_index":167,"title":{},"body":{"index.html":{}}}],["add",{"_index":170,"title":{},"body":{"index.html":{}}}],["alias",{"_index":21,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":242,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["asynciterable",{"_index":245,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["author",{"_index":238,"title":{},"body":{"properties.html":{}}}],["boolean",{"_index":116,"title":{},"body":{"miscellaneous/functions.html":{}}}],["brightline",{"_index":240,"title":{},"body":{"properties.html":{}}}],["bufferencoding",{"_index":247,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["bug",{"_index":200,"title":{},"body":{"index.html":{}}}],["bugs",{"_index":232,"title":{},"body":{"properties.html":{}}}],["check",{"_index":113,"title":{},"body":{"miscellaneous/functions.html":{}}}],["checkt",{"_index":118,"title":{},"body":{"miscellaneous/functions.html":{}}}],["compatibility",{"_index":203,"title":{},"body":{"index.html":{}}}],["confined",{"_index":156,"title":{},"body":{"index.html":{}}}],["consider",{"_index":183,"title":{},"body":{"index.html":{}}}],["contact",{"_index":218,"title":{},"body":{"index.html":{}}}],["content",{"_index":144,"title":{},"body":{"miscellaneous/functions.html":{}}}],["contributions",{"_index":187,"title":{},"body":{"index.html":{}}}],["converts",{"_index":140,"title":{},"body":{"miscellaneous/functions.html":{}}}],["coverage",{"_index":0,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":121,"title":{},"body":{"miscellaneous/functions.html":{}}}],["current",{"_index":162,"title":{},"body":{"index.html":{}}}],["cwd",{"_index":164,"title":{},"body":{"index.html":{}}}],["date",{"_index":192,"title":{},"body":{"index.html":{}}}],["default",{"_index":90,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["defined",{"_index":158,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":56,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["description",{"_index":84,"title":{},"body":{"miscellaneous/functions.html":{},"properties.html":{}}}],["developer",{"_index":219,"title":{},"body":{"index.html":{}}}],["development",{"_index":186,"title":{},"body":{"index.html":{}}}],["dir.ts",{"_index":32,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["directories",{"_index":87,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["directory",{"_index":89,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["directory/directory",{"_index":142,"title":{},"body":{"miscellaneous/functions.html":{}}}],["directory/some/other/file",{"_index":129,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dirpath",{"_index":8,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["dirpath(filepath",{"_index":77,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dirs",{"_index":13,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["dirs(directory",{"_index":85,"title":{},"body":{"miscellaneous/functions.html":{}}}],["documentation",{"_index":1,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["effort",{"_index":180,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":189,"title":{},"body":{"index.html":{}}}],["even",{"_index":208,"title":{},"body":{"index.html":{}}}],["example",{"_index":128,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["exist",{"_index":146,"title":{},"body":{"miscellaneous/functions.html":{}}}],["expression",{"_index":106,"title":{},"body":{"miscellaneous/functions.html":{}}}],["extention",{"_index":98,"title":{},"body":{"miscellaneous/functions.html":{}}}],["extract",{"_index":79,"title":{},"body":{"miscellaneous/functions.html":{}}}],["features",{"_index":206,"title":{},"body":{"index.html":{}}}],["file",{"_index":2,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["file.ts",{"_index":19,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["filecontent",{"_index":48,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["filename",{"_index":15,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["filename(filepath",{"_index":94,"title":{},"body":{"miscellaneous/functions.html":{}}}],["filename/last",{"_index":95,"title":{},"body":{"miscellaneous/functions.html":{}}}],["filepath",{"_index":80,"title":{},"body":{"miscellaneous/functions.html":{}}}],["files",{"_index":17,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["files(directory",{"_index":97,"title":{},"body":{"miscellaneous/functions.html":{}}}],["files.ts",{"_index":25,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["find",{"_index":86,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["findfile",{"_index":20,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["findfile(filepath",{"_index":100,"title":{},"body":{"miscellaneous/functions.html":{}}}],["findfileoptions",{"_index":22,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["findfiles",{"_index":26,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["findfiles(filepath",{"_index":107,"title":{},"body":{"miscellaneous/functions.html":{}}}],["findfilesoptions",{"_index":27,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["first/second/third/fourth/fifth",{"_index":124,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fixes",{"_index":201,"title":{},"body":{"index.html":{}}}],["fs",{"_index":227,"title":{},"body":{"properties.html":{}}}],["function",{"_index":7,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":63,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["funding",{"_index":197,"title":{},"body":{"index.html":{}}}],["general",{"_index":213,"title":{},"body":{"index.html":{}}}],["getting",{"_index":147,"title":{"index.html":{}},"body":{}}],["go",{"_index":198,"title":{},"body":{"index.html":{}}}],["hassegments",{"_index":30,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["hassegments(filepath",{"_index":112,"title":{},"body":{"miscellaneous/functions.html":{}}}],["help",{"_index":188,"title":{},"body":{"index.html":{}}}],["homepage",{"_index":230,"title":{},"body":{"properties.html":{}}}],["https://github.com/rbrightline/puq/tree/main",{"_index":237,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io",{"_index":233,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io/puq/fs",{"_index":231,"title":{},"body":{"properties.html":{}}}],["i/o",{"_index":153,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":4,"title":{},"body":{"coverage.html":{}}}],["improvements",{"_index":210,"title":{},"body":{"index.html":{}}}],["index",{"_index":64,"title":{"index.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["install",{"_index":168,"title":{},"body":{"index.html":{}}}],["instant",{"_index":196,"title":{},"body":{"index.html":{}}}],["internal.stream",{"_index":246,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["isdir",{"_index":33,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isdir(filepath",{"_index":117,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isfile",{"_index":34,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isfile(filepath",{"_index":119,"title":{},"body":{"miscellaneous/functions.html":{}}}],["it's",{"_index":174,"title":{},"body":{"index.html":{}}}],["iterable",{"_index":244,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["keep",{"_index":215,"title":{},"body":{"index.html":{}}}],["keywords",{"_index":228,"title":{},"body":{"properties.html":{}}}],["latest",{"_index":204,"title":{},"body":{"index.html":{}}}],["library",{"_index":151,"title":{},"body":{"index.html":{}}}],["license",{"_index":234,"title":{},"body":{"properties.html":{}}}],["limited",{"_index":166,"title":{},"body":{"index.html":{}}}],["list",{"_index":108,"title":{},"body":{"miscellaneous/functions.html":{}}}],["literal",{"_index":249,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["maintained",{"_index":195,"title":{},"body":{"index.html":{}}}],["maintaining",{"_index":177,"title":{},"body":{"index.html":{}}}],["maintenance",{"_index":214,"title":{},"body":{"index.html":{}}}],["make",{"_index":207,"title":{},"body":{"index.html":{}}}],["matching",{"_index":54,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["mathces",{"_index":127,"title":{},"body":{"miscellaneous/functions.html":{}}}],["meaning",{"_index":165,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":62,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["mit",{"_index":235,"title":{},"body":{"properties.html":{}}}],["mkdir",{"_index":36,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["mkdir(directory",{"_index":120,"title":{},"body":{"miscellaneous/functions.html":{}}}],["modules",{"_index":222,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":114,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["name",{"_index":82,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["new",{"_index":50,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["nodejs.arraybufferview",{"_index":243,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["null",{"_index":248,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["one",{"_index":115,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ongoing",{"_index":185,"title":{},"body":{"index.html":{}}}],["open",{"_index":175,"title":{},"body":{"index.html":{}}}],["operations",{"_index":154,"title":{},"body":{"index.html":{}}}],["optional",{"_index":83,"title":{},"body":{"miscellaneous/functions.html":{}}}],["options",{"_index":101,"title":{},"body":{"miscellaneous/functions.html":{}}}],["out",{"_index":212,"title":{},"body":{"index.html":{}}}],["outside",{"_index":160,"title":{},"body":{"index.html":{}}}],["overview",{"_index":223,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":55,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":81,"title":{},"body":{"miscellaneous/functions.html":{}}}],["path",{"_index":105,"title":{},"body":{"miscellaneous/functions.html":{}}}],["paths",{"_index":110,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pathscope",{"_index":45,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["please",{"_index":182,"title":{},"body":{"index.html":{}}}],["pnpm",{"_index":169,"title":{},"body":{"index.html":{}}}],["powerful",{"_index":209,"title":{},"body":{"index.html":{}}}],["project",{"_index":155,"title":{},"body":{"index.html":{}}}],["promise",{"_index":93,"title":{},"body":{"miscellaneous/functions.html":{}}}],["properties",{"_index":224,"title":{"properties.html":{}},"body":{"properties.html":{}}}],["provided",{"_index":138,"title":{},"body":{"miscellaneous/functions.html":{}}}],["puq",{"_index":229,"title":{},"body":{"properties.html":{}}}],["puq/debug",{"_index":57,"title":{},"body":{"dependencies.html":{}}}],["puq/error",{"_index":59,"title":{},"body":{"dependencies.html":{}}}],["puq/fs",{"_index":149,"title":{},"body":{"index.html":{}}}],["puq/fsfunding",{"_index":171,"title":{},"body":{"index.html":{}}}],["puq/is",{"_index":61,"title":{},"body":{"dependencies.html":{}}}],["read",{"_index":126,"title":{},"body":{"miscellaneous/functions.html":{}}}],["readfile",{"_index":38,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["readfile(filepath",{"_index":125,"title":{},"body":{"miscellaneous/functions.html":{}}}],["readfileoptions",{"_index":39,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["recursively",{"_index":104,"title":{},"body":{"miscellaneous/functions.html":{}}}],["regular",{"_index":111,"title":{},"body":{"miscellaneous/functions.html":{}}}],["relative",{"_index":109,"title":{},"body":{"miscellaneous/functions.html":{}}}],["remove",{"_index":131,"title":{},"body":{"miscellaneous/functions.html":{}}}],["repository",{"_index":236,"title":{},"body":{"properties.html":{}}}],["resolve(cwd",{"_index":141,"title":{},"body":{"miscellaneous/functions.html":{}}}],["resolver",{"_index":135,"title":{},"body":{"miscellaneous/functions.html":{}}}],["resources",{"_index":159,"title":{},"body":{"index.html":{}}}],["restrict",{"_index":136,"title":{},"body":{"miscellaneous/functions.html":{}}}],["restricts",{"_index":152,"title":{},"body":{"index.html":{}}}],["results",{"_index":53,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":102,"title":{},"body":{"miscellaneous/functions.html":{}}}],["returns",{"_index":92,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rm",{"_index":41,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["rm(filepath",{"_index":130,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rmoptions",{"_index":42,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["robert",{"_index":239,"title":{},"body":{"properties.html":{}}}],["robert.brightline@gmail.com",{"_index":220,"title":{},"body":{"index.html":{}}}],["root",{"_index":139,"title":{},"body":{"miscellaneous/functions.html":{}}}],["running",{"_index":216,"title":{},"body":{"index.html":{}}}],["scope",{"_index":44,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["scope(root",{"_index":134,"title":{},"body":{"miscellaneous/functions.html":{}}}],["secure",{"_index":193,"title":{},"body":{"index.html":{}}}],["securely",{"_index":122,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["segment",{"_index":96,"title":{},"body":{"miscellaneous/functions.html":{}}}],["segments.ts",{"_index":29,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["set",{"_index":161,"title":{},"body":{"index.html":{}}}],["smoothly",{"_index":217,"title":{},"body":{"index.html":{}}}],["source",{"_index":176,"title":{},"body":{"index.html":{}}}],["src/.../dirpath.ts",{"_index":65,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../dirs.ts",{"_index":66,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../filename.ts",{"_index":67,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../files.ts",{"_index":68,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../find",{"_index":69,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../has",{"_index":70,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../is",{"_index":71,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../mkdir.ts",{"_index":72,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../read",{"_index":73,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../rm.ts",{"_index":74,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../scope.ts",{"_index":75,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../write",{"_index":76,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/dirpath.ts",{"_index":6,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/dirs.ts",{"_index":12,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/filename.ts",{"_index":14,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/files.ts",{"_index":16,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/find",{"_index":18,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/has",{"_index":28,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/is",{"_index":31,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/mkdir.ts",{"_index":35,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/read",{"_index":37,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/rm.ts",{"_index":40,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/scope.ts",{"_index":43,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/write",{"_index":46,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["started",{"_index":148,"title":{"index.html":{}},"body":{}}],["statements",{"_index":5,"title":{},"body":{"coverage.html":{}}}],["stays",{"_index":190,"title":{},"body":{"index.html":{}}}],["string",{"_index":78,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["such",{"_index":123,"title":{},"body":{"miscellaneous/functions.html":{}}}],["summary",{"_index":150,"title":{},"body":{"index.html":{}}}],["support",{"_index":221,"title":{},"body":{"index.html":{}}}],["supporting",{"_index":184,"title":{},"body":{"index.html":{}}}],["system",{"_index":133,"title":{},"body":{"miscellaneous/functions.html":{}}}],["table",{"_index":52,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":51,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":178,"title":{},"body":{"index.html":{}}}],["target",{"_index":88,"title":{},"body":{"miscellaneous/functions.html":{}}}],["thank",{"_index":172,"title":{},"body":{"index.html":{}}}],["time",{"_index":179,"title":{},"body":{"index.html":{}}}],["toward",{"_index":199,"title":{},"body":{"index.html":{}}}],["type",{"_index":3,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":241,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["under",{"_index":132,"title":{},"body":{"miscellaneous/functions.html":{}}}],["up",{"_index":191,"title":{},"body":{"index.html":{}}}],["updates",{"_index":202,"title":{},"body":{"index.html":{}}}],["useful",{"_index":181,"title":{},"body":{"index.html":{}}}],["users",{"_index":211,"title":{},"body":{"index.html":{}}}],["using",{"_index":173,"title":{},"body":{"index.html":{}}}],["value",{"_index":91,"title":{},"body":{"miscellaneous/functions.html":{}}}],["version",{"_index":225,"title":{},"body":{"properties.html":{}}}],["versions",{"_index":205,"title":{},"body":{"index.html":{}}}],["well",{"_index":194,"title":{},"body":{"index.html":{}}}],["within",{"_index":157,"title":{},"body":{"index.html":{}}}],["working",{"_index":163,"title":{},"body":{"index.html":{}}}],["write",{"_index":145,"title":{},"body":{"miscellaneous/functions.html":{}}}],["writefile",{"_index":47,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["writefile(filepath",{"_index":143,"title":{},"body":{"miscellaneous/functions.html":{}}}],["writefileoptions",{"_index":49,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["yes",{"_index":99,"title":{},"body":{"miscellaneous/functions.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/lib/dirpath.ts\n            \n            function\n            dirpath\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/dirs.ts\n            \n            function\n            dirs\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/filename.ts\n            \n            function\n            filename\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/files.ts\n            \n            function\n            files\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/find-file.ts\n            \n            function\n            findFile\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/find-file.ts\n            \n            type alias\n            FindFileOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/find-files.ts\n            \n            function\n            findFiles\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/find-files.ts\n            \n            type alias\n            FindFilesOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/has-segments.ts\n            \n            function\n            hasSegments\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/is-dir.ts\n            \n            function\n            isDir\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/is-file.ts\n            \n            function\n            isFile\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/mkdir.ts\n            \n            function\n            mkdir\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/read-file.ts\n            \n            function\n            readFile\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/read-file.ts\n            \n            type alias\n            ReadFileOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/rm.ts\n            \n            function\n            rm\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/rm.ts\n            \n            type alias\n            RmOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/scope.ts\n            \n            function\n            scope\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/scope.ts\n            \n            type alias\n            PathScope\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/write-file.ts\n            \n            function\n            writeFile\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/write-file.ts\n            \n            type alias\n            FileContent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/write-file.ts\n            \n            type alias\n            WriteFileOptions\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @puq/debug : ^0.0.2\n        \n            @puq/error : ^0.0.4\n        \n            @puq/is : ^0.0.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            dirpath   (src/.../dirpath.ts)\n                        \n                        \n                            dirs   (src/.../dirs.ts)\n                        \n                        \n                            filename   (src/.../filename.ts)\n                        \n                        \n                            files   (src/.../files.ts)\n                        \n                        \n                            findFile   (src/.../find-file.ts)\n                        \n                        \n                            findFiles   (src/.../find-files.ts)\n                        \n                        \n                            hasSegments   (src/.../has-segments.ts)\n                        \n                        \n                            isDir   (src/.../is-dir.ts)\n                        \n                        \n                            isFile   (src/.../is-file.ts)\n                        \n                        \n                            mkdir   (src/.../mkdir.ts)\n                        \n                        \n                            readFile   (src/.../read-file.ts)\n                        \n                        \n                            rm   (src/.../rm.ts)\n                        \n                        \n                            scope   (src/.../scope.ts)\n                        \n                        \n                            writeFile   (src/.../write-file.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/dirpath.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        dirpath\n                        \n                    \n                \n            \n            \n                \ndirpath(filepath: string)\n                \n            \n\n\n\n\n            \n                \n                        Extract the dirpath from the filepath\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                filepath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    filename\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/lib/dirs.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        dirs\n                        \n                    \n                \n            \n            \n                \ndirs(directory: string)\n                \n            \n\n\n\n\n            \n                \n                        Find all directories in the target directory (only directories)\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                directory\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    '.'\n                                            \n\n                                            \n                                                    target directory (\".\" by default)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/filename.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        filename\n                        \n                    \n                \n            \n            \n                \nfilename(filepath: string)\n                \n            \n\n\n\n\n            \n                \n                        Extract the filename/last segment from the filepath.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                filepath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    filename\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/files.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        files\n                        \n                    \n                \n            \n            \n                \nfiles(directory: string, extention?: string)\n                \n            \n\n\n\n\n            \n                \n                        Find all files in the target directory (only files)\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                directory\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    '.'\n                                            \n\n                                            \n                                                    target directory (\".\" by default)\n\n                                            \n                                        \n                                        \n                                                extention\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/find-file.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        findFile\n                        \n                    \n                \n            \n            \n                \nfindFile(filepath: string, options?: FindFileOptions)\n                \n            \n\n\n\n\n            \n                \n                        Find file and return the absolute filepath recursively (optional)\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                filepath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    file path or file path with filename expression\n\n                                            \n                                        \n                                        \n                                                options\n                                            \n                                                            FindFileOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/find-files.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        findFiles\n                        \n                    \n                \n            \n            \n                \nfindFiles(filepath: string, options?: FindFilesOptions)\n                \n            \n\n\n\n\n            \n                \n                        Find files and return the list of relative paths\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                filepath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    string | regular expression\n\n                                            \n                                        \n                                        \n                                                options\n                                            \n                                                            FindFilesOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/has-segments.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        hasSegments\n                        \n                    \n                \n            \n            \n                \nhasSegments(filepath: string)\n                \n            \n\n\n\n\n            \n                \n                        Check the filepath has more than one segment\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filepath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/is-dir.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isDir\n                        \n                    \n                \n            \n            \n                \nisDir(filepath: string)\n                \n            \n\n\n\n\n            \n                \n                        Checkt he filepath is a directory\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filepath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/is-file.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isFile\n                        \n                    \n                \n            \n            \n                \nisFile(filepath: string)\n                \n            \n\n\n\n\n            \n                \n                        Check the path is file\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filepath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/mkdir.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mkdir\n                        \n                    \n                \n            \n            \n                \nmkdir(directory: string)\n                \n            \n\n\n\n\n            \n                \n                        Create directory recursively and securely\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                directory\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    directory path such as `./first/second/third/fourth/fifth...'\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/read-file.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        readFile\n                        \n                    \n                \n            \n            \n                \nreadFile(filepath: string, options?: ReadFileOptions)\n                \n            \n\n\n\n\n            \n                \n                        Find and read the file that mathces the expression.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                filepath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    file path or file expression or file path with file-name expression.\nFor example directory/some/other/file* , file.ts, file.*`\n\n                                            \n                                        \n                                        \n                                                options\n                                            \n                                                            ReadFileOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/lib/rm.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        rm\n                        \n                    \n                \n            \n            \n                \nrm(filepath: string, options?: RmOptions)\n                \n            \n\n\n\n\n            \n                \n                        Remove files under the file system scope\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filepath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            RmOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/scope.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        scope\n                        \n                    \n                \n            \n            \n                \nscope(root)\n                \n            \n\n\n\n\n            \n                \n                        Create a path resolver that restrict the access to the provided root directory only\nThe scope converts all paths into absolute\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                root\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    resolve(cwd(), '..')\n                                            \n\n                                            \n                                                    Relative or absolute directory path\nExample :'./directory'\n'/directory/directory'\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/lib/write-file.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        writeFile\n                        \n                    \n                \n            \n            \n                \nwriteFile(filepath: string, content: FileContent, options?: WriteFileOptions)\n                \n            \n\n\n\n\n            \n                \n                        Write file. If the directory does not exist, create the directory.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filepath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                content\n                                            \n                                                            FileContent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            WriteFileOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n@puq/fs\nSummary\nThe library restricts I/O operations to the project directory. These operations are confined within the defined scope and cannot access resources outside of it.\nBy default, the scope is set to the current working directory (cwd), meaning that functions are limited to accessing files and directories within this directory.\nInstall\nExample :  pnpm add @puq/fsFunding\nThank you for using @puq/fs It's an open-source project, and maintaining it takes time and effort. If you find this library useful, please consider supporting its ongoing development. Your contributions help ensure that the project stays up-to-date, secure, and well-maintained.\nInstant Funding\nYour funding will go toward\n\nBug fixes and updates to ensure compatibility with the latest versions of dependencies.\nNew features that will make the library even more powerful.\nDocumentation improvements to help users get the most out of [Your Library Name].\nGeneral maintenance to keep the library running smoothly and securely.\n\nContact to the developer: [robert.brightline@gmail.com]\nSupport the developer\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.8\n        \n            Description : fs\n        \n            Keywords : puq, fs\n        \n            Homepage : https://rbrightline.github.io/puq/fs\n        \n            Bugs : https://rbrightline.github.io\n        \n            License : MIT\n        \n            Repository : https://github.com/rbrightline/puq/tree/main\n        \n            Author : Robert Brightline\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            FileContent   (src/.../write-file.ts)\n                        \n                        \n                            FindFileOptions   (src/.../find-file.ts)\n                        \n                        \n                            FindFilesOptions   (src/.../find-files.ts)\n                        \n                        \n                            PathScope   (src/.../scope.ts)\n                        \n                        \n                            ReadFileOptions   (src/.../read-file.ts)\n                        \n                        \n                            RmOptions   (src/.../rm.ts)\n                        \n                        \n                            WriteFileOptions   (src/.../write-file.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/write-file.ts\n    \n    \n        \n            \n                \n                    \n                    FileContent\n                \n            \n            \n                \n                        string | NodeJS.ArrayBufferView | Iterable | AsyncIterable | internal.Stream\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    WriteFileOptions\n                \n            \n            \n                \n                         | BufferEncoding | null\n\n                \n            \n        \n    \n    src/lib/find-file.ts\n    \n    \n        \n            \n                \n                    \n                    FindFileOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/lib/find-files.ts\n    \n    \n        \n            \n                \n                    \n                    FindFilesOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/lib/scope.ts\n    \n    \n        \n            \n                \n                    \n                    PathScope\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    src/lib/read-file.ts\n    \n    \n        \n            \n                \n                    \n                    ReadFileOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/lib/rm.ts\n    \n    \n        \n            \n                \n                    \n                    RmOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
