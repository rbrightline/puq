var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/coverage.html",[0,1.888]],["body/coverage.html",[0,1.118,1,1.118,2,0.824,3,1.658,4,1.564,5,1.564,6,1.18,7,2.446,8,1.118,9,3.422,10,0.115,11,3.422,12,3.023,13,0.824,14,3.023,15,3.023,16,1.18,17,0.824,18,0.824,19,1.506,20,1.169,21,1.118,22,0.824,23,0.866,24,1.118,25,0.824,26,1.601,27,0.824,28,1.118,29,1.118,30,1.601,31,0.824,32,1.118,33,0.605,34,1.118,35,1.18,36,0.824,37,1.118,38,1.118,39,0.824,40,1.118,41,1.564,42,1.564,43,0.071,44,0.071]],["title/dependencies.html",[45,1.21,46,1.248]],["body/dependencies.html",[10,0.116,33,1.014,43,0.1,44,0.1,46,1.382,47,2.622,48,3.375,49,2.622,50,2.622,51,2.622,52,2.622]],["title/miscellaneous/functions.html",[53,0.655,54,1.248]],["body/miscellaneous/functions.html",[2,1.381,3,1.492,6,0.458,8,1.018,10,0.109,13,0.751,16,0.458,17,1.308,18,0.751,19,0.751,20,1.095,21,1.018,22,0.751,23,0.551,24,1.018,25,0.751,26,1.018,27,0.751,28,1.018,29,1.018,30,1.018,31,0.954,32,1.018,33,0.7,34,1.018,35,0.458,36,0.954,38,0.622,39,1.103,43,0.045,44,0.045,53,0.336,54,0.458,55,0.458,56,0.622,57,0.622,58,1.018,59,1.425,60,1.425,61,0.622,62,0.869,63,0.869,64,3.35,65,2.83,66,1.651,67,1.294,68,0.869,69,2.082,70,2.913,71,2.082,72,2.983,73,1.955,74,1.81,75,2.093,76,2.83,77,2.734,78,0.869,79,0.869,80,0.869,81,0.869,82,0.869,83,0.869,84,0.869,85,0.622,86,0.869,87,1.294,88,1.425,89,0.869,90,1.425,91,1.81,92,3.045,93,0.869,94,1.773,95,0.869,96,1.425,97,0.869,98,1.425,99,1.425,100,0.869,101,0.869,102,0.869,103,0.869,104,0.622,105,0.869,106,1.018,107,1.425,108,1.425,109,1.425,110,1.425,111,0.869,112,0.869,113,1.425,114,0.869,115,0.869,116,0.869,117,0.869,118,0.869,119,1.81,120,0.869,121,0.869,122,0.869,123,0.622,124,0.869,125,0.869,126,0.869,127,0.869,128,0.869,129,0.869,130,0.869]],["title/index.html",[55,0.892,131,1.693,132,1.693]],["body/index.html",[1,0.963,2,1.573,10,0.077,17,1.5,20,1.029,23,0.777,27,0.71,31,1.265,33,0.928,36,0.71,39,0.71,40,0.963,43,0.064,44,0.085,46,0.71,54,0.71,66,1.435,67,1.435,69,1.435,71,0.963,85,0.963,87,2.034,94,1.902,104,1.435,106,1.902,123,0.963,133,2.008,134,1.347,135,1.347,136,2.008,137,3.091,138,1.347,139,1.347,140,1.347,141,1.347,142,2.008,143,2.4,144,1.347,145,2.008,146,1.347,147,1.347,148,1.347,149,2.008,150,1.347,151,1.347,152,1.347,153,1.347,154,1.347,155,1.347,156,1.347,157,1.347,158,1.347,159,1.347,160,1.347,161,1.347,162,1.347,163,1.347,164,1.347,165,1.347,166,2.008,167,1.347,168,1.347,169,1.347,170,1.347,171,1.347,172,1.347,173,1.347,174,1.347,175,1.347,176,1.347,177,1.347,178,2.008,179,2.008,180,1.347,181,1.347,182,1.347,183,1.347,184,1.347,185,1.347,186,2.008,187,1.347,188,1.347,189,1.347,190,1.347,191,1.347,192,1.347,193,1.347,194,1.347,195,1.347,196,1.347,197,1.347,198,1.347,199,1.347,200,1.347,201,1.347,202,1.347,203,1.347,204,1.347,205,1.347,206,1.347,207,1.347,208,1.347,209,2.008,210,1.347,211,1.347]],["title/modules.html",[212,1.888]],["body/modules.html",[10,0.106,43,0.106,44,0.106,212,2.055]],["title/overview.html",[213,1.888]],["body/overview.html",[10,0.106,43,0.106,44,0.106,213,2.055]],["title/properties.html",[45,1.21,214,1.693]],["body/properties.html",[10,0.118,43,0.095,44,0.095,73,1.723,214,1.723,215,2.41,216,2.41,217,2.991,218,2.41,219,2.41,220,2.41,221,2.41,222,2.41,223,2.41,224,2.41,225,2.41,226,2.41,227,2.41,228,2.41,229,2.41,230,2.41]],["title/miscellaneous/typealiases.html",[53,0.655,231,2.369]],["body/miscellaneous/typealiases.html",[3,1.811,6,1.196,7,1.622,10,0.092,13,1.518,16,1.196,18,1.518,19,1.518,20,1.114,22,1.518,23,1.114,25,1.518,35,1.196,37,2.059,43,0.092,44,0.092,53,0.878,55,1.196,56,1.622,57,1.622,58,2.059,61,1.622,232,2.269,233,3.328]]],"invertedIndex":[["",{"_index":10,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":14,"title":{},"body":{"coverage.html":{}}}],["0.1.0",{"_index":48,"title":{},"body":{"dependencies.html":{}}}],["0.1.3",{"_index":216,"title":{},"body":{"properties.html":{}}}],["0/1",{"_index":15,"title":{},"body":{"coverage.html":{}}}],["1/1",{"_index":11,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":9,"title":{},"body":{"coverage.html":{}}}],["4.1.0",{"_index":52,"title":{},"body":{"dependencies.html":{}}}],["absolute",{"_index":91,"title":{},"body":{"miscellaneous/functions.html":{}}}],["access",{"_index":117,"title":{},"body":{"miscellaneous/functions.html":{}}}],["add",{"_index":159,"title":{},"body":{"index.html":{}}}],["alias",{"_index":12,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":232,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["author",{"_index":228,"title":{},"body":{"properties.html":{}}}],["brightline",{"_index":230,"title":{},"body":{"properties.html":{}}}],["bug",{"_index":189,"title":{},"body":{"index.html":{}}}],["bugs",{"_index":222,"title":{},"body":{"properties.html":{}}}],["check",{"_index":104,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["checkt",{"_index":102,"title":{},"body":{"miscellaneous/functions.html":{}}}],["compatibility",{"_index":192,"title":{},"body":{"index.html":{}}}],["consider",{"_index":173,"title":{},"body":{"index.html":{}}}],["contact",{"_index":208,"title":{},"body":{"index.html":{}}}],["contributions",{"_index":177,"title":{},"body":{"index.html":{}}}],["converts",{"_index":120,"title":{},"body":{"miscellaneous/functions.html":{}}}],["coverage",{"_index":0,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":114,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cwd",{"_index":122,"title":{},"body":{"miscellaneous/functions.html":{}}}],["data",{"_index":147,"title":{},"body":{"index.html":{}}}],["date",{"_index":182,"title":{},"body":{"index.html":{}}}],["default",{"_index":88,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dependencies",{"_index":46,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["description",{"_index":73,"title":{},"body":{"miscellaneous/functions.html":{},"properties.html":{}}}],["developer",{"_index":209,"title":{},"body":{"index.html":{}}}],["development",{"_index":176,"title":{},"body":{"index.html":{}}}],["dir.ts",{"_index":27,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["directories",{"_index":67,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["directory",{"_index":69,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["directory/directory",{"_index":124,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dirs",{"_index":8,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["dirs(directory",{"_index":63,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dirs.ts",{"_index":150,"title":{},"body":{"index.html":{}}}],["dirsoptions",{"_index":13,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["documentation",{"_index":1,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["efficient",{"_index":139,"title":{},"body":{"index.html":{}}}],["effort",{"_index":170,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":179,"title":{},"body":{"index.html":{}}}],["even",{"_index":196,"title":{},"body":{"index.html":{}}}],["example",{"_index":123,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["expression",{"_index":96,"title":{},"body":{"miscellaneous/functions.html":{}}}],["false",{"_index":125,"title":{},"body":{"miscellaneous/functions.html":{}}}],["features",{"_index":149,"title":{},"body":{"index.html":{}}}],["file",{"_index":2,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["file.ts",{"_index":20,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["filename",{"_index":95,"title":{},"body":{"miscellaneous/functions.html":{}}}],["filepath",{"_index":92,"title":{},"body":{"miscellaneous/functions.html":{}}}],["files",{"_index":17,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["files(directory",{"_index":86,"title":{},"body":{"miscellaneous/functions.html":{}}}],["files.ts",{"_index":23,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["filesoptions",{"_index":18,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["find",{"_index":87,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["findfile",{"_index":21,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["findfile(filepath",{"_index":89,"title":{},"body":{"miscellaneous/functions.html":{}}}],["findfileoptions",{"_index":22,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["findfiles",{"_index":24,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["findfiles(filepath",{"_index":97,"title":{},"body":{"miscellaneous/functions.html":{}}}],["findfilesoptions",{"_index":25,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["fixes",{"_index":190,"title":{},"body":{"index.html":{}}}],["formats",{"_index":148,"title":{},"body":{"index.html":{}}}],["fs",{"_index":217,"title":{},"body":{"properties.html":{}}}],["function",{"_index":7,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":54,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["funding",{"_index":186,"title":{},"body":{"index.html":{}}}],["general",{"_index":202,"title":{},"body":{"index.html":{}}}],["getting",{"_index":131,"title":{"index.html":{}},"body":{}}],["go",{"_index":187,"title":{},"body":{"index.html":{}}}],["handle",{"_index":154,"title":{},"body":{"index.html":{}}}],["handling",{"_index":141,"title":{},"body":{"index.html":{}}}],["help",{"_index":178,"title":{},"body":{"index.html":{}}}],["homepage",{"_index":220,"title":{},"body":{"properties.html":{}}}],["https://github.com/rbrightline/puq/tree/main",{"_index":227,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io",{"_index":223,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io/puq/fs",{"_index":221,"title":{},"body":{"properties.html":{}}}],["identifier",{"_index":4,"title":{},"body":{"coverage.html":{}}}],["improvements",{"_index":199,"title":{},"body":{"index.html":{}}}],["includes",{"_index":83,"title":{},"body":{"miscellaneous/functions.html":{}}}],["index",{"_index":55,"title":{"index.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["inluding",{"_index":78,"title":{},"body":{"miscellaneous/functions.html":{}}}],["install",{"_index":157,"title":{},"body":{"index.html":{}}}],["instant",{"_index":185,"title":{},"body":{"index.html":{}}}],["io",{"_index":135,"title":{},"body":{"index.html":{}}}],["isdir",{"_index":28,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isdir(filepath",{"_index":101,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isfile",{"_index":29,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isfile(filepath",{"_index":103,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isrootfile",{"_index":113,"title":{},"body":{"miscellaneous/functions.html":{}}}],["it's",{"_index":163,"title":{},"body":{"index.html":{}}}],["js",{"_index":51,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":31,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["keep",{"_index":204,"title":{},"body":{"index.html":{}}}],["keywords",{"_index":218,"title":{},"body":{"properties.html":{}}}],["latest",{"_index":193,"title":{},"body":{"index.html":{}}}],["library",{"_index":137,"title":{},"body":{"index.html":{}}}],["license",{"_index":224,"title":{},"body":{"properties.html":{}}}],["lightweight",{"_index":138,"title":{},"body":{"index.html":{}}}],["link",{"_index":109,"title":{},"body":{"miscellaneous/functions.html":{}}}],["list",{"_index":66,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["literal",{"_index":233,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["maintained",{"_index":184,"title":{},"body":{"index.html":{}}}],["maintaining",{"_index":167,"title":{},"body":{"index.html":{}}}],["maintenance",{"_index":203,"title":{},"body":{"index.html":{}}}],["make",{"_index":195,"title":{},"body":{"index.html":{}}}],["matching",{"_index":44,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["miscellaneous",{"_index":53,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["mit",{"_index":225,"title":{},"body":{"properties.html":{}}}],["modules",{"_index":212,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":197,"title":{},"body":{"index.html":{}}}],["multiple",{"_index":151,"title":{},"body":{"index.html":{}}}],["name",{"_index":71,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["new",{"_index":40,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["object",{"_index":108,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ongoing",{"_index":175,"title":{},"body":{"index.html":{}}}],["open",{"_index":164,"title":{},"body":{"index.html":{}}}],["operations",{"_index":143,"title":{},"body":{"index.html":{}}}],["optional",{"_index":72,"title":{},"body":{"miscellaneous/functions.html":{}}}],["options",{"_index":65,"title":{},"body":{"miscellaneous/functions.html":{}}}],["out",{"_index":201,"title":{},"body":{"index.html":{}}}],["overview",{"_index":213,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":45,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":70,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parse",{"_index":107,"title":{},"body":{"miscellaneous/functions.html":{}}}],["path",{"_index":94,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["paths",{"_index":99,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pathscope",{"_index":37,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["please",{"_index":172,"title":{},"body":{"index.html":{}}}],["pnpm",{"_index":158,"title":{},"body":{"index.html":{}}}],["powerful",{"_index":198,"title":{},"body":{"index.html":{}}}],["project",{"_index":166,"title":{},"body":{"index.html":{}}}],["promise",{"_index":77,"title":{},"body":{"miscellaneous/functions.html":{}}}],["properties",{"_index":214,"title":{"properties.html":{}},"body":{"properties.html":{}}}],["provided",{"_index":118,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provides",{"_index":144,"title":{},"body":{"index.html":{}}}],["puq",{"_index":219,"title":{},"body":{"properties.html":{}}}],["puq/debug",{"_index":47,"title":{},"body":{"dependencies.html":{}}}],["puq/error",{"_index":49,"title":{},"body":{"dependencies.html":{}}}],["puq/fs",{"_index":133,"title":{},"body":{"index.html":{}}}],["puq/fsfunding",{"_index":160,"title":{},"body":{"index.html":{}}}],["puq/is",{"_index":50,"title":{},"body":{"dependencies.html":{}}}],["read",{"_index":106,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["reading",{"_index":152,"title":{},"body":{"index.html":{}}}],["readjsonfile",{"_index":32,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["readjsonfile(filepath",{"_index":105,"title":{},"body":{"miscellaneous/functions.html":{}}}],["readyamlfile",{"_index":34,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["readyamlfile(filepath",{"_index":111,"title":{},"body":{"miscellaneous/functions.html":{}}}],["recursive",{"_index":79,"title":{},"body":{"miscellaneous/functions.html":{}}}],["recursively",{"_index":93,"title":{},"body":{"miscellaneous/functions.html":{}}}],["regular",{"_index":100,"title":{},"body":{"miscellaneous/functions.html":{}}}],["relative",{"_index":98,"title":{},"body":{"miscellaneous/functions.html":{}}}],["repository",{"_index":226,"title":{},"body":{"properties.html":{}}}],["resolver",{"_index":115,"title":{},"body":{"miscellaneous/functions.html":{}}}],["restrict",{"_index":116,"title":{},"body":{"miscellaneous/functions.html":{}}}],["result",{"_index":82,"title":{},"body":{"miscellaneous/functions.html":{}}}],["results",{"_index":43,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":90,"title":{},"body":{"miscellaneous/functions.html":{}}}],["returns",{"_index":76,"title":{},"body":{"miscellaneous/functions.html":{}}}],["robert",{"_index":229,"title":{},"body":{"properties.html":{}}}],["robert.brightline@gmail.com",{"_index":210,"title":{},"body":{"index.html":{}}}],["root",{"_index":119,"title":{},"body":{"miscellaneous/functions.html":{}}}],["running",{"_index":205,"title":{},"body":{"index.html":{}}}],["scope",{"_index":36,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["scope(root",{"_index":112,"title":{},"body":{"miscellaneous/functions.html":{}}}],["scope.ts",{"_index":155,"title":{},"body":{"index.html":{}}}],["secure",{"_index":183,"title":{},"body":{"index.html":{}}}],["securely",{"_index":207,"title":{},"body":{"index.html":{}}}],["segments",{"_index":39,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["segments(filepath",{"_index":126,"title":{},"body":{"miscellaneous/functions.html":{}}}],["segments.ts",{"_index":156,"title":{},"body":{"index.html":{}}}],["set",{"_index":80,"title":{},"body":{"miscellaneous/functions.html":{}}}],["smoothly",{"_index":206,"title":{},"body":{"index.html":{}}}],["source",{"_index":165,"title":{},"body":{"index.html":{}}}],["src/.../dirs.ts",{"_index":56,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../files.ts",{"_index":57,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../find",{"_index":58,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../is",{"_index":59,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../read",{"_index":60,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../scope.ts",{"_index":61,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../segments.ts",{"_index":62,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/lib/dirs.ts",{"_index":6,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/files.ts",{"_index":16,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/find",{"_index":19,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/is",{"_index":26,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/read",{"_index":30,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/scope.ts",{"_index":35,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/segments.ts",{"_index":38,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["started",{"_index":132,"title":{"index.html":{}},"body":{}}],["statements",{"_index":5,"title":{},"body":{"coverage.html":{}}}],["stays",{"_index":180,"title":{},"body":{"index.html":{}}}],["string",{"_index":64,"title":{},"body":{"miscellaneous/functions.html":{}}}],["structured",{"_index":146,"title":{},"body":{"index.html":{}}}],["sub",{"_index":84,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sub1",{"_index":128,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sub2",{"_index":129,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sub3",{"_index":130,"title":{},"body":{"miscellaneous/functions.html":{}}}],["such",{"_index":127,"title":{},"body":{"miscellaneous/functions.html":{}}}],["summary",{"_index":134,"title":{},"body":{"index.html":{}}}],["support",{"_index":211,"title":{},"body":{"index.html":{}}}],["supporting",{"_index":174,"title":{},"body":{"index.html":{}}}],["system",{"_index":142,"title":{},"body":{"index.html":{}}}],["t",{"_index":110,"title":{},"body":{"miscellaneous/functions.html":{}}}],["table",{"_index":42,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":41,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":168,"title":{},"body":{"index.html":{}}}],["target",{"_index":74,"title":{},"body":{"miscellaneous/functions.html":{}}}],["thank",{"_index":161,"title":{},"body":{"index.html":{}}}],["time",{"_index":169,"title":{},"body":{"index.html":{}}}],["toward",{"_index":188,"title":{},"body":{"index.html":{}}}],["true",{"_index":81,"title":{},"body":{"miscellaneous/functions.html":{}}}],["type",{"_index":3,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":231,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typescript",{"_index":140,"title":{},"body":{"index.html":{}}}],["under",{"_index":68,"title":{},"body":{"miscellaneous/functions.html":{}}}],["up",{"_index":181,"title":{},"body":{"index.html":{}}}],["updates",{"_index":191,"title":{},"body":{"index.html":{}}}],["useful",{"_index":171,"title":{},"body":{"index.html":{}}}],["users",{"_index":200,"title":{},"body":{"index.html":{}}}],["using",{"_index":162,"title":{},"body":{"index.html":{}}}],["utilities",{"_index":153,"title":{},"body":{"index.html":{}}}],["utility",{"_index":136,"title":{},"body":{"index.html":{}}}],["value",{"_index":121,"title":{},"body":{"miscellaneous/functions.html":{}}}],["version",{"_index":215,"title":{},"body":{"properties.html":{}}}],["versions",{"_index":194,"title":{},"body":{"index.html":{}}}],["well",{"_index":85,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["work",{"_index":145,"title":{},"body":{"index.html":{}}}],["yaml",{"_index":33,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["yes",{"_index":75,"title":{},"body":{"miscellaneous/functions.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/lib/dirs.ts\n            \n            function\n            dirs\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/dirs.ts\n            \n            type alias\n            DirsOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/files.ts\n            \n            function\n            files\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/files.ts\n            \n            type alias\n            FilesOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/find-file.ts\n            \n            function\n            findFile\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/find-file.ts\n            \n            type alias\n            FindFileOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/find-files.ts\n            \n            function\n            findFiles\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/find-files.ts\n            \n            type alias\n            FindFilesOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/is-dir.ts\n            \n            function\n            isDir\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/is-file.ts\n            \n            function\n            isFile\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/read-json-file.ts\n            \n            function\n            readJSONFile\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/read-yaml-file.ts\n            \n            function\n            readYAMLFile\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/scope.ts\n            \n            function\n            scope\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/scope.ts\n            \n            type alias\n            PathScope\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/segments.ts\n            \n            function\n            segments\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @puq/debug : ^0.1.0\n        \n            @puq/error : ^0.1.0\n        \n            @puq/is : ^0.1.0\n        \n            js-yaml : ^4.1.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            dirs   (src/.../dirs.ts)\n                        \n                        \n                            files   (src/.../files.ts)\n                        \n                        \n                            findFile   (src/.../find-file.ts)\n                        \n                        \n                            findFiles   (src/.../find-files.ts)\n                        \n                        \n                            isDir   (src/.../is-dir.ts)\n                        \n                        \n                            isFile   (src/.../is-file.ts)\n                        \n                        \n                            readJSONFile   (src/.../read-json-file.ts)\n                        \n                        \n                            readYAMLFile   (src/.../read-yaml-file.ts)\n                        \n                        \n                            scope   (src/.../scope.ts)\n                        \n                        \n                            segments   (src/.../segments.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/dirs.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        dirs\n                        \n                    \n                \n            \n            \n                \ndirs(directory: string, options?: DirsOptions)\n                \n            \n\n\n\n\n            \n                \n                        List all all directories under directory\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                directory\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    target directory\n\n                                            \n                                        \n                                        \n                                                options\n                                            \n                                                            DirsOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                the list of directories (not inluding files). If the recursive options is set true, then the result includes sub directories as well.\n\n                            \n                \n            \n        \n    \n    src/lib/files.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        files\n                        \n                    \n                \n            \n            \n                \nfiles(directory: string, options?: FilesOptions)\n                \n            \n\n\n\n\n            \n                \n                        Find all files in the target directory (only files)\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                directory\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    target directory (\".\" by default)\n\n                                            \n                                        \n                                        \n                                                options\n                                            \n                                                            FilesOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/find-file.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        findFile\n                        \n                    \n                \n            \n            \n                \nfindFile(filepath: string, options?: FindFileOptions)\n                \n            \n\n\n\n\n            \n                \n                        Find file and return the absolute filepath recursively (optional)\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                filepath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    file path or file path with filename expression\n\n                                            \n                                        \n                                        \n                                                options\n                                            \n                                                            FindFileOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/find-files.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        findFiles\n                        \n                    \n                \n            \n            \n                \nfindFiles(filepath: string, options?: FindFilesOptions)\n                \n            \n\n\n\n\n            \n                \n                        Find files and return the list of relative paths\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                filepath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    string | regular expression\n\n                                            \n                                        \n                                        \n                                                options\n                                            \n                                                            FindFilesOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/is-dir.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isDir\n                        \n                    \n                \n            \n            \n                \nisDir(filepath: string)\n                \n            \n\n\n\n\n            \n                \n                        Checkt he filepath is a directory\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filepath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/is-file.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isFile\n                        \n                    \n                \n            \n            \n                \nisFile(filepath: string)\n                \n            \n\n\n\n\n            \n                \n                        Check the path is file\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filepath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/read-json-file.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        readJSONFile\n                        \n                    \n                \n            \n            \n                \nreadJSONFile(filepath: string)\n                \n            \n\n\n\n\n            \n                \n                        Read file and parse json\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                filepath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    filepath\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                object {@link T}\n\n                            \n                \n            \n        \n    \n    src/lib/read-yaml-file.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        readYAMLFile\n                        \n                    \n                \n            \n            \n                \nreadYAMLFile(filepath: string)\n                \n            \n\n\n\n\n            \n                \n                        Read file and parse YAML\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                filepath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    file path\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                object {@link T}\n\n                            \n                \n            \n        \n    \n    src/lib/scope.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        scope\n                        \n                    \n                \n            \n            \n                \nscope(root, isRootFile)\n                \n            \n\n\n\n\n            \n                \n                        Create a path resolver that restrict the access to the provided root directory only\nThe scope converts all paths into absolute\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                root\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    cwd()\n                                            \n\n                                            \n                                                    Relative or absolute directory path\nExample :'./directory'\n'/directory/directory'\n                                            \n                                        \n                                        \n                                                isRootFile\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/lib/segments.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        segments\n                        \n                    \n                \n            \n            \n                \nsegments(filepath: string)\n                \n            \n\n\n\n\n            \n                \n                        List all segments of filepath such as ['root', 'sub1', 'sub2', 'sub3', 'file.ts']\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                filepath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    filepath\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string[]\n\n                        \n                            \n                                list of all segments\n\n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n@puq/fs\nSummary\nIO Utility Library\nA lightweight and efficient TypeScript utility library for handling file system operations. This library provides functions to work with directories, files, and structured data formats like JSON and YAML.\nFeatures\n\nDirectory Operations\n\nList directories (dirs.ts)\nCheck if a path is a directory (is-dir.ts)\n\n\nFile Operations\n\nList files (files.ts)\nCheck if a path is a file (is-file.ts)\nFind a matching file (find-file.ts)\nFind multiple matching files (find-files.ts)\n\n\nFile Reading\n\nRead JSON files (read-json-file.ts)\nRead YAML files (read-yaml-file.ts)\n\n\nPath Utilities\n\nHandle file system scope (scope.ts)\nWork with path segments (segments.ts)\n\n\n\nInstall\nExample :  pnpm add @puq/fsFunding\nThank you for using @puq/fs It's an open-source project, and maintaining it takes time and effort. If you find this library useful, please consider supporting its ongoing development. Your contributions help ensure that the project stays up-to-date, secure, and well-maintained.\nInstant Funding\nYour funding will go toward\n\nBug fixes and updates to ensure compatibility with the latest versions of dependencies.\nNew features that will make the library even more powerful.\nDocumentation improvements to help users get the most out of [Your Library Name].\nGeneral maintenance to keep the library running smoothly and securely.\n\nContact to the developer: [robert.brightline@gmail.com]\nSupport the developer\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.1.3\n        \n            Description : fs\n        \n            Keywords : puq, fs\n        \n            Homepage : https://rbrightline.github.io/puq/fs\n        \n            Bugs : https://rbrightline.github.io\n        \n            License : MIT\n        \n            Repository : https://github.com/rbrightline/puq/tree/main\n        \n            Author : Robert Brightline\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DirsOptions   (src/.../dirs.ts)\n                        \n                        \n                            FilesOptions   (src/.../files.ts)\n                        \n                        \n                            FindFileOptions   (src/.../find-file.ts)\n                        \n                        \n                            FindFilesOptions   (src/.../find-files.ts)\n                        \n                        \n                            PathScope   (src/.../scope.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/dirs.ts\n    \n    \n        \n            \n                \n                    \n                    DirsOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/lib/files.ts\n    \n    \n        \n            \n                \n                    \n                    FilesOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/lib/find-file.ts\n    \n    \n        \n            \n                \n                    \n                    FindFileOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/lib/find-files.ts\n    \n    \n        \n            \n                \n                    \n                    FindFilesOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/lib/scope.ts\n    \n    \n        \n            \n                \n                    \n                    PathScope\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
