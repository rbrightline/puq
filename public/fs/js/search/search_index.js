var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/coverage.html",[0,1.888]],["body/coverage.html",[0,1.219,1,1.219,2,0.659,3,1.445,4,1.705,5,1.705,6,1.219,7,2.491,8,1.219,9,3.522,10,0.115,11,3.522,12,1.219,13,0.659,14,1.701,15,1.564,16,1.219,17,0.899,18,1.219,19,1.219,20,1.219,21,2.38,22,0.899,23,1.705,24,1.705,25,1.701,26,0.899,27,1.219,28,1.219,29,1.701,30,0.659,31,1.219,32,0.469,33,1.219,34,1.219,35,1.219,36,0.899,37,1.219,38,0.899,39,1.219,40,0.899,41,1.219,42,1.705,43,1.705,44,0.076,45,0.076]],["title/dependencies.html",[46,1.21,47,1.248]],["body/dependencies.html",[10,0.117,32,0.696,44,0.098,45,0.098,47,1.626,48,2.534,49,2.534,50,2.534,51,2.378,52,2.534,53,2.534,54,2.534,55,2.534,56,2.534]],["title/miscellaneous/functions.html",[57,0.655,58,0.916]],["body/miscellaneous/functions.html",[2,1.084,3,1.477,6,0.604,8,0.995,10,0.108,12,0.604,13,0.88,14,0.995,15,1.425,16,0.995,17,0.734,18,0.995,22,1.477,25,0.995,26,0.734,27,0.995,28,0.995,29,0.995,30,0.686,31,0.995,32,0.488,33,0.995,36,0.734,37,0.604,38,0.734,39,0.604,40,0.935,44,0.044,45,0.066,57,0.327,58,0.327,59,0.445,60,0.845,61,0.845,62,1.392,63,1.392,64,1.392,65,0.845,66,0.845,67,0.845,68,3.356,69,2.703,70,1.471,71,0.935,72,1.774,73,1.392,74,2.587,75,2.003,76,2.885,77,2.062,78,2.885,79,1.933,80,1.774,81,0.845,82,2.057,83,2.885,84,2.703,85,1.392,86,0.845,87,0.845,88,0.995,89,0.845,90,3.207,91,1.392,92,0.845,93,1.392,94,1.392,95,1.85,96,0.845,97,0.845,98,0.845,99,0.845,100,0.845,101,0.845,102,2.275,103,1.392,104,1.392,105,1.392,106,0.845,107,0.604,108,0.845,109,0.995,110,1.392,111,1.392,112,1.392,113,0.845,114,0.845,115,0.845,116,1.774,117,0.995,118,0.845,119,0.845,120,0.845,121,0.845,122,0.845,123,0.845,124,0.845,125,0.845,126,0.845,127,0.845,128,0.845,129,0.845]],["title/index.html",[59,0.892,130,1.693,131,1.693]],["body/index.html",[1,0.97,2,1.157,10,0.077,13,1.104,15,1.407,17,1.064,26,0.715,30,0.933,32,0.663,38,0.715,40,0.715,41,0.97,44,0.064,45,0.085,47,0.715,58,0.525,70,1.443,71,1.064,75,1.443,77,0.97,88,2.04,95,1.909,107,1.443,109,1.909,132,2.019,133,1.357,134,0.97,135,0.97,136,0.97,137,0.97,138,2.139,139,0.97,140,1.443,141,1.723,142,0.97,143,1.443,144,0.97,145,0.97,146,0.97,147,2.019,148,1.357,149,1.357,150,1.357,151,1.357,152,1.357,153,1.357,154,1.357,155,1.357,156,1.357,157,1.357,158,1.357,159,1.357,160,1.357,161,1.357,162,1.357,163,1.357,164,1.357,165,2.019,166,1.357,167,1.357,168,1.357,169,1.357,170,1.357,171,1.357,172,1.357,173,1.357,174,1.357,175,1.357,176,1.357,177,2.019,178,2.019,179,1.357,180,1.357,181,1.357,182,1.357,183,1.357,184,1.357,185,1.357,186,2.019,187,1.357,188,1.357,189,1.357,190,1.357,191,1.357,192,1.357,193,1.357,194,1.357,195,1.357,196,1.357,197,1.357,198,1.357,199,1.357,200,1.357,201,1.357,202,1.357,203,1.357,204,1.357,205,1.357,206,1.357,207,1.357,208,1.357,209,2.019,210,1.357,211,1.357]],["title/modules.html",[212,1.888]],["body/modules.html",[10,0.106,44,0.106,45,0.106,212,2.055]],["title/overview.html",[213,1.888]],["body/overview.html",[10,0.106,44,0.106,45,0.106,213,2.055]],["title/properties.html",[46,1.21,214,1.693]],["body/properties.html",[2,0.832,10,0.116,13,0.832,30,0.832,32,0.591,44,0.089,45,0.089,51,1.538,58,0.832,71,1.134,79,1.538,134,1.538,135,1.538,136,1.538,137,1.538,138,1.99,139,1.538,140,1.538,141,1.538,142,1.538,143,1.538,144,1.538,145,1.538,146,1.538,214,1.538,215,2.152,216,2.152,217,2.152,218,2.152,219,2.152,220,2.152,221,2.152,222,2.152,223,2.152,224,2.152,225,2.152,226,2.152,227,2.152,228,2.152,229,2.152]],["title/miscellaneous/typealiases.html",[57,0.655,230,2.369]],["body/miscellaneous/typealiases.html",[3,1.738,7,2.179,10,0.097,19,1.776,20,2.179,22,1.607,34,1.776,35,2.179,36,1.607,44,0.097,45,0.097,57,0.961,59,1.31,117,1.776,231,2.485,232,2.485,233,2.485,234,2.485]]],"invertedIndex":[["",{"_index":10,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":23,"title":{},"body":{"coverage.html":{}}}],["0.4.11",{"_index":51,"title":{},"body":{"dependencies.html":{},"properties.html":{}}}],["0.5.15",{"_index":49,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":24,"title":{},"body":{"coverage.html":{}}}],["1/1",{"_index":11,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":9,"title":{},"body":{"coverage.html":{}}}],["4.1.0",{"_index":54,"title":{},"body":{"dependencies.html":{}}}],["access",{"_index":119,"title":{},"body":{"miscellaneous/functions.html":{}}}],["add",{"_index":158,"title":{},"body":{"index.html":{}}}],["alias",{"_index":21,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":231,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["array",{"_index":129,"title":{},"body":{"miscellaneous/functions.html":{}}}],["author",{"_index":227,"title":{},"body":{"properties.html":{}}}],["brightline",{"_index":229,"title":{},"body":{"properties.html":{}}}],["bug",{"_index":189,"title":{},"body":{"index.html":{}}}],["bugs",{"_index":221,"title":{},"body":{"properties.html":{}}}],["check",{"_index":107,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["checkt",{"_index":101,"title":{},"body":{"miscellaneous/functions.html":{}}}],["compatibility",{"_index":192,"title":{},"body":{"index.html":{}}}],["consider",{"_index":172,"title":{},"body":{"index.html":{}}}],["contact",{"_index":208,"title":{},"body":{"index.html":{}}}],["contributions",{"_index":176,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":0,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":115,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cwd",{"_index":125,"title":{},"body":{"miscellaneous/functions.html":{}}}],["data",{"_index":145,"title":{},"body":{"index.html":{},"properties.html":{}}}],["date",{"_index":181,"title":{},"body":{"index.html":{}}}],["default",{"_index":123,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dependencies",{"_index":47,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["description",{"_index":79,"title":{},"body":{"miscellaneous/functions.html":{},"properties.html":{}}}],["developer",{"_index":209,"title":{},"body":{"index.html":{}}}],["development",{"_index":175,"title":{},"body":{"index.html":{}}}],["dir.ts",{"_index":26,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["directories",{"_index":71,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["directory",{"_index":75,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["dirs",{"_index":8,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["dirs(root",{"_index":67,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dirs.ts",{"_index":148,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["efficient",{"_index":135,"title":{},"body":{"index.html":{},"properties.html":{}}}],["effort",{"_index":169,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":178,"title":{},"body":{"index.html":{}}}],["errorcode.unauthorized",{"_index":122,"title":{},"body":{"miscellaneous/functions.html":{}}}],["even",{"_index":196,"title":{},"body":{"index.html":{}}}],["example",{"_index":156,"title":{},"body":{"index.html":{}}}],["expression",{"_index":99,"title":{},"body":{"miscellaneous/functions.html":{}}}],["false",{"_index":105,"title":{},"body":{"miscellaneous/functions.html":{}}}],["features",{"_index":147,"title":{},"body":{"index.html":{}}}],["file",{"_index":2,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["file.ts",{"_index":15,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["filename",{"_index":91,"title":{},"body":{"miscellaneous/functions.html":{}}}],["filepath",{"_index":90,"title":{},"body":{"miscellaneous/functions.html":{}}}],["files",{"_index":13,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["files(root",{"_index":86,"title":{},"body":{"miscellaneous/functions.html":{}}}],["files.ts",{"_index":17,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["find",{"_index":88,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["findfile",{"_index":16,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["findfile(filepath",{"_index":87,"title":{},"body":{"miscellaneous/functions.html":{}}}],["findfiles",{"_index":18,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["findfiles(filepath",{"_index":96,"title":{},"body":{"miscellaneous/functions.html":{}}}],["first",{"_index":89,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fixes",{"_index":190,"title":{},"body":{"index.html":{}}}],["formats",{"_index":146,"title":{},"body":{"index.html":{},"properties.html":{}}}],["fs",{"_index":218,"title":{},"body":{"properties.html":{}}}],["function",{"_index":7,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":58,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["funding",{"_index":186,"title":{},"body":{"index.html":{}}}],["general",{"_index":202,"title":{},"body":{"index.html":{}}}],["getting",{"_index":130,"title":{"index.html":{}},"body":{}}],["go",{"_index":187,"title":{},"body":{"index.html":{}}}],["handle",{"_index":152,"title":{},"body":{"index.html":{}}}],["handling",{"_index":139,"title":{},"body":{"index.html":{},"properties.html":{}}}],["help",{"_index":177,"title":{},"body":{"index.html":{}}}],["homepage",{"_index":219,"title":{},"body":{"properties.html":{}}}],["https://github.com/rbrightline/puq/tree/main",{"_index":226,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io",{"_index":222,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io/puq/fs",{"_index":220,"title":{},"body":{"properties.html":{}}}],["identifier",{"_index":4,"title":{},"body":{"coverage.html":{}}}],["improvements",{"_index":199,"title":{},"body":{"index.html":{}}}],["index",{"_index":59,"title":{"index.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["install",{"_index":155,"title":{},"body":{"index.html":{}}}],["instant",{"_index":185,"title":{},"body":{"index.html":{}}}],["ioptions",{"_index":22,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["isdir",{"_index":27,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isdir(filepath",{"_index":100,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isfile",{"_index":28,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isfile(filepath",{"_index":106,"title":{},"body":{"miscellaneous/functions.html":{}}}],["it's",{"_index":162,"title":{},"body":{"index.html":{}}}],["js",{"_index":53,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":30,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["keep",{"_index":204,"title":{},"body":{"index.html":{}}}],["keywords",{"_index":216,"title":{},"body":{"properties.html":{}}}],["latest",{"_index":193,"title":{},"body":{"index.html":{}}}],["library",{"_index":138,"title":{},"body":{"index.html":{},"properties.html":{}}}],["license",{"_index":223,"title":{},"body":{"properties.html":{}}}],["lightweight",{"_index":134,"title":{},"body":{"index.html":{},"properties.html":{}}}],["link",{"_index":102,"title":{},"body":{"miscellaneous/functions.html":{}}}],["list",{"_index":70,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["literal",{"_index":234,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["maintained",{"_index":184,"title":{},"body":{"index.html":{}}}],["maintaining",{"_index":166,"title":{},"body":{"index.html":{}}}],["maintenance",{"_index":203,"title":{},"body":{"index.html":{}}}],["make",{"_index":195,"title":{},"body":{"index.html":{}}}],["matching",{"_index":45,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["miscellaneous",{"_index":57,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["mit",{"_index":224,"title":{},"body":{"properties.html":{}}}],["modules",{"_index":212,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":197,"title":{},"body":{"index.html":{}}}],["multiple",{"_index":149,"title":{},"body":{"index.html":{}}}],["name",{"_index":77,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["new",{"_index":41,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["object",{"_index":111,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ongoing",{"_index":174,"title":{},"body":{"index.html":{}}}],["open",{"_index":163,"title":{},"body":{"index.html":{}}}],["operations",{"_index":141,"title":{},"body":{"index.html":{},"properties.html":{}}}],["optional",{"_index":78,"title":{},"body":{"miscellaneous/functions.html":{}}}],["options",{"_index":69,"title":{},"body":{"miscellaneous/functions.html":{}}}],["options.ts",{"_index":20,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["out",{"_index":201,"title":{},"body":{"index.html":{}}}],["outer",{"_index":120,"title":{},"body":{"miscellaneous/functions.html":{}}}],["overview",{"_index":213,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":46,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":76,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parse",{"_index":110,"title":{},"body":{"miscellaneous/functions.html":{}}}],["part",{"_index":97,"title":{},"body":{"miscellaneous/functions.html":{}}}],["path",{"_index":95,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["paths",{"_index":85,"title":{},"body":{"miscellaneous/functions.html":{}}}],["peer",{"_index":55,"title":{},"body":{"dependencies.html":{}}}],["please",{"_index":171,"title":{},"body":{"index.html":{}}}],["pnpm",{"_index":157,"title":{},"body":{"index.html":{}}}],["powerful",{"_index":198,"title":{},"body":{"index.html":{}}}],["prevents",{"_index":118,"title":{},"body":{"miscellaneous/functions.html":{}}}],["project",{"_index":165,"title":{},"body":{"index.html":{}}}],["promise",{"_index":84,"title":{},"body":{"miscellaneous/functions.html":{}}}],["properties",{"_index":214,"title":{"properties.html":{}},"body":{"properties.html":{}}}],["provided",{"_index":73,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provides",{"_index":142,"title":{},"body":{"index.html":{},"properties.html":{}}}],["puq",{"_index":217,"title":{},"body":{"properties.html":{}}}],["puq/debug",{"_index":56,"title":{},"body":{"dependencies.html":{}}}],["puq/error",{"_index":50,"title":{},"body":{"dependencies.html":{}}}],["puq/fs",{"_index":132,"title":{},"body":{"index.html":{}}}],["puq/fsfunding",{"_index":159,"title":{},"body":{"index.html":{}}}],["puq/is",{"_index":52,"title":{},"body":{"dependencies.html":{}}}],["read",{"_index":109,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["reading",{"_index":150,"title":{},"body":{"index.html":{}}}],["readjsonfile",{"_index":31,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["readjsonfile(filepath",{"_index":108,"title":{},"body":{"miscellaneous/functions.html":{}}}],["readyamlfile",{"_index":33,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["readyamlfile(filepath",{"_index":113,"title":{},"body":{"miscellaneous/functions.html":{}}}],["regexp",{"_index":92,"title":{},"body":{"miscellaneous/functions.html":{}}}],["regular",{"_index":98,"title":{},"body":{"miscellaneous/functions.html":{}}}],["repository",{"_index":225,"title":{},"body":{"properties.html":{}}}],["resolver",{"_index":117,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["resolver.ts",{"_index":35,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["results",{"_index":44,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":103,"title":{},"body":{"miscellaneous/functions.html":{}}}],["returns",{"_index":83,"title":{},"body":{"miscellaneous/functions.html":{}}}],["robert",{"_index":228,"title":{},"body":{"properties.html":{}}}],["robert.brightline@gmail.com",{"_index":210,"title":{},"body":{"index.html":{}}}],["root",{"_index":74,"title":{},"body":{"miscellaneous/functions.html":{}}}],["running",{"_index":205,"title":{},"body":{"index.html":{}}}],["scope",{"_index":38,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["scope(root",{"_index":114,"title":{},"body":{"miscellaneous/functions.html":{}}}],["scope.ts",{"_index":153,"title":{},"body":{"index.html":{}}}],["scoped",{"_index":116,"title":{},"body":{"miscellaneous/functions.html":{}}}],["scoperesolver",{"_index":36,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["search",{"_index":80,"title":{},"body":{"miscellaneous/functions.html":{}}}],["secure",{"_index":182,"title":{},"body":{"index.html":{}}}],["securely",{"_index":207,"title":{},"body":{"index.html":{}}}],["segment",{"_index":128,"title":{},"body":{"miscellaneous/functions.html":{}}}],["segments",{"_index":40,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["segments(filepath",{"_index":126,"title":{},"body":{"miscellaneous/functions.html":{}}}],["segments.ts",{"_index":154,"title":{},"body":{"index.html":{}}}],["smoothly",{"_index":206,"title":{},"body":{"index.html":{}}}],["source",{"_index":164,"title":{},"body":{"index.html":{}}}],["split",{"_index":127,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../dirs.ts",{"_index":60,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../files.ts",{"_index":61,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../find",{"_index":62,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../io",{"_index":232,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../is",{"_index":63,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../read",{"_index":64,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../scope",{"_index":233,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../scope.ts",{"_index":65,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../segments.ts",{"_index":66,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/lib/dirs.ts",{"_index":6,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/files.ts",{"_index":12,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/find",{"_index":14,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/io",{"_index":19,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/is",{"_index":25,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/read",{"_index":29,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/scope",{"_index":34,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/scope.ts",{"_index":37,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/segments.ts",{"_index":39,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["started",{"_index":131,"title":{"index.html":{}},"body":{}}],["statements",{"_index":5,"title":{},"body":{"coverage.html":{}}}],["stays",{"_index":179,"title":{},"body":{"index.html":{}}}],["string",{"_index":68,"title":{},"body":{"miscellaneous/functions.html":{}}}],["structured",{"_index":144,"title":{},"body":{"index.html":{},"properties.html":{}}}],["sub",{"_index":81,"title":{},"body":{"miscellaneous/functions.html":{}}}],["such",{"_index":93,"title":{},"body":{"miscellaneous/functions.html":{}}}],["summary",{"_index":133,"title":{},"body":{"index.html":{}}}],["support",{"_index":211,"title":{},"body":{"index.html":{}}}],["supporting",{"_index":173,"title":{},"body":{"index.html":{}}}],["swc/helpers",{"_index":48,"title":{},"body":{"dependencies.html":{}}}],["system",{"_index":140,"title":{},"body":{"index.html":{},"properties.html":{}}}],["t",{"_index":112,"title":{},"body":{"miscellaneous/functions.html":{}}}],["table",{"_index":43,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":42,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":167,"title":{},"body":{"index.html":{}}}],["thank",{"_index":160,"title":{},"body":{"index.html":{}}}],["throwing",{"_index":121,"title":{},"body":{"miscellaneous/functions.html":{}}}],["time",{"_index":168,"title":{},"body":{"index.html":{}}}],["toward",{"_index":188,"title":{},"body":{"index.html":{}}}],["true",{"_index":104,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ts",{"_index":94,"title":{},"body":{"miscellaneous/functions.html":{}}}],["type",{"_index":3,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":230,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typescript",{"_index":136,"title":{},"body":{"index.html":{},"properties.html":{}}}],["under",{"_index":72,"title":{},"body":{"miscellaneous/functions.html":{}}}],["up",{"_index":180,"title":{},"body":{"index.html":{}}}],["updates",{"_index":191,"title":{},"body":{"index.html":{}}}],["useful",{"_index":170,"title":{},"body":{"index.html":{}}}],["users",{"_index":200,"title":{},"body":{"index.html":{}}}],["using",{"_index":161,"title":{},"body":{"index.html":{}}}],["utilities",{"_index":151,"title":{},"body":{"index.html":{}}}],["utility",{"_index":137,"title":{},"body":{"index.html":{},"properties.html":{}}}],["value",{"_index":124,"title":{},"body":{"miscellaneous/functions.html":{}}}],["version",{"_index":215,"title":{},"body":{"properties.html":{}}}],["versions",{"_index":194,"title":{},"body":{"index.html":{}}}],["well",{"_index":183,"title":{},"body":{"index.html":{}}}],["work",{"_index":143,"title":{},"body":{"index.html":{},"properties.html":{}}}],["yaml",{"_index":32,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["yes",{"_index":82,"title":{},"body":{"miscellaneous/functions.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/lib/dirs.ts\n            \n            function\n            dirs\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/files.ts\n            \n            function\n            files\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/find-file.ts\n            \n            function\n            findFile\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/find-files.ts\n            \n            function\n            findFiles\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/io-options.ts\n            \n            type alias\n            IOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/is-dir.ts\n            \n            function\n            isDir\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/is-file.ts\n            \n            function\n            isFile\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/read-json-file.ts\n            \n            function\n            readJSONFile\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/read-yaml-file.ts\n            \n            function\n            readYAMLFile\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/scope-resolver.ts\n            \n            type alias\n            ScopeResolver\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/scope.ts\n            \n            function\n            scope\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/segments.ts\n            \n            function\n            segments\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @swc/helpers : ^0.5.15\n        \n            @puq/error : ^0.4.11\n        \n            @puq/is : ^0.4.11\n        \n            js-yaml : ^4.1.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @puq/debug : ^0.4.11\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            dirs   (src/.../dirs.ts)\n                        \n                        \n                            files   (src/.../files.ts)\n                        \n                        \n                            findFile   (src/.../find-file.ts)\n                        \n                        \n                            findFiles   (src/.../find-files.ts)\n                        \n                        \n                            isDir   (src/.../is-dir.ts)\n                        \n                        \n                            isFile   (src/.../is-file.ts)\n                        \n                        \n                            readJSONFile   (src/.../read-json-file.ts)\n                        \n                        \n                            readYAMLFile   (src/.../read-yaml-file.ts)\n                        \n                        \n                            scope   (src/.../scope.ts)\n                        \n                        \n                            segments   (src/.../segments.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/dirs.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        dirs\n                        \n                    \n                \n            \n            \n                \ndirs(root: string, options?: IOptions)\n                \n            \n\n\n\n\n            \n                \n                        List all directories under the provided root directory\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                root\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    root directory to search for sub directories\n\n                                            \n                                        \n                                        \n                                                options\n                                            \n                                                            IOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                list of directory paths\n\n                            \n                \n            \n        \n    \n    src/lib/files.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        files\n                        \n                    \n                \n            \n            \n                \nfiles(root: string, options?: IOptions)\n                \n            \n\n\n\n\n            \n                \n                        List all files under the provided root directory\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                root\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    root directory to search for files\n\n                                            \n                                        \n                                        \n                                                options\n                                            \n                                                            IOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                list of file paths\n\n                            \n                \n            \n        \n    \n    src/lib/find-file.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        findFile\n                        \n                    \n                \n            \n            \n                \nfindFile(filepath: string, options?: IOptions)\n                \n            \n\n\n\n\n            \n                \n                        Find the first matching file with the filepath. The filename in the filepath might be RegExp string such as \\.ts\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                filepath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    filepath to search under the directory\n\n                                            \n                                        \n                                        \n                                                options\n                                            \n                                                            IOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    IOptions\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                file path\n\n                            \n                \n            \n        \n    \n    src/lib/find-files.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        findFiles\n                        \n                    \n                \n            \n            \n                \nfindFiles(filepath: string, options?: IOptions)\n                \n            \n\n\n\n\n            \n                \n                        Find all files matching with the filepath.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                filepath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    file path. Filename part might be regular expression such as \\.ts\n\n                                            \n                                        \n                                        \n                                                options\n                                            \n                                                            IOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/is-dir.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isDir\n                        \n                    \n                \n            \n            \n                \nisDir(filepath: string)\n                \n            \n\n\n\n\n            \n                \n                        Checkt he filepath is a directory\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filepath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                if the {@link filepath} is a directory, then return true, else false\n\n                            \n                \n            \n        \n    \n    src/lib/is-file.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isFile\n                        \n                    \n                \n            \n            \n                \nisFile(filepath: string)\n                \n            \n\n\n\n\n            \n                \n                        Check the path is file\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filepath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                if the {@link filepath} is a file, then return true, else false\n\n                            \n                \n            \n        \n    \n    src/lib/read-json-file.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        readJSONFile\n                        \n                    \n                \n            \n            \n                \nreadJSONFile(filepath: string)\n                \n            \n\n\n\n\n            \n                \n                        Read and parse json file\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                filepath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    filepath\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                object {@link T}\n\n                            \n                \n            \n        \n    \n    src/lib/read-yaml-file.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        readYAMLFile\n                        \n                    \n                \n            \n            \n                \nreadYAMLFile(filepath: string)\n                \n            \n\n\n\n\n            \n                \n                        Read and parse yaml file\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                filepath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    file path\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                object {@link T}\n\n                            \n                \n            \n        \n    \n    src/lib/scope.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        scope\n                        \n                    \n                \n            \n            \n                \nscope(root)\n                \n            \n\n\n\n\n            \n                \n                        Create a scoped path resolver that prevents access to outer directories by throwing ErrorCode.Unauthorized.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                root\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    cwd()\n                                            \n\n                                            \n                                                    scoped directory path\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ScopeResolver\n\n                        \n                            \n                                scoped resolver {@link ScopeResolver}\n\n                            \n                \n            \n        \n    \n    src/lib/segments.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        segments\n                        \n                    \n                \n            \n            \n                \nsegments(filepath: string)\n                \n            \n\n\n\n\n            \n                \n                        Split path into segments\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                filepath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    filepath\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string[]\n\n                        \n                            \n                                segment string array\n\n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n@puq/fs\nSummary\nA lightweight and efficient TypeScript utility library for handling file system operations. This library provides functions to work with directories, files, and structured data formats like JSON and YAML.\nFeatures\n\nDirectory Operations\n\nList directories (dirs.ts)\nCheck if a path is a directory (is-dir.ts)\n\n\nFile Operations\n\nList files (files.ts)\nCheck if a path is a file (is-file.ts)\nFind a matching file (find-file.ts)\nFind multiple matching files (find-files.ts)\n\n\nFile Reading\n\nRead JSON files (read-json-file.ts)\nRead YAML files (read-yaml-file.ts)\n\n\nPath Utilities\n\nHandle file system scope (scope.ts)\nWork with path segments (segments.ts)\n\n\n\nInstall\nExample :  pnpm add @puq/fsFunding\nThank you for using @puq/fs It's an open-source project, and maintaining it takes time and effort. If you find this library useful, please consider supporting its ongoing development. Your contributions help ensure that the project stays up-to-date, secure, and well-maintained.\nInstant Funding\nYour funding will go toward\n\nBug fixes and updates to ensure compatibility with the latest versions of dependencies.\nNew features that will make the library even more powerful.\nDocumentation improvements to help users get the most out of [Your Library Name].\nGeneral maintenance to keep the library running smoothly and securely.\n\nContact to the developer: [robert.brightline@gmail.com]\nSupport the developer\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.4.11\n        \n            Description : A lightweight and efficient TypeScript utility library for handling file system operations. This library provides functions to work with directories, files, and structured data formats like JSON and YAML.\n        \n            Keywords : puq, fs\n        \n            Homepage : https://rbrightline.github.io/puq/fs\n        \n            Bugs : https://rbrightline.github.io\n        \n            License : MIT\n        \n            Repository : https://github.com/rbrightline/puq/tree/main\n        \n            Author : Robert Brightline\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            IOptions   (src/.../io-options.ts)\n                        \n                        \n                            ScopeResolver   (src/.../scope-resolver.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/io-options.ts\n    \n    \n        \n            \n                \n                    \n                    IOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/lib/scope-resolver.ts\n    \n    \n        \n            \n                \n                    \n                    ScopeResolver\n                \n            \n            \n                \n                    Resolver function type\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
