var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/coverage.html",[0,1.888]],["body/coverage.html",[0,1.029,1,1.029,2,1.029,3,1.707,4,1.439,5,1.439,6,1.029,7,2.542,8,1.029,9,3.556,10,0.118,11,3.556,12,1.029,13,1.029,14,1.029,15,1.029,16,1.029,17,0.759,18,1.448,19,1.77,20,1.029,21,3.158,22,0.759,23,3.158,24,3.158,25,1.112,26,1.029,27,0.759,28,1.029,29,1.029,30,1.029,31,1.508,32,1.029,33,1.029,34,1.029,35,1.029,36,1.029,37,1.448,38,1.029,39,0.759,40,1.029,41,1.029,42,0.759,43,1.029,44,1.112,45,1.029,46,0.759,47,1.112,48,0.759,49,1.029,50,1.316,51,1.029,52,0.759,53,0.759,54,1.029,55,1.439,56,1.439,57,0.067,58,0.067]],["title/dependencies.html",[59,1.21,60,1.248]],["body/dependencies.html",[10,0.117,42,1.42,57,0.102,58,0.102,60,1.42,61,2.694,62,3.414,63,2.694,64,2.694,65,2.694,66,2.694]],["title/miscellaneous/functions.html",[67,0.655,68,1.248]],["body/miscellaneous/functions.html",[2,2.249,3,1.636,6,0.558,8,1.199,10,0.114,12,0.558,13,0.931,14,0.558,15,1.557,16,0.558,17,1.24,18,0.687,19,1.584,20,0.931,22,0.687,25,0.687,26,0.931,27,0.687,28,0.558,29,0.931,30,0.931,31,0.931,32,0.931,33,0.931,34,0.931,35,0.558,36,0.931,37,0.884,38,0.931,39,0.687,40,1.199,41,0.931,42,0.884,43,0.931,44,0.411,45,0.931,46,0.687,47,0.411,48,1.032,50,0.411,51,0.931,52,0.687,53,0.687,57,0.042,58,0.042,67,0.302,68,0.411,69,0.411,70,0.78,71,0.78,72,0.78,73,0.78,74,0.931,75,0.78,76,1.303,77,0.78,78,1.199,79,0.558,80,0.558,81,0.558,82,0.78,83,2.518,84,1.303,85,3.183,86,3.145,87,2.276,88,3.183,89,2.06,90,0.78,91,1.557,92,0.931,93,1.958,94,2.219,95,1.557,96,1.677,97,3.005,98,2.881,99,0.78,100,0.78,101,1.303,102,0.78,103,1.303,104,2.353,105,0.78,106,2.805,107,1.303,108,1.677,109,1.303,110,2.805,111,2.178,112,0.78,113,0.78,114,1.303,115,1.303,116,0.78,117,0.78,118,1.303,119,0.558,120,0.78,121,0.78,122,0.78,123,0.78,124,0.78,125,0.78,126,1.677,127,0.558,128,0.78,129,0.78,130,0.78,131,1.677,132,0.78,133,0.931,134,0.78,135,0.78,136,0.78,137,0.78,138,0.78,139,0.78,140,0.78,141,0.78,142,0.78,143,0.78,144,0.558,145,0.78,146,1.303,147,0.78,148,0.78,149,0.78,150,0.78,151,1.303,152,0.78,153,0.78]],["title/index.html",[69,0.892,154,1.693,155,1.693]],["body/index.html",[1,1.277,10,0.09,17,0.941,48,1.296,54,1.277,57,0.078,58,0.078,60,0.941,68,0.941,87,1.277,91,1.277,92,1.277,94,2.009,95,1.277,119,1.277,127,1.277,133,1.277,144,1.277,156,2.458,157,1.786,158,3.175,159,1.786,160,1.786,161,2.458,162,2.811,163,1.786,164,2.458,165,1.786,166,1.786,167,1.786,168,1.786,169,1.786,170,1.786,171,1.786,172,1.786,173,1.786,174,1.786,175,1.786,176,1.786,177,1.786,178,1.786,179,1.786,180,1.786,181,1.786,182,1.786,183,1.786,184,1.786,185,1.786,186,1.786,187,1.786,188,1.786,189,1.786,190,1.786,191,1.786,192,1.786,193,1.786,194,1.786,195,2.458,196,2.458,197,1.786,198,1.786,199,1.786,200,1.786,201,1.786,202,1.786,203,1.786,204,2.458,205,1.786,206,1.786,207,1.786,208,1.786,209,1.786,210,1.786,211,1.786,212,1.786,213,1.786,214,1.786,215,1.786,216,1.786,217,1.786,218,1.786,219,1.786,220,1.786,221,1.786,222,1.786,223,1.786,224,1.786,225,1.786,226,2.458,227,1.786,228,1.786]],["title/modules.html",[229,1.888]],["body/modules.html",[10,0.107,57,0.107,58,0.107,229,2.076]],["title/overview.html",[230,1.888]],["body/overview.html",[10,0.107,57,0.107,58,0.107,230,2.076]],["title/properties.html",[59,1.21,231,1.693]],["body/properties.html",[10,0.119,57,0.098,58,0.098,89,1.795,231,1.795,232,2.511,233,2.511,234,3.068,235,2.511,236,2.511,237,2.511,238,2.511,239,2.511,240,2.511,241,2.511,242,2.511,243,2.511,244,2.511,245,2.511,246,2.511,247,2.511]],["title/miscellaneous/typealiases.html",[67,0.655,248,2.369]],["body/miscellaneous/typealiases.html",[3,1.774,7,1.519,10,0.114,18,1.455,19,1.851,22,1.455,25,1.455,27,1.455,37,1.12,39,1.455,44,1.12,46,1.455,47,1.12,49,1.974,50,1.12,52,1.455,53,1.455,57,0.088,58,0.088,67,0.822,69,1.12,74,1.974,78,1.519,79,1.519,80,1.519,81,1.974,83,1.519,249,2.124,250,2.124,251,2.124,252,2.124,253,2.124,254,2.124,255,2.124,256,3.247]]],"invertedIndex":[["",{"_index":10,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":23,"title":{},"body":{"coverage.html":{}}}],["0.1.0",{"_index":62,"title":{},"body":{"dependencies.html":{}}}],["0.1.2",{"_index":233,"title":{},"body":{"properties.html":{}}}],["0/1",{"_index":24,"title":{},"body":{"coverage.html":{}}}],["1/1",{"_index":11,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":9,"title":{},"body":{"coverage.html":{}}}],["4.1.0",{"_index":66,"title":{},"body":{"dependencies.html":{}}}],["absolute",{"_index":108,"title":{},"body":{"miscellaneous/functions.html":{}}}],["access",{"_index":144,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["accessing",{"_index":174,"title":{},"body":{"index.html":{}}}],["add",{"_index":177,"title":{},"body":{"index.html":{}}}],["alias",{"_index":21,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":249,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["asynciterable",{"_index":252,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["author",{"_index":245,"title":{},"body":{"properties.html":{}}}],["boolean",{"_index":121,"title":{},"body":{"miscellaneous/functions.html":{}}}],["brightline",{"_index":247,"title":{},"body":{"properties.html":{}}}],["bufferencoding",{"_index":254,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["bug",{"_index":207,"title":{},"body":{"index.html":{}}}],["bugs",{"_index":239,"title":{},"body":{"properties.html":{}}}],["check",{"_index":118,"title":{},"body":{"miscellaneous/functions.html":{}}}],["checkt",{"_index":123,"title":{},"body":{"miscellaneous/functions.html":{}}}],["compatibility",{"_index":210,"title":{},"body":{"index.html":{}}}],["confined",{"_index":163,"title":{},"body":{"index.html":{}}}],["consider",{"_index":190,"title":{},"body":{"index.html":{}}}],["contact",{"_index":225,"title":{},"body":{"index.html":{}}}],["content",{"_index":151,"title":{},"body":{"miscellaneous/functions.html":{}}}],["contributions",{"_index":194,"title":{},"body":{"index.html":{}}}],["converts",{"_index":147,"title":{},"body":{"miscellaneous/functions.html":{}}}],["coverage",{"_index":0,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":126,"title":{},"body":{"miscellaneous/functions.html":{}}}],["current",{"_index":169,"title":{},"body":{"index.html":{}}}],["cwd",{"_index":171,"title":{},"body":{"index.html":{}}}],["date",{"_index":199,"title":{},"body":{"index.html":{}}}],["default",{"_index":95,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["defined",{"_index":165,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":60,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["description",{"_index":89,"title":{},"body":{"miscellaneous/functions.html":{},"properties.html":{}}}],["developer",{"_index":226,"title":{},"body":{"index.html":{}}}],["development",{"_index":193,"title":{},"body":{"index.html":{}}}],["dir.ts",{"_index":32,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["directories",{"_index":92,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["directory",{"_index":94,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["directory/directory",{"_index":149,"title":{},"body":{"miscellaneous/functions.html":{}}}],["directory/some/other/file",{"_index":134,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dirpath",{"_index":8,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["dirpath(filepath",{"_index":82,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dirs",{"_index":13,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["dirs(directory",{"_index":90,"title":{},"body":{"miscellaneous/functions.html":{}}}],["documentation",{"_index":1,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["effort",{"_index":187,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":196,"title":{},"body":{"index.html":{}}}],["even",{"_index":215,"title":{},"body":{"index.html":{}}}],["example",{"_index":133,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["exist",{"_index":153,"title":{},"body":{"miscellaneous/functions.html":{}}}],["expression",{"_index":111,"title":{},"body":{"miscellaneous/functions.html":{}}}],["extention",{"_index":103,"title":{},"body":{"miscellaneous/functions.html":{}}}],["extract",{"_index":84,"title":{},"body":{"miscellaneous/functions.html":{}}}],["features",{"_index":213,"title":{},"body":{"index.html":{}}}],["file",{"_index":2,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["file.ts",{"_index":19,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["filecontent",{"_index":52,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["filename",{"_index":15,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["filename(filepath",{"_index":99,"title":{},"body":{"miscellaneous/functions.html":{}}}],["filename/last",{"_index":100,"title":{},"body":{"miscellaneous/functions.html":{}}}],["filepath",{"_index":85,"title":{},"body":{"miscellaneous/functions.html":{}}}],["files",{"_index":17,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["files(directory",{"_index":102,"title":{},"body":{"miscellaneous/functions.html":{}}}],["files.ts",{"_index":25,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["find",{"_index":91,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["findfile",{"_index":20,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["findfile(filepath",{"_index":105,"title":{},"body":{"miscellaneous/functions.html":{}}}],["findfileoptions",{"_index":22,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["findfiles",{"_index":26,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["findfiles(filepath",{"_index":112,"title":{},"body":{"miscellaneous/functions.html":{}}}],["findfilesoptions",{"_index":27,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["first/second/third/fourth/fifth",{"_index":129,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fixes",{"_index":208,"title":{},"body":{"index.html":{}}}],["fs",{"_index":234,"title":{},"body":{"properties.html":{}}}],["function",{"_index":7,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":68,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["funding",{"_index":204,"title":{},"body":{"index.html":{}}}],["general",{"_index":220,"title":{},"body":{"index.html":{}}}],["getting",{"_index":154,"title":{"index.html":{}},"body":{}}],["go",{"_index":205,"title":{},"body":{"index.html":{}}}],["hassegments",{"_index":30,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["hassegments(filepath",{"_index":117,"title":{},"body":{"miscellaneous/functions.html":{}}}],["help",{"_index":195,"title":{},"body":{"index.html":{}}}],["homepage",{"_index":237,"title":{},"body":{"properties.html":{}}}],["https://github.com/rbrightline/puq/tree/main",{"_index":244,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io",{"_index":240,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io/puq/fs",{"_index":238,"title":{},"body":{"properties.html":{}}}],["i/o",{"_index":160,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":4,"title":{},"body":{"coverage.html":{}}}],["improvements",{"_index":217,"title":{},"body":{"index.html":{}}}],["index",{"_index":69,"title":{"index.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["install",{"_index":175,"title":{},"body":{"index.html":{}}}],["instant",{"_index":203,"title":{},"body":{"index.html":{}}}],["internal.stream",{"_index":253,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["isdir",{"_index":33,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isdir(filepath",{"_index":122,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isfile",{"_index":34,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isfile(filepath",{"_index":124,"title":{},"body":{"miscellaneous/functions.html":{}}}],["it's",{"_index":181,"title":{},"body":{"index.html":{}}}],["iterable",{"_index":251,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["js",{"_index":65,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":40,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["keep",{"_index":222,"title":{},"body":{"index.html":{}}}],["keywords",{"_index":235,"title":{},"body":{"properties.html":{}}}],["latest",{"_index":211,"title":{},"body":{"index.html":{}}}],["library",{"_index":158,"title":{},"body":{"index.html":{}}}],["license",{"_index":241,"title":{},"body":{"properties.html":{}}}],["limited",{"_index":173,"title":{},"body":{"index.html":{}}}],["list",{"_index":113,"title":{},"body":{"miscellaneous/functions.html":{}}}],["literal",{"_index":256,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["maintained",{"_index":202,"title":{},"body":{"index.html":{}}}],["maintaining",{"_index":184,"title":{},"body":{"index.html":{}}}],["maintenance",{"_index":221,"title":{},"body":{"index.html":{}}}],["make",{"_index":214,"title":{},"body":{"index.html":{}}}],["matching",{"_index":58,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["mathces",{"_index":132,"title":{},"body":{"miscellaneous/functions.html":{}}}],["meaning",{"_index":172,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":67,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["mit",{"_index":242,"title":{},"body":{"properties.html":{}}}],["mkdir",{"_index":36,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["mkdir(directory",{"_index":125,"title":{},"body":{"miscellaneous/functions.html":{}}}],["modules",{"_index":229,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":119,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["name",{"_index":87,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["new",{"_index":54,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["nodejs.arraybufferview",{"_index":250,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["null",{"_index":255,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["one",{"_index":120,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ongoing",{"_index":192,"title":{},"body":{"index.html":{}}}],["open",{"_index":182,"title":{},"body":{"index.html":{}}}],["operations",{"_index":161,"title":{},"body":{"index.html":{}}}],["optional",{"_index":88,"title":{},"body":{"miscellaneous/functions.html":{}}}],["options",{"_index":106,"title":{},"body":{"miscellaneous/functions.html":{}}}],["out",{"_index":219,"title":{},"body":{"index.html":{}}}],["outside",{"_index":167,"title":{},"body":{"index.html":{}}}],["overview",{"_index":230,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":59,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":86,"title":{},"body":{"miscellaneous/functions.html":{}}}],["path",{"_index":110,"title":{},"body":{"miscellaneous/functions.html":{}}}],["paths",{"_index":115,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pathscope",{"_index":49,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["please",{"_index":189,"title":{},"body":{"index.html":{}}}],["pnpm",{"_index":176,"title":{},"body":{"index.html":{}}}],["powerful",{"_index":216,"title":{},"body":{"index.html":{}}}],["project",{"_index":162,"title":{},"body":{"index.html":{}}}],["promise",{"_index":98,"title":{},"body":{"miscellaneous/functions.html":{}}}],["properties",{"_index":231,"title":{"properties.html":{}},"body":{"properties.html":{}}}],["provided",{"_index":145,"title":{},"body":{"miscellaneous/functions.html":{}}}],["puq",{"_index":236,"title":{},"body":{"properties.html":{}}}],["puq/debug",{"_index":61,"title":{},"body":{"dependencies.html":{}}}],["puq/error",{"_index":63,"title":{},"body":{"dependencies.html":{}}}],["puq/fs",{"_index":156,"title":{},"body":{"index.html":{}}}],["puq/fsfunding",{"_index":178,"title":{},"body":{"index.html":{}}}],["puq/is",{"_index":64,"title":{},"body":{"dependencies.html":{}}}],["read",{"_index":131,"title":{},"body":{"miscellaneous/functions.html":{}}}],["readfile",{"_index":38,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["readfile(filepath",{"_index":130,"title":{},"body":{"miscellaneous/functions.html":{}}}],["readfileoptions",{"_index":39,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["readjsonfile",{"_index":41,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["readjsonfile(filepath",{"_index":135,"title":{},"body":{"miscellaneous/functions.html":{}}}],["readyamlfile",{"_index":43,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["readyamlfile(filepath",{"_index":136,"title":{},"body":{"miscellaneous/functions.html":{}}}],["recursively",{"_index":109,"title":{},"body":{"miscellaneous/functions.html":{}}}],["regular",{"_index":116,"title":{},"body":{"miscellaneous/functions.html":{}}}],["relative",{"_index":114,"title":{},"body":{"miscellaneous/functions.html":{}}}],["remove",{"_index":138,"title":{},"body":{"miscellaneous/functions.html":{}}}],["repository",{"_index":243,"title":{},"body":{"properties.html":{}}}],["resolve(cwd",{"_index":148,"title":{},"body":{"miscellaneous/functions.html":{}}}],["resolver",{"_index":142,"title":{},"body":{"miscellaneous/functions.html":{}}}],["resources",{"_index":166,"title":{},"body":{"index.html":{}}}],["restrict",{"_index":143,"title":{},"body":{"miscellaneous/functions.html":{}}}],["restricts",{"_index":159,"title":{},"body":{"index.html":{}}}],["results",{"_index":57,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":107,"title":{},"body":{"miscellaneous/functions.html":{}}}],["returns",{"_index":97,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rm",{"_index":45,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["rm(filepath",{"_index":137,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rmoptions",{"_index":46,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["robert",{"_index":246,"title":{},"body":{"properties.html":{}}}],["robert.brightline@gmail.com",{"_index":227,"title":{},"body":{"index.html":{}}}],["root",{"_index":146,"title":{},"body":{"miscellaneous/functions.html":{}}}],["running",{"_index":223,"title":{},"body":{"index.html":{}}}],["scope",{"_index":48,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["scope(root",{"_index":141,"title":{},"body":{"miscellaneous/functions.html":{}}}],["secure",{"_index":200,"title":{},"body":{"index.html":{}}}],["securely",{"_index":127,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["segment",{"_index":101,"title":{},"body":{"miscellaneous/functions.html":{}}}],["segments.ts",{"_index":29,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["set",{"_index":168,"title":{},"body":{"index.html":{}}}],["smoothly",{"_index":224,"title":{},"body":{"index.html":{}}}],["source",{"_index":183,"title":{},"body":{"index.html":{}}}],["src/.../dirpath.ts",{"_index":70,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../dirs.ts",{"_index":71,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../filename.ts",{"_index":72,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../files.ts",{"_index":73,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../find",{"_index":74,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../has",{"_index":75,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../is",{"_index":76,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../mkdir.ts",{"_index":77,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../read",{"_index":78,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../rm.ts",{"_index":79,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../scope.ts",{"_index":80,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../write",{"_index":81,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/dirpath.ts",{"_index":6,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/dirs.ts",{"_index":12,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/filename.ts",{"_index":14,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/files.ts",{"_index":16,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/find",{"_index":18,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/has",{"_index":28,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/is",{"_index":31,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/mkdir.ts",{"_index":35,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/read",{"_index":37,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/rm.ts",{"_index":44,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/scope.ts",{"_index":47,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/write",{"_index":50,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["started",{"_index":155,"title":{"index.html":{}},"body":{}}],["statements",{"_index":5,"title":{},"body":{"coverage.html":{}}}],["stays",{"_index":197,"title":{},"body":{"index.html":{}}}],["string",{"_index":83,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["such",{"_index":128,"title":{},"body":{"miscellaneous/functions.html":{}}}],["summary",{"_index":157,"title":{},"body":{"index.html":{}}}],["support",{"_index":228,"title":{},"body":{"index.html":{}}}],["supporting",{"_index":191,"title":{},"body":{"index.html":{}}}],["system",{"_index":140,"title":{},"body":{"miscellaneous/functions.html":{}}}],["table",{"_index":56,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":55,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":185,"title":{},"body":{"index.html":{}}}],["target",{"_index":93,"title":{},"body":{"miscellaneous/functions.html":{}}}],["thank",{"_index":179,"title":{},"body":{"index.html":{}}}],["time",{"_index":186,"title":{},"body":{"index.html":{}}}],["toward",{"_index":206,"title":{},"body":{"index.html":{}}}],["type",{"_index":3,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":248,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["under",{"_index":139,"title":{},"body":{"miscellaneous/functions.html":{}}}],["up",{"_index":198,"title":{},"body":{"index.html":{}}}],["updates",{"_index":209,"title":{},"body":{"index.html":{}}}],["useful",{"_index":188,"title":{},"body":{"index.html":{}}}],["users",{"_index":218,"title":{},"body":{"index.html":{}}}],["using",{"_index":180,"title":{},"body":{"index.html":{}}}],["value",{"_index":96,"title":{},"body":{"miscellaneous/functions.html":{}}}],["version",{"_index":232,"title":{},"body":{"properties.html":{}}}],["versions",{"_index":212,"title":{},"body":{"index.html":{}}}],["well",{"_index":201,"title":{},"body":{"index.html":{}}}],["within",{"_index":164,"title":{},"body":{"index.html":{}}}],["working",{"_index":170,"title":{},"body":{"index.html":{}}}],["write",{"_index":152,"title":{},"body":{"miscellaneous/functions.html":{}}}],["writefile",{"_index":51,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["writefile(filepath",{"_index":150,"title":{},"body":{"miscellaneous/functions.html":{}}}],["writefileoptions",{"_index":53,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["yaml",{"_index":42,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["yes",{"_index":104,"title":{},"body":{"miscellaneous/functions.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/lib/dirpath.ts\n            \n            function\n            dirpath\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/dirs.ts\n            \n            function\n            dirs\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/filename.ts\n            \n            function\n            filename\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/files.ts\n            \n            function\n            files\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/find-file.ts\n            \n            function\n            findFile\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/find-file.ts\n            \n            type alias\n            FindFileOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/find-files.ts\n            \n            function\n            findFiles\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/find-files.ts\n            \n            type alias\n            FindFilesOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/has-segments.ts\n            \n            function\n            hasSegments\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/is-dir.ts\n            \n            function\n            isDir\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/is-file.ts\n            \n            function\n            isFile\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/mkdir.ts\n            \n            function\n            mkdir\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/read-file.ts\n            \n            function\n            readFile\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/read-file.ts\n            \n            type alias\n            ReadFileOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/read-json-file.ts\n            \n            function\n            readJSONFile\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/read-yaml-file.ts\n            \n            function\n            readYamlFile\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/rm.ts\n            \n            function\n            rm\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/rm.ts\n            \n            type alias\n            RmOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/scope.ts\n            \n            function\n            scope\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/scope.ts\n            \n            type alias\n            PathScope\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/write-file.ts\n            \n            function\n            writeFile\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/write-file.ts\n            \n            type alias\n            FileContent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/write-file.ts\n            \n            type alias\n            WriteFileOptions\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @puq/debug : ^0.1.0\n        \n            @puq/error : ^0.1.0\n        \n            @puq/is : ^0.1.0\n        \n            js-yaml : ^4.1.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            dirpath   (src/.../dirpath.ts)\n                        \n                        \n                            dirs   (src/.../dirs.ts)\n                        \n                        \n                            filename   (src/.../filename.ts)\n                        \n                        \n                            files   (src/.../files.ts)\n                        \n                        \n                            findFile   (src/.../find-file.ts)\n                        \n                        \n                            findFiles   (src/.../find-files.ts)\n                        \n                        \n                            hasSegments   (src/.../has-segments.ts)\n                        \n                        \n                            isDir   (src/.../is-dir.ts)\n                        \n                        \n                            isFile   (src/.../is-file.ts)\n                        \n                        \n                            mkdir   (src/.../mkdir.ts)\n                        \n                        \n                            readFile   (src/.../read-file.ts)\n                        \n                        \n                            readJSONFile   (src/.../read-json-file.ts)\n                        \n                        \n                            readYamlFile   (src/.../read-yaml-file.ts)\n                        \n                        \n                            rm   (src/.../rm.ts)\n                        \n                        \n                            scope   (src/.../scope.ts)\n                        \n                        \n                            writeFile   (src/.../write-file.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/dirpath.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        dirpath\n                        \n                    \n                \n            \n            \n                \ndirpath(filepath: string)\n                \n            \n\n\n\n\n            \n                \n                        Extract the dirpath from the filepath\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                filepath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    filename\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/lib/dirs.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        dirs\n                        \n                    \n                \n            \n            \n                \ndirs(directory: string)\n                \n            \n\n\n\n\n            \n                \n                        Find all directories in the target directory (only directories)\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                directory\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    '.'\n                                            \n\n                                            \n                                                    target directory (\".\" by default)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/filename.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        filename\n                        \n                    \n                \n            \n            \n                \nfilename(filepath: string)\n                \n            \n\n\n\n\n            \n                \n                        Extract the filename/last segment from the filepath.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                filepath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    filename\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/files.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        files\n                        \n                    \n                \n            \n            \n                \nfiles(directory: string, extention?: string)\n                \n            \n\n\n\n\n            \n                \n                        Find all files in the target directory (only files)\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                directory\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    '.'\n                                            \n\n                                            \n                                                    target directory (\".\" by default)\n\n                                            \n                                        \n                                        \n                                                extention\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/find-file.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        findFile\n                        \n                    \n                \n            \n            \n                \nfindFile(filepath: string, options?: FindFileOptions)\n                \n            \n\n\n\n\n            \n                \n                        Find file and return the absolute filepath recursively (optional)\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                filepath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    file path or file path with filename expression\n\n                                            \n                                        \n                                        \n                                                options\n                                            \n                                                            FindFileOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/find-files.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        findFiles\n                        \n                    \n                \n            \n            \n                \nfindFiles(filepath: string, options?: FindFilesOptions)\n                \n            \n\n\n\n\n            \n                \n                        Find files and return the list of relative paths\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                filepath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    string | regular expression\n\n                                            \n                                        \n                                        \n                                                options\n                                            \n                                                            FindFilesOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/has-segments.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        hasSegments\n                        \n                    \n                \n            \n            \n                \nhasSegments(filepath: string)\n                \n            \n\n\n\n\n            \n                \n                        Check the filepath has more than one segment\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filepath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/is-dir.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isDir\n                        \n                    \n                \n            \n            \n                \nisDir(filepath: string)\n                \n            \n\n\n\n\n            \n                \n                        Checkt he filepath is a directory\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filepath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/is-file.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isFile\n                        \n                    \n                \n            \n            \n                \nisFile(filepath: string)\n                \n            \n\n\n\n\n            \n                \n                        Check the path is file\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filepath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/mkdir.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mkdir\n                        \n                    \n                \n            \n            \n                \nmkdir(directory: string)\n                \n            \n\n\n\n\n            \n                \n                        Create directory recursively and securely\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                directory\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    directory path such as `./first/second/third/fourth/fifth...'\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/read-file.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        readFile\n                        \n                    \n                \n            \n            \n                \nreadFile(filepath: string, options?: ReadFileOptions)\n                \n            \n\n\n\n\n            \n                \n                        Find and read the file that mathces the expression.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                filepath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    file path or file expression or file path with file-name expression.\nFor example directory/some/other/file* , file.ts, file.*`\n\n                                            \n                                        \n                                        \n                                                options\n                                            \n                                                            ReadFileOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/lib/read-json-file.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        readJSONFile\n                        \n                    \n                \n            \n            \n                \nreadJSONFile(filepath: string)\n                \n            \n\n\n\n\n            \n                \n                        Read json file\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                filepath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    file path\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/read-yaml-file.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        readYamlFile\n                        \n                    \n                \n            \n            \n                \nreadYamlFile(filepath: string)\n                \n            \n\n\n\n\n            \n                \n                        Read yaml file\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                filepath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    file path\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/rm.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        rm\n                        \n                    \n                \n            \n            \n                \nrm(filepath: string, options?: RmOptions)\n                \n            \n\n\n\n\n            \n                \n                        Remove files under the file system scope\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filepath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            RmOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/scope.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        scope\n                        \n                    \n                \n            \n            \n                \nscope(root)\n                \n            \n\n\n\n\n            \n                \n                        Create a path resolver that restrict the access to the provided root directory only\nThe scope converts all paths into absolute\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                root\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    resolve(cwd(), '..')\n                                            \n\n                                            \n                                                    Relative or absolute directory path\nExample :'./directory'\n'/directory/directory'\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/lib/write-file.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        writeFile\n                        \n                    \n                \n            \n            \n                \nwriteFile(filepath: string, content: FileContent, options?: WriteFileOptions)\n                \n            \n\n\n\n\n            \n                \n                        Write file. If the directory does not exist, create the directory.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filepath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                content\n                                            \n                                                            FileContent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            WriteFileOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n@puq/fs\nSummary\nThe library restricts I/O operations to the project directory. These operations are confined within the defined scope and cannot access resources outside of it.\nBy default, the scope is set to the current working directory (cwd), meaning that functions are limited to accessing files and directories within this directory.\nInstall\nExample :  pnpm add @puq/fsFunding\nThank you for using @puq/fs It's an open-source project, and maintaining it takes time and effort. If you find this library useful, please consider supporting its ongoing development. Your contributions help ensure that the project stays up-to-date, secure, and well-maintained.\nInstant Funding\nYour funding will go toward\n\nBug fixes and updates to ensure compatibility with the latest versions of dependencies.\nNew features that will make the library even more powerful.\nDocumentation improvements to help users get the most out of [Your Library Name].\nGeneral maintenance to keep the library running smoothly and securely.\n\nContact to the developer: [robert.brightline@gmail.com]\nSupport the developer\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.1.2\n        \n            Description : fs\n        \n            Keywords : puq, fs\n        \n            Homepage : https://rbrightline.github.io/puq/fs\n        \n            Bugs : https://rbrightline.github.io\n        \n            License : MIT\n        \n            Repository : https://github.com/rbrightline/puq/tree/main\n        \n            Author : Robert Brightline\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            FileContent   (src/.../write-file.ts)\n                        \n                        \n                            FindFileOptions   (src/.../find-file.ts)\n                        \n                        \n                            FindFilesOptions   (src/.../find-files.ts)\n                        \n                        \n                            PathScope   (src/.../scope.ts)\n                        \n                        \n                            ReadFileOptions   (src/.../read-file.ts)\n                        \n                        \n                            RmOptions   (src/.../rm.ts)\n                        \n                        \n                            WriteFileOptions   (src/.../write-file.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/write-file.ts\n    \n    \n        \n            \n                \n                    \n                    FileContent\n                \n            \n            \n                \n                        string | NodeJS.ArrayBufferView | Iterable | AsyncIterable | internal.Stream\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    WriteFileOptions\n                \n            \n            \n                \n                         | BufferEncoding | null\n\n                \n            \n        \n    \n    src/lib/find-file.ts\n    \n    \n        \n            \n                \n                    \n                    FindFileOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/lib/find-files.ts\n    \n    \n        \n            \n                \n                    \n                    FindFilesOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/lib/scope.ts\n    \n    \n        \n            \n                \n                    \n                    PathScope\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    src/lib/read-file.ts\n    \n    \n        \n            \n                \n                    \n                    ReadFileOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/lib/rm.ts\n    \n    \n        \n            \n                \n                    \n                    RmOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
