var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/coverage.html",[0,1.888]],["body/coverage.html",[0,1.237,1,1.237,2,1.731,3,1.237,4,1.731,5,1.731,6,1.976,7,2.765,8,1.237,9,2.988,10,0.104,11,2.988,12,1.237,13,1.237,14,1.237,15,1.237,16,1.237,17,1.731,18,1.237,19,0.912,20,1.731,21,1.731,22,0.077,23,0.077]],["title/dependencies.html",[24,1.21,25,1.248]],["body/dependencies.html",[10,0.107,22,0.099,23,0.099,25,1.351,26,2.562,27,2.562]],["title/miscellaneous/functions.html",[28,0.655,29,1.693]],["body/miscellaneous/functions.html",[3,2.426,6,1.014,8,1.492,10,0.103,12,1.492,13,1.492,22,0.067,23,0.067,28,0.549,29,1.014,30,0.748,31,2.475,32,1.419,33,2.475,34,1.769,35,2.475,36,1.769,37,2.475,38,1.419,39,1.419,40,1.419,41,1.419,42,2.475,43,1.014,44,1.014,45,1.419]],["title/index.html",[30,0.892,46,1.693,47,1.693]],["body/index.html",[1,0.824,10,0.07,19,0.607,22,0.057,23,0.057,25,0.607,34,0.824,48,1.783,49,1.152,50,1.898,51,0.824,52,0.824,53,0.824,54,0.824,55,0.824,56,0.824,57,1.152,58,1.152,59,1.152,60,1.152,61,1.152,62,1.152,63,1.152,64,1.152,65,1.152,66,1.152,67,1.783,68,1.152,69,1.152,70,1.152,71,1.152,72,1.152,73,1.152,74,1.152,75,1.152,76,1.152,77,1.152,78,1.152,79,1.152,80,1.783,81,1.783,82,1.152,83,1.152,84,1.152,85,1.152,86,1.152,87,1.152,88,1.152,89,1.783,90,1.152,91,1.152,92,1.152,93,1.152,94,1.152,95,1.152,96,1.152,97,1.152,98,1.152,99,1.152,100,1.152,101,1.152,102,1.152,103,1.152,104,1.152,105,1.152,106,1.152,107,1.152,108,1.152,109,1.152,110,1.152,111,1.152,112,1.152,113,1.783,114,1.152,115,1.152]],["title/modules.html",[116,1.888]],["body/modules.html",[10,0.102,22,0.102,23,0.102,116,1.921]],["title/overview.html",[117,1.888]],["body/overview.html",[10,0.102,22,0.102,23,0.102,117,1.921]],["title/properties.html",[24,1.21,118,1.693]],["body/properties.html",[10,0.112,22,0.078,23,0.078,50,1.264,51,1.264,52,1.264,53,1.264,54,1.264,55,1.264,56,1.264,118,1.264,119,1.768,120,1.768,121,1.768,122,1.768,123,1.768,124,1.768,125,1.768,126,1.768,127,1.768,128,1.768,129,1.768,130,1.768,131,1.768,132,1.768,133,1.768,134,1.768,135,1.768]],["title/miscellaneous/variables.html",[28,0.655,136,1.693]],["body/miscellaneous/variables.html",[10,0.111,14,1.164,15,1.648,16,1.648,18,1.648,19,1.215,22,0.074,23,0.074,28,0.63,30,0.858,36,1.164,43,1.164,44,1.648,136,1.164,137,1.629,138,1.629,139,1.629,140,2.305,141,1.629,142,1.629,143,1.629,144,2.675,145,1.629,146,1.629,147,1.629,148,1.629,149,1.629]]],"invertedIndex":[["",{"_index":10,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":9,"title":{},"body":{"coverage.html":{}}}],["0.3.1",{"_index":120,"title":{},"body":{"properties.html":{}}}],["0/1",{"_index":11,"title":{},"body":{"coverage.html":{}}}],["11.0.10",{"_index":27,"title":{},"body":{"dependencies.html":{}}}],["add",{"_index":60,"title":{},"body":{"index.html":{}}}],["author",{"_index":133,"title":{},"body":{"properties.html":{}}}],["backend",{"_index":55,"title":{},"body":{"index.html":{},"properties.html":{}}}],["brightline",{"_index":135,"title":{},"body":{"properties.html":{}}}],["bug",{"_index":92,"title":{},"body":{"index.html":{}}}],["bugs",{"_index":127,"title":{},"body":{"properties.html":{}}}],["common",{"_index":52,"title":{},"body":{"index.html":{},"properties.html":{}}}],["compatibility",{"_index":95,"title":{},"body":{"index.html":{}}}],["configurations",{"_index":54,"title":{},"body":{"index.html":{},"properties.html":{}}}],["consider",{"_index":75,"title":{},"body":{"index.html":{}}}],["contact",{"_index":112,"title":{},"body":{"index.html":{}}}],["contributions",{"_index":79,"title":{},"body":{"index.html":{}}}],["core",{"_index":124,"title":{},"body":{"properties.html":{}}}],["coverage",{"_index":0,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["date",{"_index":84,"title":{},"body":{"index.html":{}}}],["default",{"_index":43,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["dependencies",{"_index":25,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["description",{"_index":121,"title":{},"body":{"properties.html":{}}}],["developer",{"_index":113,"title":{},"body":{"index.html":{}}}],["development",{"_index":78,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["effort",{"_index":71,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":81,"title":{},"body":{"index.html":{}}}],["errors",{"_index":149,"title":{},"body":{"miscellaneous/variables.html":{}}}],["even",{"_index":100,"title":{},"body":{"index.html":{}}}],["example",{"_index":58,"title":{},"body":{"index.html":{}}}],["exceptionfactory(errors",{"_index":146,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exposeunsetfields",{"_index":143,"title":{},"body":{"miscellaneous/variables.html":{}}}],["false",{"_index":144,"title":{},"body":{"miscellaneous/variables.html":{}}}],["features",{"_index":98,"title":{},"body":{"index.html":{}}}],["file",{"_index":2,"title":{},"body":{"coverage.html":{}}}],["find",{"_index":72,"title":{},"body":{"index.html":{}}}],["fixes",{"_index":93,"title":{},"body":{"index.html":{}}}],["function",{"_index":7,"title":{},"body":{"coverage.html":{}}}],["functionality",{"_index":53,"title":{},"body":{"index.html":{},"properties.html":{}}}],["functions",{"_index":29,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funding",{"_index":89,"title":{},"body":{"index.html":{}}}],["general",{"_index":106,"title":{},"body":{"index.html":{}}}],["getloggertoken",{"_index":8,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getloggertoken(target",{"_index":32,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getting",{"_index":46,"title":{"index.html":{}},"body":{}}],["globalvalidationpipe",{"_index":18,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["go",{"_index":90,"title":{},"body":{"index.html":{}}}],["help",{"_index":80,"title":{},"body":{"index.html":{}}}],["homepage",{"_index":125,"title":{},"body":{"properties.html":{}}}],["https://github.com/rbrightline/puq/tree/main",{"_index":132,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io",{"_index":128,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io/puq/core",{"_index":126,"title":{},"body":{"properties.html":{}}}],["identifier",{"_index":4,"title":{},"body":{"coverage.html":{}}}],["improvements",{"_index":103,"title":{},"body":{"index.html":{}}}],["index",{"_index":30,"title":{"index.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["injectlogger",{"_index":12,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["injectlogger(target",{"_index":39,"title":{},"body":{"miscellaneous/functions.html":{}}}],["install",{"_index":57,"title":{},"body":{"index.html":{}}}],["instant",{"_index":88,"title":{},"body":{"index.html":{}}}],["it's",{"_index":64,"title":{},"body":{"index.html":{}}}],["keep",{"_index":108,"title":{},"body":{"index.html":{}}}],["keywords",{"_index":122,"title":{},"body":{"properties.html":{}}}],["latest",{"_index":96,"title":{},"body":{"index.html":{}}}],["library",{"_index":50,"title":{},"body":{"index.html":{},"properties.html":{}}}],["license",{"_index":129,"title":{},"body":{"properties.html":{}}}],["logger",{"_index":42,"title":{},"body":{"miscellaneous/functions.html":{}}}],["maintained",{"_index":87,"title":{},"body":{"index.html":{}}}],["maintaining",{"_index":68,"title":{},"body":{"index.html":{}}}],["maintenance",{"_index":107,"title":{},"body":{"index.html":{}}}],["make",{"_index":99,"title":{},"body":{"index.html":{}}}],["matching",{"_index":23,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":28,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":130,"title":{},"body":{"properties.html":{}}}],["modules",{"_index":116,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":101,"title":{},"body":{"index.html":{}}}],["name",{"_index":34,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["nestjs/common",{"_index":26,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":19,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ongoing",{"_index":77,"title":{},"body":{"index.html":{}}}],["open",{"_index":65,"title":{},"body":{"index.html":{}}}],["optional",{"_index":35,"title":{},"body":{"miscellaneous/functions.html":{}}}],["out",{"_index":105,"title":{},"body":{"index.html":{}}}],["overview",{"_index":117,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":24,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameterdecorator",{"_index":40,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parameters",{"_index":33,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pipe.ts",{"_index":16,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["please",{"_index":74,"title":{},"body":{"index.html":{}}}],["pnpm",{"_index":59,"title":{},"body":{"index.html":{}}}],["powerful",{"_index":102,"title":{},"body":{"index.html":{}}}],["project",{"_index":67,"title":{},"body":{"index.html":{}}}],["properties",{"_index":118,"title":{"properties.html":{}},"body":{"properties.html":{}}}],["providelogger",{"_index":13,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["providelogger(target",{"_index":41,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provider",{"_index":45,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provides",{"_index":51,"title":{},"body":{"index.html":{},"properties.html":{}}}],["puq",{"_index":123,"title":{},"body":{"properties.html":{}}}],["puq/core",{"_index":48,"title":{},"body":{"index.html":{}}}],["puq/corefunding",{"_index":61,"title":{},"body":{"index.html":{}}}],["repository",{"_index":131,"title":{},"body":{"properties.html":{}}}],["results",{"_index":22,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":37,"title":{},"body":{"miscellaneous/functions.html":{}}}],["robert",{"_index":134,"title":{},"body":{"properties.html":{}}}],["robert.brightline@gmail.com",{"_index":114,"title":{},"body":{"index.html":{}}}],["running",{"_index":109,"title":{},"body":{"index.html":{}}}],["secure",{"_index":85,"title":{},"body":{"index.html":{}}}],["securely",{"_index":111,"title":{},"body":{"index.html":{}}}],["services",{"_index":56,"title":{},"body":{"index.html":{},"properties.html":{}}}],["smoothly",{"_index":110,"title":{},"body":{"index.html":{}}}],["source",{"_index":66,"title":{},"body":{"index.html":{}}}],["src/.../global",{"_index":137,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../provider.ts",{"_index":31,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/lib/logger/provider.ts",{"_index":6,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/pipes/global",{"_index":14,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":47,"title":{"index.html":{}},"body":{}}],["statements",{"_index":5,"title":{},"body":{"coverage.html":{}}}],["stays",{"_index":82,"title":{},"body":{"index.html":{}}}],["stopatfirsterror",{"_index":141,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string",{"_index":38,"title":{},"body":{"miscellaneous/functions.html":{}}}],["summary",{"_index":49,"title":{},"body":{"index.html":{}}}],["support",{"_index":115,"title":{},"body":{"index.html":{}}}],["supporting",{"_index":76,"title":{},"body":{"index.html":{}}}],["table",{"_index":21,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":20,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":69,"title":{},"body":{"index.html":{}}}],["target",{"_index":36,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["thank",{"_index":62,"title":{},"body":{"index.html":{}}}],["throw",{"_index":147,"title":{},"body":{"miscellaneous/variables.html":{}}}],["time",{"_index":70,"title":{},"body":{"index.html":{}}}],["toward",{"_index":91,"title":{},"body":{"index.html":{}}}],["transform",{"_index":139,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transformoptions",{"_index":142,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":140,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type",{"_index":3,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["unprocessableentityexception",{"_index":148,"title":{},"body":{"miscellaneous/variables.html":{}}}],["up",{"_index":83,"title":{},"body":{"index.html":{}}}],["updates",{"_index":94,"title":{},"body":{"index.html":{}}}],["useful",{"_index":73,"title":{},"body":{"index.html":{}}}],["users",{"_index":104,"title":{},"body":{"index.html":{}}}],["using",{"_index":63,"title":{},"body":{"index.html":{}}}],["validation",{"_index":15,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["validationerror",{"_index":145,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validationpipe",{"_index":138,"title":{},"body":{"miscellaneous/variables.html":{}}}],["value",{"_index":44,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":17,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":136,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":119,"title":{},"body":{"properties.html":{}}}],["versions",{"_index":97,"title":{},"body":{"index.html":{}}}],["well",{"_index":86,"title":{},"body":{"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/lib/logger/provider.ts\n            \n            function\n            getLoggerToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/logger/provider.ts\n            \n            function\n            InjectLogger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/logger/provider.ts\n            \n            function\n            provideLogger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/pipes/global-validation-pipe.ts\n            \n            variable\n            GlobalValidationPipe\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^11.0.10\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getLoggerToken   (src/.../provider.ts)\n                        \n                        \n                            InjectLogger   (src/.../provider.ts)\n                        \n                        \n                            provideLogger   (src/.../provider.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/logger/provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getLoggerToken\n                        \n                    \n                \n            \n            \n                \ngetLoggerToken(target: Type)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                        Type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        InjectLogger\n                        \n                    \n                \n            \n            \n                \nInjectLogger(target: Type)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                        Type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ParameterDecorator\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        provideLogger\n                        \n                    \n                \n            \n            \n                \nprovideLogger(target: Type, logger: Type)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                        Type\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                logger\n                                            \n                                                        Type\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    Logger\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Provider\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n@puq/core\nSummary\nThe library provides common functionality, configurations for backend services.\nInstall\nExample :  pnpm add @puq/coreFunding\nThank you for using @puq/core It's an open-source project, and maintaining it takes time and effort. If you find this library useful, please consider supporting its ongoing development. Your contributions help ensure that the project stays up-to-date, secure, and well-maintained.\nInstant Funding\nYour funding will go toward\n\nBug fixes and updates to ensure compatibility with the latest versions of dependencies.\nNew features that will make the library even more powerful.\nDocumentation improvements to help users get the most out of [Your Library Name].\nGeneral maintenance to keep the library running smoothly and securely.\n\nContact to the developer: [robert.brightline@gmail.com]\nSupport the developer\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.3.1\n        \n            Description : The library provides common functionality, configurations for backend services.\n        \n            Keywords : puq, core\n        \n            Homepage : https://rbrightline.github.io/puq/core\n        \n            Bugs : https://rbrightline.github.io\n        \n            License : MIT\n        \n            Repository : https://github.com/rbrightline/puq/tree/main\n        \n            Author : Robert Brightline\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            GlobalValidationPipe   (src/.../global-validation-pipe.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/pipes/global-validation-pipe.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GlobalValidationPipe\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ValidationPipe({\n  transform: true,\n  stopAtFirstError: true,\n  transformOptions: {\n    exposeUnsetFields: false,\n  },\n  validationError: {\n    target: false,\n    value: false,\n  },\n  exceptionFactory(errors) {\n    throw new UnprocessableEntityException({ errors });\n  },\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
