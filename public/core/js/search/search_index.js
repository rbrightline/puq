var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/coverage.html",[0,2.05]],["body/coverage.html",[0,1.113,1,1.113,2,1.523,3,1.112,4,1.523,5,1.523,6,1.113,7,1.113,8,1.113,9,2.232,10,1.113,11,3.235,12,0.097,13,3.235,14,1.609,15,1.235,16,1.224,17,1.609,18,3.096,19,1.113,20,2.232,21,0.843,22,1.235,23,1.113,24,0.843,25,1.609,26,1.113,27,2.641,28,2.641,29,1.113,30,1.113,31,1.113,32,0.843,33,1.523,34,1.523,35,0.06,36,0.06]],["title/dependencies.html",[37,1.319,38,1.394]],["body/dependencies.html",[12,0.101,35,0.087,36,0.087,38,1.773,39,2.6,40,2.6,41,2.6,42,2.6,43,2.6,44,2.6,45,2.6]],["title/miscellaneous/functions.html",[46,0.41,47,1.841]],["body/miscellaneous/functions.html",[3,1.315,12,0.091,14,0.985,15,1.218,16,1.142,17,1.381,19,1.301,21,0.626,22,0.985,23,1.301,24,0.626,25,0.626,26,1.301,29,1.608,30,1.301,35,0.048,36,0.048,46,0.257,47,0.827,48,0.476,49,1.301,50,1.608,51,1.131,52,2.283,53,2.496,54,2.203,55,2.496,56,2.714,57,1.131,58,1.131,59,1.131,60,1.78,61,2.451,62,1.78,63,1.131,64,1.824,65,2.496,66,1.301,67,1.131,68,1.131,69,1.131,70,1.78,71,1.131,72,1.131,73,1.131,74,2.201,75,1.131,76,1.131,77,1.78,78,0.827,79,1.131,80,1.131,81,1.131,82,1.131,83,1.131,84,1.131]],["title/index.html",[48,0.76,85,1.805,86,1.805]],["body/index.html",[1,1.086,12,0.07,32,0.822,35,0.059,36,0.059,38,0.822,54,1.086,87,2.192,88,1.486,89,2.24,90,1.086,91,1.086,92,1.086,93,1.086,94,1.086,95,1.086,96,1.486,97,1.486,98,1.486,99,1.486,100,1.486,101,1.486,102,1.486,103,1.486,104,1.486,105,1.486,106,2.192,107,1.486,108,1.486,109,1.486,110,1.486,111,1.486,112,1.486,113,1.486,114,1.486,115,1.486,116,1.486,117,1.486,118,1.486,119,2.192,120,2.192,121,1.486,122,1.486,123,1.486,124,1.486,125,1.486,126,1.486,127,1.486,128,2.192,129,1.486,130,1.486,131,1.486,132,1.486,133,1.486,134,1.486,135,1.486,136,1.486,137,1.486,138,1.486,139,1.486,140,1.486,141,1.486,142,1.486,143,1.486,144,1.486,145,1.486,146,1.486,147,1.486,148,1.486,149,1.486,150,1.486,151,1.486,152,2.192,153,1.486,154,1.486]],["title/modules.html",[155,2.05]],["body/modules.html",[12,0.093,35,0.093,36,0.093,155,2.15]],["title/overview.html",[156,2.05]],["body/overview.html",[12,0.093,35,0.093,36,0.093,156,2.15]],["title/properties.html",[37,1.319,157,1.841]],["body/properties.html",[12,0.103,35,0.076,36,0.076,66,1.555,89,1.555,90,1.555,91,1.555,92,1.555,93,1.555,94,1.555,95,1.555,157,1.555,158,2.128,159,2.128,160,2.128,161,2.128,162,2.128,163,2.128,164,2.128,165,2.128,166,2.128,167,2.128,168,2.128,169,2.128,170,2.128,171,2.128,172,2.128,173,2.128]],["title/miscellaneous/typealiases.html",[46,0.41,174,2.52]],["body/miscellaneous/typealiases.html",[3,1.36,12,0.078,14,1.606,15,1.606,16,1.441,17,1.895,21,1.606,22,1.606,24,1.606,35,0.078,36,0.078,46,0.505,48,0.936,49,2.121,175,2.225,176,2.902]],["title/miscellaneous/variables.html",[46,0.41,177,1.841]],["body/miscellaneous/variables.html",[3,0.77,6,1.336,7,1.858,8,1.858,10,1.858,12,0.103,16,1.231,25,1.012,31,1.858,32,1.407,35,0.069,36,0.069,46,0.415,48,0.77,50,1.336,52,1.336,61,1.336,64,1.336,78,1.858,177,1.336,178,1.828,179,1.828,180,1.828,181,2.543,182,1.828,183,1.828,184,1.828,185,2.924,186,1.828,187,1.828,188,1.828,189,1.828,190,1.828]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":11,"title":{},"body":{"coverage.html":{}}}],["0.4.20",{"_index":159,"title":{},"body":{"properties.html":{}}}],["0.5.15",{"_index":40,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":13,"title":{},"body":{"coverage.html":{}}}],["1/1",{"_index":28,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":27,"title":{},"body":{"coverage.html":{}}}],["11.0.11",{"_index":45,"title":{},"body":{"dependencies.html":{}}}],["add",{"_index":99,"title":{},"body":{"index.html":{}}}],["alias",{"_index":20,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":175,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["author",{"_index":171,"title":{},"body":{"properties.html":{}}}],["backend",{"_index":94,"title":{},"body":{"index.html":{},"properties.html":{}}}],["based",{"_index":63,"title":{},"body":{"miscellaneous/functions.html":{}}}],["brightline",{"_index":173,"title":{},"body":{"properties.html":{}}}],["bug",{"_index":131,"title":{},"body":{"index.html":{}}}],["bugs",{"_index":165,"title":{},"body":{"properties.html":{}}}],["class",{"_index":65,"title":{},"body":{"miscellaneous/functions.html":{}}}],["common",{"_index":91,"title":{},"body":{"index.html":{},"properties.html":{}}}],["compatibility",{"_index":134,"title":{},"body":{"index.html":{}}}],["configurations",{"_index":93,"title":{},"body":{"index.html":{},"properties.html":{}}}],["configured",{"_index":84,"title":{},"body":{"miscellaneous/functions.html":{}}}],["consider",{"_index":114,"title":{},"body":{"index.html":{}}}],["constructor",{"_index":69,"title":{},"body":{"miscellaneous/functions.html":{}}}],["contact",{"_index":151,"title":{},"body":{"index.html":{}}}],["contributions",{"_index":118,"title":{},"body":{"index.html":{}}}],["controller",{"_index":80,"title":{},"body":{"miscellaneous/functions.html":{}}}],["core",{"_index":162,"title":{},"body":{"properties.html":{}}}],["coverage",{"_index":0,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creategroupvalueprovider",{"_index":19,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["creategroupvalueprovider(group",{"_index":51,"title":{},"body":{"miscellaneous/functions.html":{}}}],["creates",{"_index":73,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createsinglevalueprovider",{"_index":23,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createsinglevalueprovider(name",{"_index":57,"title":{},"body":{"miscellaneous/functions.html":{}}}],["custom",{"_index":81,"title":{},"body":{"miscellaneous/functions.html":{}}}],["customized",{"_index":76,"title":{},"body":{"miscellaneous/functions.html":{}}}],["date",{"_index":123,"title":{},"body":{"index.html":{}}}],["default",{"_index":78,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":82,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dependencies",{"_index":38,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["description",{"_index":66,"title":{},"body":{"miscellaneous/functions.html":{},"properties.html":{}}}],["developer",{"_index":152,"title":{},"body":{"index.html":{}}}],["development",{"_index":117,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["effort",{"_index":110,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":120,"title":{},"body":{"index.html":{}}}],["errors",{"_index":190,"title":{},"body":{"miscellaneous/variables.html":{}}}],["even",{"_index":139,"title":{},"body":{"index.html":{}}}],["example",{"_index":97,"title":{},"body":{"index.html":{}}}],["exceptionfactory(errors",{"_index":187,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exposeunsetfields",{"_index":184,"title":{},"body":{"miscellaneous/variables.html":{}}}],["false",{"_index":185,"title":{},"body":{"miscellaneous/variables.html":{}}}],["features",{"_index":137,"title":{},"body":{"index.html":{}}}],["file",{"_index":2,"title":{},"body":{"coverage.html":{}}}],["find",{"_index":111,"title":{},"body":{"index.html":{}}}],["fixes",{"_index":132,"title":{},"body":{"index.html":{}}}],["function",{"_index":18,"title":{},"body":{"coverage.html":{}}}],["functionality",{"_index":92,"title":{},"body":{"index.html":{},"properties.html":{}}}],["functions",{"_index":47,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funding",{"_index":128,"title":{},"body":{"index.html":{}}}],["general",{"_index":145,"title":{},"body":{"index.html":{}}}],["generates",{"_index":59,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getloggertoken",{"_index":26,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getloggertoken(targetname",{"_index":58,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getting",{"_index":85,"title":{"index.html":{}},"body":{}}],["globalvalidationpipe",{"_index":10,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["go",{"_index":129,"title":{},"body":{"index.html":{}}}],["group",{"_index":15,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["groupvalueproviderresult",{"_index":21,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["help",{"_index":119,"title":{},"body":{"index.html":{}}}],["homepage",{"_index":163,"title":{},"body":{"properties.html":{}}}],["https://github.com/rbrightline/puq/tree/main",{"_index":170,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io",{"_index":166,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io/puq/core",{"_index":164,"title":{},"body":{"properties.html":{}}}],["identifier",{"_index":4,"title":{},"body":{"coverage.html":{}}}],["implementation",{"_index":77,"title":{},"body":{"miscellaneous/functions.html":{}}}],["improvements",{"_index":142,"title":{},"body":{"index.html":{}}}],["index",{"_index":48,"title":{"index.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":68,"title":{},"body":{"miscellaneous/functions.html":{}}}],["injectlogger",{"_index":29,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["install",{"_index":96,"title":{},"body":{"index.html":{}}}],["instant",{"_index":127,"title":{},"body":{"index.html":{}}}],["it's",{"_index":103,"title":{},"body":{"index.html":{}}}],["keep",{"_index":147,"title":{},"body":{"index.html":{}}}],["keywords",{"_index":160,"title":{},"body":{"properties.html":{}}}],["latest",{"_index":135,"title":{},"body":{"index.html":{}}}],["library",{"_index":89,"title":{},"body":{"index.html":{},"properties.html":{}}}],["license",{"_index":167,"title":{},"body":{"properties.html":{}}}],["link",{"_index":71,"title":{},"body":{"miscellaneous/functions.html":{}}}],["literal",{"_index":176,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["logger",{"_index":61,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["logger_token_suffix",{"_index":31,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["maintained",{"_index":126,"title":{},"body":{"index.html":{}}}],["maintaining",{"_index":107,"title":{},"body":{"index.html":{}}}],["maintenance",{"_index":146,"title":{},"body":{"index.html":{}}}],["make",{"_index":138,"title":{},"body":{"index.html":{}}}],["matching",{"_index":36,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":46,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":168,"title":{},"body":{"properties.html":{}}}],["modules",{"_index":155,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":140,"title":{},"body":{"index.html":{}}}],["name",{"_index":54,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["nestjs",{"_index":83,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nestjs/common",{"_index":44,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":32,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ongoing",{"_index":116,"title":{},"body":{"index.html":{}}}],["open",{"_index":104,"title":{},"body":{"index.html":{}}}],["optional",{"_index":55,"title":{},"body":{"miscellaneous/functions.html":{}}}],["out",{"_index":144,"title":{},"body":{"index.html":{}}}],["overview",{"_index":156,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":37,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameterdecorator",{"_index":70,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parameters",{"_index":53,"title":{},"body":{"miscellaneous/functions.html":{}}}],["peer",{"_index":43,"title":{},"body":{"dependencies.html":{}}}],["pipe.ts",{"_index":8,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["please",{"_index":113,"title":{},"body":{"index.html":{}}}],["pnpm",{"_index":98,"title":{},"body":{"index.html":{}}}],["powerful",{"_index":141,"title":{},"body":{"index.html":{}}}],["project",{"_index":106,"title":{},"body":{"index.html":{}}}],["properties",{"_index":157,"title":{"properties.html":{}},"body":{"properties.html":{}}}],["providelogger",{"_index":30,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["providelogger(target",{"_index":72,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provider",{"_index":74,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provider.ts",{"_index":17,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["provides",{"_index":90,"title":{},"body":{"index.html":{},"properties.html":{}}}],["puq",{"_index":161,"title":{},"body":{"properties.html":{}}}],["puq/core",{"_index":87,"title":{},"body":{"index.html":{}}}],["puq/corefunding",{"_index":100,"title":{},"body":{"index.html":{}}}],["puq/is",{"_index":41,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":169,"title":{},"body":{"properties.html":{}}}],["results",{"_index":35,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":56,"title":{},"body":{"miscellaneous/functions.html":{}}}],["robert",{"_index":172,"title":{},"body":{"properties.html":{}}}],["robert.brightline@gmail.com",{"_index":153,"title":{},"body":{"index.html":{}}}],["running",{"_index":148,"title":{},"body":{"index.html":{}}}],["secure",{"_index":124,"title":{},"body":{"index.html":{}}}],["securely",{"_index":150,"title":{},"body":{"index.html":{}}}],["service",{"_index":79,"title":{},"body":{"miscellaneous/functions.html":{}}}],["services",{"_index":95,"title":{},"body":{"index.html":{},"properties.html":{}}}],["single",{"_index":22,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["singlevalueproviderresult",{"_index":24,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["smoothly",{"_index":149,"title":{},"body":{"index.html":{}}}],["source",{"_index":105,"title":{},"body":{"index.html":{}}}],["specific",{"_index":75,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../create",{"_index":49,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../global",{"_index":178,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../logger.provider.ts",{"_index":50,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/lib/pipes/global",{"_index":6,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/providers/create",{"_index":14,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/providers/logger.provider.ts",{"_index":25,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":86,"title":{"index.html":{}},"body":{}}],["statements",{"_index":5,"title":{},"body":{"coverage.html":{}}}],["stays",{"_index":121,"title":{},"body":{"index.html":{}}}],["stopatfirsterror",{"_index":182,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string",{"_index":52,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["summary",{"_index":88,"title":{},"body":{"index.html":{}}}],["support",{"_index":154,"title":{},"body":{"index.html":{}}}],["supporting",{"_index":115,"title":{},"body":{"index.html":{}}}],["swc/helpers",{"_index":39,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":34,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":33,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":108,"title":{},"body":{"index.html":{}}}],["target",{"_index":64,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["targetname",{"_index":67,"title":{},"body":{"miscellaneous/functions.html":{}}}],["thank",{"_index":101,"title":{},"body":{"index.html":{}}}],["throw",{"_index":188,"title":{},"body":{"miscellaneous/variables.html":{}}}],["time",{"_index":109,"title":{},"body":{"index.html":{}}}],["token",{"_index":62,"title":{},"body":{"miscellaneous/functions.html":{}}}],["toward",{"_index":130,"title":{},"body":{"index.html":{}}}],["transform",{"_index":180,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transformoptions",{"_index":183,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":181,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type",{"_index":3,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":174,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["unique",{"_index":60,"title":{},"body":{"miscellaneous/functions.html":{}}}],["unprocessableentityexception",{"_index":189,"title":{},"body":{"miscellaneous/variables.html":{}}}],["up",{"_index":122,"title":{},"body":{"index.html":{}}}],["updates",{"_index":133,"title":{},"body":{"index.html":{}}}],["useful",{"_index":112,"title":{},"body":{"index.html":{}}}],["users",{"_index":143,"title":{},"body":{"index.html":{}}}],["using",{"_index":102,"title":{},"body":{"index.html":{}}}],["validation",{"_index":7,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["validationerror",{"_index":186,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validationpipe",{"_index":179,"title":{},"body":{"miscellaneous/variables.html":{}}}],["value",{"_index":16,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":9,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":177,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":158,"title":{},"body":{"properties.html":{}}}],["versions",{"_index":136,"title":{},"body":{"index.html":{}}}],["well",{"_index":125,"title":{},"body":{"index.html":{}}}],["workspace",{"_index":42,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/lib/pipes/global-validation-pipe.ts\n            \n            variable\n            GlobalValidationPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/providers/create-group-value-provider.ts\n            \n            function\n            createGroupValueProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/providers/create-group-value-provider.ts\n            \n            type alias\n            GroupValueProviderResult\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/providers/create-single-value-provider.ts\n            \n            function\n            createSingleValueProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/providers/create-single-value-provider.ts\n            \n            type alias\n            SingleValueProviderResult\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/providers/logger.provider.ts\n            \n            function\n            getLoggerToken\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/providers/logger.provider.ts\n            \n            function\n            InjectLogger\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/providers/logger.provider.ts\n            \n            function\n            provideLogger\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/providers/logger.provider.ts\n            \n            variable\n            LOGGER_TOKEN_SUFFIX\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @swc/helpers : ^0.5.15\n        \n            @puq/is : workspace:^\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @nestjs/common : 11.0.11\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createGroupValueProvider   (src/.../create-group-value-provider.ts)\n                        \n                        \n                            createSingleValueProvider   (src/.../create-single-value-provider.ts)\n                        \n                        \n                            getLoggerToken   (src/.../logger.provider.ts)\n                        \n                        \n                            InjectLogger   (src/.../logger.provider.ts)\n                        \n                        \n                            provideLogger   (src/.../logger.provider.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/providers/create-group-value-provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createGroupValueProvider\n                        \n                    \n                \n            \n            \n                \ncreateGroupValueProvider(group: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         GroupValueProviderResult\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/providers/create-single-value-provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createSingleValueProvider\n                        \n                    \n                \n            \n            \n                \ncreateSingleValueProvider(name: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         SingleValueProviderResult\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/providers/logger.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getLoggerToken\n                        \n                    \n                \n            \n            \n                \ngetLoggerToken(targetName: string)\n                \n            \n\n\n\n\n            \n                \n                        Generates a unique logger token based on the target class name\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                targetName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nName of the target class\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Unique logger token string\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        InjectLogger\n                        \n                    \n                \n            \n            \n                \nInjectLogger()\n                \n            \n\n\n\n\n            \n                \n                        Inject logger in constructor\n\n\n                        \n                            Returns :     ParameterDecorator\n\n                        \n                            \n                                \n{@link ParameterDecorator}\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        provideLogger\n                        \n                    \n                \n            \n            \n                \nprovideLogger(target: Type, logger: Type)\n                \n            \n\n\n\n\n            \n                \n                        Creates a logger provider for a specific class with customized logger implementation\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                        Type\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nTarget class (service or controller)\n\n\n                                            \n                                        \n                                        \n                                                logger\n                                            \n                                                        Type\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    Logger\n                                            \n\n                                            \n                                                    \nCustom logger implementation (defaults to NestJS Logger)\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Provider\n\n                        \n                            \n                                Configured logger provider\n\n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n@puq/core\nSummary\nThe library provides common functionality, configurations for backend services.\nInstall\nExample :  pnpm add @puq/coreFunding\nThank you for using @puq/core It's an open-source project, and maintaining it takes time and effort. If you find this library useful, please consider supporting its ongoing development. Your contributions help ensure that the project stays up-to-date, secure, and well-maintained.\nInstant Funding\nYour funding will go toward\n\nBug fixes and updates to ensure compatibility with the latest versions of dependencies.\nNew features that will make the library even more powerful.\nDocumentation improvements to help users get the most out of [Your Library Name].\nGeneral maintenance to keep the library running smoothly and securely.\n\nContact to the developer: [robert.brightline@gmail.com]\nSupport the developer\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.4.20\n        \n            Description : The library provides common functionality, configurations for backend services.\n        \n            Keywords : puq, core\n        \n            Homepage : https://rbrightline.github.io/puq/core\n        \n            Bugs : https://rbrightline.github.io\n        \n            License : MIT\n        \n            Repository : https://github.com/rbrightline/puq/tree/main\n        \n            Author : Robert Brightline\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            GroupValueProviderResult   (src/.../create-group-value-provider.ts)\n                        \n                        \n                            SingleValueProviderResult   (src/.../create-single-value-provider.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/providers/create-group-value-provider.ts\n    \n    \n        \n            \n                \n                    \n                    GroupValueProviderResult\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/lib/providers/create-single-value-provider.ts\n    \n    \n        \n            \n                \n                    \n                    SingleValueProviderResult\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            GlobalValidationPipe   (src/.../global-validation-pipe.ts)\n                        \n                        \n                            LOGGER_TOKEN_SUFFIX   (src/.../logger.provider.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/pipes/global-validation-pipe.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GlobalValidationPipe\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ValidationPipe({\n  transform: true,\n  stopAtFirstError: true,\n  transformOptions: {\n    exposeUnsetFields: false,\n  },\n  validationError: {\n    target: false,\n    value: false,\n  },\n  exceptionFactory(errors) {\n    throw new UnprocessableEntityException({ errors });\n  },\n})\n                    \n                \n\n\n        \n    \n\n    src/lib/providers/logger.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LOGGER_TOKEN_SUFFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Logger'\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
