var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/EntityModule.html",[0,1.265,1,1.265]],["body/modules/EntityModule.html",[0,1.604,1,1.604,2,0.929,3,1.617,4,1.202,5,1.202,6,0.929,7,1.617,8,2.362,9,1.617,10,2.362,11,1.765,12,1.617,13,1.617,14,1.202,15,0.097,16,0.929,17,1.187,18,1.202,19,2.362,20,1.202,21,2.791,22,3.411,23,1.757,24,1.617,25,1.617,26,1.202,27,0.929,28,0.929,29,1.617,30,0.725,31,1.617,32,2.362,33,1.202,34,2.362,35,2.362,36,1.202,37,2.791,38,2.362,39,2.362,40,1.202,41,2.362,42,1.202,43,1.617,44,1.617,45,1.617,46,0.929,47,1.202,48,0.055,49,0.055]],["title/coverage.html",[50,2.179]],["body/coverage.html",[5,1.171,6,0.905,11,0.905,15,0.092,17,1.055,27,0.905,28,0.905,30,1.36,48,0.054,49,0.054,50,1.171,51,1.171,52,1.575,53,1.575,54,1.742,55,1.332,56,1.36,57,1.742,58,3.658,59,1.171,60,3.658,61,3.658,62,2.749,63,0.905,64,1.332,65,1.171,66,3.231,67,3.231,68,0.905,69,1.857,70,1.171,71,1.171,72,1.171,73,1.171,74,2.317,75,1.171,76,1.742,77,1.742,78,1.171,79,1.171,80,1.171,81,1.575,82,1.575]],["title/dependencies.html",[83,1.394,84,1.178]],["body/dependencies.html",[15,0.095,23,1.958,26,1.958,33,1.958,48,0.077,49,0.077,84,1.476,85,2.633,86,2.633,87,2.633,88,2.633,89,2.633,90,2.633,91,2.668,92,2.633,93,2.633,94,2.633]],["title/miscellaneous/functions.html",[95,0.495,96,1.953]],["body/miscellaneous/functions.html",[14,2.317,15,0.087,16,1.982,17,1.311,18,2.317,20,2.394,27,0.959,28,0.959,30,1.616,36,2.394,40,0.766,42,0.766,48,0.039,49,0.039,54,0.959,55,1.526,56,1.084,57,1.389,59,1.24,63,0.959,64,0.959,65,1.24,68,0.592,69,0.592,70,1.24,71,1.563,72,1.24,73,1.24,76,0.592,77,1.389,78,1.24,95,0.272,96,0.766,97,0.462,98,1.24,99,1.563,100,1.797,101,1.03,102,2.394,103,1.03,104,1.791,105,2.225,106,1.03,107,1.03,108,3.116,109,1.563,110,1.03,111,1.03,112,1.668,113,1.668,114,1.668,115,1.668,116,1.03,117,1.03,118,1.03,119,1.668,120,2.459,121,1.03,122,2.417,123,1.03,124,1.03,125,1.03,126,1.03,127,1.03,128,1.03,129,1.03,130,1.03,131,1.03,132,1.03,133,1.03]],["title/index.html",[97,0.841,134,1.874,135,1.874]],["body/index.html",[4,1.411,15,0.071,16,1.091,48,0.062,49,0.062,51,1.411,80,1.411,84,0.851,136,2.649,137,1.898,138,1.898,139,1.898,140,1.898,141,1.898,142,1.898,143,1.898,144,1.898,145,1.898,146,1.898,147,1.898,148,2.649,149,1.898,150,1.898,151,1.898,152,1.898,153,1.898,154,3.302,155,1.898,156,1.898,157,1.898,158,1.898,159,1.898,160,1.898,161,1.898,162,2.649,163,2.649,164,1.898,165,1.898,166,1.898,167,1.898,168,1.898,169,1.898,170,1.898,171,2.649,172,1.898,173,1.898,174,1.898,175,1.898,176,1.898,177,1.898,178,1.898,179,1.898,180,1.898,181,1.898,182,1.898,183,1.898,184,1.898,185,1.898,186,1.898,187,1.411,188,1.898,189,1.898,190,1.898,191,1.898,192,1.898,193,1.898,194,1.898,195,2.649,196,1.898,197,1.898]],["title/modules.html",[2,1.684]],["body/modules.html",[1,1.757,2,1.757,15,0.084,48,0.084,49,0.084,198,3.057,199,3.057,200,3.057]],["title/overview.html",[201,2.179]],["body/overview.html",[0,1.981,15,0.08,46,1.632,47,2.112,48,0.08,49,0.08,84,1.274,187,2.112,201,2.112,202,2.84,203,2.84,204,2.84,205,3.447,206,2.84,207,2.84]],["title/properties.html",[83,1.394,208,1.953]],["body/properties.html",[15,0.095,46,1.43,48,0.074,49,0.074,91,1.85,104,1.43,105,1.85,109,1.85,208,1.85,209,2.487,210,2.487,211,2.487,212,2.487,213,2.487,214,2.487,215,2.487,216,2.487,217,2.487,218,2.487,219,2.487,220,2.487,221,2.487,222,2.487,223,2.487,224,2.487,225,2.487,226,2.487]],["title/miscellaneous/typealiases.html",[95,0.495,227,2.626]],["body/miscellaneous/typealiases.html",[6,1.391,11,1.793,15,0.073,17,1.268,48,0.073,49,0.073,54,1.793,55,1.983,56,1.635,57,2.095,63,1.793,64,1.793,68,1.793,95,0.639,97,1.086,98,2.319,104,1.391,228,2.421,229,2.421,230,3.451]],["title/miscellaneous/variables.html",[95,0.495,231,1.953]],["body/miscellaneous/variables.html",[15,0.091,17,1.119,30,1.443,48,0.075,49,0.075,56,1.443,69,1.46,75,2.392,76,1.46,77,1.849,79,2.392,95,0.671,97,1.139,99,1.889,100,1.889,102,2.392,120,1.889,231,1.889,232,3.216,233,2.54]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"modules/EntityModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":66,"title":{},"body":{"coverage.html":{}}}],["0.3.20",{"_index":94,"title":{},"body":{"dependencies.html":{}}}],["0.5.15",{"_index":86,"title":{},"body":{"dependencies.html":{}}}],["0.5.30",{"_index":91,"title":{},"body":{"dependencies.html":{},"properties.html":{}}}],["0/1",{"_index":67,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":207,"title":{},"body":{"overview.html":{}}}],["1/1",{"_index":61,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":60,"title":{},"body":{"coverage.html":{}}}],["11.0.0",{"_index":89,"title":{},"body":{"dependencies.html":{}}}],["11.0.11",{"_index":88,"title":{},"body":{"dependencies.html":{}}}],["add",{"_index":142,"title":{},"body":{"index.html":{}}}],["alias",{"_index":62,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":228,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["author",{"_index":224,"title":{},"body":{"properties.html":{}}}],["available",{"_index":199,"title":{},"body":{"modules.html":{}}}],["based",{"_index":121,"title":{},"body":{"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":204,"title":{},"body":{"overview.html":{}}}],["brightline",{"_index":226,"title":{},"body":{"properties.html":{}}}],["browse",{"_index":200,"title":{},"body":{"modules.html":{}}}],["bug",{"_index":174,"title":{},"body":{"index.html":{}}}],["bugs",{"_index":218,"title":{},"body":{"properties.html":{}}}],["class",{"_index":36,"title":{},"body":{"modules/EntityModule.html":{},"miscellaneous/functions.html":{}}}],["common",{"_index":210,"title":{},"body":{"properties.html":{}}}],["commonproviders",{"_index":138,"title":{},"body":{"index.html":{}}}],["compatibility",{"_index":177,"title":{},"body":{"index.html":{}}}],["configured",{"_index":133,"title":{},"body":{"miscellaneous/functions.html":{}}}],["consider",{"_index":157,"title":{},"body":{"index.html":{}}}],["const",{"_index":37,"title":{},"body":{"modules/EntityModule.html":{}}}],["constructor",{"_index":124,"title":{},"body":{"miscellaneous/functions.html":{}}}],["contact",{"_index":194,"title":{},"body":{"index.html":{}}}],["contributions",{"_index":161,"title":{},"body":{"index.html":{}}}],["controller",{"_index":132,"title":{},"body":{"miscellaneous/functions.html":{}}}],["coverage",{"_index":50,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":103,"title":{},"body":{"miscellaneous/functions.html":{}}}],["creategroupvalueprovider",{"_index":59,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["creategroupvalueprovider(group",{"_index":101,"title":{},"body":{"miscellaneous/functions.html":{}}}],["creates",{"_index":128,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createsinglevalueprovider",{"_index":65,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createsinglevalueprovider(name",{"_index":107,"title":{},"body":{"miscellaneous/functions.html":{}}}],["customized",{"_index":130,"title":{},"body":{"miscellaneous/functions.html":{}}}],["date",{"_index":166,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":203,"title":{},"body":{"overview.html":{}}}],["decorator",{"_index":115,"title":{},"body":{"miscellaneous/functions.html":{}}}],["default",{"_index":232,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"modules/EntityModule.html":{}}}],["dependencies",{"_index":84,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{},"overview.html":{}}}],["description",{"_index":105,"title":{},"body":{"miscellaneous/functions.html":{},"properties.html":{}}}],["developer",{"_index":195,"title":{},"body":{"index.html":{}}}],["development",{"_index":160,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":51,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dynamicmodule",{"_index":21,"title":{},"body":{"modules/EntityModule.html":{}}}],["effort",{"_index":152,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":163,"title":{},"body":{"index.html":{}}}],["entities",{"_index":35,"title":{},"body":{"modules/EntityModule.html":{}}}],["entities.map((entity",{"_index":39,"title":{},"body":{"modules/EntityModule.html":{}}}],["entity",{"_index":30,"title":{},"body":{"modules/EntityModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["entity_service",{"_index":233,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entity_service_token_suffix",{"_index":79,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["entitymodule",{"_index":1,"title":{"modules/EntityModule.html":{}},"body":{"modules/EntityModule.html":{},"modules.html":{}}}],["entitymoduleoptions",{"_index":11,"title":{},"body":{"modules/EntityModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["entityservice",{"_index":32,"title":{},"body":{"modules/EntityModule.html":{}}}],["entityserviceproviders",{"_index":38,"title":{},"body":{"modules/EntityModule.html":{}}}],["entityservicetokens",{"_index":41,"title":{},"body":{"modules/EntityModule.html":{}}}],["even",{"_index":182,"title":{},"body":{"index.html":{}}}],["example",{"_index":140,"title":{},"body":{"index.html":{}}}],["export",{"_index":34,"title":{},"body":{"modules/EntityModule.html":{}}}],["exports",{"_index":47,"title":{},"body":{"modules/EntityModule.html":{},"overview.html":{}}}],["features",{"_index":180,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"modules/EntityModule.html":{},"coverage.html":{}}}],["find",{"_index":153,"title":{},"body":{"index.html":{}}}],["fixes",{"_index":175,"title":{},"body":{"index.html":{}}}],["forfeature",{"_index":9,"title":{},"body":{"modules/EntityModule.html":{}}}],["forfeature(options",{"_index":10,"title":{},"body":{"modules/EntityModule.html":{}}}],["function",{"_index":58,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":96,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funding",{"_index":171,"title":{},"body":{"index.html":{}}}],["general",{"_index":188,"title":{},"body":{"index.html":{}}}],["generates",{"_index":118,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getentityservicetoken",{"_index":27,"title":{},"body":{"modules/EntityModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getentityservicetoken(entity",{"_index":42,"title":{},"body":{"modules/EntityModule.html":{},"miscellaneous/functions.html":{}}}],["getloggertokenof",{"_index":70,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getloggertokenof(targetname",{"_index":117,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getting",{"_index":134,"title":{"index.html":{}},"body":{}}],["go",{"_index":172,"title":{},"body":{"index.html":{}}}],["graph",{"_index":198,"title":{},"body":{"modules.html":{}}}],["group",{"_index":55,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["groupvalueproviderresult",{"_index":63,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["help",{"_index":162,"title":{},"body":{"index.html":{}}}],["homepage",{"_index":216,"title":{},"body":{"properties.html":{}}}],["https://github.com/rbrightline/puq/tree/main",{"_index":223,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io",{"_index":219,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io/puq/provider",{"_index":217,"title":{},"body":{"properties.html":{}}}],["identifier",{"_index":52,"title":{},"body":{"coverage.html":{}}}],["implementation",{"_index":131,"title":{},"body":{"miscellaneous/functions.html":{}}}],["import",{"_index":22,"title":{},"body":{"modules/EntityModule.html":{}}}],["imports",{"_index":44,"title":{},"body":{"modules/EntityModule.html":{}}}],["improvements",{"_index":185,"title":{},"body":{"index.html":{}}}],["index",{"_index":97,"title":{"index.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"modules/EntityModule.html":{}}}],["inject",{"_index":112,"title":{},"body":{"miscellaneous/functions.html":{}}}],["injectentityservice",{"_index":78,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["injectentityservice(entity",{"_index":111,"title":{},"body":{"miscellaneous/functions.html":{}}}],["injectlogger",{"_index":71,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["injectors",{"_index":211,"title":{},"body":{"properties.html":{}}}],["injectro",{"_index":215,"title":{},"body":{"properties.html":{}}}],["install",{"_index":139,"title":{},"body":{"index.html":{}}}],["instant",{"_index":170,"title":{},"body":{"index.html":{}}}],["it's",{"_index":146,"title":{},"body":{"index.html":{}}}],["keep",{"_index":190,"title":{},"body":{"index.html":{}}}],["keywords",{"_index":213,"title":{},"body":{"properties.html":{}}}],["latest",{"_index":178,"title":{},"body":{"index.html":{}}}],["legend",{"_index":202,"title":{},"body":{"overview.html":{}}}],["library",{"_index":154,"title":{},"body":{"index.html":{}}}],["license",{"_index":220,"title":{},"body":{"properties.html":{}}}],["link",{"_index":106,"title":{},"body":{"miscellaneous/functions.html":{}}}],["literal",{"_index":230,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["logger",{"_index":120,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["logger_token_suffix",{"_index":75,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["maintained",{"_index":169,"title":{},"body":{"index.html":{}}}],["maintaining",{"_index":149,"title":{},"body":{"index.html":{}}}],["maintenance",{"_index":189,"title":{},"body":{"index.html":{}}}],["make",{"_index":181,"title":{},"body":{"index.html":{}}}],["matching",{"_index":49,"title":{},"body":{"modules/EntityModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":7,"title":{},"body":{"modules/EntityModule.html":{}}}],["miscellaneous",{"_index":95,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":221,"title":{},"body":{"properties.html":{}}}],["module",{"_index":0,"title":{"modules/EntityModule.html":{}},"body":{"modules/EntityModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/EntityModule.html":{},"modules.html":{}}}],["more",{"_index":183,"title":{},"body":{"index.html":{}}}],["name",{"_index":16,"title":{},"body":{"modules/EntityModule.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["nestjs/common",{"_index":23,"title":{},"body":{"modules/EntityModule.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":26,"title":{},"body":{"modules/EntityModule.html":{},"dependencies.html":{}}}],["new",{"_index":80,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["ongoing",{"_index":159,"title":{},"body":{"index.html":{}}}],["open",{"_index":147,"title":{},"body":{"index.html":{}}}],["optional",{"_index":18,"title":{},"body":{"modules/EntityModule.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":19,"title":{},"body":{"modules/EntityModule.html":{}}}],["out",{"_index":187,"title":{},"body":{"index.html":{},"overview.html":{}}}],["overview",{"_index":201,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":83,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameter",{"_index":114,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parameterdecorator",{"_index":113,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parameters",{"_index":14,"title":{},"body":{"modules/EntityModule.html":{},"miscellaneous/functions.html":{}}}],["peer",{"_index":87,"title":{},"body":{"dependencies.html":{}}}],["please",{"_index":156,"title":{},"body":{"index.html":{}}}],["pnpm",{"_index":141,"title":{},"body":{"index.html":{}}}],["powerful",{"_index":184,"title":{},"body":{"index.html":{}}}],["project",{"_index":148,"title":{},"body":{"index.html":{}}}],["properties",{"_index":208,"title":{"properties.html":{}},"body":{"properties.html":{}}}],["provide",{"_index":116,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provideentityservice",{"_index":28,"title":{},"body":{"modules/EntityModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["provideentityservice(entity",{"_index":40,"title":{},"body":{"modules/EntityModule.html":{},"miscellaneous/functions.html":{}}}],["provideloggerclass",{"_index":72,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["provideloggerclass(logger",{"_index":125,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provideloggerfor",{"_index":73,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["provideloggerfor(target",{"_index":127,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provider",{"_index":104,"title":{},"body":{"miscellaneous/functions.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["provider.ts",{"_index":57,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["providers",{"_index":46,"title":{},"body":{"modules/EntityModule.html":{},"overview.html":{},"properties.html":{}}}],["provides",{"_index":126,"title":{},"body":{"miscellaneous/functions.html":{}}}],["puq",{"_index":214,"title":{},"body":{"properties.html":{}}}],["puq/debug",{"_index":90,"title":{},"body":{"dependencies.html":{}}}],["puq/is",{"_index":92,"title":{},"body":{"dependencies.html":{}}}],["puq/orm",{"_index":33,"title":{},"body":{"modules/EntityModule.html":{},"dependencies.html":{}}}],["puq/provider",{"_index":136,"title":{},"body":{"index.html":{}}}],["puq/providerfunding",{"_index":143,"title":{},"body":{"index.html":{}}}],["puq/type",{"_index":24,"title":{},"body":{"modules/EntityModule.html":{}}}],["repository",{"_index":222,"title":{},"body":{"properties.html":{}}}],["reset",{"_index":206,"title":{},"body":{"overview.html":{}}}],["results",{"_index":48,"title":{},"body":{"modules/EntityModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":43,"title":{},"body":{"modules/EntityModule.html":{}}}],["returns",{"_index":20,"title":{},"body":{"modules/EntityModule.html":{},"miscellaneous/functions.html":{}}}],["robert",{"_index":225,"title":{},"body":{"properties.html":{}}}],["robert.brightline@gmail.com",{"_index":196,"title":{},"body":{"index.html":{}}}],["running",{"_index":191,"title":{},"body":{"index.html":{}}}],["secure",{"_index":167,"title":{},"body":{"index.html":{}}}],["securely",{"_index":193,"title":{},"body":{"index.html":{}}}],["service",{"_index":108,"title":{},"body":{"miscellaneous/functions.html":{}}}],["service.js",{"_index":31,"title":{},"body":{"modules/EntityModule.html":{}}}],["service.ts",{"_index":77,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["service/provide",{"_index":29,"title":{},"body":{"modules/EntityModule.html":{}}}],["single",{"_index":64,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["singlevalueproviderresult",{"_index":68,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["smoothly",{"_index":192,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"modules/EntityModule.html":{},"index.html":{}}}],["specific",{"_index":129,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../create",{"_index":98,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../entity.module.ts",{"_index":229,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../logger.provider.ts",{"_index":100,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../provide",{"_index":99,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/lib/common/create",{"_index":54,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/log/logger.provider.ts",{"_index":69,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/lib/module/entity.module.ts",{"_index":6,"title":{},"body":{"modules/EntityModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/module/entity.module.ts:17",{"_index":13,"title":{},"body":{"modules/EntityModule.html":{}}}],["src/lib/service/provide",{"_index":76,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":135,"title":{"index.html":{}},"body":{}}],["statements",{"_index":53,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":8,"title":{},"body":{"modules/EntityModule.html":{}}}],["stays",{"_index":164,"title":{},"body":{"index.html":{}}}],["string",{"_index":102,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["summary",{"_index":137,"title":{},"body":{"index.html":{}}}],["support",{"_index":197,"title":{},"body":{"index.html":{}}}],["supporting",{"_index":158,"title":{},"body":{"index.html":{}}}],["swc/helpers",{"_index":85,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":82,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":81,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":150,"title":{},"body":{"index.html":{}}}],["target",{"_index":122,"title":{},"body":{"miscellaneous/functions.html":{}}}],["targetname",{"_index":123,"title":{},"body":{"miscellaneous/functions.html":{}}}],["thank",{"_index":144,"title":{},"body":{"index.html":{}}}],["time",{"_index":151,"title":{},"body":{"index.html":{}}}],["token",{"_index":109,"title":{},"body":{"miscellaneous/functions.html":{},"properties.html":{}}}],["tokenf",{"_index":110,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tokens",{"_index":212,"title":{},"body":{"properties.html":{}}}],["toward",{"_index":173,"title":{},"body":{"index.html":{}}}],["type",{"_index":17,"title":{},"body":{"modules/EntityModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":227,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeorm",{"_index":93,"title":{},"body":{"dependencies.html":{}}}],["typeormmodule",{"_index":25,"title":{},"body":{"modules/EntityModule.html":{}}}],["typeormmodule.forfeature(entities",{"_index":45,"title":{},"body":{"modules/EntityModule.html":{}}}],["unique",{"_index":119,"title":{},"body":{"miscellaneous/functions.html":{}}}],["up",{"_index":165,"title":{},"body":{"index.html":{}}}],["updates",{"_index":176,"title":{},"body":{"index.html":{}}}],["useful",{"_index":155,"title":{},"body":{"index.html":{}}}],["users",{"_index":186,"title":{},"body":{"index.html":{}}}],["using",{"_index":145,"title":{},"body":{"index.html":{}}}],["value",{"_index":56,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":74,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":231,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":209,"title":{},"body":{"properties.html":{}}}],["versions",{"_index":179,"title":{},"body":{"index.html":{}}}],["well",{"_index":168,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":205,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/EntityModule.html":{"url":"modules/EntityModule.html","title":"module - EntityModule","body":"\n                   \n\n\n\n\n    Modules\n    EntityModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/module/entity.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forFeature\n                        \n                    \n                \n            \n            \n                \n                        \n                    forFeature(options: EntityModuleOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/module/entity.module.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            EntityModuleOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import type { DynamicModule } from '@nestjs/common';\nimport type { Type } from '@puq/type';\nimport { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport {\n  getEntityServiceToken,\n  provideEntityService,\n} from '../service/provide-entity-service.js';\nimport { EntityService } from '@puq/orm';\n\nexport type EntityModuleOptions = {\n  entities: Type[];\n};\n\n@Module({})\nexport class EntityModule {\n  static forFeature(options: EntityModuleOptions): DynamicModule {\n    const { entities } = options;\n    const entityServiceProviders = entities.map((entity) =>\n      provideEntityService(entity, EntityService),\n    );\n\n    const entityServiceTokens = entities.map((entity) =>\n      getEntityServiceToken(entity),\n    );\n\n    return {\n      module: EntityModule,\n      imports: [TypeOrmModule.forFeature(entities)],\n      providers: [...entityServiceProviders],\n      exports: [...entityServiceTokens],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/lib/common/create-group-value-provider.ts\n            \n            function\n            createGroupValueProvider\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/common/create-group-value-provider.ts\n            \n            type alias\n            GroupValueProviderResult\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/common/create-single-value-provider.ts\n            \n            function\n            createSingleValueProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/common/create-single-value-provider.ts\n            \n            type alias\n            SingleValueProviderResult\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/log/logger.provider.ts\n            \n            function\n            getLoggerTokenOf\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/log/logger.provider.ts\n            \n            function\n            InjectLogger\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/log/logger.provider.ts\n            \n            function\n            provideLoggerClass\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/log/logger.provider.ts\n            \n            function\n            provideLoggerFor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/log/logger.provider.ts\n            \n            variable\n            LOGGER_TOKEN_SUFFIX\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/module/entity.module.ts\n            \n            type alias\n            EntityModuleOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/service/provide-entity-service.ts\n            \n            function\n            getEntityServiceToken\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/service/provide-entity-service.ts\n            \n            function\n            InjectEntityService\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/service/provide-entity-service.ts\n            \n            function\n            provideEntityService\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/service/provide-entity-service.ts\n            \n            variable\n            ENTITY_SERVICE_TOKEN_SUFFIX\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @swc/helpers : ^0.5.15\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @nestjs/common : ^11.0.11\n        \n            @nestjs/typeorm : ^11.0.0\n        \n            @puq/debug : ^0.5.30\n        \n            @puq/is : ^0.5.30\n        \n            @puq/orm : ^0.5.30\n        \n            typeorm : ^0.3.20\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createGroupValueProvider   (src/.../create-group-value-provider.ts)\n                        \n                        \n                            createSingleValueProvider   (src/.../create-single-value-provider.ts)\n                        \n                        \n                            getEntityServiceToken   (src/.../provide-entity-service.ts)\n                        \n                        \n                            getLoggerTokenOf   (src/.../logger.provider.ts)\n                        \n                        \n                            InjectEntityService   (src/.../provide-entity-service.ts)\n                        \n                        \n                            InjectLogger   (src/.../logger.provider.ts)\n                        \n                        \n                            provideEntityService   (src/.../provide-entity-service.ts)\n                        \n                        \n                            provideLoggerClass   (src/.../logger.provider.ts)\n                        \n                        \n                            provideLoggerFor   (src/.../logger.provider.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/common/create-group-value-provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createGroupValueProvider\n                        \n                    \n                \n            \n            \n                \ncreateGroupValueProvider(group: string)\n                \n            \n\n\n\n\n            \n                \n                        Create a group provider\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    group name\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         GroupValueProviderResult\n\n                        \n                            \n                                \n{@link GroupValueProviderResult}\n\n\n                            \n                \n            \n        \n    \n    src/lib/common/create-single-value-provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createSingleValueProvider\n                        \n                    \n                \n            \n            \n                \ncreateSingleValueProvider(name: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         SingleValueProviderResult\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/service/provide-entity-service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getEntityServiceToken\n                        \n                    \n                \n            \n            \n                \ngetEntityServiceToken(entity: Type)\n                \n            \n\n\n\n\n            \n                \n                        Get the entity service token\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        Type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nentity class\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \nentity service tokenF\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        InjectEntityService\n                        \n                    \n                \n            \n            \n                \nInjectEntityService(entity: Type)\n                \n            \n\n\n\n\n            \n                \n                        Inject entity service\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        Type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    entity class\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ParameterDecorator\n\n                        \n                            \n                                \nParameter decorator\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        provideEntityService\n                        \n                    \n                \n            \n            \n                \nprovideEntityService(entity: Type, service: Type)\n                \n            \n\n\n\n\n            \n                \n                        Provide entity service\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        Type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nentity class\n\n\n                                            \n                                        \n                                        \n                                                service\n                                            \n                                                        Type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nentity service\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Provider\n\n                        \n                            \n                                \nProvider\n\n\n                            \n                \n            \n        \n    \n    src/lib/log/logger.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getLoggerTokenOf\n                        \n                    \n                \n            \n            \n                \ngetLoggerTokenOf(targetName: string)\n                \n            \n\n\n\n\n            \n                \n                        Generates a unique logger token based on the target class name\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                targetName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nName of the target class\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Unique logger token string\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        InjectLogger\n                        \n                    \n                \n            \n            \n                \nInjectLogger()\n                \n            \n\n\n\n\n            \n                \n                        Inject logger in constructor\n\n\n                        \n                            Returns :     ParameterDecorator\n\n                        \n                            \n                                \nParameter decorator\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        provideLoggerClass\n                        \n                    \n                \n            \n            \n                \nprovideLoggerClass(logger: Type)\n                \n            \n\n\n\n\n            \n                \n                        Provides the logger class\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                logger\n                                            \n                                                        Type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nLogger class\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Provider\n\n                        \n                            \n                                \nthe Logger provider\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        provideLoggerFor\n                        \n                    \n                \n            \n            \n                \nprovideLoggerFor(target: Type)\n                \n            \n\n\n\n\n            \n                \n                        Creates a logger provider for a specific class with customized logger implementation\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                        Type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nTarget class (service or controller)\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Provider\n\n                        \n                            \n                                Configured logger provider\n\n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n@puq/provider\nSummary\n\nCommonproviders\n\nInstall\nExample :  pnpm add @puq/providerFunding\nThank you for using @puq/provider It's an open-source project, and maintaining it takes time and effort. If you find this library useful, please consider supporting its ongoing development. Your contributions help ensure that the project stays up-to-date, secure, and well-maintained.\nInstant Funding\nYour funding will go toward\n\nBug fixes and updates to ensure compatibility with the latest versions of dependencies.\nNew features that will make the library even more powerful.\nDocumentation improvements to help users get the most out of [Your Library Name].\nGeneral maintenance to keep the library running smoothly and securely.\n\nContact to the developer: [robert.brightline@gmail.com]\nSupport the developer\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        EntityModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.5.30\n        \n            Description : Common providers, injectors, and tokens\n        \n            Keywords : puq, provider, injectro, token\n        \n            Homepage : https://rbrightline.github.io/puq/provider\n        \n            Bugs : https://rbrightline.github.io\n        \n            License : MIT\n        \n            Repository : https://github.com/rbrightline/puq/tree/main\n        \n            Author : Robert Brightline\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            EntityModuleOptions   (src/.../entity.module.ts)\n                        \n                        \n                            GroupValueProviderResult   (src/.../create-group-value-provider.ts)\n                        \n                        \n                            SingleValueProviderResult   (src/.../create-single-value-provider.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/module/entity.module.ts\n    \n    \n        \n            \n                \n                    \n                    EntityModuleOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/lib/common/create-group-value-provider.ts\n    \n    \n        \n            \n                \n                    \n                    GroupValueProviderResult\n                \n            \n            \n                \n                    Group provider\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/lib/common/create-single-value-provider.ts\n    \n    \n        \n            \n                \n                    \n                    SingleValueProviderResult\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ENTITY_SERVICE_TOKEN_SUFFIX   (src/.../provide-entity-service.ts)\n                        \n                        \n                            LOGGER_TOKEN_SUFFIX   (src/.../logger.provider.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/service/provide-entity-service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ENTITY_SERVICE_TOKEN_SUFFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ENTITY_SERVICE'\n                    \n                \n\n\n        \n    \n\n    src/lib/log/logger.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LOGGER_TOKEN_SUFFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Logger'\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
