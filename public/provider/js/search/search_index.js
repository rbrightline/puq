var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/coverage.html",[0,2.05]],["body/coverage.html",[0,1.108,1,1.108,2,1.517,3,1.109,4,1.517,5,1.517,6,1.606,7,1.231,8,1.222,9,1.606,10,3.23,11,1.108,12,3.23,13,0.097,14,3.23,15,2.225,16,0.839,17,1.231,18,1.108,19,2.635,20,2.635,21,0.839,22,1.71,23,1.108,24,1.108,25,1.108,26,1.108,27,1.517,28,1.108,29,1.108,30,1.517,31,1.517,32,0.06,33,0.06]],["title/dependencies.html",[34,1.319,35,1.394]],["body/dependencies.html",[13,0.103,32,0.08,33,0.08,35,1.635,36,2.287,37,2.287,38,2.287,39,2.287,40,2.287,41,2.287,42,2.287,43,2.287,44,2.392,45,2.287,46,2.287,47,2.287,48,2.287]],["title/miscellaneous/functions.html",[49,0.41,50,1.841]],["body/miscellaneous/functions.html",[3,1.309,6,0.909,7,1.429,8,0.992,9,1.305,11,1.2,13,0.091,16,0.909,17,0.909,18,1.2,21,0.566,22,0.566,23,1.2,24,1.504,25,1.2,26,1.2,32,0.044,33,0.044,49,0.232,50,0.747,51,0.43,52,1.2,53,1.723,54,1.023,55,2.202,56,1.023,57,1.526,58,2.582,59,2.272,60,2.582,61,1.723,62,2.757,63,1.023,64,1.023,65,1.023,66,1.023,67,1.643,68,2.331,69,1.2,70,1.023,71,2.357,72,2.757,73,1.023,74,1.023,75,1.023,76,1.023,77,1.023,78,1.023,79,1.023,80,1.023,81,1.023,82,1.023,83,1.023,84,1.023,85,1.023,86,1.023,87,1.023,88,1.023]],["title/index.html",[51,0.76,89,1.805,90,1.805]],["body/index.html",[1,1.108,13,0.071,29,1.108,32,0.06,33,0.06,35,0.839,59,1.108,91,2.225,92,1.517,93,1.517,94,1.517,95,1.517,96,1.517,97,1.517,98,1.517,99,1.517,100,1.517,101,1.517,102,1.517,103,1.517,104,2.225,105,1.517,106,1.517,107,1.517,108,1.517,109,1.517,110,2.902,111,1.517,112,1.517,113,1.517,114,1.517,115,1.517,116,1.517,117,1.517,118,2.225,119,2.225,120,1.517,121,1.517,122,1.517,123,1.517,124,1.517,125,1.517,126,1.517,127,2.225,128,1.517,129,1.517,130,1.517,131,1.517,132,1.517,133,1.517,134,1.517,135,1.517,136,1.517,137,1.517,138,1.517,139,1.517,140,1.517,141,1.517,142,1.517,143,1.517,144,1.517,145,1.517,146,1.517,147,1.517,148,1.517,149,1.517,150,1.517,151,2.225,152,1.517,153,1.517]],["title/modules.html",[154,2.05]],["body/modules.html",[13,0.093,32,0.093,33,0.093,154,2.144]],["title/overview.html",[155,2.05]],["body/overview.html",[13,0.093,32,0.093,33,0.093,155,2.144]],["title/properties.html",[34,1.319,156,1.841]],["body/properties.html",[13,0.103,32,0.076,33,0.076,44,1.552,57,1.175,61,1.552,69,1.552,156,1.552,157,2.124,158,2.124,159,2.124,160,2.124,161,2.124,162,2.124,163,2.124,164,2.124,165,2.124,166,2.124,167,2.124,168,2.124,169,2.124,170,2.124,171,2.124,172,2.124,173,2.124,174,2.124,175,2.124]],["title/miscellaneous/typealiases.html",[49,0.41,176,2.52]],["body/miscellaneous/typealiases.html",[3,1.341,6,1.577,7,1.763,8,1.425,9,1.874,13,0.077,16,1.577,17,1.577,21,1.577,32,0.077,33,0.077,49,0.491,51,0.91,52,2.082,57,1.197,177,2.163,178,2.849]],["title/miscellaneous/variables.html",[49,0.41,179,1.841]],["body/miscellaneous/variables.html",[3,1.065,8,1.065,13,0.097,22,1.4,28,2.302,32,0.085,33,0.085,49,0.574,51,1.065,53,1.849,55,1.849,68,1.849,179,1.849,180,2.53]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":19,"title":{},"body":{"coverage.html":{}}}],["0.3.20",{"_index":48,"title":{},"body":{"dependencies.html":{}}}],["0.5.15",{"_index":37,"title":{},"body":{"dependencies.html":{}}}],["0.6.2",{"_index":44,"title":{},"body":{"dependencies.html":{},"properties.html":{}}}],["0/1",{"_index":20,"title":{},"body":{"coverage.html":{}}}],["1/1",{"_index":14,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":12,"title":{},"body":{"coverage.html":{}}}],["11.0.0",{"_index":42,"title":{},"body":{"dependencies.html":{}}}],["11.0.11",{"_index":40,"title":{},"body":{"dependencies.html":{}}}],["add",{"_index":97,"title":{},"body":{"index.html":{}}}],["alias",{"_index":15,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":177,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["author",{"_index":173,"title":{},"body":{"properties.html":{}}}],["based",{"_index":70,"title":{},"body":{"miscellaneous/functions.html":{}}}],["brightline",{"_index":175,"title":{},"body":{"properties.html":{}}}],["bug",{"_index":130,"title":{},"body":{"index.html":{}}}],["bugs",{"_index":167,"title":{},"body":{"properties.html":{}}}],["class",{"_index":72,"title":{},"body":{"miscellaneous/functions.html":{}}}],["common",{"_index":158,"title":{},"body":{"properties.html":{}}}],["commonproviders",{"_index":93,"title":{},"body":{"index.html":{}}}],["compatibility",{"_index":133,"title":{},"body":{"index.html":{}}}],["configured",{"_index":88,"title":{},"body":{"miscellaneous/functions.html":{}}}],["consider",{"_index":113,"title":{},"body":{"index.html":{}}}],["constructor",{"_index":75,"title":{},"body":{"miscellaneous/functions.html":{}}}],["contact",{"_index":150,"title":{},"body":{"index.html":{}}}],["contributions",{"_index":117,"title":{},"body":{"index.html":{}}}],["controller",{"_index":87,"title":{},"body":{"miscellaneous/functions.html":{}}}],["coverage",{"_index":0,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":56,"title":{},"body":{"miscellaneous/functions.html":{}}}],["creategroupvalueprovider",{"_index":11,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["creategroupvalueprovider(group",{"_index":54,"title":{},"body":{"miscellaneous/functions.html":{}}}],["creates",{"_index":82,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createsinglevalueprovider",{"_index":18,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createsinglevalueprovider(name",{"_index":64,"title":{},"body":{"miscellaneous/functions.html":{}}}],["customized",{"_index":84,"title":{},"body":{"miscellaneous/functions.html":{}}}],["date",{"_index":122,"title":{},"body":{"index.html":{}}}],["decorator",{"_index":78,"title":{},"body":{"miscellaneous/functions.html":{}}}],["default",{"_index":180,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dependencies",{"_index":35,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["description",{"_index":61,"title":{},"body":{"miscellaneous/functions.html":{},"properties.html":{}}}],["developer",{"_index":151,"title":{},"body":{"index.html":{}}}],["development",{"_index":116,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["effort",{"_index":108,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":119,"title":{},"body":{"index.html":{}}}],["even",{"_index":138,"title":{},"body":{"index.html":{}}}],["example",{"_index":95,"title":{},"body":{"index.html":{}}}],["features",{"_index":136,"title":{},"body":{"index.html":{}}}],["file",{"_index":2,"title":{},"body":{"coverage.html":{}}}],["find",{"_index":109,"title":{},"body":{"index.html":{}}}],["fixes",{"_index":131,"title":{},"body":{"index.html":{}}}],["function",{"_index":10,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":50,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funding",{"_index":127,"title":{},"body":{"index.html":{}}}],["general",{"_index":144,"title":{},"body":{"index.html":{}}}],["generates",{"_index":66,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getloggertokenof",{"_index":23,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getloggertokenof(targetname",{"_index":65,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getting",{"_index":89,"title":{"index.html":{}},"body":{}}],["go",{"_index":128,"title":{},"body":{"index.html":{}}}],["group",{"_index":7,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["groupvalueproviderresult",{"_index":16,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["help",{"_index":118,"title":{},"body":{"index.html":{}}}],["homepage",{"_index":165,"title":{},"body":{"properties.html":{}}}],["https://github.com/rbrightline/puq/tree/main",{"_index":172,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io",{"_index":168,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io/puq/provider",{"_index":166,"title":{},"body":{"properties.html":{}}}],["identifier",{"_index":4,"title":{},"body":{"coverage.html":{}}}],["implementation",{"_index":85,"title":{},"body":{"miscellaneous/functions.html":{}}}],["improvements",{"_index":141,"title":{},"body":{"index.html":{}}}],["index",{"_index":51,"title":{"index.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":74,"title":{},"body":{"miscellaneous/functions.html":{}}}],["injectlogger",{"_index":24,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["injectors",{"_index":160,"title":{},"body":{"properties.html":{}}}],["injectro",{"_index":164,"title":{},"body":{"properties.html":{}}}],["install",{"_index":94,"title":{},"body":{"index.html":{}}}],["instant",{"_index":126,"title":{},"body":{"index.html":{}}}],["it's",{"_index":101,"title":{},"body":{"index.html":{}}}],["keep",{"_index":146,"title":{},"body":{"index.html":{}}}],["keywords",{"_index":162,"title":{},"body":{"properties.html":{}}}],["latest",{"_index":134,"title":{},"body":{"index.html":{}}}],["library",{"_index":110,"title":{},"body":{"index.html":{}}}],["license",{"_index":169,"title":{},"body":{"properties.html":{}}}],["link",{"_index":63,"title":{},"body":{"miscellaneous/functions.html":{}}}],["literal",{"_index":178,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["logger",{"_index":68,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["logger_token_suffix",{"_index":28,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["maintained",{"_index":125,"title":{},"body":{"index.html":{}}}],["maintaining",{"_index":105,"title":{},"body":{"index.html":{}}}],["maintenance",{"_index":145,"title":{},"body":{"index.html":{}}}],["make",{"_index":137,"title":{},"body":{"index.html":{}}}],["matching",{"_index":33,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":49,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":170,"title":{},"body":{"properties.html":{}}}],["modules",{"_index":154,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":139,"title":{},"body":{"index.html":{}}}],["name",{"_index":59,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["nestjs/common",{"_index":39,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":41,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":29,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["ongoing",{"_index":115,"title":{},"body":{"index.html":{}}}],["open",{"_index":102,"title":{},"body":{"index.html":{}}}],["optional",{"_index":60,"title":{},"body":{"miscellaneous/functions.html":{}}}],["out",{"_index":143,"title":{},"body":{"index.html":{}}}],["overview",{"_index":155,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":34,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameter",{"_index":77,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parameterdecorator",{"_index":76,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parameters",{"_index":58,"title":{},"body":{"miscellaneous/functions.html":{}}}],["peer",{"_index":38,"title":{},"body":{"dependencies.html":{}}}],["please",{"_index":112,"title":{},"body":{"index.html":{}}}],["pnpm",{"_index":96,"title":{},"body":{"index.html":{}}}],["powerful",{"_index":140,"title":{},"body":{"index.html":{}}}],["project",{"_index":104,"title":{},"body":{"index.html":{}}}],["properties",{"_index":156,"title":{"properties.html":{}},"body":{"properties.html":{}}}],["provideloggerclass",{"_index":25,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["provideloggerclass(logger",{"_index":79,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provideloggerfor",{"_index":26,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["provideloggerfor(target",{"_index":81,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provider",{"_index":57,"title":{},"body":{"miscellaneous/functions.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["provider.ts",{"_index":9,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["providers",{"_index":159,"title":{},"body":{"properties.html":{}}}],["provides",{"_index":80,"title":{},"body":{"miscellaneous/functions.html":{}}}],["puq",{"_index":163,"title":{},"body":{"properties.html":{}}}],["puq/debug",{"_index":43,"title":{},"body":{"dependencies.html":{}}}],["puq/is",{"_index":45,"title":{},"body":{"dependencies.html":{}}}],["puq/orm",{"_index":46,"title":{},"body":{"dependencies.html":{}}}],["puq/provider",{"_index":91,"title":{},"body":{"index.html":{}}}],["puq/providerfunding",{"_index":98,"title":{},"body":{"index.html":{}}}],["repository",{"_index":171,"title":{},"body":{"properties.html":{}}}],["results",{"_index":32,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":62,"title":{},"body":{"miscellaneous/functions.html":{}}}],["robert",{"_index":174,"title":{},"body":{"properties.html":{}}}],["robert.brightline@gmail.com",{"_index":152,"title":{},"body":{"index.html":{}}}],["running",{"_index":147,"title":{},"body":{"index.html":{}}}],["secure",{"_index":123,"title":{},"body":{"index.html":{}}}],["securely",{"_index":149,"title":{},"body":{"index.html":{}}}],["service",{"_index":86,"title":{},"body":{"miscellaneous/functions.html":{}}}],["single",{"_index":17,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["singlevalueproviderresult",{"_index":21,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["smoothly",{"_index":148,"title":{},"body":{"index.html":{}}}],["source",{"_index":103,"title":{},"body":{"index.html":{}}}],["specific",{"_index":83,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../create",{"_index":52,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../logger.provider.ts",{"_index":53,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/lib/common/create",{"_index":6,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/log/logger.provider.ts",{"_index":22,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":90,"title":{"index.html":{}},"body":{}}],["statements",{"_index":5,"title":{},"body":{"coverage.html":{}}}],["stays",{"_index":120,"title":{},"body":{"index.html":{}}}],["string",{"_index":55,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["summary",{"_index":92,"title":{},"body":{"index.html":{}}}],["support",{"_index":153,"title":{},"body":{"index.html":{}}}],["supporting",{"_index":114,"title":{},"body":{"index.html":{}}}],["swc/helpers",{"_index":36,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":31,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":30,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":106,"title":{},"body":{"index.html":{}}}],["target",{"_index":71,"title":{},"body":{"miscellaneous/functions.html":{}}}],["targetname",{"_index":73,"title":{},"body":{"miscellaneous/functions.html":{}}}],["thank",{"_index":99,"title":{},"body":{"index.html":{}}}],["time",{"_index":107,"title":{},"body":{"index.html":{}}}],["token",{"_index":69,"title":{},"body":{"miscellaneous/functions.html":{},"properties.html":{}}}],["tokens",{"_index":161,"title":{},"body":{"properties.html":{}}}],["toward",{"_index":129,"title":{},"body":{"index.html":{}}}],["type",{"_index":3,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":176,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeorm",{"_index":47,"title":{},"body":{"dependencies.html":{}}}],["unique",{"_index":67,"title":{},"body":{"miscellaneous/functions.html":{}}}],["up",{"_index":121,"title":{},"body":{"index.html":{}}}],["updates",{"_index":132,"title":{},"body":{"index.html":{}}}],["useful",{"_index":111,"title":{},"body":{"index.html":{}}}],["users",{"_index":142,"title":{},"body":{"index.html":{}}}],["using",{"_index":100,"title":{},"body":{"index.html":{}}}],["value",{"_index":8,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":27,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":179,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":157,"title":{},"body":{"properties.html":{}}}],["versions",{"_index":135,"title":{},"body":{"index.html":{}}}],["well",{"_index":124,"title":{},"body":{"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/lib/common/create-group-value-provider.ts\n            \n            function\n            createGroupValueProvider\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/common/create-group-value-provider.ts\n            \n            type alias\n            GroupValueProviderResult\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/common/create-single-value-provider.ts\n            \n            function\n            createSingleValueProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/common/create-single-value-provider.ts\n            \n            type alias\n            SingleValueProviderResult\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/log/logger.provider.ts\n            \n            function\n            getLoggerTokenOf\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/log/logger.provider.ts\n            \n            function\n            InjectLogger\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/log/logger.provider.ts\n            \n            function\n            provideLoggerClass\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/log/logger.provider.ts\n            \n            function\n            provideLoggerFor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/log/logger.provider.ts\n            \n            variable\n            LOGGER_TOKEN_SUFFIX\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @swc/helpers : ^0.5.15\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @nestjs/common : ^11.0.11\n        \n            @nestjs/typeorm : ^11.0.0\n        \n            @puq/debug : ^0.6.2\n        \n            @puq/is : ^0.6.2\n        \n            @puq/orm : ^0.6.2\n        \n            typeorm : ^0.3.20\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createGroupValueProvider   (src/.../create-group-value-provider.ts)\n                        \n                        \n                            createSingleValueProvider   (src/.../create-single-value-provider.ts)\n                        \n                        \n                            getLoggerTokenOf   (src/.../logger.provider.ts)\n                        \n                        \n                            InjectLogger   (src/.../logger.provider.ts)\n                        \n                        \n                            provideLoggerClass   (src/.../logger.provider.ts)\n                        \n                        \n                            provideLoggerFor   (src/.../logger.provider.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/common/create-group-value-provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createGroupValueProvider\n                        \n                    \n                \n            \n            \n                \ncreateGroupValueProvider(group: string)\n                \n            \n\n\n\n\n            \n                \n                        Create a group provider\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    group name\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         GroupValueProviderResult\n\n                        \n                            \n                                \n{@link GroupValueProviderResult}\n\n\n                            \n                \n            \n        \n    \n    src/lib/common/create-single-value-provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createSingleValueProvider\n                        \n                    \n                \n            \n            \n                \ncreateSingleValueProvider(name: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         SingleValueProviderResult\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/log/logger.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getLoggerTokenOf\n                        \n                    \n                \n            \n            \n                \ngetLoggerTokenOf(targetName: string)\n                \n            \n\n\n\n\n            \n                \n                        Generates a unique logger token based on the target class name\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                targetName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nName of the target class\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Unique logger token string\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        InjectLogger\n                        \n                    \n                \n            \n            \n                \nInjectLogger()\n                \n            \n\n\n\n\n            \n                \n                        Inject logger in constructor\n\n\n                        \n                            Returns :     ParameterDecorator\n\n                        \n                            \n                                \nParameter decorator\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        provideLoggerClass\n                        \n                    \n                \n            \n            \n                \nprovideLoggerClass(logger: Type)\n                \n            \n\n\n\n\n            \n                \n                        Provides the logger class\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                logger\n                                            \n                                                        Type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nLogger class\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Provider\n\n                        \n                            \n                                \nthe Logger provider\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        provideLoggerFor\n                        \n                    \n                \n            \n            \n                \nprovideLoggerFor(target: Type)\n                \n            \n\n\n\n\n            \n                \n                        Creates a logger provider for a specific class with customized logger implementation\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                        Type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nTarget class (service or controller)\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Provider\n\n                        \n                            \n                                Configured logger provider\n\n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n@puq/provider\nSummary\n\nCommonproviders\n\nInstall\nExample :  pnpm add @puq/providerFunding\nThank you for using @puq/provider It's an open-source project, and maintaining it takes time and effort. If you find this library useful, please consider supporting its ongoing development. Your contributions help ensure that the project stays up-to-date, secure, and well-maintained.\nInstant Funding\nYour funding will go toward\n\nBug fixes and updates to ensure compatibility with the latest versions of dependencies.\nNew features that will make the library even more powerful.\nDocumentation improvements to help users get the most out of [Your Library Name].\nGeneral maintenance to keep the library running smoothly and securely.\n\nContact to the developer: [robert.brightline@gmail.com]\nSupport the developer\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.6.2\n        \n            Description : Common providers, injectors, and tokens\n        \n            Keywords : puq, provider, injectro, token\n        \n            Homepage : https://rbrightline.github.io/puq/provider\n        \n            Bugs : https://rbrightline.github.io\n        \n            License : MIT\n        \n            Repository : https://github.com/rbrightline/puq/tree/main\n        \n            Author : Robert Brightline\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            GroupValueProviderResult   (src/.../create-group-value-provider.ts)\n                        \n                        \n                            SingleValueProviderResult   (src/.../create-single-value-provider.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/common/create-group-value-provider.ts\n    \n    \n        \n            \n                \n                    \n                    GroupValueProviderResult\n                \n            \n            \n                \n                    Group provider\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/lib/common/create-single-value-provider.ts\n    \n    \n        \n            \n                \n                    \n                    SingleValueProviderResult\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LOGGER_TOKEN_SUFFIX   (src/.../logger.provider.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/log/logger.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LOGGER_TOKEN_SUFFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Logger'\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
