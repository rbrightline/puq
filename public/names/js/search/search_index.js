var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/coverage.html",[0,1.706]],["body/coverage.html",[0,1.492,1,1.492,2,1.492,3,1.107,4,1.492,5,2.147,6,1.34,7,1.591,8,1.06,9,3.341,10,0.133,11,3.341,12,3.124,13,0.738,14,2.713,15,2.713,16,1.469,17,0.607,18,1.06,19,1.492,20,1.492,21,1.34,22,0.738,23,0.738,24,1.492,25,1.492,26,1.492,27,2.147,28,2.147,29,0.105,30,0.105]],["title/miscellaneous/functions.html",[31,0.539,32,1.086]],["body/miscellaneous/functions.html",[3,0.947,6,0.678,7,0.988,8,0.988,10,0.127,13,0.472,16,0.678,17,0.528,18,0.988,19,0.954,20,1.39,21,0.678,22,0.989,23,0.472,24,0.954,25,1.64,29,0.077,30,0.077,31,0.472,32,0.678,33,0.678,34,0.954,35,0.954,36,1.373,37,0.954,38,1.373,39,1.373,40,2.377,41,1.373,42,1.373,43,1.165,44,1.64,45,2.756,46,2.22,47,2.114,48,2.36,49,2.36,50,1.915,51,2.756,52,1.373,53,2.001,54,1.39,55,1.39,56,1.915,57,2.36,58,1.64,59,1.999,60,1.64,61,1.373,62,1.373,63,0.988,64,2.001,65,2.001,66,2.001,67,1.39,68,1.999,69,0.954,70,0.954,71,0.954,72,0.954,73,1.39,74,0.954,75,0.954,76,0.954,77,0.954,78,0.954,79,1.373,80,0.954,81,1.373,82,0.954,83,1.373,84,1.373,85,2.001,86,1.373,87,1.373,88,2.36,89,2.36,90,2.001,91,2.36,92,1.373,93,2.001,94,2.001,95,0.954,96,1.373,97,1.373,98,2.36,99,1.373,100,1.39,101,2.001,102,2.001,103,1.373,104,1.373,105,1.373,106,1.373,107,1.373,108,1.373,109,1.373,110,1.373,111,1.373,112,1.373,113,1.373,114,1.373,115,1.373,116,0.954,117,1.373,118,1.373,119,1.373,120,1.373,121,1.373]],["title/index.html",[33,0.774,122,1.567,123,1.567]],["body/index.html",[1,0.484,2,1.587,3,0.521,4,0.814,7,0.979,8,0.749,10,0.139,13,0.403,17,0.444,22,0.886,23,0.239,26,0.484,29,0.045,30,0.045,32,0.579,40,2.336,43,0.579,46,0.484,47,0.484,50,0.484,54,1.493,55,0.484,56,1.493,58,1.054,59,1.378,63,0.344,67,0.814,68,1.493,69,0.484,70,0.484,71,0.484,72,0.814,73,0.814,74,0.484,75,0.484,76,0.484,77,0.814,78,0.484,80,0.484,82,0.484,95,0.484,100,1.054,116,1.666,124,1.172,125,0.697,126,0.697,127,2.148,128,0.697,129,0.697,130,0.814,131,0.484,132,1.516,133,0.697,134,1.516,135,2.148,136,1.516,137,1.516,138,2.578,139,0.814,140,1.172,141,0.697,142,1.172,143,1.172,144,1.172,145,1.172,146,1.493,147,1.172,148,1.172,149,0.697,150,1.516,151,1.172,152,1.516,153,2.148,154,2.148,155,1.172,156,0.697,157,1.516,158,0.697,159,0.697,160,3.291,161,0.697,162,0.697,163,0.697,164,0.697,165,0.697,166,0.697,167,1.172,168,1.516,169,0.697,170,0.697,171,1.516,172,0.697,173,0.697,174,0.697,175,0.697,176,0.697,177,0.697,178,0.697,179,0.697,180,0.697,181,0.697,182,0.697,183,0.697,184,0.697,185,0.697,186,0.697,187,0.697,188,0.697,189,0.697,190,0.697,191,0.697,192,0.697,193,0.697,194,0.697,195,0.697,196,1.516,197,0.697,198,0.697,199,1.516,200,0.697,201,1.172,202,0.697,203,1.172,204,0.697,205,0.697,206,0.697,207,0.697,208,0.697,209,0.697,210,0.697,211,0.697,212,0.697,213,0.697,214,0.697,215,1.172,216,2.148,217,1.778,218,1.983,219,1.172,220,0.697,221,0.697,222,1.172,223,0.697,224,2.65,225,0.697,226,1.172,227,1.172,228,1.172,229,0.697,230,1.172,231,1.516,232,1.778,233,2.495,234,1.172,235,0.697,236,1.172,237,1.516,238,0.697,239,1.172,240,0.697,241,0.697,242,0.697,243,1.172,244,0.697,245,1.172,246,0.697,247,0.697,248,0.697,249,0.697,250,0.697,251,0.697,252,1.516,253,1.172,254,0.697,255,1.172,256,1.172,257,0.697,258,1.172,259,0.697,260,1.778,261,0.697,262,1.172,263,0.697,264,0.697,265,0.697,266,1.516,267,0.697,268,0.697,269,0.697,270,0.697,271,0.697,272,0.697,273,0.697,274,0.697,275,0.697,276,0.697,277,1.172,278,0.697,279,0.697,280,0.697,281,0.697,282,0.697,283,0.697,284,0.697,285,0.697,286,0.697,287,0.697,288,0.697,289,0.697,290,1.172,291,0.697,292,0.697,293,0.697,294,0.697,295,0.697,296,0.697,297,0.697,298,1.172,299,0.697,300,0.697,301,0.697,302,0.697,303,0.697,304,0.697,305,0.697,306,0.697,307,0.697,308,0.697,309,0.697,310,0.697,311,0.697,312,0.697,313,0.697,314,0.697,315,0.697,316,0.697,317,0.697,318,0.697,319,0.697,320,1.172,321,0.697,322,0.697]],["title/modules.html",[323,1.706]],["body/modules.html",[10,0.121,29,0.121,30,0.121,323,1.91]],["title/overview.html",[324,1.706]],["body/overview.html",[10,0.121,29,0.121,30,0.121,324,1.91]],["title/properties.html",[325,1.567,326,1.528]],["body/properties.html",[10,0.135,17,0.663,29,0.114,30,0.114,60,1.72,326,1.72,327,2.476,328,2.476,329,2.476,330,2.476,331,2.476,332,2.476,333,2.476,334,2.476,335,2.476,336,2.476,337,2.476,338,2.476,339,2.476,340,2.476,341,2.476]],["title/miscellaneous/typealiases.html",[31,0.539,342,2.199]],["body/miscellaneous/typealiases.html",[3,1.14,6,1.173,10,0.111,13,0.993,16,1.173,17,0.646,18,1.426,21,1.173,22,0.817,23,0.993,29,0.111,30,0.111,31,0.817,33,1.173,34,1.651,35,2.007,37,1.651,43,1.173,44,1.651,63,1.173,130,1.651,131,1.651,139,1.651,146,1.651,343,2.376,344,3.237,345,2.888,346,2.376]]],"invertedIndex":[["",{"_index":10,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":14,"title":{},"body":{"coverage.html":{}}}],["0.1.0",{"_index":328,"title":{},"body":{"properties.html":{}}}],["0/1",{"_index":15,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":233,"title":{},"body":{"index.html":{}}}],["1/1",{"_index":11,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":9,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":252,"title":{},"body":{"index.html":{}}}],["add",{"_index":258,"title":{},"body":{"index.html":{}}}],["adding",{"_index":87,"title":{},"body":{"miscellaneous/functions.html":{}}}],["alias",{"_index":12,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":343,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["api",{"_index":44,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["applied",{"_index":105,"title":{},"body":{"miscellaneous/functions.html":{}}}],["auth",{"_index":42,"title":{},"body":{"miscellaneous/functions.html":{}}}],["authentication",{"_index":132,"title":{},"body":{"index.html":{}}}],["author",{"_index":339,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":144,"title":{},"body":{"index.html":{}}}],["authpaths",{"_index":13,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["auths",{"_index":8,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["auths('api",{"_index":195,"title":{},"body":{"index.html":{}}}],["auths(prefix",{"_index":39,"title":{},"body":{"miscellaneous/functions.html":{}}}],["based",{"_index":142,"title":{},"body":{"index.html":{}}}],["before",{"_index":89,"title":{},"body":{"miscellaneous/functions.html":{}}}],["between",{"_index":152,"title":{},"body":{"index.html":{}}}],["both",{"_index":211,"title":{},"body":{"index.html":{}}}],["brightline",{"_index":341,"title":{},"body":{"properties.html":{}}}],["bug",{"_index":301,"title":{},"body":{"index.html":{}}}],["bugs",{"_index":333,"title":{},"body":{"properties.html":{}}}],["camelcase",{"_index":67,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["camelcaseexample",{"_index":173,"title":{},"body":{"index.html":{}}}],["capitalized",{"_index":111,"title":{},"body":{"miscellaneous/functions.html":{}}}],["capitalizing",{"_index":92,"title":{},"body":{"miscellaneous/functions.html":{}}}],["case",{"_index":56,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["categories",{"_index":256,"title":{},"body":{"index.html":{}}}],["categories\"install",{"_index":269,"title":{},"body":{"index.html":{}}}],["category",{"_index":251,"title":{},"body":{"index.html":{}}}],["cateogry",{"_index":247,"title":{},"body":{"index.html":{}}}],["checks",{"_index":106,"title":{},"body":{"miscellaneous/functions.html":{}}}],["common",{"_index":143,"title":{},"body":{"index.html":{}}}],["commonly",{"_index":145,"title":{},"body":{"index.html":{}}}],["compatibility",{"_index":304,"title":{},"body":{"index.html":{}}}],["consider",{"_index":285,"title":{},"body":{"index.html":{}}}],["consistent",{"_index":158,"title":{},"body":{"index.html":{}}}],["console.log(plurize('category",{"_index":268,"title":{},"body":{"index.html":{}}}],["console.log(plurize('user",{"_index":265,"title":{},"body":{"index.html":{}}}],["console.log(plurize('users",{"_index":267,"title":{},"body":{"index.html":{}}}],["const",{"_index":168,"title":{},"body":{"index.html":{}}}],["constant_case",{"_index":70,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["constant_case_example",{"_index":178,"title":{},"body":{"index.html":{}}}],["constcase",{"_index":69,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["contact",{"_index":319,"title":{},"body":{"index.html":{}}}],["containing",{"_index":66,"title":{},"body":{"miscellaneous/functions.html":{}}}],["contains",{"_index":107,"title":{},"body":{"miscellaneous/functions.html":{}}}],["contributions",{"_index":289,"title":{},"body":{"index.html":{}}}],["controllername",{"_index":78,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["conventions",{"_index":131,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["converts",{"_index":151,"title":{},"body":{"index.html":{}}}],["count",{"_index":138,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":0,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":219,"title":{},"body":{"index.html":{}}}],["createdtoname",{"_index":185,"title":{},"body":{"index.html":{}}}],["createresourcenamedto",{"_index":184,"title":{},"body":{"index.html":{}}}],["crud",{"_index":134,"title":{},"body":{"index.html":{}}}],["custom",{"_index":96,"title":{},"body":{"miscellaneous/functions.html":{}}}],["database",{"_index":147,"title":{},"body":{"index.html":{}}}],["date",{"_index":293,"title":{},"body":{"index.html":{}}}],["decrement",{"_index":237,"title":{},"body":{"index.html":{}}}],["default",{"_index":48,"title":{},"body":{"miscellaneous/functions.html":{}}}],["defaults",{"_index":117,"title":{},"body":{"miscellaneous/functions.html":{}}}],["delete",{"_index":243,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":306,"title":{},"body":{"index.html":{}}}],["description",{"_index":60,"title":{},"body":{"miscellaneous/functions.html":{},"properties.html":{}}}],["developer",{"_index":320,"title":{},"body":{"index.html":{}}}],["development",{"_index":288,"title":{},"body":{"index.html":{}}}],["different",{"_index":63,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["documentation",{"_index":1,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dollar",{"_index":109,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dot",{"_index":175,"title":{},"body":{"index.html":{}}}],["dot.case.ts",{"_index":176,"title":{},"body":{"index.html":{}}}],["dotcase",{"_index":177,"title":{},"body":{"index.html":{}}}],["each",{"_index":115,"title":{},"body":{"miscellaneous/functions.html":{}}}],["effort",{"_index":281,"title":{},"body":{"index.html":{}}}],["empty",{"_index":118,"title":{},"body":{"miscellaneous/functions.html":{}}}],["endpoints",{"_index":139,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["english",{"_index":120,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ensure",{"_index":157,"title":{},"body":{"index.html":{}}}],["entity",{"_index":148,"title":{},"body":{"index.html":{}}}],["entitypaths",{"_index":213,"title":{},"body":{"index.html":{}}}],["even",{"_index":308,"title":{},"body":{"index.html":{}}}],["example",{"_index":160,"title":{},"body":{"index.html":{}}}],["export",{"_index":171,"title":{},"body":{"index.html":{}}}],["features",{"_index":140,"title":{},"body":{"index.html":{}}}],["file",{"_index":2,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["find",{"_index":282,"title":{},"body":{"index.html":{}}}],["first",{"_index":93,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fixes",{"_index":302,"title":{},"body":{"index.html":{}}}],["forgot",{"_index":202,"title":{},"body":{"index.html":{}}}],["forgotpassword",{"_index":204,"title":{},"body":{"index.html":{}}}],["form",{"_index":215,"title":{},"body":{"index.html":{}}}],["format",{"_index":68,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["formats",{"_index":57,"title":{},"body":{"miscellaneous/functions.html":{}}}],["forms",{"_index":155,"title":{},"body":{"index.html":{}}}],["function",{"_index":7,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["functions",{"_index":32,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["funding",{"_index":298,"title":{},"body":{"index.html":{}}}],["geneate",{"_index":41,"title":{},"body":{"miscellaneous/functions.html":{}}}],["general",{"_index":313,"title":{},"body":{"index.html":{}}}],["generate",{"_index":113,"title":{},"body":{"miscellaneous/functions.html":{}}}],["generates",{"_index":54,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["generating",{"_index":129,"title":{},"body":{"index.html":{}}}],["getting",{"_index":122,"title":{"index.html":{}},"body":{}}],["given",{"_index":58,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["go",{"_index":299,"title":{},"body":{"index.html":{}}}],["haspermission",{"_index":210,"title":{},"body":{"index.html":{}}}],["hassession",{"_index":208,"title":{},"body":{"index.html":{}}}],["help",{"_index":290,"title":{},"body":{"index.html":{}}}],["homepage",{"_index":331,"title":{},"body":{"properties.html":{}}}],["https://github.com/rbrightline/puq/tree/main",{"_index":338,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io",{"_index":334,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io/puq/names",{"_index":332,"title":{},"body":{"properties.html":{}}}],["id",{"_index":230,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":4,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["image",{"_index":262,"title":{},"body":{"index.html":{}}}],["img",{"_index":264,"title":{},"body":{"index.html":{}}}],["import",{"_index":165,"title":{},"body":{"index.html":{}}}],["importing",{"_index":164,"title":{},"body":{"index.html":{}}}],["improvements",{"_index":311,"title":{},"body":{"index.html":{}}}],["included",{"_index":212,"title":{},"body":{"index.html":{}}}],["including",{"_index":137,"title":{},"body":{"index.html":{}}}],["increment",{"_index":231,"title":{},"body":{"index.html":{}}}],["index",{"_index":33,"title":{"index.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["input",{"_index":98,"title":{},"body":{"miscellaneous/functions.html":{}}}],["install",{"_index":162,"title":{},"body":{"index.html":{}}}],["installation",{"_index":159,"title":{},"body":{"index.html":{}}}],["instant",{"_index":297,"title":{},"body":{"index.html":{}}}],["internally",{"_index":156,"title":{},"body":{"index.html":{}}}],["it's",{"_index":274,"title":{},"body":{"index.html":{}}}],["items",{"_index":242,"title":{},"body":{"index.html":{}}}],["kebab",{"_index":72,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["kebabcase",{"_index":71,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["keep",{"_index":315,"title":{},"body":{"index.html":{}}}],["key",{"_index":232,"title":{},"body":{"index.html":{}}}],["keywords",{"_index":329,"title":{},"body":{"properties.html":{}}}],["latest",{"_index":305,"title":{},"body":{"index.html":{}}}],["letter",{"_index":94,"title":{},"body":{"miscellaneous/functions.html":{}}}],["letters",{"_index":91,"title":{},"body":{"miscellaneous/functions.html":{}}}],["library",{"_index":127,"title":{},"body":{"index.html":{}}}],["license",{"_index":335,"title":{},"body":{"properties.html":{}}}],["literal",{"_index":344,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["login",{"_index":196,"title":{},"body":{"index.html":{}}}],["loginwithotp",{"_index":198,"title":{},"body":{"index.html":{}}}],["logout",{"_index":199,"title":{},"body":{"index.html":{}}}],["logoutall",{"_index":200,"title":{},"body":{"index.html":{}}}],["maintained",{"_index":296,"title":{},"body":{"index.html":{}}}],["maintaining",{"_index":278,"title":{},"body":{"index.html":{}}}],["maintenance",{"_index":314,"title":{},"body":{"index.html":{}}}],["make",{"_index":307,"title":{},"body":{"index.html":{}}}],["many",{"_index":220,"title":{},"body":{"index.html":{}}}],["matching",{"_index":30,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["metadata",{"_index":225,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":31,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["mit",{"_index":336,"title":{},"body":{"properties.html":{}}}],["modelname",{"_index":191,"title":{},"body":{"index.html":{}}}],["modulename",{"_index":82,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["modules",{"_index":323,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":309,"title":{},"body":{"index.html":{}}}],["mylibraryusage",{"_index":163,"title":{},"body":{"index.html":{}}}],["name",{"_index":46,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["namecontroller",{"_index":79,"title":{},"body":{"miscellaneous/functions.html":{}}}],["namemodule",{"_index":83,"title":{},"body":{"miscellaneous/functions.html":{}}}],["names",{"_index":17,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["names('user",{"_index":170,"title":{},"body":{"index.html":{}}}],["names(resourcename",{"_index":52,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nameservice",{"_index":81,"title":{},"body":{"miscellaneous/functions.html":{}}}],["namesoption",{"_index":18,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["naming",{"_index":130,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["new",{"_index":26,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["normalization",{"_index":103,"title":{},"body":{"miscellaneous/functions.html":{}}}],["normalize",{"_index":20,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["normalize(value",{"_index":84,"title":{},"body":{"miscellaneous/functions.html":{}}}],["normalized",{"_index":102,"title":{},"body":{"miscellaneous/functions.html":{}}}],["normalizes",{"_index":86,"title":{},"body":{"miscellaneous/functions.html":{}}}],["npm",{"_index":161,"title":{},"body":{"index.html":{}}}],["null",{"_index":248,"title":{},"body":{"index.html":{}}}],["object",{"_index":65,"title":{},"body":{"miscellaneous/functions.html":{}}}],["one",{"_index":255,"title":{},"body":{"index.html":{}}}],["ongoing",{"_index":287,"title":{},"body":{"index.html":{}}}],["open",{"_index":275,"title":{},"body":{"index.html":{}}}],["operations",{"_index":136,"title":{},"body":{"index.html":{}}}],["optional",{"_index":47,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["optionally",{"_index":95,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["options",{"_index":53,"title":{},"body":{"miscellaneous/functions.html":{}}}],["optionsname",{"_index":193,"title":{},"body":{"index.html":{}}}],["otp",{"_index":197,"title":{},"body":{"index.html":{}}}],["out",{"_index":312,"title":{},"body":{"index.html":{}}}],["output",{"_index":266,"title":{},"body":{"index.html":{}}}],["overview",{"_index":324,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":325,"title":{"properties.html":{}},"body":{}}],["parameter",{"_index":226,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":45,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pascalcase",{"_index":73,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["pascalcaseexample",{"_index":172,"title":{},"body":{"index.html":{}}}],["password",{"_index":203,"title":{},"body":{"index.html":{}}}],["patch",{"_index":234,"title":{},"body":{"index.html":{}}}],["path",{"_index":116,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["paths",{"_index":22,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["paths('user",{"_index":214,"title":{},"body":{"index.html":{}}}],["paths(name",{"_index":112,"title":{},"body":{"miscellaneous/functions.html":{}}}],["permission",{"_index":209,"title":{},"body":{"index.html":{}}}],["please",{"_index":284,"title":{},"body":{"index.html":{}}}],["plural",{"_index":154,"title":{},"body":{"index.html":{}}}],["pluralize",{"_index":25,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["pluralize(word",{"_index":119,"title":{},"body":{"miscellaneous/functions.html":{}}}],["plurize",{"_index":150,"title":{},"body":{"index.html":{}}}],["pnpm",{"_index":270,"title":{},"body":{"index.html":{}}}],["post",{"_index":218,"title":{},"body":{"index.html":{}}}],["powerful",{"_index":310,"title":{},"body":{"index.html":{}}}],["pre",{"_index":97,"title":{},"body":{"miscellaneous/functions.html":{}}}],["prefix",{"_index":50,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["prefixed",{"_index":194,"title":{},"body":{"index.html":{}}}],["preinputvalidator",{"_index":85,"title":{},"body":{"miscellaneous/functions.html":{}}}],["prepend",{"_index":114,"title":{},"body":{"miscellaneous/functions.html":{}}}],["project",{"_index":277,"title":{},"body":{"index.html":{}}}],["properties",{"_index":326,"title":{"properties.html":{}},"body":{"properties.html":{}}}],["property",{"_index":236,"title":{},"body":{"index.html":{}}}],["provided",{"_index":100,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["provides",{"_index":128,"title":{},"body":{"index.html":{}}}],["puq",{"_index":330,"title":{},"body":{"properties.html":{}}}],["puq/names",{"_index":124,"title":{},"body":{"index.html":{}}}],["puq/names';names",{"_index":166,"title":{},"body":{"index.html":{}}}],["puq/namesfunding",{"_index":271,"title":{},"body":{"index.html":{}}}],["put",{"_index":257,"title":{},"body":{"index.html":{}}}],["query",{"_index":217,"title":{},"body":{"index.html":{}}}],["querydtoname",{"_index":189,"title":{},"body":{"index.html":{}}}],["queryresourcenamedto",{"_index":188,"title":{},"body":{"index.html":{}}}],["related",{"_index":249,"title":{},"body":{"index.html":{}}}],["relation",{"_index":135,"title":{},"body":{"index.html":{}}}],["relationid",{"_index":259,"title":{},"body":{"index.html":{}}}],["relations",{"_index":149,"title":{},"body":{"index.html":{}}}],["remove",{"_index":254,"title":{},"body":{"index.html":{}}}],["repository",{"_index":337,"title":{},"body":{"properties.html":{}}}],["represent",{"_index":222,"title":{},"body":{"index.html":{}}}],["representing",{"_index":227,"title":{},"body":{"index.html":{}}}],["represents",{"_index":345,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["reset",{"_index":205,"title":{},"body":{"index.html":{}}}],["resetpassword",{"_index":206,"title":{},"body":{"index.html":{}}}],["resource",{"_index":59,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["resourcename",{"_index":61,"title":{},"body":{"miscellaneous/functions.html":{}}}],["resourcenamecontroller",{"_index":181,"title":{},"body":{"index.html":{}}}],["resourcenamemodel",{"_index":190,"title":{},"body":{"index.html":{}}}],["resourcenamemodule",{"_index":183,"title":{},"body":{"index.html":{}}}],["resourcenameoptions",{"_index":192,"title":{},"body":{"index.html":{}}}],["resourcenameservice",{"_index":182,"title":{},"body":{"index.html":{}}}],["resources",{"_index":239,"title":{},"body":{"index.html":{}}}],["rest",{"_index":43,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["restapipaths",{"_index":23,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["restful",{"_index":133,"title":{},"body":{"index.html":{}}}],["result",{"_index":169,"title":{},"body":{"index.html":{}}}],["results",{"_index":29,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["returns",{"_index":51,"title":{},"body":{"miscellaneous/functions.html":{}}}],["robert",{"_index":340,"title":{},"body":{"properties.html":{}}}],["robert.brightline@gmail.com",{"_index":321,"title":{},"body":{"index.html":{}}}],["running",{"_index":316,"title":{},"body":{"index.html":{}}}],["secure",{"_index":294,"title":{},"body":{"index.html":{}}}],["securely",{"_index":318,"title":{},"body":{"index.html":{}}}],["sentence",{"_index":179,"title":{},"body":{"index.html":{}}}],["sentencecase",{"_index":180,"title":{},"body":{"index.html":{}}}],["servicename",{"_index":80,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["session",{"_index":207,"title":{},"body":{"index.html":{}}}],["set",{"_index":245,"title":{},"body":{"index.html":{}}}],["signs",{"_index":110,"title":{},"body":{"miscellaneous/functions.html":{}}}],["signup",{"_index":201,"title":{},"body":{"index.html":{}}}],["single",{"_index":223,"title":{},"body":{"index.html":{}}}],["singular",{"_index":153,"title":{},"body":{"index.html":{}}}],["smoothly",{"_index":317,"title":{},"body":{"index.html":{}}}],["snake_case",{"_index":75,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["snake_case_example",{"_index":174,"title":{},"body":{"index.html":{}}}],["snakecase",{"_index":74,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["source",{"_index":276,"title":{},"body":{"index.html":{}}}],["spaces",{"_index":88,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../auths.ts",{"_index":34,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../names.ts",{"_index":35,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../normalize.ts",{"_index":36,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../paths.ts",{"_index":37,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../pluralize.ts",{"_index":38,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/lib/auths.ts",{"_index":6,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/names.ts",{"_index":16,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/normalize.ts",{"_index":19,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/paths.ts",{"_index":21,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/pluralize.ts",{"_index":24,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["started",{"_index":123,"title":{"index.html":{}},"body":{}}],["statements",{"_index":5,"title":{},"body":{"coverage.html":{}}}],["stays",{"_index":291,"title":{},"body":{"index.html":{}}}],["string",{"_index":40,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["strings",{"_index":346,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["summary",{"_index":125,"title":{},"body":{"index.html":{}}}],["support",{"_index":322,"title":{},"body":{"index.html":{}}}],["supporting",{"_index":286,"title":{},"body":{"index.html":{}}}],["table",{"_index":28,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":27,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":279,"title":{},"body":{"index.html":{}}}],["thank",{"_index":272,"title":{},"body":{"index.html":{}}}],["time",{"_index":280,"title":{},"body":{"index.html":{}}}],["title",{"_index":77,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["titlecase",{"_index":76,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["toward",{"_index":300,"title":{},"body":{"index.html":{}}}],["transformed",{"_index":62,"title":{},"body":{"miscellaneous/functions.html":{}}}],["type",{"_index":3,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":342,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typically",{"_index":221,"title":{},"body":{"index.html":{}}}],["underscores",{"_index":108,"title":{},"body":{"miscellaneous/functions.html":{}}}],["unique",{"_index":228,"title":{},"body":{"index.html":{}}}],["up",{"_index":292,"title":{},"body":{"index.html":{}}}],["updatedtoname",{"_index":187,"title":{},"body":{"index.html":{}}}],["updateresourcenamedto",{"_index":186,"title":{},"body":{"index.html":{}}}],["updates",{"_index":303,"title":{},"body":{"index.html":{}}}],["upload",{"_index":260,"title":{},"body":{"index.html":{}}}],["uppercase",{"_index":90,"title":{},"body":{"miscellaneous/functions.html":{}}}],["used",{"_index":146,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["useful",{"_index":283,"title":{},"body":{"index.html":{}}}],["user",{"_index":224,"title":{},"body":{"index.html":{}}}],["user's",{"_index":246,"title":{},"body":{"index.html":{}}}],["user/1",{"_index":229,"title":{},"body":{"index.html":{}}}],["user/1/categories/2",{"_index":253,"title":{},"body":{"index.html":{}}}],["user/1/category",{"_index":244,"title":{},"body":{"index.html":{}}}],["user/1/category/2",{"_index":250,"title":{},"body":{"index.html":{}}}],["user/1/decrement",{"_index":238,"title":{},"body":{"index.html":{}}}],["user/1/file",{"_index":261,"title":{},"body":{"index.html":{}}}],["user/1/img",{"_index":263,"title":{},"body":{"index.html":{}}}],["user/1/increment",{"_index":235,"title":{},"body":{"index.html":{}}}],["users",{"_index":216,"title":{},"body":{"index.html":{}}}],["users/count",{"_index":240,"title":{},"body":{"index.html":{}}}],["using",{"_index":273,"title":{},"body":{"index.html":{}}}],["utility",{"_index":126,"title":{},"body":{"index.html":{}}}],["validate",{"_index":101,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validation",{"_index":104,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validator",{"_index":99,"title":{},"body":{"miscellaneous/functions.html":{}}}],["value",{"_index":49,"title":{},"body":{"miscellaneous/functions.html":{}}}],["variations",{"_index":141,"title":{},"body":{"index.html":{}}}],["various",{"_index":55,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["version",{"_index":327,"title":{},"body":{"properties.html":{}}}],["versions",{"_index":167,"title":{},"body":{"index.html":{}}}],["well",{"_index":295,"title":{},"body":{"index.html":{}}}],["withdeleted:true",{"_index":241,"title":{},"body":{"index.html":{}}}],["word",{"_index":121,"title":{},"body":{"miscellaneous/functions.html":{}}}],["yes",{"_index":64,"title":{},"body":{"miscellaneous/functions.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/lib/auths.ts\n            \n            function\n            auths\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/auths.ts\n            \n            type alias\n            AuthPaths\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/names.ts\n            \n            function\n            names\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/names.ts\n            \n            type alias\n            Names\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/names.ts\n            \n            type alias\n            NamesOption\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/normalize.ts\n            \n            function\n            normalize\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/paths.ts\n            \n            function\n            paths\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/paths.ts\n            \n            type alias\n            RestApiPaths\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/pluralize.ts\n            \n            function\n            pluralize\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            auths   (src/.../auths.ts)\n                        \n                        \n                            names   (src/.../names.ts)\n                        \n                        \n                            normalize   (src/.../normalize.ts)\n                        \n                        \n                            paths   (src/.../paths.ts)\n                        \n                        \n                            pluralize   (src/.../pluralize.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/auths.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        auths\n                        \n                    \n                \n            \n            \n                \nauths(prefix: string)\n                \n            \n\n\n\n\n            \n                \n                        Geneate auth rest api paths\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                prefix\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         AuthPaths\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/names.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        names\n                        \n                    \n                \n            \n            \n                \nnames(resourceName: string, options?: NamesOption)\n                \n            \n\n\n\n\n            \n                \n                        Generates various case formats for a given resource name.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resourceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the resource to be transformed into different case formats.\n\n\n                                            \n                                        \n                                        \n                                                options\n                                            \n                                                            NamesOption\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Names\n\n                        \n                            \n                                An object containing the resource name in different case formats:\n\ncamelCase: camelCase format.\nconstCase: CONSTANT_CASE format.\nkebabCase: kebab-case format.\npascalCase: PascalCase format.\nsnakeCase: snake_case format.\ntitleCase: Title Case format.\ncontrollerName: NameController.\nserviceName: Nameservice.\nmoduleName: NameModule.\n\n\n                            \n                \n            \n        \n    \n    src/lib/normalize.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        normalize\n                        \n                    \n                \n            \n            \n                \nnormalize(value: string, preInputValidator?)\n                \n            \n\n\n\n\n            \n                \n                        Normalizes a given string by adding spaces before uppercase letters and capitalizing the first letter.\nOptionally, a custom pre-input validator function can be provided to validate the input string.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe string to be normalized.\n\n\n                                            \n                                        \n                                        \n                                                preInputValidator\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nAn optional function to validate the input string before normalization.\nIf not provided, a default validation is applied which checks if the string\ncontains only letters, underscores, dollar signs, and spaces.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The normalized string with spaces before uppercase letters and the first letter capitalized.\n\n                            \n                \n            \n        \n    \n    src/lib/paths.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        paths\n                        \n                    \n                \n            \n            \n                \npaths(name: string, prefix: string)\n                \n            \n\n\n\n\n            \n                \n                        Generates REST API paths for a given resource name with an optional prefix.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe name of the resource for which to generate paths.\n\n\n                                            \n                                        \n                                        \n                                                prefix\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                            \n                                                    \nAn optional prefix to prepend to each path. Defaults to an empty string.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         RestApiPaths\n\n                        \n                            \n                                An object containing various REST API paths for the resource.\n\n                            \n                \n            \n        \n    \n    src/lib/pluralize.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        pluralize\n                        \n                    \n                \n            \n            \n                \npluralize(word: string)\n                \n            \n\n\n\n\n            \n                \n                        Pluralize string (english)\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                word\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n@puq/names\nSummary\nUtility library that provides functions for generating various naming conventions, authentication paths, and RESTful paths for CRUD and relation operations, including count endpoints.\nFeatures\n\nnames: Generates all variations of names based on a provided string.\nauths: Generates common authentication and authorization paths with an optional prefix.\npaths: Generates commonly used REST paths for database entity CRUD operations and relations, including count endpoints.\nplurize: Converts a given string between singular and plural forms. This function is used internally by all other functions to ensure consistent singular and plural naming.\n\nInstallation\nExample :npm install mylibraryUsage\nImporting the Library\nExample :import { names, auths, paths, plurize } from '@puq/names';names Function\nGenerates different versions of names based on a given string.\nExample :const result = names('user');\n\nexport type Names = {\n  /**\n   * The string in PascalCase format.\n   * Example: \"PascalCaseExample\"\n   */\n  pascalCase: string,\n\n  /**\n   * The string in camelCase format.\n   * Example: \"camelCaseExample\"\n   */\n  camelCase: string,\n\n  /**\n   * The string in kebab-case format.\n   * Example: \"kebab-case-example\"\n   */\n  kebabCase: string,\n\n  /**\n   * The string in snake_case format.\n   * Example: \"snake_case_example\"\n   */\n  snakeCase: string,\n\n  /**\n   * Dot case\n   * Example: 'dot.case.ts'\n   */\n  dotCase: string,\n\n  /**\n   * The string in CONSTANT_CASE format.\n   * Example: \"CONSTANT_CASE_EXAMPLE\"\n   */\n  constCase: string,\n\n  /**\n   * Example: \"Sentence case example.\"\n   */\n  sentenceCase: string,\n\n  /**\n   * The string in Title Case format.\n   * Example: \"Title Case Example\"\n   */\n  titleCase: string,\n\n  /**\n   * Example: ResourceNameController\n   */\n  controllerName: string,\n\n  /**\n   * Example: ResourceNameService\n   */\n  serviceName: string,\n\n  /**\n   * Example: ResourceNameModule\n   */\n  moduleName: string,\n\n  /**\n   * Example: CreateResourceNameDto\n   */\n  createDtoName: string,\n\n  /**\n   * Example: UpdateResourceNameDto\n   */\n  updateDtoName: string,\n\n  /**\n   * Example: QueryResourceNameDto\n   */\n  queryDtoName: string,\n\n  /**\n   * Example: ResourceNameModel\n   */\n  modelName: string,\n\n  /**\n   * Example: ResourceNameOptions\n   */\n  optionsName: string,\n};auths Function\nGenerates common authentication and authorization paths, optionally prefixed.\nExample :const authPaths = auths('api');\n\nexport type AuthPaths = {\n  /**\n   * /login\n   */\n  login: string,\n\n  /**\n   * /login-otp\n   */\n  loginWithOTP: string,\n  /**\n   * /logout\n   */\n  logout: string,\n\n  /**\n   * /logout-all\n   */\n  logoutAll: string,\n\n  /**\n   * /signup\n   */\n  signup: string,\n\n  /**\n   * /forgot-password\n   */\n  forgotPassword: string,\n\n  /**\n   * /reset-password\n   */\n  resetPassword: string,\n\n  /**\n   * /has-session\n   */\n  hasSession: string,\n\n  /**\n   * /has-permission\n   */\n  hasPermission: string,\n};paths Function\nGenerates commonly used REST paths for a database entity CRUD and relation operations, including count. Both singular and plural paths are included.\nExample :const entityPaths = paths('user');\nexport type RestApiPaths = {\n  /**\n   * The plural form of the resource path.\n   * @example\n   * - GET `/users` ⭐ Query all users\n   * - POST `/users` Create many users\n   */\n  plural: string,\n\n  /**\n   * The singular form of the resource path.\n   * Typically used to represent a single resource.\n   * @example\n   * - POST `/user` ⭐ Create user\n   * - GET `/user` Get user metadata\n   */\n  singular: string,\n\n  /**\n   * The path parameter representing the unique identifier of a resource.\n   * @example\n   * - GET `/user/1` ⭐ Get user by id\n   */\n  id: string,\n\n  /**\n   * Increment the provided key by 1\n   * @example\n   * - PATCH `user/1/increment`  { key: 'count' } ⭐ Increment the count property by 1\n   */\n  increment: string,\n\n  /**\n   * Decrement the provided key by 1\n   * @example\n   * - PATCH `user/1/decrement`  { key: 'count' } ⭐ Decrement the count property by 1\n   */\n  decrement: string,\n\n  /**\n   * The path used to get the count of resources.\n   * @example\n   * - GET `/users/count` { withDeleted:true, query: query } ⭐ Count items by query\n   */\n  count: string,\n\n  /**\n   * The path used to represent a relation between resources.\n   * @example\n   * - DELETE `/user/1/category` ⭐ Set the user's cateogry relation null.\n   */\n  relation: string,\n\n  /**\n   * The path parameter representing the unique identifier of a related resource.\n   * @example\n   * - POST `/user/1/category/2` ⭐ Set the category relation (2) to user (1).\n   *\n   * - DELETE `/user/1/categories/2` ⭐ Remove one of the categories (2) from the user (1).\n   *\n   * - PUT `/user/1/categories/2` ⭐ Add one of the categories (2) to the user (1).\n   */\n  relationId: string,\n\n  /**\n   * Upload file path\n   * @example\n   * - POST `/user/1/file` { file: file } ⭐ Upload file for the user (1)\n   */\n  file: string,\n\n  /**\n   * Upload image path\n   * @example\n   * - POST /`user/1/img` { file: file } ⭐ Upload image for the user (1)\n   */\n  img: string,\n};plurize Function\nConverts a given string between singular and plural forms.\nExample :console.log(plurize('user')); // Output: \"users\"\nconsole.log(plurize('users')); // Output: \"user\"\nconsole.log(plurize('category')); // Output: \"categories\"Install\nExample :  pnpm add @puq/namesFunding\nThank you for using @puq/names It's an open-source project, and maintaining it takes time and effort. If you find this library useful, please consider supporting its ongoing development. Your contributions help ensure that the project stays up-to-date, secure, and well-maintained.\nInstant Funding\nYour funding will go toward\n\nBug fixes and updates to ensure compatibility with the latest versions of dependencies.\nNew features that will make the library even more powerful.\nDocumentation improvements to help users get the most out of [Your Library Name].\nGeneral maintenance to keep the library running smoothly and securely.\n\nContact to the developer: [robert.brightline@gmail.com]\nSupport the developer\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.1.0\n        \n            Description : names\n        \n            Keywords : puq, names\n        \n            Homepage : https://rbrightline.github.io/puq/names\n        \n            Bugs : https://rbrightline.github.io\n        \n            License : MIT\n        \n            Repository : https://github.com/rbrightline/puq/tree/main\n        \n            Author : Robert Brightline\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthPaths   (src/.../auths.ts)\n                        \n                        \n                            Names   (src/.../names.ts)\n                        \n                        \n                            NamesOption   (src/.../names.ts)\n                        \n                        \n                            RestApiPaths   (src/.../paths.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/auths.ts\n    \n    \n        \n            \n                \n                    \n                    AuthPaths\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/lib/names.ts\n    \n    \n        \n            \n                \n                    \n                    Names\n                \n            \n            \n                \n                    Represents different naming conventions for strings.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NamesOption\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/lib/paths.ts\n    \n    \n        \n            \n                \n                    \n                    RestApiPaths\n                \n            \n            \n                \n                    Represents the paths used in REST API endpoints.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
