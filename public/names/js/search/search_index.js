var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/coverage.html",[0,1.888]],["body/coverage.html",[0,1.263,1,1.263,2,1.767,3,1.667,4,1.767,5,1.767,6,1.263,7,1.224,8,1.263,9,3.352,10,0.113,11,3.352,12,1.744,13,1.263,14,3.014,15,0.931,16,2.44,17,2.44,18,1.998,19,0.671,20,1.263,21,1.263,22,1.263,23,1.286,24,1.081,25,0.944,26,1.263,27,1.263,28,1.263,29,1.263,30,1.767,31,1.767,32,0.078,33,0.078]],["title/dependencies.html",[34,1.21,35,1.248]],["body/dependencies.html",[10,0.11,32,0.104,33,0.104,35,1.465,36,2.78,37,2.78]],["title/miscellaneous/functions.html",[38,0.655,39,1.248]],["body/miscellaneous/functions.html",[3,1.305,6,0.711,7,0.614,8,1.136,10,0.102,15,1.045,19,0.545,20,0.711,21,0.711,22,1.619,23,0.524,24,0.767,25,0.767,26,1.136,28,0.711,32,0.051,33,0.051,38,0.385,39,0.524,40,0.524,41,0.711,42,0.995,43,0.995,44,0.995,45,0.995,46,0.995,47,1.821,48,1.136,49,0.711,50,0.995,51,1.588,52,1.588,53,2.475,54,2.174,55,1.886,56,1.619,57,1.983,58,1.305,59,0.995,60,1.983,61,0.711,62,0.995,63,1.619,64,1.588,65,1.418,66,2.264,67,1.418,68,1.588,69,0.995,70,0.524,71,0.995,72,0.995,73,0.995,74,0.711,75,0.837,76,2.639,77,0.995,78,0.524,79,0.995,80,0.711,81,1.136,82,0.995,83,0.524,84,0.995,85,0.711,86,0.995,87,0.995,88,0.995,89,0.995,90,0.995,91,0.995,92,0.995,93,1.588,94,0.995,95,0.995,96,1.983,97,1.983,98,1.136,99,1.983,100,0.995,101,1.588,102,1.588,103,0.995,104,0.995,105,0.995,106,1.045,107,0.995,108,1.136,109,1.588,110,1.588,111,1.588,112,0.995,113,1.588,114,0.995,115,0.995,116,0.995,117,0.995,118,0.995,119,0.995,120,0.995,121,0.995,122,0.995,123,0.995,124,0.995,125,0.995,126,0.995]],["title/index.html",[40,0.892,127,1.693,128,1.693]],["body/index.html",[1,0.891,7,0.733,10,0.073,19,0.703,24,0.886,25,0.482,29,0.891,32,0.06,33,0.06,35,0.657,39,0.657,47,1.349,49,0.891,54,0.891,55,0.891,56,0.891,58,0.657,61,1.638,65,0.891,70,0.657,75,0.657,78,0.657,83,0.657,106,0.657,108,0.891,129,1.894,130,1.247,131,1.967,132,0.891,133,0.891,134,1.354,135,0.891,136,1.208,137,0.891,138,0.891,139,1.354,140,0.891,141,0.891,142,0.891,143,0.891,144,0.891,145,0.891,146,0.891,147,0.657,148,1.894,149,1.247,150,1.247,151,1.247,152,1.247,153,1.247,154,1.894,155,1.247,156,1.247,157,1.247,158,1.247,159,1.247,160,1.247,161,1.247,162,1.247,163,1.247,164,1.247,165,1.247,166,1.247,167,1.894,168,1.894,169,1.247,170,1.247,171,2.291,172,1.247,173,1.247,174,1.247,175,1.247,176,1.247,177,1.247,178,1.247,179,1.247,180,1.247,181,1.247,182,1.247,183,1.894,184,1.247,185,1.247,186,1.247,187,1.247,188,1.247,189,1.247,190,1.247,191,1.247,192,1.247,193,1.247,194,1.247,195,1.894,196,1.247,197,1.247,198,1.247,199,1.247,200,1.247,201,1.247,202,1.247,203,1.894,204,1.247,205,1.247,206,1.247,207,1.247,208,1.247,209,1.247,210,1.247,211,1.247,212,1.247,213,1.247,214,1.247,215,1.247,216,1.247,217,1.247,218,1.247,219,1.247,220,1.247,221,1.247,222,1.247,223,1.247,224,1.247,225,1.894,226,1.247,227,1.247]],["title/modules.html",[228,1.888]],["body/modules.html",[10,0.106,32,0.106,33,0.106,228,2.038]],["title/overview.html",[229,1.888]],["body/overview.html",[10,0.106,32,0.106,33,0.106,229,2.038]],["title/properties.html",[34,1.21,230,1.693]],["body/properties.html",[7,0.706,10,0.113,19,0.781,32,0.08,33,0.08,47,1.315,58,0.962,63,1.783,67,1.305,70,0.962,75,1.315,78,0.962,80,1.305,81,1.305,83,0.962,85,1.305,98,1.305,106,0.962,131,1.305,132,1.305,133,1.305,134,1.305,135,1.305,136,1.315,137,1.305,138,1.305,139,1.305,140,1.305,141,1.305,142,1.305,143,1.305,144,1.305,145,1.305,146,1.305,147,0.962,230,1.305,231,1.825,232,1.825,233,1.825,234,1.825,235,1.825,236,1.825,237,1.825,238,1.825,239,1.825,240,1.825,241,1.825,242,1.825,243,1.825,244,1.825,245,1.825,246,1.825,247,1.825,248,1.825,249,1.825,250,1.825]],["title/miscellaneous/typealiases.html",[38,0.655,251,2.369]],["body/miscellaneous/typealiases.html",[3,1.761,10,0.087,12,1.943,13,1.943,15,1.432,18,2.45,19,0.747,23,1.093,24,1.292,25,1.051,27,1.482,32,0.087,33,0.087,38,0.802,40,1.093,41,1.482,48,1.482,74,1.482,136,1.093,147,1.093,252,2.074,253,2.718,254,2.074,255,3.217,256,2.074,257,2.074]]],"invertedIndex":[["",{"_index":10,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":16,"title":{},"body":{"coverage.html":{}}}],["0.5.15",{"_index":37,"title":{},"body":{"dependencies.html":{}}}],["0.6.2",{"_index":232,"title":{},"body":{"properties.html":{}}}],["0/1",{"_index":17,"title":{},"body":{"coverage.html":{}}}],["1/1",{"_index":11,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":9,"title":{},"body":{"coverage.html":{}}}],["add",{"_index":176,"title":{},"body":{"index.html":{}}}],["adding",{"_index":95,"title":{},"body":{"miscellaneous/functions.html":{}}}],["alias",{"_index":14,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":252,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["applied",{"_index":115,"title":{},"body":{"miscellaneous/functions.html":{}}}],["authentication",{"_index":49,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["author",{"_index":248,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":152,"title":{},"body":{"index.html":{}}}],["authpaths",{"_index":25,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["authpaths(prefix",{"_index":46,"title":{},"body":{"miscellaneous/functions.html":{}}}],["based",{"_index":150,"title":{},"body":{"index.html":{}}}],["before",{"_index":97,"title":{},"body":{"miscellaneous/functions.html":{}}}],["between",{"_index":166,"title":{},"body":{"index.html":{}}}],["brightline",{"_index":250,"title":{},"body":{"properties.html":{}}}],["bug",{"_index":206,"title":{},"body":{"index.html":{}}}],["bugs",{"_index":242,"title":{},"body":{"properties.html":{}}}],["builder",{"_index":52,"title":{},"body":{"miscellaneous/functions.html":{}}}],["camelcase",{"_index":75,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["capitalized",{"_index":121,"title":{},"body":{"miscellaneous/functions.html":{}}}],["capitalizing",{"_index":100,"title":{},"body":{"miscellaneous/functions.html":{}}}],["case",{"_index":63,"title":{},"body":{"miscellaneous/functions.html":{},"properties.html":{}}}],["checks",{"_index":116,"title":{},"body":{"miscellaneous/functions.html":{}}}],["classname",{"_index":237,"title":{},"body":{"properties.html":{}}}],["code",{"_index":142,"title":{},"body":{"index.html":{},"properties.html":{}}}],["common",{"_index":151,"title":{},"body":{"index.html":{}}}],["commonly",{"_index":153,"title":{},"body":{"index.html":{}}}],["compatibility",{"_index":209,"title":{},"body":{"index.html":{}}}],["consider",{"_index":190,"title":{},"body":{"index.html":{}}}],["consistent",{"_index":172,"title":{},"body":{"index.html":{}}}],["constant_case",{"_index":78,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["constcase",{"_index":77,"title":{},"body":{"miscellaneous/functions.html":{}}}],["contact",{"_index":224,"title":{},"body":{"index.html":{}}}],["containing",{"_index":73,"title":{},"body":{"miscellaneous/functions.html":{}}}],["contains",{"_index":117,"title":{},"body":{"miscellaneous/functions.html":{}}}],["contributions",{"_index":194,"title":{},"body":{"index.html":{}}}],["controllername",{"_index":86,"title":{},"body":{"miscellaneous/functions.html":{}}}],["convention",{"_index":137,"title":{},"body":{"index.html":{},"properties.html":{}}}],["conventions",{"_index":147,"title":{},"body":{"index.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["converts",{"_index":165,"title":{},"body":{"index.html":{}}}],["count",{"_index":162,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":0,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crud",{"_index":158,"title":{},"body":{"index.html":{}}}],["custom",{"_index":104,"title":{},"body":{"miscellaneous/functions.html":{}}}],["database",{"_index":156,"title":{},"body":{"index.html":{}}}],["date",{"_index":198,"title":{},"body":{"index.html":{}}}],["default",{"_index":113,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dependencies",{"_index":35,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["description",{"_index":67,"title":{},"body":{"miscellaneous/functions.html":{},"properties.html":{}}}],["developer",{"_index":225,"title":{},"body":{"index.html":{}}}],["development",{"_index":193,"title":{},"body":{"index.html":{}}}],["different",{"_index":74,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["documentation",{"_index":1,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dollar",{"_index":119,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dot.case",{"_index":236,"title":{},"body":{"properties.html":{}}}],["effort",{"_index":186,"title":{},"body":{"index.html":{}}}],["endpoints",{"_index":163,"title":{},"body":{"index.html":{}}}],["english",{"_index":125,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ensure",{"_index":171,"title":{},"body":{"index.html":{}}}],["entity",{"_index":157,"title":{},"body":{"index.html":{}}}],["even",{"_index":213,"title":{},"body":{"index.html":{}}}],["example",{"_index":174,"title":{},"body":{"index.html":{}}}],["extra",{"_index":69,"title":{},"body":{"miscellaneous/functions.html":{}}}],["features",{"_index":148,"title":{},"body":{"index.html":{}}}],["file",{"_index":2,"title":{},"body":{"coverage.html":{}}}],["filename",{"_index":238,"title":{},"body":{"properties.html":{}}}],["find",{"_index":187,"title":{},"body":{"index.html":{}}}],["first",{"_index":101,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fixes",{"_index":207,"title":{},"body":{"index.html":{}}}],["following",{"_index":124,"title":{},"body":{"miscellaneous/functions.html":{}}}],["format",{"_index":76,"title":{},"body":{"miscellaneous/functions.html":{}}}],["formats",{"_index":64,"title":{},"body":{"miscellaneous/functions.html":{}}}],["formatting",{"_index":144,"title":{},"body":{"index.html":{},"properties.html":{}}}],["forms",{"_index":169,"title":{},"body":{"index.html":{}}}],["function",{"_index":7,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["functions",{"_index":39,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["funding",{"_index":203,"title":{},"body":{"index.html":{}}}],["general",{"_index":218,"title":{},"body":{"index.html":{}}}],["generates",{"_index":61,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["generation",{"_index":143,"title":{},"body":{"index.html":{},"properties.html":{}}}],["getting",{"_index":127,"title":{"index.html":{}},"body":{}}],["given",{"_index":65,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["go",{"_index":204,"title":{},"body":{"index.html":{}}}],["grammer",{"_index":126,"title":{},"body":{"miscellaneous/functions.html":{}}}],["help",{"_index":195,"title":{},"body":{"index.html":{}}}],["homepage",{"_index":240,"title":{},"body":{"properties.html":{}}}],["https://github.com/rbrightline/puq/tree/main",{"_index":247,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io",{"_index":243,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io/puq/names",{"_index":241,"title":{},"body":{"properties.html":{}}}],["identifier",{"_index":4,"title":{},"body":{"coverage.html":{}}}],["improvements",{"_index":215,"title":{},"body":{"index.html":{}}}],["including",{"_index":161,"title":{},"body":{"index.html":{}}}],["index",{"_index":40,"title":{"index.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["input",{"_index":106,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["install",{"_index":173,"title":{},"body":{"index.html":{}}}],["instant",{"_index":202,"title":{},"body":{"index.html":{}}}],["internally",{"_index":170,"title":{},"body":{"index.html":{}}}],["it's",{"_index":180,"title":{},"body":{"index.html":{}}}],["kebab",{"_index":80,"title":{},"body":{"miscellaneous/functions.html":{},"properties.html":{}}}],["kebabcase",{"_index":79,"title":{},"body":{"miscellaneous/functions.html":{}}}],["keep",{"_index":220,"title":{},"body":{"index.html":{}}}],["keywords",{"_index":233,"title":{},"body":{"properties.html":{}}}],["latest",{"_index":210,"title":{},"body":{"index.html":{}}}],["letter",{"_index":102,"title":{},"body":{"miscellaneous/functions.html":{}}}],["letters",{"_index":99,"title":{},"body":{"miscellaneous/functions.html":{}}}],["library",{"_index":131,"title":{},"body":{"index.html":{},"properties.html":{}}}],["license",{"_index":244,"title":{},"body":{"properties.html":{}}}],["literal",{"_index":255,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lowercase",{"_index":235,"title":{},"body":{"properties.html":{}}}],["maintained",{"_index":201,"title":{},"body":{"index.html":{}}}],["maintaining",{"_index":184,"title":{},"body":{"index.html":{}}}],["maintenance",{"_index":219,"title":{},"body":{"index.html":{}}}],["make",{"_index":212,"title":{},"body":{"index.html":{}}}],["matching",{"_index":33,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["miscellaneous",{"_index":38,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["mit",{"_index":245,"title":{},"body":{"properties.html":{}}}],["modulename",{"_index":90,"title":{},"body":{"miscellaneous/functions.html":{}}}],["modules",{"_index":228,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":139,"title":{},"body":{"index.html":{},"properties.html":{}}}],["name",{"_index":54,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["namecontroller",{"_index":87,"title":{},"body":{"miscellaneous/functions.html":{}}}],["namemodule",{"_index":91,"title":{},"body":{"miscellaneous/functions.html":{}}}],["names",{"_index":19,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["names(resourcename",{"_index":59,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nameservice",{"_index":89,"title":{},"body":{"miscellaneous/functions.html":{}}}],["namesoption",{"_index":15,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["naming",{"_index":136,"title":{},"body":{"index.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["new",{"_index":29,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["normalization",{"_index":112,"title":{},"body":{"miscellaneous/functions.html":{}}}],["normalize",{"_index":8,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["normalize(value",{"_index":92,"title":{},"body":{"miscellaneous/functions.html":{}}}],["normalized",{"_index":111,"title":{},"body":{"miscellaneous/functions.html":{}}}],["normalizes",{"_index":94,"title":{},"body":{"miscellaneous/functions.html":{}}}],["object",{"_index":72,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ongoing",{"_index":192,"title":{},"body":{"index.html":{}}}],["open",{"_index":181,"title":{},"body":{"index.html":{}}}],["operations",{"_index":159,"title":{},"body":{"index.html":{}}}],["option.ts",{"_index":13,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["optional",{"_index":55,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["optionally",{"_index":103,"title":{},"body":{"miscellaneous/functions.html":{}}}],["options",{"_index":60,"title":{},"body":{"miscellaneous/functions.html":{}}}],["out",{"_index":217,"title":{},"body":{"index.html":{}}}],["overview",{"_index":229,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":34,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":53,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pascalcase",{"_index":81,"title":{},"body":{"miscellaneous/functions.html":{},"properties.html":{}}}],["path",{"_index":51,"title":{},"body":{"miscellaneous/functions.html":{}}}],["paths",{"_index":24,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["paths(resourcename",{"_index":122,"title":{},"body":{"miscellaneous/functions.html":{}}}],["paths.ts",{"_index":26,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["perfect",{"_index":140,"title":{},"body":{"index.html":{},"properties.html":{}}}],["please",{"_index":189,"title":{},"body":{"index.html":{}}}],["plural",{"_index":168,"title":{},"body":{"index.html":{}}}],["pluralize",{"_index":22,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["pluralize(name",{"_index":123,"title":{},"body":{"miscellaneous/functions.html":{}}}],["plurize",{"_index":164,"title":{},"body":{"index.html":{}}}],["pnpm",{"_index":175,"title":{},"body":{"index.html":{}}}],["possible",{"_index":135,"title":{},"body":{"index.html":{},"properties.html":{}}}],["powerful",{"_index":214,"title":{},"body":{"index.html":{}}}],["pre",{"_index":105,"title":{},"body":{"miscellaneous/functions.html":{}}}],["prefix",{"_index":56,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["preinputvalidator",{"_index":93,"title":{},"body":{"miscellaneous/functions.html":{}}}],["project",{"_index":183,"title":{},"body":{"index.html":{}}}],["properties",{"_index":230,"title":{"properties.html":{}},"body":{"properties.html":{}}}],["propertyname",{"_index":239,"title":{},"body":{"properties.html":{}}}],["provided",{"_index":108,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["provides",{"_index":132,"title":{},"body":{"index.html":{},"properties.html":{}}}],["puq",{"_index":234,"title":{},"body":{"properties.html":{}}}],["puq/names",{"_index":129,"title":{},"body":{"index.html":{}}}],["puq/namesfunding",{"_index":177,"title":{},"body":{"index.html":{}}}],["relations",{"_index":160,"title":{},"body":{"index.html":{}}}],["repository",{"_index":246,"title":{},"body":{"properties.html":{}}}],["represents",{"_index":256,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["resource",{"_index":66,"title":{},"body":{"miscellaneous/functions.html":{}}}],["resourcename",{"_index":68,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rest",{"_index":155,"title":{},"body":{"index.html":{}}}],["restapi",{"_index":48,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["results",{"_index":32,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["returns",{"_index":58,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["robert",{"_index":249,"title":{},"body":{"properties.html":{}}}],["robert.brightline@gmail.com",{"_index":226,"title":{},"body":{"index.html":{}}}],["running",{"_index":221,"title":{},"body":{"index.html":{}}}],["secure",{"_index":199,"title":{},"body":{"index.html":{}}}],["securely",{"_index":223,"title":{},"body":{"index.html":{}}}],["service",{"_index":50,"title":{},"body":{"miscellaneous/functions.html":{}}}],["servicename",{"_index":88,"title":{},"body":{"miscellaneous/functions.html":{}}}],["signs",{"_index":120,"title":{},"body":{"miscellaneous/functions.html":{}}}],["simple",{"_index":133,"title":{},"body":{"index.html":{},"properties.html":{}}}],["singular",{"_index":167,"title":{},"body":{"index.html":{}}}],["smoothly",{"_index":222,"title":{},"body":{"index.html":{}}}],["snake_case",{"_index":83,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["snakecase",{"_index":82,"title":{},"body":{"miscellaneous/functions.html":{}}}],["source",{"_index":182,"title":{},"body":{"index.html":{}}}],["spaces",{"_index":96,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../auth",{"_index":41,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../names",{"_index":253,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../names.ts",{"_index":42,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../normalize.ts",{"_index":43,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../paths",{"_index":254,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../paths.ts",{"_index":44,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../pluralize.ts",{"_index":45,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/lib/common/normalize.ts",{"_index":6,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/names/names",{"_index":12,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/names/names.ts",{"_index":20,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/names/pluralize.ts",{"_index":21,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/paths/auth",{"_index":23,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/paths/paths",{"_index":27,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/paths/paths.ts",{"_index":28,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["standardization",{"_index":145,"title":{},"body":{"index.html":{},"properties.html":{}}}],["started",{"_index":128,"title":{"index.html":{}},"body":{}}],["statements",{"_index":5,"title":{},"body":{"coverage.html":{}}}],["stays",{"_index":196,"title":{},"body":{"index.html":{}}}],["string",{"_index":47,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["strings",{"_index":257,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["such",{"_index":70,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["suffix",{"_index":71,"title":{},"body":{"miscellaneous/functions.html":{}}}],["summary",{"_index":130,"title":{},"body":{"index.html":{}}}],["support",{"_index":227,"title":{},"body":{"index.html":{}}}],["supporting",{"_index":191,"title":{},"body":{"index.html":{}}}],["swc/helpers",{"_index":36,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":31,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":30,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":134,"title":{},"body":{"index.html":{},"properties.html":{}}}],["tasks",{"_index":141,"title":{},"body":{"index.html":{},"properties.html":{}}}],["testing",{"_index":146,"title":{},"body":{"index.html":{},"properties.html":{}}}],["thank",{"_index":178,"title":{},"body":{"index.html":{}}}],["time",{"_index":185,"title":{},"body":{"index.html":{}}}],["title",{"_index":85,"title":{},"body":{"miscellaneous/functions.html":{},"properties.html":{}}}],["titlecase",{"_index":84,"title":{},"body":{"miscellaneous/functions.html":{}}}],["toward",{"_index":205,"title":{},"body":{"index.html":{}}}],["type",{"_index":3,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["type.ts",{"_index":18,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":251,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["underscores",{"_index":118,"title":{},"body":{"miscellaneous/functions.html":{}}}],["up",{"_index":197,"title":{},"body":{"index.html":{}}}],["updates",{"_index":208,"title":{},"body":{"index.html":{}}}],["uppercase",{"_index":98,"title":{},"body":{"miscellaneous/functions.html":{},"properties.html":{}}}],["used",{"_index":154,"title":{},"body":{"index.html":{}}}],["useful",{"_index":188,"title":{},"body":{"index.html":{}}}],["users",{"_index":216,"title":{},"body":{"index.html":{}}}],["using",{"_index":179,"title":{},"body":{"index.html":{}}}],["validate",{"_index":109,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validation",{"_index":114,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validator",{"_index":107,"title":{},"body":{"miscellaneous/functions.html":{}}}],["value",{"_index":110,"title":{},"body":{"miscellaneous/functions.html":{}}}],["variants",{"_index":138,"title":{},"body":{"index.html":{},"properties.html":{}}}],["variations",{"_index":149,"title":{},"body":{"index.html":{}}}],["various",{"_index":62,"title":{},"body":{"miscellaneous/functions.html":{}}}],["version",{"_index":231,"title":{},"body":{"properties.html":{}}}],["versions",{"_index":211,"title":{},"body":{"index.html":{}}}],["well",{"_index":200,"title":{},"body":{"index.html":{}}}],["yes",{"_index":57,"title":{},"body":{"miscellaneous/functions.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/lib/common/normalize.ts\n            \n            function\n            normalize\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/names/names-option.ts\n            \n            type alias\n            NamesOption\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/names/names-type.ts\n            \n            type alias\n            Names\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/names/names.ts\n            \n            function\n            names\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/names/pluralize.ts\n            \n            function\n            pluralize\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/paths/auth-paths-type.ts\n            \n            type alias\n            AuthPaths\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/paths/auth-paths.ts\n            \n            function\n            authPaths\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/paths/paths-type.ts\n            \n            type alias\n            Paths\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/paths/paths.ts\n            \n            function\n            paths\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @swc/helpers : ^0.5.15\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            authPaths   (src/.../auth-paths.ts)\n                        \n                        \n                            names   (src/.../names.ts)\n                        \n                        \n                            normalize   (src/.../normalize.ts)\n                        \n                        \n                            paths   (src/.../paths.ts)\n                        \n                        \n                            pluralize   (src/.../pluralize.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/paths/auth-paths.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authPaths\n                        \n                    \n                \n            \n            \n                \nauthPaths(prefix?: string)\n                \n            \n\n\n\n\n            \n                \n                        RestApi authentication service path builder\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                prefix\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         AuthPaths\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/names/names.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        names\n                        \n                    \n                \n            \n            \n                \nnames(resourceName: string, options?: NamesOption)\n                \n            \n\n\n\n\n            \n                \n                        Generates various case formats for a given resource name.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resourceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    the resource name\n\n                                            \n                                        \n                                        \n                                                options\n                                            \n                                                            NamesOption\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    extra options such as prefix, suffix NamesOption\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Names\n\n                        \n                            \n                                An object containing the resource name in different case formats:\n\ncamelCase: camelCase format.\nconstCase: CONSTANT_CASE format.\nkebabCase: kebab-case format.\npascalCase: PascalCase format.\nsnakeCase: snake_case format.\ntitleCase: Title Case format.\ncontrollerName: NameController.\nserviceName: NameService.\nmoduleName: NameModule.\n\n\n                            \n                \n            \n        \n    \n    src/lib/common/normalize.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        normalize\n                        \n                    \n                \n            \n            \n                \nnormalize(value: string, preInputValidator?)\n                \n            \n\n\n\n\n            \n                \n                        Normalizes a given string by adding spaces before uppercase letters and capitalizing the first letter.\nOptionally, a custom pre-input validator function can be provided to validate the input string.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe string to be normalized.\n\n\n                                            \n                                        \n                                        \n                                                preInputValidator\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nAn optional function to validate the input string before normalization.\nIf not provided, a default validation is applied which checks if the string\ncontains only letters, underscores, dollar signs, and spaces.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The normalized string with spaces before uppercase letters and the first letter capitalized.\n\n                            \n                \n            \n        \n    \n    src/lib/paths/paths.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        paths\n                        \n                    \n                \n            \n            \n                \npaths(resourceName: string, prefix: string)\n                \n            \n\n\n\n\n            \n                \n                        RestApi resource path builder\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                resourceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                prefix\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Paths\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/names/pluralize.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        pluralize\n                        \n                    \n                \n            \n            \n                \npluralize(name: string)\n                \n            \n\n\n\n\n            \n                \n                        Pluralize the given string following (english) grammer\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    name to pluralize\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n@puq/names\nSummary\nThe String Names Library provides a simple names function that takes a string input and returns all possible naming convention variants, such as camelCase, snake_case, CONSTANT_CASE, and more. Perfect for tasks like code generation, formatting standardization, or testing naming conventions.\nFeatures\n\nnames: Generates all variations of names based on a provided string.\n\nauthPaths: Generates common authentication and authorization paths with an optional prefix.\n\npaths: Generates commonly used REST paths for database entity CRUD operations and relations, including count endpoints.\n\nplurize: Converts a given string between singular and plural forms. This function is used internally by all other functions to ensure consistent singular and plural naming.\n\n\nInstall\nExample :  pnpm add @puq/namesFunding\nThank you for using @puq/names It's an open-source project, and maintaining it takes time and effort. If you find this library useful, please consider supporting its ongoing development. Your contributions help ensure that the project stays up-to-date, secure, and well-maintained.\nInstant Funding\nYour funding will go toward\n\nBug fixes and updates to ensure compatibility with the latest versions of dependencies.\nNew features that will make the library even more powerful.\nDocumentation improvements to help users get the most out of [Your Library Name].\nGeneral maintenance to keep the library running smoothly and securely.\n\nContact to the developer: [robert.brightline@gmail.com]\nSupport the developer\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.6.2\n        \n            Description : The String Names Library provides a simple names function that takes a string input and returns all possible naming convention variants, such as camelCase, snake_case, CONSTANT_CASE, and more. Perfect for tasks like code generation, formatting standardization, or testing naming conventions.\n        \n            Keywords : puq, names, UPPERCASE, lowercase, kebab-case, pascalCase, CamelCase, dot.case, Title case, className, fileName, propertyName\n        \n            Homepage : https://rbrightline.github.io/puq/names\n        \n            Bugs : https://rbrightline.github.io\n        \n            License : MIT\n        \n            Repository : https://github.com/rbrightline/puq/tree/main\n        \n            Author : Robert Brightline\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthPaths   (src/.../auth-paths-type.ts)\n                        \n                        \n                            Names   (src/.../names-type.ts)\n                        \n                        \n                            NamesOption   (src/.../names-option.ts)\n                        \n                        \n                            Paths   (src/.../paths-type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/paths/auth-paths-type.ts\n    \n    \n        \n            \n                \n                    \n                    AuthPaths\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/lib/names/names-type.ts\n    \n    \n        \n            \n                \n                    \n                    Names\n                \n            \n            \n                \n                    Represents different naming conventions for strings.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/lib/names/names-option.ts\n    \n    \n        \n            \n                \n                    \n                    NamesOption\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/lib/paths/paths-type.ts\n    \n    \n        \n            \n                \n                    \n                    Paths\n                \n            \n            \n                \n                    RestApi paths\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
