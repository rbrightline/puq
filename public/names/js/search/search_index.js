var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/coverage.html",[0,1.888]],["body/coverage.html",[0,1.308,1,1.308,2,1.829,3,1.688,4,1.829,5,1.829,6,1.317,7,1.239,8,0.964,9,3.384,10,0.114,11,3.384,12,3.059,13,0.964,14,2.499,15,2.499,16,1.5,17,0.687,18,0.964,19,1.308,20,1.308,21,1.317,22,0.708,23,0.964,24,1.308,25,1.308,26,1.308,27,1.829,28,1.829,29,0.08,30,0.08]],["title/dependencies.html",[31,1.21,32,1.248]],["body/dependencies.html",[10,0.11,29,0.104,30,0.104,32,1.466,33,2.782,34,2.782]],["title/miscellaneous/functions.html",[35,0.655,36,1.248]],["body/miscellaneous/functions.html",[3,1.276,6,0.501,7,0.593,8,0.808,10,0.103,13,0.501,16,0.501,17,0.529,18,0.808,19,0.68,20,1.095,21,0.501,22,1.001,23,0.501,24,0.68,25,1.376,29,0.049,30,0.049,35,0.368,36,0.501,37,0.501,38,0.68,39,0.68,40,0.951,41,0.68,42,0.951,43,0.951,44,1.818,45,0.951,46,0.951,47,1.014,48,1.376,49,2.42,50,2.192,51,2.023,52,1.924,53,1.924,54,1.73,55,1.276,56,0.951,57,1.532,58,1.095,59,1.532,60,1.73,61,1.924,62,1.376,63,2.586,64,1.376,65,0.951,66,0.951,67,1.095,68,1.532,69,1.532,70,1.532,71,0.808,72,2.586,73,0.951,74,0.501,75,0.951,76,0.68,77,1.095,78,0.951,79,0.501,80,0.951,81,0.68,82,0.951,83,0.951,84,0.951,85,0.951,86,0.951,87,0.951,88,0.951,89,1.532,90,0.951,91,0.951,92,1.924,93,1.924,94,1.095,95,1.924,96,0.951,97,1.532,98,1.532,99,0.951,100,0.951,101,0.951,102,1.014,103,0.951,104,1.095,105,1.532,106,1.532,107,0.951,108,0.951,109,0.951,110,0.951,111,0.951,112,0.951,113,0.951,114,0.951,115,0.951,116,0.951,117,0.951,118,0.951,119,0.951,120,0.951,121,0.951,122,0.951,123,0.951,124,0.951,125,0.951]],["title/index.html",[37,0.892,126,1.693,127,1.693]],["body/index.html",[1,0.895,7,0.735,8,0.66,10,0.073,17,0.705,22,0.888,26,0.895,29,0.061,30,0.061,32,0.66,36,0.66,44,1.351,47,0.66,50,0.895,51,0.895,54,0.895,55,0.66,58,1.642,62,0.895,71,0.66,74,0.66,79,0.66,102,0.66,104,0.895,128,1.9,129,1.251,130,1.971,131,0.895,132,0.895,133,1.358,134,0.895,135,1.21,136,0.895,137,0.895,138,0.895,139,1.358,140,0.895,141,0.895,142,0.895,143,0.895,144,0.895,145,0.895,146,0.895,147,0.66,148,1.9,149,1.251,150,1.251,151,1.251,152,1.251,153,1.251,154,1.251,155,1.358,156,1.251,157,1.251,158,1.251,159,1.251,160,1.251,161,1.251,162,1.251,163,0.895,164,1.251,165,1.251,166,1.251,167,1.9,168,1.9,169,1.251,170,1.251,171,2.296,172,1.251,173,1.251,174,1.251,175,1.251,176,1.251,177,1.251,178,1.251,179,1.251,180,1.251,181,1.251,182,1.251,183,1.9,184,1.251,185,1.251,186,1.251,187,1.251,188,1.251,189,1.251,190,1.251,191,1.251,192,1.251,193,1.251,194,1.251,195,1.9,196,1.251,197,1.251,198,1.251,199,1.251,200,1.251,201,1.251,202,1.251,203,1.9,204,1.251,205,1.251,206,1.251,207,1.251,208,1.251,209,1.251,210,1.251,211,1.251,212,1.251,213,1.251,214,1.251,215,1.251,216,1.251,217,1.251,218,1.251,219,1.251,220,1.251,221,1.251,222,1.251,223,1.251,224,1.251,225,1.9,226,1.251,227,1.251]],["title/modules.html",[228,1.888]],["body/modules.html",[10,0.106,29,0.106,30,0.106,228,2.039]],["title/overview.html",[229,1.888]],["body/overview.html",[10,0.106,29,0.106,30,0.106,229,2.039]],["title/properties.html",[31,1.21,230,1.693]],["body/properties.html",[7,0.708,10,0.113,17,0.782,29,0.08,30,0.08,44,1.317,55,0.964,60,1.787,64,1.308,71,1.317,74,0.964,76,1.308,77,1.308,79,0.964,81,1.308,94,1.308,102,0.964,130,1.308,131,1.308,132,1.308,133,1.308,134,1.308,135,1.317,136,1.308,137,1.308,138,1.308,139,1.308,140,1.308,141,1.308,142,1.308,143,1.308,144,1.308,145,1.308,146,1.308,147,0.964,230,1.308,231,1.829,232,1.829,233,1.829,234,1.829,235,1.829,236,1.829,237,1.829,238,1.829,239,1.829,240,1.829,241,1.829,242,1.829,243,1.829,244,1.829,245,1.829,246,1.829,247,1.829,248,1.829,249,1.829,250,1.829]],["title/miscellaneous/typealiases.html",[35,0.655,251,2.369]],["body/miscellaneous/typealiases.html",[3,1.787,6,1.145,10,0.089,13,1.476,16,1.145,17,0.77,18,1.476,21,1.145,22,0.84,23,1.476,29,0.089,30,0.089,35,0.84,37,1.145,38,1.553,39,2.002,41,1.553,47,1.145,48,1.553,67,1.553,135,1.145,147,1.145,155,1.553,163,1.553,252,2.172,253,3.275,254,2.8,255,2.172]]],"invertedIndex":[["",{"_index":10,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":14,"title":{},"body":{"coverage.html":{}}}],["0.2.1",{"_index":232,"title":{},"body":{"properties.html":{}}}],["0.5.11",{"_index":34,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":15,"title":{},"body":{"coverage.html":{}}}],["1/1",{"_index":11,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":9,"title":{},"body":{"coverage.html":{}}}],["add",{"_index":176,"title":{},"body":{"index.html":{}}}],["adding",{"_index":91,"title":{},"body":{"miscellaneous/functions.html":{}}}],["alias",{"_index":12,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":252,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["api",{"_index":48,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["applied",{"_index":109,"title":{},"body":{"miscellaneous/functions.html":{}}}],["auth",{"_index":46,"title":{},"body":{"miscellaneous/functions.html":{}}}],["authentication",{"_index":152,"title":{},"body":{"index.html":{}}}],["author",{"_index":248,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":153,"title":{},"body":{"index.html":{}}}],["authpaths",{"_index":13,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["auths",{"_index":8,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["auths(prefix",{"_index":43,"title":{},"body":{"miscellaneous/functions.html":{}}}],["based",{"_index":150,"title":{},"body":{"index.html":{}}}],["before",{"_index":93,"title":{},"body":{"miscellaneous/functions.html":{}}}],["between",{"_index":166,"title":{},"body":{"index.html":{}}}],["brightline",{"_index":250,"title":{},"body":{"properties.html":{}}}],["bug",{"_index":206,"title":{},"body":{"index.html":{}}}],["bugs",{"_index":242,"title":{},"body":{"properties.html":{}}}],["camelcase",{"_index":71,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["capitalized",{"_index":115,"title":{},"body":{"miscellaneous/functions.html":{}}}],["capitalizing",{"_index":96,"title":{},"body":{"miscellaneous/functions.html":{}}}],["case",{"_index":60,"title":{},"body":{"miscellaneous/functions.html":{},"properties.html":{}}}],["checks",{"_index":110,"title":{},"body":{"miscellaneous/functions.html":{}}}],["classname",{"_index":237,"title":{},"body":{"properties.html":{}}}],["code",{"_index":142,"title":{},"body":{"index.html":{},"properties.html":{}}}],["common",{"_index":151,"title":{},"body":{"index.html":{}}}],["commonly",{"_index":154,"title":{},"body":{"index.html":{}}}],["compatibility",{"_index":209,"title":{},"body":{"index.html":{}}}],["consider",{"_index":190,"title":{},"body":{"index.html":{}}}],["consistent",{"_index":172,"title":{},"body":{"index.html":{}}}],["constant_case",{"_index":74,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["constcase",{"_index":73,"title":{},"body":{"miscellaneous/functions.html":{}}}],["contact",{"_index":224,"title":{},"body":{"index.html":{}}}],["containing",{"_index":70,"title":{},"body":{"miscellaneous/functions.html":{}}}],["contains",{"_index":111,"title":{},"body":{"miscellaneous/functions.html":{}}}],["contributions",{"_index":194,"title":{},"body":{"index.html":{}}}],["controllername",{"_index":82,"title":{},"body":{"miscellaneous/functions.html":{}}}],["convention",{"_index":136,"title":{},"body":{"index.html":{},"properties.html":{}}}],["conventions",{"_index":147,"title":{},"body":{"index.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["converts",{"_index":165,"title":{},"body":{"index.html":{}}}],["count",{"_index":162,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":0,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crud",{"_index":158,"title":{},"body":{"index.html":{}}}],["custom",{"_index":100,"title":{},"body":{"miscellaneous/functions.html":{}}}],["database",{"_index":156,"title":{},"body":{"index.html":{}}}],["date",{"_index":198,"title":{},"body":{"index.html":{}}}],["default",{"_index":52,"title":{},"body":{"miscellaneous/functions.html":{}}}],["defaults",{"_index":121,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dependencies",{"_index":32,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["description",{"_index":64,"title":{},"body":{"miscellaneous/functions.html":{},"properties.html":{}}}],["developer",{"_index":225,"title":{},"body":{"index.html":{}}}],["development",{"_index":193,"title":{},"body":{"index.html":{}}}],["different",{"_index":67,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["documentation",{"_index":1,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dollar",{"_index":113,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dot.case",{"_index":236,"title":{},"body":{"properties.html":{}}}],["each",{"_index":119,"title":{},"body":{"miscellaneous/functions.html":{}}}],["effort",{"_index":186,"title":{},"body":{"index.html":{}}}],["empty",{"_index":122,"title":{},"body":{"miscellaneous/functions.html":{}}}],["endpoints",{"_index":163,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["english",{"_index":124,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ensure",{"_index":171,"title":{},"body":{"index.html":{}}}],["entity",{"_index":157,"title":{},"body":{"index.html":{}}}],["even",{"_index":213,"title":{},"body":{"index.html":{}}}],["example",{"_index":174,"title":{},"body":{"index.html":{}}}],["features",{"_index":148,"title":{},"body":{"index.html":{}}}],["file",{"_index":2,"title":{},"body":{"coverage.html":{}}}],["filename",{"_index":238,"title":{},"body":{"properties.html":{}}}],["find",{"_index":187,"title":{},"body":{"index.html":{}}}],["first",{"_index":97,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fixes",{"_index":207,"title":{},"body":{"index.html":{}}}],["format",{"_index":72,"title":{},"body":{"miscellaneous/functions.html":{}}}],["formats",{"_index":61,"title":{},"body":{"miscellaneous/functions.html":{}}}],["formatting",{"_index":144,"title":{},"body":{"index.html":{},"properties.html":{}}}],["forms",{"_index":169,"title":{},"body":{"index.html":{}}}],["function",{"_index":7,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["functions",{"_index":36,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["funding",{"_index":203,"title":{},"body":{"index.html":{}}}],["geneate",{"_index":45,"title":{},"body":{"miscellaneous/functions.html":{}}}],["general",{"_index":218,"title":{},"body":{"index.html":{}}}],["generate",{"_index":117,"title":{},"body":{"miscellaneous/functions.html":{}}}],["generates",{"_index":58,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["generation",{"_index":143,"title":{},"body":{"index.html":{},"properties.html":{}}}],["getting",{"_index":126,"title":{"index.html":{}},"body":{}}],["given",{"_index":62,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["go",{"_index":204,"title":{},"body":{"index.html":{}}}],["help",{"_index":195,"title":{},"body":{"index.html":{}}}],["homepage",{"_index":240,"title":{},"body":{"properties.html":{}}}],["https://github.com/rbrightline/puq/tree/main",{"_index":247,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io",{"_index":243,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io/puq/names",{"_index":241,"title":{},"body":{"properties.html":{}}}],["identifier",{"_index":4,"title":{},"body":{"coverage.html":{}}}],["improvements",{"_index":215,"title":{},"body":{"index.html":{}}}],["including",{"_index":161,"title":{},"body":{"index.html":{}}}],["index",{"_index":37,"title":{"index.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["input",{"_index":102,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["install",{"_index":173,"title":{},"body":{"index.html":{}}}],["instant",{"_index":202,"title":{},"body":{"index.html":{}}}],["internally",{"_index":170,"title":{},"body":{"index.html":{}}}],["it's",{"_index":180,"title":{},"body":{"index.html":{}}}],["kebab",{"_index":76,"title":{},"body":{"miscellaneous/functions.html":{},"properties.html":{}}}],["kebabcase",{"_index":75,"title":{},"body":{"miscellaneous/functions.html":{}}}],["keep",{"_index":220,"title":{},"body":{"index.html":{}}}],["keywords",{"_index":233,"title":{},"body":{"properties.html":{}}}],["latest",{"_index":210,"title":{},"body":{"index.html":{}}}],["letter",{"_index":98,"title":{},"body":{"miscellaneous/functions.html":{}}}],["letters",{"_index":95,"title":{},"body":{"miscellaneous/functions.html":{}}}],["library",{"_index":130,"title":{},"body":{"index.html":{},"properties.html":{}}}],["license",{"_index":244,"title":{},"body":{"properties.html":{}}}],["literal",{"_index":253,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lowercase",{"_index":235,"title":{},"body":{"properties.html":{}}}],["maintained",{"_index":201,"title":{},"body":{"index.html":{}}}],["maintaining",{"_index":184,"title":{},"body":{"index.html":{}}}],["maintenance",{"_index":219,"title":{},"body":{"index.html":{}}}],["make",{"_index":212,"title":{},"body":{"index.html":{}}}],["matching",{"_index":30,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["miscellaneous",{"_index":35,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["mit",{"_index":245,"title":{},"body":{"properties.html":{}}}],["modulename",{"_index":86,"title":{},"body":{"miscellaneous/functions.html":{}}}],["modules",{"_index":228,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":139,"title":{},"body":{"index.html":{},"properties.html":{}}}],["name",{"_index":50,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["namecontroller",{"_index":83,"title":{},"body":{"miscellaneous/functions.html":{}}}],["namemodule",{"_index":87,"title":{},"body":{"miscellaneous/functions.html":{}}}],["names",{"_index":17,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["names(resourcename",{"_index":56,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nameservice",{"_index":85,"title":{},"body":{"miscellaneous/functions.html":{}}}],["namesoption",{"_index":18,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["naming",{"_index":135,"title":{},"body":{"index.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["new",{"_index":26,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["normalization",{"_index":107,"title":{},"body":{"miscellaneous/functions.html":{}}}],["normalize",{"_index":20,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["normalize(value",{"_index":88,"title":{},"body":{"miscellaneous/functions.html":{}}}],["normalized",{"_index":106,"title":{},"body":{"miscellaneous/functions.html":{}}}],["normalizes",{"_index":90,"title":{},"body":{"miscellaneous/functions.html":{}}}],["object",{"_index":69,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ongoing",{"_index":192,"title":{},"body":{"index.html":{}}}],["open",{"_index":181,"title":{},"body":{"index.html":{}}}],["operations",{"_index":159,"title":{},"body":{"index.html":{}}}],["optional",{"_index":51,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["optionally",{"_index":99,"title":{},"body":{"miscellaneous/functions.html":{}}}],["options",{"_index":57,"title":{},"body":{"miscellaneous/functions.html":{}}}],["out",{"_index":217,"title":{},"body":{"index.html":{}}}],["overview",{"_index":229,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":31,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":49,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pascalcase",{"_index":77,"title":{},"body":{"miscellaneous/functions.html":{},"properties.html":{}}}],["path",{"_index":120,"title":{},"body":{"miscellaneous/functions.html":{}}}],["paths",{"_index":22,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["paths(name",{"_index":116,"title":{},"body":{"miscellaneous/functions.html":{}}}],["perfect",{"_index":140,"title":{},"body":{"index.html":{},"properties.html":{}}}],["please",{"_index":189,"title":{},"body":{"index.html":{}}}],["plural",{"_index":168,"title":{},"body":{"index.html":{}}}],["pluralize",{"_index":25,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["pluralize(word",{"_index":123,"title":{},"body":{"miscellaneous/functions.html":{}}}],["plurize",{"_index":164,"title":{},"body":{"index.html":{}}}],["pnpm",{"_index":175,"title":{},"body":{"index.html":{}}}],["possible",{"_index":134,"title":{},"body":{"index.html":{},"properties.html":{}}}],["powerful",{"_index":214,"title":{},"body":{"index.html":{}}}],["pre",{"_index":101,"title":{},"body":{"miscellaneous/functions.html":{}}}],["prefix",{"_index":54,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["preinputvalidator",{"_index":89,"title":{},"body":{"miscellaneous/functions.html":{}}}],["prepend",{"_index":118,"title":{},"body":{"miscellaneous/functions.html":{}}}],["project",{"_index":183,"title":{},"body":{"index.html":{}}}],["properties",{"_index":230,"title":{"properties.html":{}},"body":{"properties.html":{}}}],["propertyname",{"_index":239,"title":{},"body":{"properties.html":{}}}],["provided",{"_index":104,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["provides",{"_index":131,"title":{},"body":{"index.html":{},"properties.html":{}}}],["puq",{"_index":234,"title":{},"body":{"properties.html":{}}}],["puq/names",{"_index":128,"title":{},"body":{"index.html":{}}}],["puq/namesfunding",{"_index":177,"title":{},"body":{"index.html":{}}}],["relations",{"_index":160,"title":{},"body":{"index.html":{}}}],["repository",{"_index":246,"title":{},"body":{"properties.html":{}}}],["represents",{"_index":254,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["resource",{"_index":63,"title":{},"body":{"miscellaneous/functions.html":{}}}],["resourcename",{"_index":65,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rest",{"_index":47,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["restapipaths",{"_index":23,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["results",{"_index":29,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["returns",{"_index":55,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["robert",{"_index":249,"title":{},"body":{"properties.html":{}}}],["robert.brightline@gmail.com",{"_index":226,"title":{},"body":{"index.html":{}}}],["running",{"_index":221,"title":{},"body":{"index.html":{}}}],["secure",{"_index":199,"title":{},"body":{"index.html":{}}}],["securely",{"_index":223,"title":{},"body":{"index.html":{}}}],["servicename",{"_index":84,"title":{},"body":{"miscellaneous/functions.html":{}}}],["signs",{"_index":114,"title":{},"body":{"miscellaneous/functions.html":{}}}],["simple",{"_index":132,"title":{},"body":{"index.html":{},"properties.html":{}}}],["singular",{"_index":167,"title":{},"body":{"index.html":{}}}],["smoothly",{"_index":222,"title":{},"body":{"index.html":{}}}],["snake_case",{"_index":79,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["snakecase",{"_index":78,"title":{},"body":{"miscellaneous/functions.html":{}}}],["source",{"_index":182,"title":{},"body":{"index.html":{}}}],["spaces",{"_index":92,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../auths.ts",{"_index":38,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../names.ts",{"_index":39,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../normalize.ts",{"_index":40,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../paths.ts",{"_index":41,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../pluralize.ts",{"_index":42,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/lib/auths.ts",{"_index":6,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/names.ts",{"_index":16,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/normalize.ts",{"_index":19,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/paths.ts",{"_index":21,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/pluralize.ts",{"_index":24,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["standardization",{"_index":145,"title":{},"body":{"index.html":{},"properties.html":{}}}],["started",{"_index":127,"title":{"index.html":{}},"body":{}}],["statements",{"_index":5,"title":{},"body":{"coverage.html":{}}}],["stays",{"_index":196,"title":{},"body":{"index.html":{}}}],["string",{"_index":44,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["strings",{"_index":255,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["such",{"_index":138,"title":{},"body":{"index.html":{},"properties.html":{}}}],["summary",{"_index":129,"title":{},"body":{"index.html":{}}}],["support",{"_index":227,"title":{},"body":{"index.html":{}}}],["supporting",{"_index":191,"title":{},"body":{"index.html":{}}}],["swc/helpers",{"_index":33,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":28,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":27,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":133,"title":{},"body":{"index.html":{},"properties.html":{}}}],["tasks",{"_index":141,"title":{},"body":{"index.html":{},"properties.html":{}}}],["testing",{"_index":146,"title":{},"body":{"index.html":{},"properties.html":{}}}],["thank",{"_index":178,"title":{},"body":{"index.html":{}}}],["time",{"_index":185,"title":{},"body":{"index.html":{}}}],["title",{"_index":81,"title":{},"body":{"miscellaneous/functions.html":{},"properties.html":{}}}],["titlecase",{"_index":80,"title":{},"body":{"miscellaneous/functions.html":{}}}],["toward",{"_index":205,"title":{},"body":{"index.html":{}}}],["transformed",{"_index":66,"title":{},"body":{"miscellaneous/functions.html":{}}}],["type",{"_index":3,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":251,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["underscores",{"_index":112,"title":{},"body":{"miscellaneous/functions.html":{}}}],["up",{"_index":197,"title":{},"body":{"index.html":{}}}],["updates",{"_index":208,"title":{},"body":{"index.html":{}}}],["uppercase",{"_index":94,"title":{},"body":{"miscellaneous/functions.html":{},"properties.html":{}}}],["used",{"_index":155,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["useful",{"_index":188,"title":{},"body":{"index.html":{}}}],["users",{"_index":216,"title":{},"body":{"index.html":{}}}],["using",{"_index":179,"title":{},"body":{"index.html":{}}}],["validate",{"_index":105,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validation",{"_index":108,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validator",{"_index":103,"title":{},"body":{"miscellaneous/functions.html":{}}}],["value",{"_index":53,"title":{},"body":{"miscellaneous/functions.html":{}}}],["variants",{"_index":137,"title":{},"body":{"index.html":{},"properties.html":{}}}],["variations",{"_index":149,"title":{},"body":{"index.html":{}}}],["various",{"_index":59,"title":{},"body":{"miscellaneous/functions.html":{}}}],["version",{"_index":231,"title":{},"body":{"properties.html":{}}}],["versions",{"_index":211,"title":{},"body":{"index.html":{}}}],["well",{"_index":200,"title":{},"body":{"index.html":{}}}],["word",{"_index":125,"title":{},"body":{"miscellaneous/functions.html":{}}}],["yes",{"_index":68,"title":{},"body":{"miscellaneous/functions.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/lib/auths.ts\n            \n            function\n            auths\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/auths.ts\n            \n            type alias\n            AuthPaths\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/names.ts\n            \n            function\n            names\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/names.ts\n            \n            type alias\n            Names\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/names.ts\n            \n            type alias\n            NamesOption\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/normalize.ts\n            \n            function\n            normalize\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/paths.ts\n            \n            function\n            paths\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/paths.ts\n            \n            type alias\n            RestApiPaths\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/pluralize.ts\n            \n            function\n            pluralize\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @swc/helpers : ~0.5.11\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            auths   (src/.../auths.ts)\n                        \n                        \n                            names   (src/.../names.ts)\n                        \n                        \n                            normalize   (src/.../normalize.ts)\n                        \n                        \n                            paths   (src/.../paths.ts)\n                        \n                        \n                            pluralize   (src/.../pluralize.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/auths.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        auths\n                        \n                    \n                \n            \n            \n                \nauths(prefix: string)\n                \n            \n\n\n\n\n            \n                \n                        Geneate auth rest api paths\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                prefix\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         AuthPaths\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/names.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        names\n                        \n                    \n                \n            \n            \n                \nnames(resourceName: string, options?: NamesOption)\n                \n            \n\n\n\n\n            \n                \n                        Generates various case formats for a given resource name.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resourceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the resource to be transformed into different case formats.\n\n\n                                            \n                                        \n                                        \n                                                options\n                                            \n                                                            NamesOption\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Names\n\n                        \n                            \n                                An object containing the resource name in different case formats:\n\ncamelCase: camelCase format.\nconstCase: CONSTANT_CASE format.\nkebabCase: kebab-case format.\npascalCase: PascalCase format.\nsnakeCase: snake_case format.\ntitleCase: Title Case format.\ncontrollerName: NameController.\nserviceName: Nameservice.\nmoduleName: NameModule.\n\n\n                            \n                \n            \n        \n    \n    src/lib/normalize.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        normalize\n                        \n                    \n                \n            \n            \n                \nnormalize(value: string, preInputValidator?)\n                \n            \n\n\n\n\n            \n                \n                        Normalizes a given string by adding spaces before uppercase letters and capitalizing the first letter.\nOptionally, a custom pre-input validator function can be provided to validate the input string.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe string to be normalized.\n\n\n                                            \n                                        \n                                        \n                                                preInputValidator\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nAn optional function to validate the input string before normalization.\nIf not provided, a default validation is applied which checks if the string\ncontains only letters, underscores, dollar signs, and spaces.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The normalized string with spaces before uppercase letters and the first letter capitalized.\n\n                            \n                \n            \n        \n    \n    src/lib/paths.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        paths\n                        \n                    \n                \n            \n            \n                \npaths(name: string, prefix: string)\n                \n            \n\n\n\n\n            \n                \n                        Generates REST API paths for a given resource name with an optional prefix.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe name of the resource for which to generate paths.\n\n\n                                            \n                                        \n                                        \n                                                prefix\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                            \n                                                    \nAn optional prefix to prepend to each path. Defaults to an empty string.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         RestApiPaths\n\n                        \n                            \n                                An object containing various REST API paths for the resource.\n\n                            \n                \n            \n        \n    \n    src/lib/pluralize.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        pluralize\n                        \n                    \n                \n            \n            \n                \npluralize(word: string)\n                \n            \n\n\n\n\n            \n                \n                        Pluralize string (english)\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                word\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n@puq/names\nSummary\nThe String Names Library provides a simple names function that takes a string input and returns all possible naming convention variants, such as camelCase, snake_case, CONSTANT_CASE, and more. Perfect for tasks like code generation, formatting standardization, or testing naming conventions.\nFeatures\n\nnames: Generates all variations of names based on a provided string.\nauths: Generates common authentication and authorization paths with an optional prefix.\npaths: Generates commonly used REST paths for database entity CRUD operations and relations, including count endpoints.\nplurize: Converts a given string between singular and plural forms. This function is used internally by all other functions to ensure consistent singular and plural naming.\n\nInstall\nExample :  pnpm add @puq/namesFunding\nThank you for using @puq/names It's an open-source project, and maintaining it takes time and effort. If you find this library useful, please consider supporting its ongoing development. Your contributions help ensure that the project stays up-to-date, secure, and well-maintained.\nInstant Funding\nYour funding will go toward\n\nBug fixes and updates to ensure compatibility with the latest versions of dependencies.\nNew features that will make the library even more powerful.\nDocumentation improvements to help users get the most out of [Your Library Name].\nGeneral maintenance to keep the library running smoothly and securely.\n\nContact to the developer: [robert.brightline@gmail.com]\nSupport the developer\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.2.1\n        \n            Description : The String Names Library provides a simple names function that takes a string input and returns all possible naming convention variants, such as camelCase, snake_case, CONSTANT_CASE, and more. Perfect for tasks like code generation, formatting standardization, or testing naming conventions.\n        \n            Keywords : puq, names, UPPERCASE, lowercase, kebab-case, pascalCase, CamelCase, dot.case, Title case, className, fileName, propertyName\n        \n            Homepage : https://rbrightline.github.io/puq/names\n        \n            Bugs : https://rbrightline.github.io\n        \n            License : MIT\n        \n            Repository : https://github.com/rbrightline/puq/tree/main\n        \n            Author : Robert Brightline\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthPaths   (src/.../auths.ts)\n                        \n                        \n                            Names   (src/.../names.ts)\n                        \n                        \n                            NamesOption   (src/.../names.ts)\n                        \n                        \n                            RestApiPaths   (src/.../paths.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/auths.ts\n    \n    \n        \n            \n                \n                    \n                    AuthPaths\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/lib/names.ts\n    \n    \n        \n            \n                \n                    \n                    Names\n                \n            \n            \n                \n                    Represents different naming conventions for strings.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NamesOption\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/lib/paths.ts\n    \n    \n        \n            \n                \n                    \n                    RestApiPaths\n                \n            \n            \n                \n                    Represents the paths used in REST API endpoints.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
