var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/coverage.html",[0,1.888]],["body/coverage.html",[0,1.379,1,1.379,2,1.379,3,1.719,4,1.929,5,1.929,6,1.379,7,1.262,8,1.379,9,3.43,10,0.115,11,3.43,12,1.852,13,1.379,14,3.126,15,1.017,16,2.59,17,2.59,18,2.091,19,0.712,20,1.379,21,1.379,22,1.379,23,1.365,24,1.131,25,1.002,26,1.379,27,1.379,28,1.379,29,1.379,30,1.929,31,1.929,32,0.083,33,0.083]],["title/dependencies.html",[34,1.21,35,1.248]],["body/dependencies.html",[10,0.111,32,0.105,33,0.105,35,1.49,36,2.828,37,2.828]],["title/miscellaneous/functions.html",[38,0.655,39,1.248]],["body/miscellaneous/functions.html",[2,1.594,3,1.175,6,0.582,7,0.522,8,0.965,10,0.115,15,0.911,19,0.475,20,0.582,21,0.582,22,1.438,23,0.429,24,0.93,25,0.778,26,0.965,28,0.582,32,0.043,33,0.043,38,0.315,39,0.429,40,0.429,41,0.582,42,0.815,43,0.815,44,0.815,45,0.815,46,0.815,47,1.769,48,0.815,49,0.815,50,0.582,51,0.582,52,0.712,53,1.438,54,1.82,55,1.975,56,2.23,57,2.135,58,1.594,59,1.729,60,0.815,61,0.815,62,0.911,63,0.815,64,0.815,65,1.35,66,1.35,67,0.815,68,1.35,69,1.35,70,1.175,71,0.815,72,0.815,73,0.815,74,1.729,75,0.582,76,0.815,77,1.438,78,1.35,79,1.236,80,2.23,81,1.35,82,0.815,83,0.815,84,0.815,85,0.815,86,0.582,87,0.712,88,2.404,89,0.815,90,0.429,91,0.815,92,0.582,93,0.965,94,0.815,95,0.429,96,0.815,97,0.582,98,0.815,99,0.815,100,0.815,101,0.815,102,0.815,103,0.815,104,0.815,105,1.35,106,0.815,107,0.815,108,1.729,109,1.729,110,0.965,111,1.729,112,0.815,113,1.35,114,1.35,115,0.815,116,0.815,117,0.815,118,0.911,119,0.815,120,0.965,121,1.35,122,1.35,123,1.35,124,0.815,125,1.35,126,0.815,127,0.815,128,0.815,129,0.815,130,0.815,131,0.815,132,0.815,133,0.815,134,0.815,135,0.815,136,0.815,137,0.582,138,0.582,139,0.582,140,1.236,141,1.35,142,1.35,143,0.582,144,1.82,145,0.815,146,1.729,147,0.815,148,2.986,149,2.404,150,2.011,151,0.815,152,1.35,153,1.35,154,1.35,155,1.35,156,0.582,157,0.815,158,2.922,159,1.35,160,0.815,161,1.729,162,0.582,163,1.35,164,0.815,165,1.35,166,0.815,167,0.815,168,0.815,169,0.815,170,0.815]],["title/index.html",[40,0.892,171,1.693,172,1.693]],["body/index.html",[1,1.011,7,0.805,10,0.079,19,0.749,24,0.956,25,0.547,29,1.011,32,0.066,33,0.066,35,0.746,39,0.746,47,1.436,50,1.011,51,1.011,52,0.746,54,1.011,55,1.011,57,1.011,62,0.746,70,0.746,75,1.766,79,1.011,87,0.746,90,0.746,95,0.746,118,0.746,120,1.011,137,1.011,138,1.011,139,1.488,140,1.011,143,1.488,144,1.011,156,1.011,162,1.011,173,2.082,174,1.414,175,2.076,176,1.011,177,1.011,178,1.488,179,1.011,180,1.302,181,1.011,182,1.011,183,1.488,184,1.011,185,1.011,186,1.011,187,1.011,188,1.011,189,1.011,190,1.011,191,0.746,192,2.082,193,1.414,194,1.414,195,1.414,196,1.414,197,1.488,198,1.414,199,1.414,200,1.414,201,1.011,202,1.414,203,1.414,204,1.414,205,1.414,206,1.414,207,2.47,208,1.414,209,1.414,210,1.414,211,1.414,212,1.414,213,1.414,214,1.414,215,1.414,216,1.414,217,1.414,218,2.082,219,1.414,220,1.414,221,1.414,222,1.414,223,1.414,224,1.414,225,1.414,226,1.414,227,1.414,228,1.414,229,2.082,230,1.414,231,1.414,232,1.414,233,1.414,234,1.414,235,1.414,236,1.414,237,2.082,238,1.414,239,1.414,240,1.414,241,1.414,242,1.414,243,1.414,244,1.414,245,1.414,246,1.414,247,1.414,248,1.414,249,1.414,250,1.414,251,1.414,252,1.414,253,1.414,254,1.414,255,1.414,256,1.414,257,1.414,258,1.414,259,2.082,260,1.414,261,1.414]],["title/modules.html",[262,1.888]],["body/modules.html",[10,0.106,32,0.106,33,0.106,262,2.063]],["title/overview.html",[263,1.888]],["body/overview.html",[10,0.106,32,0.106,33,0.106,263,2.063]],["title/properties.html",[34,1.21,264,1.693]],["body/properties.html",[7,0.767,10,0.114,19,0.815,32,0.084,33,0.084,47,1.391,58,1.418,62,1.046,70,1.046,77,1.887,87,1.391,90,1.046,92,1.418,93,1.418,95,1.046,97,1.418,110,1.418,118,1.046,175,1.418,176,1.418,177,1.418,178,1.418,179,1.418,180,1.391,181,1.418,182,1.418,183,1.418,184,1.418,185,1.418,186,1.418,187,1.418,188,1.418,189,1.418,190,1.418,191,1.046,264,1.418,265,1.984,266,1.984,267,1.984,268,1.984,269,1.984,270,1.984,271,1.984,272,1.984,273,1.984,274,1.984,275,1.984,276,1.984,277,1.984,278,1.984,279,1.984,280,1.984,281,1.984,282,1.984,283,1.984,284,1.984]],["title/miscellaneous/typealiases.html",[38,0.655,285,2.369]],["body/miscellaneous/typealiases.html",[3,1.786,10,0.089,12,2,13,2,15,1.475,18,2.48,19,0.769,23,1.143,24,1.311,25,1.082,27,1.55,32,0.089,33,0.089,38,0.839,40,1.143,41,1.55,52,1.143,53,1.55,86,1.55,180,1.143,191,1.143,197,1.55,201,1.55,286,2.169,287,2.798,288,2.169,289,3.273,290,2.798,291,2.169]]],"invertedIndex":[["",{"_index":10,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":16,"title":{},"body":{"coverage.html":{}}}],["0.4.13",{"_index":266,"title":{},"body":{"properties.html":{}}}],["0.5.15",{"_index":37,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":17,"title":{},"body":{"coverage.html":{}}}],["1/1",{"_index":11,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":9,"title":{},"body":{"coverage.html":{}}}],["add",{"_index":162,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["adding",{"_index":107,"title":{},"body":{"miscellaneous/functions.html":{}}}],["alias",{"_index":14,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":286,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["api",{"_index":53,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["applied",{"_index":127,"title":{},"body":{"miscellaneous/functions.html":{}}}],["auth",{"_index":71,"title":{},"body":{"miscellaneous/functions.html":{}}}],["auth,security",{"_index":63,"title":{},"body":{"miscellaneous/functions.html":{}}}],["authentication",{"_index":51,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["author",{"_index":282,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":50,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["authpaths",{"_index":25,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["authpaths(prefix",{"_index":46,"title":{},"body":{"miscellaneous/functions.html":{}}}],["based",{"_index":194,"title":{},"body":{"index.html":{}}}],["before",{"_index":109,"title":{},"body":{"miscellaneous/functions.html":{}}}],["better",{"_index":64,"title":{},"body":{"miscellaneous/functions.html":{}}}],["between",{"_index":204,"title":{},"body":{"index.html":{}}}],["brightline",{"_index":284,"title":{},"body":{"properties.html":{}}}],["bug",{"_index":240,"title":{},"body":{"index.html":{}}}],["bugs",{"_index":276,"title":{},"body":{"properties.html":{}}}],["camelcase",{"_index":87,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["capitalized",{"_index":133,"title":{},"body":{"miscellaneous/functions.html":{}}}],["capitalizing",{"_index":112,"title":{},"body":{"miscellaneous/functions.html":{}}}],["case",{"_index":77,"title":{},"body":{"miscellaneous/functions.html":{},"properties.html":{}}}],["checks",{"_index":128,"title":{},"body":{"miscellaneous/functions.html":{}}}],["classname",{"_index":271,"title":{},"body":{"properties.html":{}}}],["code",{"_index":186,"title":{},"body":{"index.html":{},"properties.html":{}}}],["common",{"_index":195,"title":{},"body":{"index.html":{}}}],["commonly",{"_index":196,"title":{},"body":{"index.html":{}}}],["compatibility",{"_index":243,"title":{},"body":{"index.html":{}}}],["configure",{"_index":67,"title":{},"body":{"miscellaneous/functions.html":{}}}],["consider",{"_index":224,"title":{},"body":{"index.html":{}}}],["consistent",{"_index":208,"title":{},"body":{"index.html":{}}}],["constant_case",{"_index":90,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["constcase",{"_index":89,"title":{},"body":{"miscellaneous/functions.html":{}}}],["contact",{"_index":258,"title":{},"body":{"index.html":{}}}],["containing",{"_index":85,"title":{},"body":{"miscellaneous/functions.html":{}}}],["contains",{"_index":129,"title":{},"body":{"miscellaneous/functions.html":{}}}],["contributions",{"_index":228,"title":{},"body":{"index.html":{}}}],["controllername",{"_index":98,"title":{},"body":{"miscellaneous/functions.html":{}}}],["convention",{"_index":181,"title":{},"body":{"index.html":{},"properties.html":{}}}],["conventions",{"_index":191,"title":{},"body":{"index.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["converts",{"_index":203,"title":{},"body":{"index.html":{}}}],["count",{"_index":156,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["cout",{"_index":157,"title":{},"body":{"miscellaneous/functions.html":{}}}],["coverage",{"_index":0,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":135,"title":{},"body":{"miscellaneous/functions.html":{}}}],["crud",{"_index":199,"title":{},"body":{"index.html":{}}}],["custom",{"_index":116,"title":{},"body":{"miscellaneous/functions.html":{}}}],["data",{"_index":159,"title":{},"body":{"miscellaneous/functions.html":{}}}],["database",{"_index":198,"title":{},"body":{"index.html":{}}}],["date",{"_index":232,"title":{},"body":{"index.html":{}}}],["decrement",{"_index":155,"title":{},"body":{"miscellaneous/functions.html":{}}}],["default",{"_index":125,"title":{},"body":{"miscellaneous/functions.html":{}}}],["delete",{"_index":149,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dependencies",{"_index":35,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["description",{"_index":58,"title":{},"body":{"miscellaneous/functions.html":{},"properties.html":{}}}],["developer",{"_index":259,"title":{},"body":{"index.html":{}}}],["development",{"_index":227,"title":{},"body":{"index.html":{}}}],["different",{"_index":86,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["documentation",{"_index":1,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dollar",{"_index":131,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dot.case",{"_index":270,"title":{},"body":{"properties.html":{}}}],["each",{"_index":136,"title":{},"body":{"miscellaneous/functions.html":{}}}],["effort",{"_index":221,"title":{},"body":{"index.html":{}}}],["empty",{"_index":61,"title":{},"body":{"miscellaneous/functions.html":{}}}],["endpoints",{"_index":201,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["enetity",{"_index":161,"title":{},"body":{"miscellaneous/functions.html":{}}}],["english",{"_index":169,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ensure",{"_index":207,"title":{},"body":{"index.html":{}}}],["entities",{"_index":141,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entity",{"_index":144,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["even",{"_index":247,"title":{},"body":{"index.html":{}}}],["example",{"_index":210,"title":{},"body":{"index.html":{}}}],["extra",{"_index":82,"title":{},"body":{"miscellaneous/functions.html":{}}}],["features",{"_index":192,"title":{},"body":{"index.html":{}}}],["file",{"_index":2,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["filename",{"_index":272,"title":{},"body":{"properties.html":{}}}],["find",{"_index":140,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["first",{"_index":113,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fixes",{"_index":241,"title":{},"body":{"index.html":{}}}],["following",{"_index":168,"title":{},"body":{"miscellaneous/functions.html":{}}}],["format",{"_index":88,"title":{},"body":{"miscellaneous/functions.html":{}}}],["formats",{"_index":78,"title":{},"body":{"miscellaneous/functions.html":{}}}],["formatting",{"_index":188,"title":{},"body":{"index.html":{},"properties.html":{}}}],["forms",{"_index":205,"title":{},"body":{"index.html":{}}}],["function",{"_index":7,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["functions",{"_index":39,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["funding",{"_index":237,"title":{},"body":{"index.html":{}}}],["general",{"_index":252,"title":{},"body":{"index.html":{}}}],["generate",{"_index":48,"title":{},"body":{"miscellaneous/functions.html":{}}}],["generates",{"_index":75,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["generation",{"_index":187,"title":{},"body":{"index.html":{},"properties.html":{}}}],["getting",{"_index":171,"title":{"index.html":{}},"body":{}}],["given",{"_index":79,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["go",{"_index":238,"title":{},"body":{"index.html":{}}}],["grammer",{"_index":170,"title":{},"body":{"miscellaneous/functions.html":{}}}],["help",{"_index":229,"title":{},"body":{"index.html":{}}}],["here",{"_index":66,"title":{},"body":{"miscellaneous/functions.html":{}}}],["homepage",{"_index":274,"title":{},"body":{"properties.html":{}}}],["https://github.com/rbrightline/puq/tree/main",{"_index":281,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io",{"_index":277,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io/puq/names",{"_index":275,"title":{},"body":{"properties.html":{}}}],["id",{"_index":148,"title":{},"body":{"miscellaneous/functions.html":{}}}],["identifier",{"_index":4,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":165,"title":{},"body":{"miscellaneous/functions.html":{}}}],["img",{"_index":164,"title":{},"body":{"miscellaneous/functions.html":{}}}],["improvements",{"_index":249,"title":{},"body":{"index.html":{}}}],["including",{"_index":138,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["increment",{"_index":152,"title":{},"body":{"miscellaneous/functions.html":{}}}],["index",{"_index":40,"title":{"index.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["input",{"_index":118,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["insert",{"_index":147,"title":{},"body":{"miscellaneous/functions.html":{}}}],["install",{"_index":209,"title":{},"body":{"index.html":{}}}],["instant",{"_index":236,"title":{},"body":{"index.html":{}}}],["internally",{"_index":206,"title":{},"body":{"index.html":{}}}],["it's",{"_index":215,"title":{},"body":{"index.html":{}}}],["kebab",{"_index":92,"title":{},"body":{"miscellaneous/functions.html":{},"properties.html":{}}}],["kebabcase",{"_index":91,"title":{},"body":{"miscellaneous/functions.html":{}}}],["keep",{"_index":254,"title":{},"body":{"index.html":{}}}],["keywords",{"_index":267,"title":{},"body":{"properties.html":{}}}],["latest",{"_index":244,"title":{},"body":{"index.html":{}}}],["letter",{"_index":114,"title":{},"body":{"miscellaneous/functions.html":{}}}],["letters",{"_index":111,"title":{},"body":{"miscellaneous/functions.html":{}}}],["library",{"_index":175,"title":{},"body":{"index.html":{},"properties.html":{}}}],["license",{"_index":278,"title":{},"body":{"properties.html":{}}}],["link",{"_index":72,"title":{},"body":{"miscellaneous/functions.html":{}}}],["literal",{"_index":289,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lowercase",{"_index":269,"title":{},"body":{"properties.html":{}}}],["main",{"_index":68,"title":{},"body":{"miscellaneous/functions.html":{}}}],["maintained",{"_index":235,"title":{},"body":{"index.html":{}}}],["maintaining",{"_index":219,"title":{},"body":{"index.html":{}}}],["maintenance",{"_index":253,"title":{},"body":{"index.html":{}}}],["make",{"_index":246,"title":{},"body":{"index.html":{}}}],["matching",{"_index":33,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["metadata",{"_index":145,"title":{},"body":{"miscellaneous/functions.html":{}}}],["miscellaneous",{"_index":38,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["mit",{"_index":279,"title":{},"body":{"properties.html":{}}}],["module",{"_index":69,"title":{},"body":{"miscellaneous/functions.html":{}}}],["modulename",{"_index":102,"title":{},"body":{"miscellaneous/functions.html":{}}}],["modules",{"_index":262,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":183,"title":{},"body":{"index.html":{},"properties.html":{}}}],["name",{"_index":57,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["namecontroller",{"_index":99,"title":{},"body":{"miscellaneous/functions.html":{}}}],["namemodule",{"_index":103,"title":{},"body":{"miscellaneous/functions.html":{}}}],["names",{"_index":19,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["names(resourcename",{"_index":73,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nameservice",{"_index":101,"title":{},"body":{"miscellaneous/functions.html":{}}}],["namesoption",{"_index":15,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["naming",{"_index":180,"title":{},"body":{"index.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["new",{"_index":29,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["none",{"_index":60,"title":{},"body":{"miscellaneous/functions.html":{}}}],["normalization",{"_index":124,"title":{},"body":{"miscellaneous/functions.html":{}}}],["normalize",{"_index":8,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["normalize(value",{"_index":104,"title":{},"body":{"miscellaneous/functions.html":{}}}],["normalized",{"_index":123,"title":{},"body":{"miscellaneous/functions.html":{}}}],["normalizes",{"_index":106,"title":{},"body":{"miscellaneous/functions.html":{}}}],["object",{"_index":84,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ongoing",{"_index":226,"title":{},"body":{"index.html":{}}}],["open",{"_index":216,"title":{},"body":{"index.html":{}}}],["operations",{"_index":137,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["option.ts",{"_index":13,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["optional",{"_index":54,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["optionally",{"_index":115,"title":{},"body":{"miscellaneous/functions.html":{}}}],["options",{"_index":74,"title":{},"body":{"miscellaneous/functions.html":{}}}],["out",{"_index":251,"title":{},"body":{"index.html":{}}}],["overview",{"_index":263,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":34,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":56,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pascalcase",{"_index":93,"title":{},"body":{"miscellaneous/functions.html":{},"properties.html":{}}}],["paths",{"_index":24,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["paths(resourcename",{"_index":134,"title":{},"body":{"miscellaneous/functions.html":{}}}],["paths.ts",{"_index":26,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["perfect",{"_index":184,"title":{},"body":{"index.html":{},"properties.html":{}}}],["please",{"_index":223,"title":{},"body":{"index.html":{}}}],["plural",{"_index":139,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["pluralize",{"_index":22,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["pluralize(name",{"_index":167,"title":{},"body":{"miscellaneous/functions.html":{}}}],["plurize",{"_index":202,"title":{},"body":{"index.html":{}}}],["pnpm",{"_index":211,"title":{},"body":{"index.html":{}}}],["possible",{"_index":179,"title":{},"body":{"index.html":{},"properties.html":{}}}],["post",{"_index":146,"title":{},"body":{"miscellaneous/functions.html":{}}}],["powerful",{"_index":248,"title":{},"body":{"index.html":{}}}],["pre",{"_index":117,"title":{},"body":{"miscellaneous/functions.html":{}}}],["prefix",{"_index":55,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["preinputvalidator",{"_index":105,"title":{},"body":{"miscellaneous/functions.html":{}}}],["project",{"_index":218,"title":{},"body":{"index.html":{}}}],["properties",{"_index":264,"title":{"properties.html":{}},"body":{"properties.html":{}}}],["property",{"_index":154,"title":{},"body":{"miscellaneous/functions.html":{}}}],["propertyname",{"_index":273,"title":{},"body":{"properties.html":{}}}],["provided",{"_index":120,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["provides",{"_index":176,"title":{},"body":{"index.html":{},"properties.html":{}}}],["puq",{"_index":268,"title":{},"body":{"properties.html":{}}}],["puq/names",{"_index":173,"title":{},"body":{"index.html":{}}}],["puq/namesfunding",{"_index":212,"title":{},"body":{"index.html":{}}}],["put",{"_index":150,"title":{},"body":{"miscellaneous/functions.html":{}}}],["query",{"_index":142,"title":{},"body":{"miscellaneous/functions.html":{}}}],["recommended",{"_index":166,"title":{},"body":{"miscellaneous/functions.html":{}}}],["relation",{"_index":158,"title":{},"body":{"miscellaneous/functions.html":{}}}],["relationid",{"_index":160,"title":{},"body":{"miscellaneous/functions.html":{}}}],["relations",{"_index":200,"title":{},"body":{"index.html":{}}}],["repository",{"_index":280,"title":{},"body":{"properties.html":{}}}],["represents",{"_index":290,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["resource",{"_index":80,"title":{},"body":{"miscellaneous/functions.html":{}}}],["resourcename",{"_index":81,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rest",{"_index":52,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["results",{"_index":32,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["returns",{"_index":70,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["robert",{"_index":283,"title":{},"body":{"properties.html":{}}}],["robert.brightline@gmail.com",{"_index":260,"title":{},"body":{"index.html":{}}}],["running",{"_index":255,"title":{},"body":{"index.html":{}}}],["secure",{"_index":233,"title":{},"body":{"index.html":{}}}],["securely",{"_index":257,"title":{},"body":{"index.html":{}}}],["servicename",{"_index":100,"title":{},"body":{"miscellaneous/functions.html":{}}}],["set",{"_index":65,"title":{},"body":{"miscellaneous/functions.html":{}}}],["signs",{"_index":132,"title":{},"body":{"miscellaneous/functions.html":{}}}],["simple",{"_index":177,"title":{},"body":{"index.html":{},"properties.html":{}}}],["singular",{"_index":143,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["smoothly",{"_index":256,"title":{},"body":{"index.html":{}}}],["snake_case",{"_index":95,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["snakecase",{"_index":94,"title":{},"body":{"miscellaneous/functions.html":{}}}],["source",{"_index":217,"title":{},"body":{"index.html":{}}}],["spaces",{"_index":108,"title":{},"body":{"miscellaneous/functions.html":{}}}],["specific",{"_index":153,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../auth",{"_index":41,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../names",{"_index":287,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../names.ts",{"_index":42,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../normalize.ts",{"_index":43,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../paths",{"_index":288,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../paths.ts",{"_index":44,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../pluralize.ts",{"_index":45,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/lib/common/normalize.ts",{"_index":6,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/names/names",{"_index":12,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/names/names.ts",{"_index":20,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/names/pluralize.ts",{"_index":21,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/paths/auth",{"_index":23,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/paths/paths",{"_index":27,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/paths/paths.ts",{"_index":28,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["standard",{"_index":49,"title":{},"body":{"miscellaneous/functions.html":{}}}],["standardization",{"_index":189,"title":{},"body":{"index.html":{},"properties.html":{}}}],["started",{"_index":172,"title":{"index.html":{}},"body":{}}],["statements",{"_index":5,"title":{},"body":{"coverage.html":{}}}],["stays",{"_index":230,"title":{},"body":{"index.html":{}}}],["string",{"_index":47,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["strings",{"_index":291,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["such",{"_index":62,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["suffix",{"_index":83,"title":{},"body":{"miscellaneous/functions.html":{}}}],["summary",{"_index":174,"title":{},"body":{"index.html":{}}}],["support",{"_index":261,"title":{},"body":{"index.html":{}}}],["supporting",{"_index":225,"title":{},"body":{"index.html":{}}}],["swc/helpers",{"_index":36,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":31,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":30,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":178,"title":{},"body":{"index.html":{},"properties.html":{}}}],["tasks",{"_index":185,"title":{},"body":{"index.html":{},"properties.html":{}}}],["testing",{"_index":190,"title":{},"body":{"index.html":{},"properties.html":{}}}],["thank",{"_index":213,"title":{},"body":{"index.html":{}}}],["time",{"_index":220,"title":{},"body":{"index.html":{}}}],["title",{"_index":97,"title":{},"body":{"miscellaneous/functions.html":{},"properties.html":{}}}],["titlecase",{"_index":96,"title":{},"body":{"miscellaneous/functions.html":{}}}],["toward",{"_index":239,"title":{},"body":{"index.html":{}}}],["type",{"_index":3,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["type.ts",{"_index":18,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":285,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["udpate",{"_index":151,"title":{},"body":{"miscellaneous/functions.html":{}}}],["underscores",{"_index":130,"title":{},"body":{"miscellaneous/functions.html":{}}}],["up",{"_index":231,"title":{},"body":{"index.html":{}}}],["updates",{"_index":242,"title":{},"body":{"index.html":{}}}],["upload",{"_index":163,"title":{},"body":{"miscellaneous/functions.html":{}}}],["uppercase",{"_index":110,"title":{},"body":{"miscellaneous/functions.html":{},"properties.html":{}}}],["used",{"_index":197,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["useful",{"_index":222,"title":{},"body":{"index.html":{}}}],["users",{"_index":250,"title":{},"body":{"index.html":{}}}],["using",{"_index":214,"title":{},"body":{"index.html":{}}}],["validate",{"_index":121,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validation",{"_index":126,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validator",{"_index":119,"title":{},"body":{"miscellaneous/functions.html":{}}}],["value",{"_index":122,"title":{},"body":{"miscellaneous/functions.html":{}}}],["variants",{"_index":182,"title":{},"body":{"index.html":{},"properties.html":{}}}],["variations",{"_index":193,"title":{},"body":{"index.html":{}}}],["various",{"_index":76,"title":{},"body":{"miscellaneous/functions.html":{}}}],["version",{"_index":265,"title":{},"body":{"properties.html":{}}}],["versions",{"_index":245,"title":{},"body":{"index.html":{}}}],["well",{"_index":234,"title":{},"body":{"index.html":{}}}],["yes",{"_index":59,"title":{},"body":{"miscellaneous/functions.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/lib/common/normalize.ts\n            \n            function\n            normalize\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/names/names-option.ts\n            \n            type alias\n            NamesOption\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/names/names-type.ts\n            \n            type alias\n            Names\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/names/names.ts\n            \n            function\n            names\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/names/pluralize.ts\n            \n            function\n            pluralize\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/paths/auth-paths-type.ts\n            \n            type alias\n            AuthPaths\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/paths/auth-paths.ts\n            \n            function\n            authPaths\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/paths/paths-type.ts\n            \n            type alias\n            Paths\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/paths/paths.ts\n            \n            function\n            paths\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @swc/helpers : ^0.5.15\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            authPaths   (src/.../auth-paths.ts)\n                        \n                        \n                            names   (src/.../names.ts)\n                        \n                        \n                            normalize   (src/.../normalize.ts)\n                        \n                        \n                            paths   (src/.../paths.ts)\n                        \n                        \n                            pluralize   (src/.../pluralize.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/paths/auth-paths.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authPaths\n                        \n                    \n                \n            \n            \n                \nauthPaths(prefix?: string)\n                \n            \n\n\n\n\n            \n                \n                        Generate the standard authorization and authentication rest-api paths with (optional) prefix\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                prefix\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    prefix can be any none-empty string such as api, auth,security. But it is better do not set prefix here, configure it in the main module.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         AuthPaths\n\n                        \n                            \n                                auth paths {@link AuthPaths}\n\n                            \n                \n            \n        \n    \n    src/lib/names/names.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        names\n                        \n                    \n                \n            \n            \n                \nnames(resourceName: string, options?: NamesOption)\n                \n            \n\n\n\n\n            \n                \n                        Generates various case formats for a given resource name.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resourceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    the resource name\n\n                                            \n                                        \n                                        \n                                                options\n                                            \n                                                            NamesOption\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    extra options such as prefix, suffix NamesOption\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Names\n\n                        \n                            \n                                An object containing the resource name in different case formats:\n\ncamelCase: camelCase format.\nconstCase: CONSTANT_CASE format.\nkebabCase: kebab-case format.\npascalCase: PascalCase format.\nsnakeCase: snake_case format.\ntitleCase: Title Case format.\ncontrollerName: NameController.\nserviceName: NameService.\nmoduleName: NameModule.\n\n\n                            \n                \n            \n        \n    \n    src/lib/common/normalize.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        normalize\n                        \n                    \n                \n            \n            \n                \nnormalize(value: string, preInputValidator?)\n                \n            \n\n\n\n\n            \n                \n                        Normalizes a given string by adding spaces before uppercase letters and capitalizing the first letter.\nOptionally, a custom pre-input validator function can be provided to validate the input string.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe string to be normalized.\n\n\n                                            \n                                        \n                                        \n                                                preInputValidator\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nAn optional function to validate the input string before normalization.\nIf not provided, a default validation is applied which checks if the string\ncontains only letters, underscores, dollar signs, and spaces.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The normalized string with spaces before uppercase letters and the first letter capitalized.\n\n                            \n                \n            \n        \n    \n    src/lib/paths/paths.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        paths\n                        \n                    \n                \n            \n            \n                \npaths(resourceName: string, prefix: string)\n                \n            \n\n\n\n\n            \n                \n                        Create rest-api resource paths for each operations including\n\nplural :\n\nGET  : find all entities by query\n\n\nsingular :\n\nGET  : entity metadata\nPOST : insert entity\n\n\nid :\n\nGET     : find entity by id\nDELETE  : delete entity by id\nPUT     : udpate entity by id\n\n\nincrement :\n\nPUT : increment a specific property\n\n\ndecrement :\n\nPUT : decrement a specific property\n\n\ncount :\n\nGET : find the cout of entities by query\n\n\nrelation :\n\nGET    :  get the relation data by entity id and relation name\nDELETE :  delete  the relation by entity id and relation name.\n\n\nrelationId :\n\nGET    : get the relation data by enetity id and relation id\nDELETE : delete the relation  by enetity id and relation id\nPUT    : add the relation by enetity id and relation id\n\n\nfile :\n\nGET    : get file\nPOST   : upload file\n\n\nimg :\n\nGET    : get image file\nPOST   : upload image file\n\n\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resourceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                            \n                                        \n                                        \n                                                prefix\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                            \n                                                    prefix such as api, resource. Do not set the prefix here. It is recommended to do in main module.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Paths\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/names/pluralize.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        pluralize\n                        \n                    \n                \n            \n            \n                \npluralize(name: string)\n                \n            \n\n\n\n\n            \n                \n                        Pluralize the given string following (english) grammer\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    name to pluralize\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n@puq/names\nSummary\nThe String Names Library provides a simple names function that takes a string input and returns all possible naming convention variants, such as camelCase, snake_case, CONSTANT_CASE, and more. Perfect for tasks like code generation, formatting standardization, or testing naming conventions.\nFeatures\n\nnames: Generates all variations of names based on a provided string.\n\nauthPaths: Generates common authentication and authorization paths with an optional prefix.\n\npaths: Generates commonly used REST paths for database entity CRUD operations and relations, including count endpoints.\n\nplurize: Converts a given string between singular and plural forms. This function is used internally by all other functions to ensure consistent singular and plural naming.\n\n\nInstall\nExample :  pnpm add @puq/namesFunding\nThank you for using @puq/names It's an open-source project, and maintaining it takes time and effort. If you find this library useful, please consider supporting its ongoing development. Your contributions help ensure that the project stays up-to-date, secure, and well-maintained.\nInstant Funding\nYour funding will go toward\n\nBug fixes and updates to ensure compatibility with the latest versions of dependencies.\nNew features that will make the library even more powerful.\nDocumentation improvements to help users get the most out of [Your Library Name].\nGeneral maintenance to keep the library running smoothly and securely.\n\nContact to the developer: [robert.brightline@gmail.com]\nSupport the developer\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.4.13\n        \n            Description : The String Names Library provides a simple names function that takes a string input and returns all possible naming convention variants, such as camelCase, snake_case, CONSTANT_CASE, and more. Perfect for tasks like code generation, formatting standardization, or testing naming conventions.\n        \n            Keywords : puq, names, UPPERCASE, lowercase, kebab-case, pascalCase, CamelCase, dot.case, Title case, className, fileName, propertyName\n        \n            Homepage : https://rbrightline.github.io/puq/names\n        \n            Bugs : https://rbrightline.github.io\n        \n            License : MIT\n        \n            Repository : https://github.com/rbrightline/puq/tree/main\n        \n            Author : Robert Brightline\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthPaths   (src/.../auth-paths-type.ts)\n                        \n                        \n                            Names   (src/.../names-type.ts)\n                        \n                        \n                            NamesOption   (src/.../names-option.ts)\n                        \n                        \n                            Paths   (src/.../paths-type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/paths/auth-paths-type.ts\n    \n    \n        \n            \n                \n                    \n                    AuthPaths\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/lib/names/names-type.ts\n    \n    \n        \n            \n                \n                    \n                    Names\n                \n            \n            \n                \n                    Represents different naming conventions for strings.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/lib/names/names-option.ts\n    \n    \n        \n            \n                \n                    \n                    NamesOption\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/lib/paths/paths-type.ts\n    \n    \n        \n            \n                \n                    \n                    Paths\n                \n            \n            \n                \n                    Represents the paths used in REST API endpoints.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
