var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/coverage.html",[0,1.706]],["body/coverage.html",[0,1.143,1,1.143,2,1.645,3,1.458,4,1.645,5,1.645,6,1.123,7,2.051,8,1.143,9,3.129,10,0.128,11,3.129,12,2.812,13,0.812,14,2.274,15,2.274,16,1.287,17,0.509,18,0.812,19,1.143,20,1.143,21,1.123,22,0.812,23,0.812,24,1.143,25,1.143,26,1.143,27,1.645,28,1.645,29,0.088,30,0.088]],["title/miscellaneous/functions.html",[31,0.539,32,1.528]],["body/miscellaneous/functions.html",[3,1.079,6,0.411,7,0.944,8,0.944,10,0.114,13,0.411,16,0.411,17,0.385,18,0.671,19,0.578,20,0.944,21,0.411,22,1.158,23,0.411,24,0.578,25,1.195,29,0.052,30,0.052,31,0.286,32,0.578,33,0.411,34,0.578,35,0.578,36,0.832,37,0.578,38,0.832,39,0.832,40,3.187,41,0.832,42,0.832,43,1.195,44,1.195,45,2.186,46,1.951,47,2.579,48,1.72,49,1.72,50,2.186,51,2.186,52,0.832,53,1.358,54,1.358,55,1.358,56,2.186,57,1.72,58,1.72,59,2.345,60,1.195,61,0.832,62,0.832,63,0.944,64,1.358,65,1.358,66,1.358,67,1.358,68,2.345,69,0.832,70,0.832,71,0.832,72,0.832,73,1.358,74,0.832,75,0.832,76,0.832,77,0.832,78,0.832,79,0.832,80,0.832,81,0.832,82,0.832,83,0.832,84,0.832,85,1.358,86,0.832,87,0.832,88,1.72,89,1.72,90,1.358,91,1.72,92,0.832,93,1.358,94,1.358,95,0.832,96,0.832,97,0.832,98,1.72,99,0.832,100,1.358,101,1.358,102,1.358,103,0.832,104,0.832,105,0.832,106,0.832,107,0.832,108,0.832,109,0.832,110,0.832,111,0.832,112,0.832,113,0.832,114,0.832,115,0.832,116,0.832,117,0.832,118,0.832,119,0.832,120,0.832,121,0.832]],["title/index.html",[33,0.774,122,1.567,123,1.567]],["body/index.html",[1,1.081,10,0.098,17,0.348,26,1.081,29,0.084,30,0.084,46,1.081,124,2.187,125,1.556,126,1.556,127,1.556,128,1.556,129,1.556,130,1.556,131,1.556,132,1.556,133,1.556,134,1.556,135,1.556,136,2.187,137,1.556,138,1.556,139,1.556,140,1.556,141,1.556,142,2.745,143,1.556,144,1.556,145,1.556,146,1.556,147,1.556,148,1.556,149,1.556,150,2.187,151,2.187,152,1.556,153,1.556,154,1.556,155,1.556,156,1.556,157,1.556,158,1.556,159,2.187,160,1.556,161,1.556,162,1.556,163,1.556,164,1.556,165,1.556,166,1.556,167,1.556,168,1.556,169,1.556,170,1.556,171,1.556,172,1.556,173,1.556,174,1.556,175,1.556,176,1.556,177,1.556,178,1.556,179,1.556,180,1.556,181,1.556,182,1.556,183,1.556,184,2.187,185,1.556,186,1.556]],["title/modules.html",[187,1.706]],["body/modules.html",[10,0.119,29,0.119,30,0.119,187,1.841]],["title/overview.html",[188,1.706]],["body/overview.html",[10,0.119,29,0.119,30,0.119,188,1.841]],["title/properties.html",[189,1.567,190,1.528]],["body/properties.html",[10,0.132,17,0.605,29,0.104,30,0.104,60,1.484,190,1.484,191,2.136,192,2.136,193,2.136,194,2.136,195,2.136,196,2.136,197,2.136,198,2.136,199,2.136,200,2.136,201,2.136,202,2.136,203,2.136,204,2.136,205,2.136]],["title/miscellaneous/typealiases.html",[31,0.539,206,2.199]],["body/miscellaneous/typealiases.html",[3,1.55,6,0.975,10,0.099,13,1.269,16,0.975,17,0.575,18,1.269,21,0.975,22,0.975,23,1.269,29,0.099,30,0.099,31,0.678,33,0.975,34,1.372,35,1.786,37,1.372,43,1.372,44,1.372,63,1.372,207,1.974,208,3.028,209,2.57,210,1.974,211,1.974,212,1.974,213,1.974,214,1.974]]],"invertedIndex":[["",{"_index":10,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":14,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":192,"title":{},"body":{"properties.html":{}}}],["0/1",{"_index":15,"title":{},"body":{"coverage.html":{}}}],["1/1",{"_index":11,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":9,"title":{},"body":{"coverage.html":{}}}],["add",{"_index":129,"title":{},"body":{"index.html":{}}}],["adding",{"_index":87,"title":{},"body":{"miscellaneous/functions.html":{}}}],["alias",{"_index":12,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":207,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["api",{"_index":44,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["applied",{"_index":105,"title":{},"body":{"miscellaneous/functions.html":{}}}],["auth",{"_index":42,"title":{},"body":{"miscellaneous/functions.html":{}}}],["author",{"_index":203,"title":{},"body":{"properties.html":{}}}],["authpaths",{"_index":13,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["auths",{"_index":8,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["auths(prefix",{"_index":39,"title":{},"body":{"miscellaneous/functions.html":{}}}],["before",{"_index":89,"title":{},"body":{"miscellaneous/functions.html":{}}}],["brightline",{"_index":205,"title":{},"body":{"properties.html":{}}}],["bug",{"_index":162,"title":{},"body":{"index.html":{}}}],["bugs",{"_index":197,"title":{},"body":{"properties.html":{}}}],["camelcase",{"_index":67,"title":{},"body":{"miscellaneous/functions.html":{}}}],["capitalized",{"_index":111,"title":{},"body":{"miscellaneous/functions.html":{}}}],["capitalizing",{"_index":92,"title":{},"body":{"miscellaneous/functions.html":{}}}],["case",{"_index":56,"title":{},"body":{"miscellaneous/functions.html":{}}}],["checks",{"_index":106,"title":{},"body":{"miscellaneous/functions.html":{}}}],["compatibility",{"_index":165,"title":{},"body":{"index.html":{}}}],["consider",{"_index":145,"title":{},"body":{"index.html":{}}}],["constant_case",{"_index":70,"title":{},"body":{"miscellaneous/functions.html":{}}}],["constcase",{"_index":69,"title":{},"body":{"miscellaneous/functions.html":{}}}],["contact",{"_index":183,"title":{},"body":{"index.html":{}}}],["containing",{"_index":66,"title":{},"body":{"miscellaneous/functions.html":{}}}],["contains",{"_index":107,"title":{},"body":{"miscellaneous/functions.html":{}}}],["contributions",{"_index":149,"title":{},"body":{"index.html":{}}}],["controllername",{"_index":78,"title":{},"body":{"miscellaneous/functions.html":{}}}],["conventions",{"_index":211,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["coverage",{"_index":0,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["custom",{"_index":96,"title":{},"body":{"miscellaneous/functions.html":{}}}],["date",{"_index":154,"title":{},"body":{"index.html":{}}}],["default",{"_index":48,"title":{},"body":{"miscellaneous/functions.html":{}}}],["defaults",{"_index":117,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dependencies",{"_index":168,"title":{},"body":{"index.html":{}}}],["description",{"_index":60,"title":{},"body":{"miscellaneous/functions.html":{},"properties.html":{}}}],["developer",{"_index":184,"title":{},"body":{"index.html":{}}}],["development",{"_index":148,"title":{},"body":{"index.html":{}}}],["different",{"_index":63,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["documentation",{"_index":1,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dollar",{"_index":109,"title":{},"body":{"miscellaneous/functions.html":{}}}],["each",{"_index":115,"title":{},"body":{"miscellaneous/functions.html":{}}}],["effort",{"_index":140,"title":{},"body":{"index.html":{}}}],["empty",{"_index":118,"title":{},"body":{"miscellaneous/functions.html":{}}}],["endpoints",{"_index":214,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["english",{"_index":120,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ensure",{"_index":151,"title":{},"body":{"index.html":{}}}],["even",{"_index":171,"title":{},"body":{"index.html":{}}}],["example",{"_index":127,"title":{},"body":{"index.html":{}}}],["features",{"_index":169,"title":{},"body":{"index.html":{}}}],["file",{"_index":2,"title":{},"body":{"coverage.html":{}}}],["find",{"_index":141,"title":{},"body":{"index.html":{}}}],["first",{"_index":93,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fixes",{"_index":163,"title":{},"body":{"index.html":{}}}],["format",{"_index":68,"title":{},"body":{"miscellaneous/functions.html":{}}}],["formats",{"_index":57,"title":{},"body":{"miscellaneous/functions.html":{}}}],["function",{"_index":7,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":32,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funding",{"_index":159,"title":{},"body":{"index.html":{}}}],["geneate",{"_index":41,"title":{},"body":{"miscellaneous/functions.html":{}}}],["general",{"_index":177,"title":{},"body":{"index.html":{}}}],["generate",{"_index":113,"title":{},"body":{"miscellaneous/functions.html":{}}}],["generates",{"_index":54,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getting",{"_index":122,"title":{"index.html":{}},"body":{}}],["given",{"_index":58,"title":{},"body":{"miscellaneous/functions.html":{}}}],["go",{"_index":160,"title":{},"body":{"index.html":{}}}],["help",{"_index":150,"title":{},"body":{"index.html":{}}}],["homepage",{"_index":195,"title":{},"body":{"properties.html":{}}}],["https://github.com/rbrightline/puq/tree/main",{"_index":202,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io",{"_index":198,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io/puq/names",{"_index":196,"title":{},"body":{"properties.html":{}}}],["identifier",{"_index":4,"title":{},"body":{"coverage.html":{}}}],["improvements",{"_index":174,"title":{},"body":{"index.html":{}}}],["index",{"_index":33,"title":{"index.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["input",{"_index":98,"title":{},"body":{"miscellaneous/functions.html":{}}}],["install",{"_index":126,"title":{},"body":{"index.html":{}}}],["instant",{"_index":158,"title":{},"body":{"index.html":{}}}],["it's",{"_index":133,"title":{},"body":{"index.html":{}}}],["kebab",{"_index":72,"title":{},"body":{"miscellaneous/functions.html":{}}}],["kebabcase",{"_index":71,"title":{},"body":{"miscellaneous/functions.html":{}}}],["keep",{"_index":179,"title":{},"body":{"index.html":{}}}],["keywords",{"_index":193,"title":{},"body":{"properties.html":{}}}],["latest",{"_index":166,"title":{},"body":{"index.html":{}}}],["letter",{"_index":94,"title":{},"body":{"miscellaneous/functions.html":{}}}],["letters",{"_index":91,"title":{},"body":{"miscellaneous/functions.html":{}}}],["library",{"_index":142,"title":{},"body":{"index.html":{}}}],["license",{"_index":199,"title":{},"body":{"properties.html":{}}}],["literal",{"_index":208,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["maintained",{"_index":157,"title":{},"body":{"index.html":{}}}],["maintaining",{"_index":137,"title":{},"body":{"index.html":{}}}],["maintenance",{"_index":178,"title":{},"body":{"index.html":{}}}],["make",{"_index":170,"title":{},"body":{"index.html":{}}}],["matching",{"_index":30,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["miscellaneous",{"_index":31,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["mit",{"_index":200,"title":{},"body":{"properties.html":{}}}],["modulename",{"_index":82,"title":{},"body":{"miscellaneous/functions.html":{}}}],["modules",{"_index":187,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":172,"title":{},"body":{"index.html":{}}}],["name",{"_index":46,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["namecontroller",{"_index":79,"title":{},"body":{"miscellaneous/functions.html":{}}}],["namemodule",{"_index":83,"title":{},"body":{"miscellaneous/functions.html":{}}}],["names",{"_index":17,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["names(resourcename",{"_index":52,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nameservice",{"_index":81,"title":{},"body":{"miscellaneous/functions.html":{}}}],["namesoption",{"_index":18,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["naming",{"_index":210,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["new",{"_index":26,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["normalization",{"_index":103,"title":{},"body":{"miscellaneous/functions.html":{}}}],["normalize",{"_index":20,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["normalize(value",{"_index":84,"title":{},"body":{"miscellaneous/functions.html":{}}}],["normalized",{"_index":102,"title":{},"body":{"miscellaneous/functions.html":{}}}],["normalizes",{"_index":86,"title":{},"body":{"miscellaneous/functions.html":{}}}],["object",{"_index":65,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ongoing",{"_index":147,"title":{},"body":{"index.html":{}}}],["open",{"_index":134,"title":{},"body":{"index.html":{}}}],["optional",{"_index":47,"title":{},"body":{"miscellaneous/functions.html":{}}}],["optionally",{"_index":95,"title":{},"body":{"miscellaneous/functions.html":{}}}],["options",{"_index":53,"title":{},"body":{"miscellaneous/functions.html":{}}}],["out",{"_index":176,"title":{},"body":{"index.html":{}}}],["overview",{"_index":188,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":189,"title":{"properties.html":{}},"body":{}}],["parameters",{"_index":45,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pascalcase",{"_index":73,"title":{},"body":{"miscellaneous/functions.html":{}}}],["path",{"_index":116,"title":{},"body":{"miscellaneous/functions.html":{}}}],["paths",{"_index":22,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["paths(name",{"_index":112,"title":{},"body":{"miscellaneous/functions.html":{}}}],["please",{"_index":144,"title":{},"body":{"index.html":{}}}],["pluralize",{"_index":25,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["pluralize(word",{"_index":119,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pnpm",{"_index":128,"title":{},"body":{"index.html":{}}}],["powerful",{"_index":173,"title":{},"body":{"index.html":{}}}],["pre",{"_index":97,"title":{},"body":{"miscellaneous/functions.html":{}}}],["prefix",{"_index":50,"title":{},"body":{"miscellaneous/functions.html":{}}}],["preinputvalidator",{"_index":85,"title":{},"body":{"miscellaneous/functions.html":{}}}],["prepend",{"_index":114,"title":{},"body":{"miscellaneous/functions.html":{}}}],["project",{"_index":136,"title":{},"body":{"index.html":{}}}],["properties",{"_index":190,"title":{"properties.html":{}},"body":{"properties.html":{}}}],["provided",{"_index":100,"title":{},"body":{"miscellaneous/functions.html":{}}}],["puq",{"_index":194,"title":{},"body":{"properties.html":{}}}],["puq/names",{"_index":124,"title":{},"body":{"index.html":{}}}],["puq/namesfunding",{"_index":130,"title":{},"body":{"index.html":{}}}],["repository",{"_index":201,"title":{},"body":{"properties.html":{}}}],["represents",{"_index":209,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["resource",{"_index":59,"title":{},"body":{"miscellaneous/functions.html":{}}}],["resourcename",{"_index":61,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rest",{"_index":43,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["restapipaths",{"_index":23,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["results",{"_index":29,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["returns",{"_index":51,"title":{},"body":{"miscellaneous/functions.html":{}}}],["robert",{"_index":204,"title":{},"body":{"properties.html":{}}}],["robert.brightline@gmail.com",{"_index":185,"title":{},"body":{"index.html":{}}}],["running",{"_index":180,"title":{},"body":{"index.html":{}}}],["secure",{"_index":155,"title":{},"body":{"index.html":{}}}],["securely",{"_index":182,"title":{},"body":{"index.html":{}}}],["servicename",{"_index":80,"title":{},"body":{"miscellaneous/functions.html":{}}}],["signs",{"_index":110,"title":{},"body":{"miscellaneous/functions.html":{}}}],["smoothly",{"_index":181,"title":{},"body":{"index.html":{}}}],["snake_case",{"_index":75,"title":{},"body":{"miscellaneous/functions.html":{}}}],["snakecase",{"_index":74,"title":{},"body":{"miscellaneous/functions.html":{}}}],["source",{"_index":135,"title":{},"body":{"index.html":{}}}],["spaces",{"_index":88,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../auths.ts",{"_index":34,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../names.ts",{"_index":35,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../normalize.ts",{"_index":36,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../paths.ts",{"_index":37,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../pluralize.ts",{"_index":38,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/lib/auths.ts",{"_index":6,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/names.ts",{"_index":16,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/normalize.ts",{"_index":19,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/paths.ts",{"_index":21,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/pluralize.ts",{"_index":24,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["started",{"_index":123,"title":{"index.html":{}},"body":{}}],["statements",{"_index":5,"title":{},"body":{"coverage.html":{}}}],["stays",{"_index":152,"title":{},"body":{"index.html":{}}}],["string",{"_index":40,"title":{},"body":{"miscellaneous/functions.html":{}}}],["strings",{"_index":212,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["summary",{"_index":125,"title":{},"body":{"index.html":{}}}],["support",{"_index":186,"title":{},"body":{"index.html":{}}}],["supporting",{"_index":146,"title":{},"body":{"index.html":{}}}],["table",{"_index":28,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":27,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":138,"title":{},"body":{"index.html":{}}}],["thank",{"_index":131,"title":{},"body":{"index.html":{}}}],["time",{"_index":139,"title":{},"body":{"index.html":{}}}],["title",{"_index":77,"title":{},"body":{"miscellaneous/functions.html":{}}}],["titlecase",{"_index":76,"title":{},"body":{"miscellaneous/functions.html":{}}}],["toward",{"_index":161,"title":{},"body":{"index.html":{}}}],["transformed",{"_index":62,"title":{},"body":{"miscellaneous/functions.html":{}}}],["type",{"_index":3,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":206,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["underscores",{"_index":108,"title":{},"body":{"miscellaneous/functions.html":{}}}],["up",{"_index":153,"title":{},"body":{"index.html":{}}}],["updates",{"_index":164,"title":{},"body":{"index.html":{}}}],["uppercase",{"_index":90,"title":{},"body":{"miscellaneous/functions.html":{}}}],["used",{"_index":213,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["useful",{"_index":143,"title":{},"body":{"index.html":{}}}],["users",{"_index":175,"title":{},"body":{"index.html":{}}}],["using",{"_index":132,"title":{},"body":{"index.html":{}}}],["validate",{"_index":101,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validation",{"_index":104,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validator",{"_index":99,"title":{},"body":{"miscellaneous/functions.html":{}}}],["value",{"_index":49,"title":{},"body":{"miscellaneous/functions.html":{}}}],["various",{"_index":55,"title":{},"body":{"miscellaneous/functions.html":{}}}],["version",{"_index":191,"title":{},"body":{"properties.html":{}}}],["versions",{"_index":167,"title":{},"body":{"index.html":{}}}],["well",{"_index":156,"title":{},"body":{"index.html":{}}}],["word",{"_index":121,"title":{},"body":{"miscellaneous/functions.html":{}}}],["yes",{"_index":64,"title":{},"body":{"miscellaneous/functions.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/lib/auths.ts\n            \n            function\n            auths\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/auths.ts\n            \n            type alias\n            AuthPaths\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/names.ts\n            \n            function\n            names\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/names.ts\n            \n            type alias\n            Names\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/names.ts\n            \n            type alias\n            NamesOption\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/normalize.ts\n            \n            function\n            normalize\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/paths.ts\n            \n            function\n            paths\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/paths.ts\n            \n            type alias\n            RestApiPaths\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/pluralize.ts\n            \n            function\n            pluralize\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            auths   (src/.../auths.ts)\n                        \n                        \n                            names   (src/.../names.ts)\n                        \n                        \n                            normalize   (src/.../normalize.ts)\n                        \n                        \n                            paths   (src/.../paths.ts)\n                        \n                        \n                            pluralize   (src/.../pluralize.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/auths.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        auths\n                        \n                    \n                \n            \n            \n                \nauths(prefix: string)\n                \n            \n\n\n\n\n            \n                \n                        Geneate auth rest api paths\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                prefix\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         AuthPaths\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/names.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        names\n                        \n                    \n                \n            \n            \n                \nnames(resourceName: string, options?: NamesOption)\n                \n            \n\n\n\n\n            \n                \n                        Generates various case formats for a given resource name.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resourceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the resource to be transformed into different case formats.\n\n\n                                            \n                                        \n                                        \n                                                options\n                                            \n                                                            NamesOption\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Names\n\n                        \n                            \n                                An object containing the resource name in different case formats:\n\ncamelCase: camelCase format.\nconstCase: CONSTANT_CASE format.\nkebabCase: kebab-case format.\npascalCase: PascalCase format.\nsnakeCase: snake_case format.\ntitleCase: Title Case format.\ncontrollerName: NameController.\nserviceName: Nameservice.\nmoduleName: NameModule.\n\n\n                            \n                \n            \n        \n    \n    src/lib/normalize.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        normalize\n                        \n                    \n                \n            \n            \n                \nnormalize(value: string, preInputValidator?)\n                \n            \n\n\n\n\n            \n                \n                        Normalizes a given string by adding spaces before uppercase letters and capitalizing the first letter.\nOptionally, a custom pre-input validator function can be provided to validate the input string.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe string to be normalized.\n\n\n                                            \n                                        \n                                        \n                                                preInputValidator\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nAn optional function to validate the input string before normalization.\nIf not provided, a default validation is applied which checks if the string\ncontains only letters, underscores, dollar signs, and spaces.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The normalized string with spaces before uppercase letters and the first letter capitalized.\n\n                            \n                \n            \n        \n    \n    src/lib/paths.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        paths\n                        \n                    \n                \n            \n            \n                \npaths(name: string, prefix: string)\n                \n            \n\n\n\n\n            \n                \n                        Generates REST API paths for a given resource name with an optional prefix.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe name of the resource for which to generate paths.\n\n\n                                            \n                                        \n                                        \n                                                prefix\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                            \n                                                    \nAn optional prefix to prepend to each path. Defaults to an empty string.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         RestApiPaths\n\n                        \n                            \n                                An object containing various REST API paths for the resource.\n\n                            \n                \n            \n        \n    \n    src/lib/pluralize.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        pluralize\n                        \n                    \n                \n            \n            \n                \npluralize(word: string)\n                \n            \n\n\n\n\n            \n                \n                        Pluralize string (english)\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                word\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n@puq/names\nSummary\nnames\nInstall\nExample :  pnpm add @puq/namesFunding\nThank you for using @puq/names It's an open-source project, and maintaining it takes time and effort. If you find this library useful, please consider supporting its ongoing development. Your contributions help ensure that the project stays up-to-date, secure, and well-maintained.\nInstant Funding\nYour funding will go toward\n\nBug fixes and updates to ensure compatibility with the latest versions of dependencies.\nNew features that will make the library even more powerful.\nDocumentation improvements to help users get the most out of [Your Library Name].\nGeneral maintenance to keep the library running smoothly and securely.\n\nContact to the developer: [robert.brightline@gmail.com]\nSupport the developer\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : names\n        \n            Keywords : puq, names\n        \n            Homepage : https://rbrightline.github.io/puq/names\n        \n            Bugs : https://rbrightline.github.io\n        \n            License : MIT\n        \n            Repository : https://github.com/rbrightline/puq/tree/main\n        \n            Author : Robert Brightline\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthPaths   (src/.../auths.ts)\n                        \n                        \n                            Names   (src/.../names.ts)\n                        \n                        \n                            NamesOption   (src/.../names.ts)\n                        \n                        \n                            RestApiPaths   (src/.../paths.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/auths.ts\n    \n    \n        \n            \n                \n                    \n                    AuthPaths\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/lib/names.ts\n    \n    \n        \n            \n                \n                    \n                    Names\n                \n            \n            \n                \n                    Represents different naming conventions for strings.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NamesOption\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/lib/paths.ts\n    \n    \n        \n            \n                \n                    \n                    RestApiPaths\n                \n            \n            \n                \n                    Represents the paths used in REST API endpoints.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
