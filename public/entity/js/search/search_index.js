var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/entities/Category.html",[0,0.028,1,1.502]],["body/entities/Category.html",[0,0.039,1,2.124,2,0.464,3,0.557,4,0.464,5,0.464,6,2.249,7,0.464,8,0.617,9,1.333,10,0.74,11,0.054,12,1.047,13,0.658,14,0.892,15,1.582,16,1.224,17,1.828,18,0.658,19,2.816,20,0.74,21,3.744,22,1.597,23,1.186,24,1.186,25,0.464,26,0.557,27,0.226,28,0.658,29,1.876,30,0.039,31,0.039]],["title/classes/CategoryView.html",[27,0.212,32,1.764]],["body/classes/CategoryView.html",[1,1.571,3,0.548,4,0.457,5,0.457,7,0.457,8,0.611,9,1.322,10,0.732,11,0.055,12,1.04,13,0.647,18,0.647,20,0.825,22,1.571,25,0.457,26,0.548,27,0.222,28,0.647,29,2.467,30,0.039,31,0.039,32,2.467,33,1.571,34,2.212,35,4.172,36,2.77,37,2.77,38,2.77,39,3.703,40,3.703,41,2.77,42,2.77,43,2.77,44,2.77,45,2.77]],["title/classes/CreateCategoryDto.html",[27,0.212,46,1.502]],["body/classes/CreateCategoryDto.html",[3,0.554,4,0.462,5,0.462,7,0.462,8,0.615,9,1.329,10,0.738,11,0.054,12,1.045,13,0.654,16,1.018,18,0.654,20,0.738,22,1.589,26,0.554,27,0.225,29,2.485,30,0.039,31,0.039,33,1.589,46,2.116,47,2.98,48,1.866,49,4.195,50,2.8,51,2.98,52,3.73,53,3.73,54,2.8,55,2.98,56,3.73,57,1.866]],["title/entities/Permission.html",[0,0.028,58,1.502]],["body/entities/Permission.html",[0,0.04,2,0.483,3,0.579,4,0.483,5,0.483,7,0.483,8,0.634,9,1.359,10,0.76,11,0.053,12,1.064,13,0.684,14,0.928,15,1.624,16,1.243,17,1.877,18,0.684,20,0.579,23,1.218,24,1.218,25,0.483,26,0.579,27,0.235,28,0.684,30,0.04,31,0.04,58,2.18,59,2.34,60,2.93]],["title/entities/Role.html",[0,0.028,61,1.502]],["body/entities/Role.html",[0,0.034,2,0.383,3,0.46,4,0.383,5,0.383,7,0.383,8,0.541,9,1.206,10,0.753,11,0.054,12,0.966,13,0.767,14,0.736,15,1.387,16,1.337,17,1.603,18,0.767,20,0.649,23,1.04,24,1.04,25,0.383,26,0.46,27,0.186,28,0.543,30,0.034,31,0.034,58,2.346,61,1.862,62,1.857,63,3.806,64,2.325,65,1.862,66,2.187,67,1.319,68,2.187,69,1.862,70,1.862,71,1.862,72,1.862,73,1.862,74,2.325,75,1.319,76,2.325]],["title/entities/Scope.html",[0,0.028,77,1.764]],["body/entities/Scope.html",[0,0.04,2,0.483,3,0.579,4,0.483,5,0.483,7,0.483,8,0.634,9,1.359,10,0.76,11,0.053,12,1.064,13,0.684,14,0.928,15,1.624,16,1.243,17,1.877,18,0.684,20,0.579,23,1.218,24,1.218,25,0.483,26,0.579,27,0.235,28,0.684,30,0.04,31,0.04,77,2.561,78,2.34,79,2.93]],["title/entities/Session.html",[0,0.028,80,1.502]],["body/entities/Session.html",[0,0.022,2,0.209,3,0.251,4,0.209,5,0.209,7,0.209,8,0.341,10,0.972,11,0.055,12,1.186,13,1.017,14,1.321,16,0.973,18,1.017,20,0.518,23,1.352,24,0.656,25,0.209,26,0.251,27,0.102,28,0.297,30,0.022,31,0.022,65,1.174,66,1.379,67,1.174,68,1.379,69,1.713,70,1.174,71,1.174,72,1.174,73,1.174,75,0.72,80,1.486,81,1.014,82,2.619,83,2.619,84,2.619,85,2.619,86,2.619,87,2.619,88,2.619,89,2.619,90,2.619,91,2.619,92,2.133,93,1.27,94,1.27,95,1.653,96,1.27,97,1.27,98,1.713,99,2.069,100,1.27,101,3.02,102,1.27,103,1.27,104,2.069,105,2.069,106,1.27,107,1.27,108,1.27,109,1.27,110,1.653,111,2.069,112,1.27,113,1.27,114,0.846,115,1.27]],["title/entities/SessionLog.html",[0,0.028,98,1.502]],["body/entities/SessionLog.html",[0,0.032,2,0.35,3,0.419,4,0.35,5,0.35,7,0.35,8,0.507,10,0.917,11,0.054,12,1.083,13,0.845,14,0.974,16,1.266,18,0.845,20,0.608,23,1.146,24,0.974,25,0.35,26,0.419,27,0.17,28,0.495,30,0.032,31,0.032,51,3.168,65,1.744,67,1.203,69,1.744,70,1.744,71,1.744,72,1.744,73,1.744,75,1.203,80,2.569,98,1.744,110,2.455,114,2.642,116,3.168,117,1.694,118,3.616,119,2.12,120,2.12,121,2.12,122,2.12]],["title/classes/UpdateCategoryDto.html",[27,0.212,123,1.764]],["body/classes/UpdateCategoryDto.html",[3,0.651,4,0.543,5,0.543,11,0.054,20,0.896,26,0.651,27,0.264,28,0.769,30,0.044,31,0.044,33,1.867,46,1.867,48,2.193,55,3.309,57,2.193,123,2.76,124,2.629,125,3.292,126,2.629,127,3.292,128,3.292,129,3.292]],["title/entities/User.html",[0,0.028,92,1.502]],["body/entities/User.html",[0,0.032,2,0.35,3,0.419,4,0.35,5,0.35,7,0.35,8,0.507,10,0.832,11,0.054,12,1.083,13,0.845,14,0.974,15,1.675,16,1.342,17,1.501,18,0.845,20,0.608,23,1.146,24,0.974,25,0.35,26,0.419,27,0.17,28,0.495,30,0.032,31,0.032,61,2.25,65,1.744,66,2.048,67,1.203,68,2.048,69,1.744,70,1.744,71,1.744,72,1.744,73,1.744,75,1.203,92,1.744,130,1.694,131,3.616,132,3.616,133,3.616,134,2.12,135,2.12,136,2.12,137,2.12]],["title/entities/UserProfile.html",[0,0.028,138,1.764]],["body/entities/UserProfile.html",[0,0.026,2,0.266,3,0.319,4,0.266,5,0.266,7,0.266,8,0.413,10,0.957,11,0.054,12,1.212,13,0.998,14,1.353,15,1.673,16,1.081,18,0.998,20,0.319,23,1.39,24,0.793,25,0.266,26,0.319,27,0.129,28,0.377,30,0.026,31,0.026,138,1.668,139,3.504,140,3.504,141,1.289,142,3.068,143,3.068,144,3.068,145,3.068,146,3.068,147,3.068,148,3.068,149,3.068,150,1.614,151,1.614,152,1.614,153,1.614,154,1.614,155,1.614,156,1.614,157,1.614]],["title/coverage.html",[158,2.869]],["body/coverage.html",[0,0.05,1,1.313,5,0.382,6,1.848,10,0.458,11,0.054,27,0.304,30,0.034,31,0.034,32,1.542,34,1.848,46,1.313,47,1.848,48,2.18,58,1.313,59,1.848,61,1.313,62,1.848,77,1.542,78,1.848,80,1.313,81,1.848,92,1.313,98,1.313,114,1.542,116,1.848,117,1.848,123,1.542,124,1.848,130,1.848,138,1.542,139,1.848,140,1.848,141,1.848,158,1.848,159,1.848,160,2.314,161,2.314,162,5.038,163,4.95,164,3.272,165,2.614,166,2.614,167,3.272,168,1.848,169,1.848,170,1.848,171,2.314,172,2.314]],["title/dependencies.html",[173,1.774,174,2.118]],["body/dependencies.html",[11,0.055,22,1.867,25,0.543,30,0.044,31,0.044,57,2.193,126,2.629,174,2.76,175,4.142,176,3.292,177,3.292,178,3.292,179,3.292,180,3.292,181,3.292,182,3.292,183,3.292,184,3.292,185,3.292,186,4.142,187,3.292]],["title/miscellaneous/functions.html",[188,1.774,189,2.539]],["body/miscellaneous/functions.html",[2,0.697,7,0.561,9,1.34,11,0.051,30,0.044,31,0.044,165,2.718,166,3.676,168,3.378,169,3.378,188,2.718,189,2.718,190,4.229,191,3.402,192,4.229,193,4.229,194,3.402]],["title/index.html",[7,0.366,195,2.221,196,2.221]],["body/index.html",[2,0.404,4,0.404,9,0.776,11,0.041,25,0.404,30,0.036,31,0.036,95,1.956,159,1.956,170,1.956,174,1.631,197,3.404,198,2.448,199,1.956,200,1.956,201,1.956,202,1.956,203,3.552,204,2.448,205,2.448,206,2.448,207,2.448,208,2.448,209,2.448,210,2.448,211,2.448,212,2.448,213,3.404,214,2.448,215,2.448,216,2.448,217,2.448,218,2.448,219,2.448,220,2.448,221,2.448,222,2.448,223,2.448,224,2.448,225,2.448,226,3.404,227,3.404,228,2.448,229,2.448,230,2.448,231,2.448,232,2.448,233,2.448,234,3.404,235,2.448,236,2.448,237,2.448,238,2.448,239,2.448,240,2.448,241,2.448,242,2.448,243,2.448,244,2.448,245,2.448,246,2.448,247,2.448,248,2.448,249,2.448,250,2.448,251,2.448,252,2.448,253,2.448,254,2.448,255,2.448,256,2.448,257,2.448,258,3.404,259,2.448,260,2.448]],["title/modules.html",[261,2.869]],["body/modules.html",[11,0.049,30,0.049,31,0.049,261,3.24]],["title/overview.html",[262,2.869]],["body/overview.html",[2,0.648,11,0.048,30,0.048,31,0.048,33,2.229,262,3.139,263,3.93,264,3.93]],["title/properties.html",[8,0.524,173,1.774]],["body/properties.html",[0,0.034,2,0.532,8,0.532,11,0.055,25,0.532,30,0.043,31,0.043,199,2.579,200,2.579,201,2.579,202,2.579,203,2.579,265,3.229,266,3.229,267,3.229,268,3.229,269,3.229,270,3.229,271,3.229,272,3.229,273,3.229,274,3.229,275,3.229,276,3.229,277,3.229,278,3.229,279,3.229,280,3.229]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/Scope.html":{},"entities/Session.html":{},"entities/SessionLog.html":{},"classes/UpdateCategoryDto.html":{},"entities/User.html":{},"entities/UserProfile.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":162,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":266,"title":{},"body":{"properties.html":{}}}],["0.0.20",{"_index":186,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":181,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":163,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":164,"title":{},"body":{"coverage.html":{}}}],["11.0.10",{"_index":184,"title":{},"body":{"dependencies.html":{}}}],["11.0.3",{"_index":185,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":264,"title":{},"body":{"overview.html":{}}}],["5.1.7",{"_index":179,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":53,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["8",{"_index":263,"title":{},"body":{"overview.html":{}}}],["8.13.3",{"_index":177,"title":{},"body":{"dependencies.html":{}}}],["add",{"_index":207,"title":{},"body":{"index.html":{}}}],["agent",{"_index":82,"title":{},"body":{"entities/Session.html":{}}}],["author",{"_index":278,"title":{},"body":{"properties.html":{}}}],["avatar",{"_index":142,"title":{},"body":{"entities/UserProfile.html":{}}}],["baseentity",{"_index":24,"title":{},"body":{"entities/Category.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/Scope.html":{},"entities/Session.html":{},"entities/SessionLog.html":{},"entities/User.html":{},"entities/UserProfile.html":{}}}],["baseview",{"_index":39,"title":{},"body":{"classes/CategoryView.html":{}}}],["bio",{"_index":143,"title":{},"body":{"entities/UserProfile.html":{}}}],["boolean",{"_index":101,"title":{},"body":{"entities/Session.html":{}}}],["brightline",{"_index":280,"title":{},"body":{"properties.html":{}}}],["bug",{"_index":237,"title":{},"body":{"index.html":{}}}],["bugs",{"_index":272,"title":{},"body":{"properties.html":{}}}],["cascade",{"_index":111,"title":{},"body":{"entities/Session.html":{}}}],["category",{"_index":1,"title":{"entities/Category.html":{}},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"coverage.html":{}}}],["category.dto.js",{"_index":128,"title":{},"body":{"classes/UpdateCategoryDto.html":{}}}],["category.dto.ts",{"_index":48,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/UpdateCategoryDto.html":{},"coverage.html":{}}}],["category.dto.ts:6",{"_index":54,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["category.entity.js",{"_index":41,"title":{},"body":{"classes/CategoryView.html":{}}}],["categorymodel",{"_index":21,"title":{},"body":{"entities/Category.html":{}}}],["categoryview",{"_index":32,"title":{"classes/CategoryView.html":{}},"body":{"classes/CategoryView.html":{},"coverage.html":{}}}],["categoryviewmodel",{"_index":35,"title":{},"body":{"classes/CategoryView.html":{}}}],["class",{"_index":27,"title":{"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"classes/UpdateCategoryDto.html":{}},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/Scope.html":{},"entities/Session.html":{},"entities/SessionLog.html":{},"classes/UpdateCategoryDto.html":{},"entities/User.html":{},"entities/UserProfile.html":{},"coverage.html":{}}}],["classes",{"_index":33,"title":{},"body":{"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"classes/UpdateCategoryDto.html":{},"overview.html":{}}}],["column",{"_index":23,"title":{},"body":{"entities/Category.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/Scope.html":{},"entities/Session.html":{},"entities/SessionLog.html":{},"entities/User.html":{},"entities/UserProfile.html":{}}}],["column({type",{"_index":14,"title":{},"body":{"entities/Category.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/Scope.html":{},"entities/Session.html":{},"entities/SessionLog.html":{},"entities/User.html":{},"entities/UserProfile.html":{}}}],["compatibility",{"_index":240,"title":{},"body":{"index.html":{}}}],["consider",{"_index":221,"title":{},"body":{"index.html":{}}}],["contact",{"_index":257,"title":{},"body":{"index.html":{}}}],["contributions",{"_index":225,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":158,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crated",{"_index":202,"title":{},"body":{"index.html":{},"properties.html":{}}}],["create",{"_index":127,"title":{},"body":{"classes/UpdateCategoryDto.html":{}}}],["createcategorydto",{"_index":46,"title":{"classes/CreateCategoryDto.html":{}},"body":{"classes/CreateCategoryDto.html":{},"classes/UpdateCategoryDto.html":{},"coverage.html":{}}}],["createcategorymodel",{"_index":49,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["database",{"_index":199,"title":{},"body":{"index.html":{},"properties.html":{}}}],["date",{"_index":95,"title":{},"body":{"entities/Session.html":{},"index.html":{}}}],["decorators",{"_index":13,"title":{},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/Scope.html":{},"entities/Session.html":{},"entities/SessionLog.html":{},"entities/User.html":{},"entities/UserProfile.html":{}}}],["default",{"_index":104,"title":{},"body":{"entities/Session.html":{}}}],["defined",{"_index":18,"title":{},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/Scope.html":{},"entities/Session.html":{},"entities/SessionLog.html":{},"entities/User.html":{},"entities/UserProfile.html":{}}}],["dependencies",{"_index":174,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["description",{"_index":267,"title":{},"body":{"properties.html":{}}}],["developer",{"_index":258,"title":{},"body":{"index.html":{}}}],["development",{"_index":224,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":159,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dto",{"_index":55,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/UpdateCategoryDto.html":{}}}],["dtos",{"_index":201,"title":{},"body":{"index.html":{},"properties.html":{}}}],["eager",{"_index":68,"title":{},"body":{"entities/Role.html":{},"entities/Session.html":{},"entities/User.html":{}}}],["effort",{"_index":217,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":227,"title":{},"body":{"index.html":{}}}],["entities",{"_index":2,"title":{},"body":{"entities/Category.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/Scope.html":{},"entities/Session.html":{},"entities/SessionLog.html":{},"entities/User.html":{},"entities/UserProfile.html":{},"miscellaneous/functions.html":{},"index.html":{},"overview.html":{},"properties.html":{}}}],["entity",{"_index":0,"title":{"entities/Category.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/Scope.html":{},"entities/Session.html":{},"entities/SessionLog.html":{},"entities/User.html":{},"entities/UserProfile.html":{}},"body":{"entities/Category.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/Scope.html":{},"entities/Session.html":{},"entities/SessionLog.html":{},"entities/User.html":{},"entities/UserProfile.html":{},"coverage.html":{},"properties.html":{}}}],["even",{"_index":245,"title":{},"body":{"index.html":{}}}],["event",{"_index":118,"title":{},"body":{"entities/SessionLog.html":{}}}],["example",{"_index":205,"title":{},"body":{"index.html":{}}}],["export",{"_index":26,"title":{},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/Scope.html":{},"entities/Session.html":{},"entities/SessionLog.html":{},"classes/UpdateCategoryDto.html":{},"entities/User.html":{},"entities/UserProfile.html":{}}}],["extends",{"_index":28,"title":{},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/Scope.html":{},"entities/Session.html":{},"entities/SessionLog.html":{},"classes/UpdateCategoryDto.html":{},"entities/User.html":{},"entities/UserProfile.html":{}}}],["features",{"_index":243,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/Scope.html":{},"entities/Session.html":{},"entities/SessionLog.html":{},"classes/UpdateCategoryDto.html":{},"entities/User.html":{},"entities/UserProfile.html":{},"coverage.html":{}}}],["find",{"_index":218,"title":{},"body":{"index.html":{}}}],["firstname",{"_index":144,"title":{},"body":{"entities/UserProfile.html":{}}}],["fixes",{"_index":238,"title":{},"body":{"index.html":{}}}],["function",{"_index":167,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":189,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funding",{"_index":234,"title":{},"body":{"index.html":{}}}],["gender",{"_index":145,"title":{},"body":{"entities/UserProfile.html":{}}}],["general",{"_index":251,"title":{},"body":{"index.html":{}}}],["getting",{"_index":195,"title":{"index.html":{}},"body":{}}],["go",{"_index":235,"title":{},"body":{"index.html":{}}}],["help",{"_index":226,"title":{},"body":{"index.html":{}}}],["homepage",{"_index":270,"title":{},"body":{"properties.html":{}}}],["https://github.com/rbrightline/puq/tree/main",{"_index":277,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io",{"_index":273,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io/puq/entity",{"_index":271,"title":{},"body":{"properties.html":{}}}],["identifier",{"_index":160,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":29,"title":{},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{}}}],["import",{"_index":20,"title":{},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/Scope.html":{},"entities/Session.html":{},"entities/SessionLog.html":{},"classes/UpdateCategoryDto.html":{},"entities/User.html":{},"entities/UserProfile.html":{}}}],["improvements",{"_index":248,"title":{},"body":{"index.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/Scope.html":{},"entities/Session.html":{},"entities/SessionLog.html":{},"entities/User.html":{},"entities/UserProfile.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/Scope.html":{},"entities/Session.html":{},"entities/SessionLog.html":{},"classes/UpdateCategoryDto.html":{},"entities/User.html":{},"entities/UserProfile.html":{}}}],["inspector",{"_index":122,"title":{},"body":{"entities/SessionLog.html":{}}}],["install",{"_index":204,"title":{},"body":{"index.html":{}}}],["instant",{"_index":233,"title":{},"body":{"index.html":{}}}],["ip",{"_index":83,"title":{},"body":{"entities/Session.html":{}}}],["it's",{"_index":211,"title":{},"body":{"index.html":{}}}],["join",{"_index":72,"title":{},"body":{"entities/Role.html":{},"entities/Session.html":{},"entities/SessionLog.html":{},"entities/User.html":{}}}],["keep",{"_index":253,"title":{},"body":{"index.html":{}}}],["keywords",{"_index":268,"title":{},"body":{"properties.html":{}}}],["lastactive",{"_index":84,"title":{},"body":{"entities/Session.html":{}}}],["lastname",{"_index":146,"title":{},"body":{"entities/UserProfile.html":{}}}],["latest",{"_index":241,"title":{},"body":{"index.html":{}}}],["library",{"_index":203,"title":{},"body":{"index.html":{},"properties.html":{}}}],["license",{"_index":274,"title":{},"body":{"properties.html":{}}}],["location",{"_index":85,"title":{},"body":{"entities/Session.html":{}}}],["log.entity.js",{"_index":115,"title":{},"body":{"entities/Session.html":{}}}],["log.entity.ts",{"_index":117,"title":{},"body":{"entities/SessionLog.html":{},"coverage.html":{}}}],["log.entity.ts:15",{"_index":120,"title":{},"body":{"entities/SessionLog.html":{}}}],["log.entity.ts:6",{"_index":121,"title":{},"body":{"entities/SessionLog.html":{}}}],["log.entity.ts:8",{"_index":119,"title":{},"body":{"entities/SessionLog.html":{}}}],["log/session",{"_index":114,"title":{},"body":{"entities/Session.html":{},"entities/SessionLog.html":{},"coverage.html":{}}}],["logs",{"_index":86,"title":{},"body":{"entities/Session.html":{}}}],["m",{"_index":45,"title":{},"body":{"classes/CategoryView.html":{}}}],["maintained",{"_index":232,"title":{},"body":{"index.html":{}}}],["maintaining",{"_index":214,"title":{},"body":{"index.html":{}}}],["maintenance",{"_index":252,"title":{},"body":{"index.html":{}}}],["make",{"_index":244,"title":{},"body":{"index.html":{}}}],["many",{"_index":66,"title":{},"body":{"entities/Role.html":{},"entities/Session.html":{},"entities/User.html":{}}}],["matching",{"_index":31,"title":{},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/Scope.html":{},"entities/Session.html":{},"entities/SessionLog.html":{},"classes/UpdateCategoryDto.html":{},"entities/User.html":{},"entities/UserProfile.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["maxlength",{"_index":52,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["mfaverified",{"_index":87,"title":{},"body":{"entities/Session.html":{}}}],["middlename",{"_index":147,"title":{},"body":{"entities/UserProfile.html":{}}}],["miscellaneous",{"_index":188,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":275,"title":{},"body":{"properties.html":{}}}],["modules",{"_index":261,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":246,"title":{},"body":{"index.html":{}}}],["name",{"_index":9,"title":{},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/Scope.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["name').from(category",{"_index":44,"title":{},"body":{"classes/CategoryView.html":{}}}],["nestjs/common",{"_index":183,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":126,"title":{},"body":{"classes/UpdateCategoryDto.html":{},"dependencies.html":{}}}],["new",{"_index":170,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["null",{"_index":71,"title":{},"body":{"entities/Role.html":{},"entities/Session.html":{},"entities/SessionLog.html":{},"entities/User.html":{}}}],["nullable",{"_index":73,"title":{},"body":{"entities/Role.html":{},"entities/Session.html":{},"entities/SessionLog.html":{},"entities/User.html":{}}}],["occupation",{"_index":148,"title":{},"body":{"entities/UserProfile.html":{}}}],["ondelete",{"_index":69,"title":{},"body":{"entities/Role.html":{},"entities/Session.html":{},"entities/SessionLog.html":{},"entities/User.html":{}}}],["one",{"_index":110,"title":{},"body":{"entities/Session.html":{},"entities/SessionLog.html":{}}}],["ongoing",{"_index":223,"title":{},"body":{"index.html":{}}}],["open",{"_index":212,"title":{},"body":{"index.html":{}}}],["opt",{"_index":88,"title":{},"body":{"entities/Session.html":{}}}],["optional",{"_index":193,"title":{},"body":{"miscellaneous/functions.html":{}}}],["organization",{"_index":149,"title":{},"body":{"entities/UserProfile.html":{}}}],["origin",{"_index":89,"title":{},"body":{"entities/Session.html":{}}}],["out",{"_index":250,"title":{},"body":{"index.html":{}}}],["overview",{"_index":262,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":173,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":192,"title":{},"body":{"miscellaneous/functions.html":{}}}],["partialtype",{"_index":125,"title":{},"body":{"classes/UpdateCategoryDto.html":{}}}],["partialtype(createcategorydto",{"_index":129,"title":{},"body":{"classes/UpdateCategoryDto.html":{}}}],["password",{"_index":131,"title":{},"body":{"entities/User.html":{}}}],["peer",{"_index":182,"title":{},"body":{"dependencies.html":{}}}],["permission",{"_index":58,"title":{"entities/Permission.html":{}},"body":{"entities/Permission.html":{},"entities/Role.html":{},"coverage.html":{}}}],["permission/permission.entity.js",{"_index":76,"title":{},"body":{"entities/Role.html":{}}}],["permissions",{"_index":63,"title":{},"body":{"entities/Role.html":{}}}],["pg",{"_index":176,"title":{},"body":{"dependencies.html":{}}}],["pgtestdatasource",{"_index":168,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["pgtestdatasource(entities",{"_index":191,"title":{},"body":{"miscellaneous/functions.html":{}}}],["please",{"_index":220,"title":{},"body":{"index.html":{}}}],["pnpm",{"_index":206,"title":{},"body":{"index.html":{}}}],["powerful",{"_index":247,"title":{},"body":{"index.html":{}}}],["profile.entity.ts",{"_index":141,"title":{},"body":{"entities/UserProfile.html":{},"coverage.html":{}}}],["profile.entity.ts:10",{"_index":151,"title":{},"body":{"entities/UserProfile.html":{}}}],["profile.entity.ts:11",{"_index":156,"title":{},"body":{"entities/UserProfile.html":{}}}],["profile.entity.ts:12",{"_index":157,"title":{},"body":{"entities/UserProfile.html":{}}}],["profile.entity.ts:5",{"_index":152,"title":{},"body":{"entities/UserProfile.html":{}}}],["profile.entity.ts:6",{"_index":155,"title":{},"body":{"entities/UserProfile.html":{}}}],["profile.entity.ts:7",{"_index":154,"title":{},"body":{"entities/UserProfile.html":{}}}],["profile.entity.ts:8",{"_index":153,"title":{},"body":{"entities/UserProfile.html":{}}}],["profile.entity.ts:9",{"_index":150,"title":{},"body":{"entities/UserProfile.html":{}}}],["profile/user",{"_index":140,"title":{},"body":{"entities/UserProfile.html":{},"coverage.html":{}}}],["project",{"_index":213,"title":{},"body":{"index.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/Scope.html":{},"entities/Session.html":{},"entities/SessionLog.html":{},"entities/User.html":{},"entities/UserProfile.html":{},"properties.html":{}}}],["property",{"_index":56,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["property({type",{"_index":50,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["puq",{"_index":269,"title":{},"body":{"properties.html":{}}}],["puq/entity",{"_index":197,"title":{},"body":{"index.html":{}}}],["puq/entityfunding",{"_index":208,"title":{},"body":{"index.html":{}}}],["puq/model",{"_index":22,"title":{},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"dependencies.html":{}}}],["puq/orm",{"_index":25,"title":{},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/Scope.html":{},"entities/Session.html":{},"entities/SessionLog.html":{},"entities/User.html":{},"entities/UserProfile.html":{},"dependencies.html":{},"index.html":{},"properties.html":{}}}],["puq/property",{"_index":57,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/UpdateCategoryDto.html":{},"dependencies.html":{}}}],["puq/type",{"_index":187,"title":{},"body":{"dependencies.html":{}}}],["q.addselect('m.name",{"_index":43,"title":{},"body":{"classes/CategoryView.html":{}}}],["readonly",{"_index":17,"title":{},"body":{"entities/Category.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/Scope.html":{},"entities/User.html":{}}}],["relation",{"_index":75,"title":{},"body":{"entities/Role.html":{},"entities/Session.html":{},"entities/SessionLog.html":{},"entities/User.html":{}}}],["relation('many",{"_index":65,"title":{},"body":{"entities/Role.html":{},"entities/Session.html":{},"entities/SessionLog.html":{},"entities/User.html":{}}}],["relation('one",{"_index":99,"title":{},"body":{"entities/Session.html":{}}}],["repository",{"_index":276,"title":{},"body":{"properties.html":{}}}],["required",{"_index":51,"title":{},"body":{"classes/CreateCategoryDto.html":{},"entities/SessionLog.html":{}}}],["results",{"_index":30,"title":{},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/Scope.html":{},"entities/Session.html":{},"entities/SessionLog.html":{},"classes/UpdateCategoryDto.html":{},"entities/User.html":{},"entities/UserProfile.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["robert",{"_index":279,"title":{},"body":{"properties.html":{}}}],["robert.brightline@gmail.com",{"_index":259,"title":{},"body":{"index.html":{}}}],["role",{"_index":61,"title":{"entities/Role.html":{}},"body":{"entities/Role.html":{},"entities/User.html":{},"coverage.html":{}}}],["role/role.entity.js",{"_index":137,"title":{},"body":{"entities/User.html":{}}}],["roles",{"_index":132,"title":{},"body":{"entities/User.html":{}}}],["running",{"_index":254,"title":{},"body":{"index.html":{}}}],["same",{"_index":105,"title":{},"body":{"entities/Session.html":{}}}],["scope",{"_index":77,"title":{"entities/Scope.html":{}},"body":{"entities/Scope.html":{},"coverage.html":{}}}],["secure",{"_index":230,"title":{},"body":{"index.html":{}}}],["securely",{"_index":256,"title":{},"body":{"index.html":{}}}],["session",{"_index":80,"title":{"entities/Session.html":{}},"body":{"entities/Session.html":{},"entities/SessionLog.html":{},"coverage.html":{}}}],["sessionlog",{"_index":98,"title":{"entities/SessionLog.html":{}},"body":{"entities/Session.html":{},"entities/SessionLog.html":{},"coverage.html":{}}}],["set",{"_index":70,"title":{},"body":{"entities/Role.html":{},"entities/Session.html":{},"entities/SessionLog.html":{},"entities/User.html":{}}}],["smoothly",{"_index":255,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/Scope.html":{},"entities/Session.html":{},"entities/SessionLog.html":{},"classes/UpdateCategoryDto.html":{},"entities/User.html":{},"entities/UserProfile.html":{},"index.html":{}}}],["sqlite3",{"_index":178,"title":{},"body":{"dependencies.html":{}}}],["sqlitetestdatasource",{"_index":169,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["sqlitetestdatasource(entities",{"_index":194,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../test",{"_index":190,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/lib/auth/permission/permission.entity.ts",{"_index":59,"title":{},"body":{"entities/Permission.html":{},"coverage.html":{}}}],["src/lib/auth/permission/permission.entity.ts:6",{"_index":60,"title":{},"body":{"entities/Permission.html":{}}}],["src/lib/auth/role/role.entity.ts",{"_index":62,"title":{},"body":{"entities/Role.html":{},"coverage.html":{}}}],["src/lib/auth/role/role.entity.ts:15",{"_index":74,"title":{},"body":{"entities/Role.html":{}}}],["src/lib/auth/role/role.entity.ts:7",{"_index":64,"title":{},"body":{"entities/Role.html":{}}}],["src/lib/auth/scope/scope.entity.ts",{"_index":78,"title":{},"body":{"entities/Scope.html":{},"coverage.html":{}}}],["src/lib/auth/scope/scope.entity.ts:6",{"_index":79,"title":{},"body":{"entities/Scope.html":{}}}],["src/lib/auth/session",{"_index":116,"title":{},"body":{"entities/SessionLog.html":{},"coverage.html":{}}}],["src/lib/auth/session/session.entity.ts",{"_index":81,"title":{},"body":{"entities/Session.html":{},"coverage.html":{}}}],["src/lib/auth/session/session.entity.ts:11",{"_index":97,"title":{},"body":{"entities/Session.html":{}}}],["src/lib/auth/session/session.entity.ts:12",{"_index":93,"title":{},"body":{"entities/Session.html":{}}}],["src/lib/auth/session/session.entity.ts:14",{"_index":107,"title":{},"body":{"entities/Session.html":{}}}],["src/lib/auth/session/session.entity.ts:16",{"_index":103,"title":{},"body":{"entities/Session.html":{}}}],["src/lib/auth/session/session.entity.ts:18",{"_index":108,"title":{},"body":{"entities/Session.html":{}}}],["src/lib/auth/session/session.entity.ts:20",{"_index":102,"title":{},"body":{"entities/Session.html":{}}}],["src/lib/auth/session/session.entity.ts:22",{"_index":106,"title":{},"body":{"entities/Session.html":{}}}],["src/lib/auth/session/session.entity.ts:28",{"_index":100,"title":{},"body":{"entities/Session.html":{}}}],["src/lib/auth/session/session.entity.ts:35",{"_index":112,"title":{},"body":{"entities/Session.html":{}}}],["src/lib/auth/session/session.entity.ts:7",{"_index":96,"title":{},"body":{"entities/Session.html":{}}}],["src/lib/auth/session/session.entity.ts:8",{"_index":94,"title":{},"body":{"entities/Session.html":{}}}],["src/lib/auth/session/session.entity.ts:9",{"_index":109,"title":{},"body":{"entities/Session.html":{}}}],["src/lib/auth/user",{"_index":139,"title":{},"body":{"entities/UserProfile.html":{},"coverage.html":{}}}],["src/lib/auth/user/user.entity.ts",{"_index":130,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/lib/auth/user/user.entity.ts:10",{"_index":134,"title":{},"body":{"entities/User.html":{}}}],["src/lib/auth/user/user.entity.ts:18",{"_index":135,"title":{},"body":{"entities/User.html":{}}}],["src/lib/auth/user/user.entity.ts:7",{"_index":136,"title":{},"body":{"entities/User.html":{}}}],["src/lib/common/category/category.entity.ts",{"_index":6,"title":{},"body":{"entities/Category.html":{},"coverage.html":{}}}],["src/lib/common/category/category.entity.ts:6",{"_index":19,"title":{},"body":{"entities/Category.html":{}}}],["src/lib/common/category/category.view.ts",{"_index":34,"title":{},"body":{"classes/CategoryView.html":{},"coverage.html":{}}}],["src/lib/common/category/category.view.ts:7",{"_index":37,"title":{},"body":{"classes/CategoryView.html":{}}}],["src/lib/common/category/create",{"_index":47,"title":{},"body":{"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["src/lib/common/category/update",{"_index":124,"title":{},"body":{"classes/UpdateCategoryDto.html":{},"coverage.html":{}}}],["src/lib/test/test",{"_index":165,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["started",{"_index":196,"title":{"index.html":{}},"body":{}}],["statements",{"_index":161,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":90,"title":{},"body":{"entities/Session.html":{}}}],["stays",{"_index":228,"title":{},"body":{"index.html":{}}}],["string",{"_index":12,"title":{},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/Scope.html":{},"entities/Session.html":{},"entities/SessionLog.html":{},"entities/User.html":{},"entities/UserProfile.html":{}}}],["summary",{"_index":198,"title":{},"body":{"index.html":{}}}],["support",{"_index":260,"title":{},"body":{"index.html":{}}}],["supporting",{"_index":222,"title":{},"body":{"index.html":{}}}],["table",{"_index":172,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":171,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":215,"title":{},"body":{"index.html":{}}}],["thank",{"_index":209,"title":{},"body":{"index.html":{}}}],["time",{"_index":216,"title":{},"body":{"index.html":{}}}],["token",{"_index":91,"title":{},"body":{"entities/Session.html":{}}}],["toward",{"_index":236,"title":{},"body":{"index.html":{}}}],["true",{"_index":16,"title":{},"body":{"entities/Category.html":{},"classes/CreateCategoryDto.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/Scope.html":{},"entities/Session.html":{},"entities/SessionLog.html":{},"entities/User.html":{},"entities/UserProfile.html":{}}}],["type",{"_index":10,"title":{},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/Scope.html":{},"entities/Session.html":{},"entities/SessionLog.html":{},"entities/User.html":{},"entities/UserProfile.html":{},"coverage.html":{}}}],["typeorm",{"_index":180,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":67,"title":{},"body":{"entities/Role.html":{},"entities/Session.html":{},"entities/SessionLog.html":{},"entities/User.html":{}}}],["unique",{"_index":15,"title":{},"body":{"entities/Category.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/Scope.html":{},"entities/User.html":{},"entities/UserProfile.html":{}}}],["up",{"_index":229,"title":{},"body":{"index.html":{}}}],["updatecategorydto",{"_index":123,"title":{"classes/UpdateCategoryDto.html":{}},"body":{"classes/UpdateCategoryDto.html":{},"coverage.html":{}}}],["updates",{"_index":239,"title":{},"body":{"index.html":{}}}],["useful",{"_index":219,"title":{},"body":{"index.html":{}}}],["user",{"_index":92,"title":{"entities/User.html":{}},"body":{"entities/Session.html":{},"entities/User.html":{},"coverage.html":{}}}],["user/user.entity.js",{"_index":113,"title":{},"body":{"entities/Session.html":{}}}],["username",{"_index":133,"title":{},"body":{"entities/User.html":{}}}],["userprofile",{"_index":138,"title":{"entities/UserProfile.html":{}},"body":{"entities/UserProfile.html":{},"coverage.html":{}}}],["users",{"_index":249,"title":{},"body":{"index.html":{}}}],["using",{"_index":210,"title":{},"body":{"index.html":{}}}],["utils.ts",{"_index":166,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["version",{"_index":265,"title":{},"body":{"properties.html":{}}}],["versions",{"_index":242,"title":{},"body":{"index.html":{}}}],["viewcolumn",{"_index":40,"title":{},"body":{"classes/CategoryView.html":{}}}],["viewcolumn({type",{"_index":36,"title":{},"body":{"classes/CategoryView.html":{}}}],["viewentity",{"_index":38,"title":{},"body":{"classes/CategoryView.html":{}}}],["viewentity((q",{"_index":42,"title":{},"body":{"classes/CategoryView.html":{}}}],["views",{"_index":200,"title":{},"body":{"index.html":{},"properties.html":{}}}],["well",{"_index":231,"title":{},"body":{"index.html":{}}}],["workspace",{"_index":175,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"entities/Category.html":{"url":"entities/Category.html","title":"entity - Category","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/common/category/category.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string', unique: true, readonly: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/category/category.entity.ts:6\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { CategoryModel } from '@puq/model';\nimport { Entity, Column, BaseEntity } from '@puq/orm';\n\n@Entity()\nexport class Category extends BaseEntity implements CategoryModel {\n  @Column({ type: 'string', unique: true, readonly: true }) name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CategoryView.html":{"url":"classes/CategoryView.html","title":"class - CategoryView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CategoryView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/common/category/category.view.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            CategoryViewModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewColumn({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/category/category.view.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CategoryViewModel } from '@puq/model';\nimport { ViewEntity, BaseView, ViewColumn } from '@puq/orm';\nimport { Category } from './category.entity.js';\n\n@ViewEntity((q) => q.addSelect('m.name', 'name').from(Category, 'm'))\nexport class CategoryView extends BaseView implements CategoryViewModel {\n  @ViewColumn({ type: 'string' }) name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCategoryDto.html":{"url":"classes/CreateCategoryDto.html","title":"class - CreateCategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/common/category/create-category.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            CreateCategoryModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string', required: true, maxLength: 50})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/category/create-category.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateCategoryModel } from '@puq/model';\nimport { Dto, Property } from '@puq/property';\n\n@Dto()\nexport class CreateCategoryDto implements CreateCategoryModel {\n  @Property({ type: 'string', required: true, maxLength: 50 }) name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Permission.html":{"url":"entities/Permission.html","title":"entity - Permission","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Permission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/auth/permission/permission.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string', unique: true, readonly: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/auth/permission/permission.entity.ts:6\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Column, BaseEntity } from '@puq/orm';\n\n@Entity()\nexport class Permission extends BaseEntity {\n  @Column({ type: 'string', unique: true, readonly: true })\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Role.html":{"url":"entities/Role.html","title":"entity - Role","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/auth/role/role.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                permissions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string', unique: true, readonly: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/auth/role/role.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Permission[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Relation('many-to-many', undefined, {eager: true, onDelete: 'SET NULL', join: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/auth/role/role.entity.ts:15\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Column, BaseEntity, Relation } from '@puq/orm';\nimport { Permission } from '../permission/permission.entity.js';\n\n@Entity()\nexport class Role extends BaseEntity {\n  @Column({ type: 'string', unique: true, readonly: true })\n  name: string;\n\n  @Relation('many-to-many', () => Permission, {\n    eager: true,\n    onDelete: 'SET NULL',\n    join: true,\n    nullable: true,\n  })\n  permissions: Permission[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Scope.html":{"url":"entities/Scope.html","title":"entity - Scope","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Scope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/auth/scope/scope.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string', unique: true, readonly: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/auth/scope/scope.entity.ts:6\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Column, BaseEntity } from '@puq/orm';\n\n@Entity()\nexport class Scope extends BaseEntity {\n  @Column({ type: 'string', unique: true, readonly: true })\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Session.html":{"url":"entities/Session.html","title":"entity - Session","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Session\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/auth/session/session.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                agent\n                            \n                            \n                                    \n                                ip\n                            \n                            \n                                    \n                                lastActive\n                            \n                            \n                                    \n                                location\n                            \n                            \n                                    \n                                logs\n                            \n                            \n                                    \n                                mfaVerified\n                            \n                            \n                                    \n                                opt\n                            \n                            \n                                    \n                                origin\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                token\n                            \n                            \n                                    \n                                type\n                            \n                            \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        agent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/auth/session/session.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/auth/session/session.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/auth/session/session.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/auth/session/session.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SessionLog[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Relation('one-to-many', undefined, {onDelete: 'SET NULL', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/auth/session/session.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        mfaVerified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/auth/session/session.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        opt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/auth/session/session.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        origin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string', default: 'same'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/auth/session/session.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/auth/session/session.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/auth/session/session.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/auth/session/session.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Relation('many-to-one', undefined, {eager: true, onDelete: 'CASCADE', join: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/auth/session/session.entity.ts:35\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, BaseEntity, Relation, Column } from '@puq/orm';\nimport { User } from '../user/user.entity.js';\nimport { SessionLog } from '../session-log/session-log.entity.js';\n\n@Entity()\nexport class Session extends BaseEntity {\n  @Column({ type: 'date' }) lastActive: string;\n  @Column({ type: 'string' }) ip: string;\n  @Column({ type: 'string' }) type: string;\n\n  @Column({ type: 'string' }) location: string;\n  @Column({ type: 'string' }) agent: string;\n\n  @Column({ type: 'string' }) status: string;\n\n  @Column({ type: 'string' }) opt: string;\n\n  @Column({ type: 'string' }) token: string;\n\n  @Column({ type: 'boolean' }) mfaVerified: boolean;\n\n  @Column({ type: 'string', default: 'same' }) origin: string;\n\n  @Relation('one-to-many', () => SessionLog, {\n    onDelete: 'SET NULL',\n    nullable: true,\n  })\n  logs: SessionLog[];\n\n  @Relation('many-to-one', () => User, {\n    eager: true,\n    onDelete: 'CASCADE',\n    join: true,\n  })\n  user: User;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/SessionLog.html":{"url":"entities/SessionLog.html","title":"entity - SessionLog","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  SessionLog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/auth/session-log/session-log.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                event\n                            \n                            \n                                    \n                                session\n                            \n                            \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        event\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string', required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/auth/session-log/session-log.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        session\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Session\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Relation('many-to-one', undefined, {onDelete: 'SET NULL', join: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/auth/session-log/session-log.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string', required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/auth/session-log/session-log.entity.ts:6\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { BaseEntity, Column, Entity, Relation } from '@puq/orm';\nimport { Session } from 'inspector';\n\n@Entity()\nexport class SessionLog extends BaseEntity {\n  @Column({ type: 'string', required: true }) type: string;\n\n  @Column({ type: 'string', required: true }) event: string;\n\n  @Relation('many-to-one', () => Session, {\n    onDelete: 'SET NULL',\n    join: true,\n    nullable: true,\n  })\n  session: Session;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCategoryDto.html":{"url":"classes/UpdateCategoryDto.html","title":"class - UpdateCategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/common/category/update-category.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateCategoryDto } from './create-category.dto.js';\nimport { Dto } from '@puq/property';\n\n@Dto()\nexport class UpdateCategoryDto extends PartialType(CreateCategoryDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/auth/user/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                roles\n                            \n                            \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string', unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/auth/user/user.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Relation('many-to-many', undefined, {eager: true, onDelete: 'SET NULL', join: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/auth/user/user.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string', unique: true, readonly: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/auth/user/user.entity.ts:7\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Column, BaseEntity, Relation } from '@puq/orm';\nimport { Role } from '../role/role.entity.js';\n\n@Entity()\nexport class User extends BaseEntity {\n  @Column({ type: 'string', unique: true, readonly: true })\n  username: string;\n\n  @Column({ type: 'string', unique: true })\n  password: string;\n\n  @Relation('many-to-many', () => Role, {\n    eager: true,\n    onDelete: 'SET NULL',\n    join: true,\n    nullable: true,\n  })\n  roles: Role[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/UserProfile.html":{"url":"entities/UserProfile.html","title":"entity - UserProfile","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  UserProfile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/auth/user-profile/user-profile.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                avatar\n                            \n                            \n                                    \n                                bio\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                lastName\n                            \n                            \n                                    \n                                middleName\n                            \n                            \n                                    \n                                occupation\n                            \n                            \n                                    \n                                organization\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/auth/user-profile/user-profile.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        bio\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/auth/user-profile/user-profile.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string', unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/auth/user-profile/user-profile.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/auth/user-profile/user-profile.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string', unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/auth/user-profile/user-profile.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        middleName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string', unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/auth/user-profile/user-profile.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        occupation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/auth/user-profile/user-profile.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        organization\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/auth/user-profile/user-profile.entity.ts:12\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Column, BaseEntity } from '@puq/orm';\n\n@Entity()\nexport class UserProfile extends BaseEntity {\n  @Column({ type: 'string', unique: true }) firstName: string;\n  @Column({ type: 'string', unique: true }) middleName: string;\n  @Column({ type: 'string', unique: true }) lastName: string;\n  @Column({ type: 'string' }) gender: string;\n  @Column({ type: 'string' }) avatar: string;\n  @Column({ type: 'string' }) bio: string;\n  @Column({ type: 'string' }) occupation: string;\n  @Column({ type: 'string' }) organization: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/lib/auth/permission/permission.entity.ts\n            \n            entity\n            Permission\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/auth/role/role.entity.ts\n            \n            entity\n            Role\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/auth/scope/scope.entity.ts\n            \n            entity\n            Scope\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/auth/session-log/session-log.entity.ts\n            \n            entity\n            SessionLog\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/auth/session/session.entity.ts\n            \n            entity\n            Session\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/auth/user-profile/user-profile.entity.ts\n            \n            entity\n            UserProfile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/auth/user/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/common/category/category.entity.ts\n            \n            entity\n            Category\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/common/category/category.view.ts\n            \n            class\n            CategoryView\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/common/category/create-category.dto.ts\n            \n            class\n            CreateCategoryDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/common/category/update-category.dto.ts\n            \n            class\n            UpdateCategoryDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/test/test-utils.ts\n            \n            function\n            pgTestDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/test/test-utils.ts\n            \n            function\n            sqliteTestDataSource\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @puq/model : workspace:^\n        \n            @puq/orm : workspace:^\n        \n            pg : ^8.13.3\n        \n            sqlite3 : ^5.1.7\n        \n            typeorm : ^0.3.20\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @nestjs/common : ^11.0.10\n        \n            @nestjs/swagger : ^11.0.3\n        \n            @puq/property : ^0.0.20\n        \n            @puq/type : ^0.0.20\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            pgTestDataSource   (src/.../test-utils.ts)\n                        \n                        \n                            sqliteTestDataSource   (src/.../test-utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/test/test-utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        pgTestDataSource\n                        \n                    \n                \n            \n            \n                \npgTestDataSource(entities)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entities\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sqliteTestDataSource\n                        \n                    \n                \n            \n            \n                \nsqliteTestDataSource(entities)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entities\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n@puq/entity\nSummary\nDatabase entities, views, and dtos crated by @puq/orm library\nInstall\nExample :  pnpm add @puq/entityFunding\nThank you for using @puq/entity It's an open-source project, and maintaining it takes time and effort. If you find this library useful, please consider supporting its ongoing development. Your contributions help ensure that the project stays up-to-date, secure, and well-maintained.\nInstant Funding\nYour funding will go toward\n\nBug fixes and updates to ensure compatibility with the latest versions of dependencies.\nNew features that will make the library even more powerful.\nDocumentation improvements to help users get the most out of [Your Library Name].\nGeneral maintenance to keep the library running smoothly and securely.\n\nContact to the developer: [robert.brightline@gmail.com]\nSupport the developer\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    8 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : Database entities, views, and dtos crated by @puq/orm library\n        \n            Keywords : puq, entity\n        \n            Homepage : https://rbrightline.github.io/puq/entity\n        \n            Bugs : https://rbrightline.github.io\n        \n            License : MIT\n        \n            Repository : https://github.com/rbrightline/puq/tree/main\n        \n            Author : Robert Brightline\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
