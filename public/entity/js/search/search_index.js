var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/entities/Category.html",[0,0.817,1,1.586]],["body/entities/Category.html",[0,1.176,1,2.283,2,1.497,3,0.414,4,0.339,5,0.339,6,2.378,7,1.011,8,1.176,9,2.228,10,1.153,11,0.049,12,1.823,13,1.15,14,2.378,15,3.911,16,2.728,17,3.911,18,1.15,19,2.949,20,0.549,21,3.154,22,0.886,23,3.154,24,3.154,25,0.774,26,0.414,27,0.237,28,0.774,29,1.011,30,0.036,31,0.036]],["title/classes/CategoryView.html",[27,0.218,32,1.844]],["body/classes/CategoryView.html",[1,1.694,3,0.407,4,0.334,5,0.334,7,0.994,8,1.163,9,2.21,10,1.143,11,0.049,12,1.812,13,1.132,18,1.132,20,0.611,21,3.511,22,0.872,25,0.762,26,0.407,27,0.233,28,0.762,29,1.326,30,0.035,31,0.035,32,2.627,33,0.486,34,2.34,35,2.902,36,2.902,37,2.34,38,3.12,39,3.869,40,2.902,41,2.34,42,2.902,43,2.902,44,2.34]],["title/classes/CreateCategoryDto.html",[27,0.218,45,1.844]],["body/classes/CreateCategoryDto.html",[3,0.412,4,0.337,5,0.337,7,1.005,8,1.171,9,2.222,10,1.15,11,0.049,12,1.82,13,1.144,16,2.275,18,1.144,20,0.547,22,0.882,26,0.412,27,0.236,29,1.336,30,0.036,31,0.036,33,0.491,45,2.646,46,3.143,47,1.991,48,4.377,49,1.712,50,2.646,51,3.897,52,3.143,53,2.365,54,1.024,55,2.275,56,0.669]],["title/classes/CreateSampleDto.html",[27,0.218,57,1.379]],["body/classes/CreateSampleDto.html",[3,0.156,4,0.128,5,0.128,7,0.38,8,0.559,10,1.347,11,0.05,12,1.54,13,1.674,16,2.88,18,1.674,20,0.261,22,0.333,26,0.261,27,0.15,29,0.825,30,0.017,31,0.017,33,0.186,49,2.504,50,3.35,54,0.632,55,2.601,56,0.253,57,0.945,58,2.972,59,0.432,60,1.94,61,1.633,62,1.633,63,1.633,64,1.633,65,1.633,66,1.633,67,1.633,68,1.633,69,1.633,70,1.633,71,1.633,72,1.633,73,2.455,74,2.913,75,2.913,76,2.743,77,1.108,78,1.108,79,2.111,80,1.108,81,1.108,82,2.845,83,1.108,84,1.633,85,1.108,86,1.108,87,1.108,88,2.31,89,1.108,90,1.633,91,1.633,92,1.431,93,1.108,94,1.108,95,1.108,96,0.894]],["title/classes/QueryCountSampleDto.html",[27,0.218,97,1.844]],["body/classes/QueryCountSampleDto.html",[0,0.993,3,0.464,4,0.38,5,0.38,11,0.049,20,0.651,25,0.868,26,0.464,27,0.266,28,0.868,30,0.038,31,0.038,33,0.553,52,2.665,54,1.106,56,0.754,59,1.289,97,2.86,98,1.929,99,2.665,100,4.212,101,1.643,102,1.929,103,3.305,104,3.305,105,3.305]],["title/classes/QueryManySampleDto.html",[27,0.218,106,1.844]],["body/classes/QueryManySampleDto.html",[0,1.018,3,0.475,4,0.39,5,0.39,11,0.049,20,0.658,25,0.89,26,0.475,27,0.272,28,0.89,30,0.039,31,0.039,33,0.567,54,1.124,56,0.773,59,1.321,98,1.977,101,1.669,102,1.977,106,2.905,107,2.731,108,4.278]],["title/classes/QueryOneSampleDto.html",[27,0.218,109,1.844]],["body/classes/QueryOneSampleDto.html",[0,1.018,3,0.475,4,0.39,5,0.39,11,0.049,20,0.658,25,0.89,26,0.475,27,0.272,28,0.89,30,0.039,31,0.039,33,0.567,54,1.124,56,0.773,59,1.321,98,1.977,101,1.669,102,1.977,109,2.905,110,2.731,111,4.278]],["title/entities/Sample.html",[0,0.817,101,1.06]],["body/entities/Sample.html",[0,0.633,2,0.652,3,0.18,4,0.148,5,0.148,7,0.44,8,0.633,10,1.37,11,0.05,12,1.508,13,1.752,14,3.621,18,1.752,20,0.375,22,0.386,23,3.685,24,1.697,25,0.338,26,0.18,27,0.103,28,0.338,29,0.44,30,0.019,31,0.019,61,1.814,62,1.814,63,1.814,64,1.814,65,1.814,66,1.814,67,1.814,68,1.814,69,1.814,70,1.814,71,1.814,72,1.814,73,2.623,74,3.048,75,3.048,76,2.952,79,2.256,82,2.987,84,1.814,88,2.314,90,1.814,91,1.814,92,1.568,101,0.821,112,1.036,113,1.285,114,1.285,115,1.285,116,1.285,117,1.285,118,1.285,119,1.285,120,1.285,121,1.285,122,1.285,123,1.285,124,1.285,125,2.104,126,1.036,127,1.036]],["title/classes/SampleObjDto.html",[27,0.218,92,1.379]],["body/classes/SampleObjDto.html",[3,0.239,4,0.196,5,0.196,7,0.583,8,0.791,10,1.368,11,0.05,12,1.74,13,0.664,16,2.822,18,0.664,20,0.369,22,0.511,26,0.369,27,0.212,29,1.103,30,0.024,31,0.024,33,0.285,49,0.993,50,3.282,54,0.845,55,2.891,56,0.388,57,0.864,58,1.786,59,0.664,60,2.122,61,1.155,62,1.155,63,1.155,64,1.155,65,1.155,66,1.155,67,1.155,68,1.155,69,1.155,70,1.155,71,1.155,72,1.155,73,2.459,74,2.811,75,2.811,79,2.114,82,2.811,84,1.786,88,2.659,90,1.786,91,1.786,92,1.838,96,2.595,128,1.701]],["title/classes/SampleRelationParamDto.html",[27,0.218,129,1.586]],["body/classes/SampleRelationParamDto.html",[3,0.475,4,0.39,5,0.39,11,0.049,20,0.6,25,0.89,26,0.6,27,0.344,28,1.124,30,0.039,31,0.039,33,0.567,54,1.232,56,0.773,129,2.497,130,2.3,131,3.45,132,3.45,133,1.977]],["title/classes/SampleUnsetRelationParamDto.html",[27,0.218,133,1.586]],["body/classes/SampleUnsetRelationParamDto.html",[3,0.475,4,0.39,5,0.39,11,0.049,20,0.6,25,0.89,26,0.6,27,0.344,28,1.124,30,0.039,31,0.039,33,0.567,54,1.232,56,0.773,129,1.977,130,2.3,131,3.45,132,3.45,133,2.497]],["title/classes/SampleView.html",[27,0.218,134,1.844]],["body/classes/SampleView.html",[3,0.464,4,0.38,5,0.38,10,0.868,11,0.049,20,0.651,22,0.993,25,0.868,26,0.464,27,0.266,28,0.868,29,1.444,30,0.038,31,0.038,33,0.553,37,2.665,38,3.397,41,2.665,44,2.665,101,1.289,102,1.929,134,2.86,135,2.665,136,4.637,137,3.305]],["title/classes/UpdateCategoryDto.html",[27,0.218,138,1.844]],["body/classes/UpdateCategoryDto.html",[3,0.456,4,0.374,5,0.374,7,1.113,8,1.252,9,2.334,10,1.094,11,0.049,12,1.892,13,1.267,18,1.267,20,0.456,26,0.456,27,0.261,30,0.038,31,0.038,33,0.543,47,2.204,49,1.895,53,2.618,54,1.094,55,2.431,56,0.741,138,2.827,139,3.358]],["title/classes/UpdateSampleDto.html",[27,0.218,140,1.844]],["body/classes/UpdateSampleDto.html",[3,0.456,4,0.374,5,0.374,10,0.853,11,0.049,20,0.681,22,0.976,26,0.456,27,0.261,28,0.853,29,1.427,30,0.038,31,0.038,33,0.543,54,1.094,56,0.741,57,1.648,59,1.267,126,2.618,127,2.618,140,2.827,141,2.618,142,4.598,143,3.246,144,2.618,145,3.246]],["title/coverage.html",[146,2.985]],["body/coverage.html",[0,1.006,1,1.373,5,0.271,6,1.897,10,0.618,11,0.049,27,0.416,30,0.031,31,0.031,32,1.597,34,1.897,45,1.597,46,1.897,47,2.273,57,1.194,58,2.273,59,1.82,92,1.194,97,1.597,98,2.275,99,1.897,101,0.918,106,1.597,107,1.897,109,1.597,110,1.897,112,1.897,129,1.373,130,2.273,133,1.373,134,1.597,135,1.897,138,1.597,139,1.897,140,1.597,141,1.897,146,1.897,147,1.897,148,2.352,149,2.352,150,5.255,151,4.992,152,4.247,153,2.352,154,1.897,155,2.352,156,2.352]],["title/dependencies.html",[157,1.832,158,2.217]],["body/dependencies.html",[11,0.05,22,1.018,25,0.89,30,0.039,31,0.039,56,0.773,144,2.731,158,2.905,159,3.387,160,3.387,161,3.387,162,3.387,163,3.387,164,3.387,165,3.387,166,4.184,167,3.387,168,3.387,169,3.387,170,3.387]],["title/index.html",[7,0.779,171,2.272,172,2.272]],["body/index.html",[2,1.313,4,0.298,9,1.313,11,0.04,30,0.033,31,0.033,79,1.509,147,2.085,154,2.085,158,1.756,173,3.578,174,2.586,175,2.085,176,2.085,177,2.085,178,2.085,179,2.085,180,2.586,181,2.586,182,2.586,183,2.586,184,2.586,185,2.586,186,2.586,187,2.586,188,2.586,189,3.578,190,2.586,191,2.586,192,2.586,193,2.586,194,2.586,195,4.428,196,2.586,197,2.586,198,2.586,199,2.586,200,2.586,201,2.586,202,2.586,203,3.578,204,3.578,205,2.586,206,2.586,207,2.586,208,2.586,209,2.586,210,2.586,211,3.578,212,2.586,213,2.586,214,2.586,215,2.586,216,2.586,217,2.586,218,2.586,219,2.586,220,2.586,221,2.586,222,2.586,223,2.586,224,2.586,225,2.586,226,2.586,227,2.586,228,2.586,229,2.586,230,2.586,231,2.586,232,2.586,233,2.586,234,2.586,235,3.578,236,2.586,237,2.586]],["title/modules.html",[238,2.985]],["body/modules.html",[11,0.045,30,0.045,31,0.045,238,3.407]],["title/overview.html",[239,2.985]],["body/overview.html",[2,2.08,11,0.044,30,0.044,31,0.044,33,0.686,239,3.305,240,4.098,241,4.098]],["title/properties.html",[8,0.982,157,1.832]],["body/properties.html",[0,1.018,2,1.72,8,1.018,11,0.05,30,0.039,31,0.039,166,2.731,175,2.731,176,2.731,177,2.731,178,2.731,179,2.731,242,3.387,243,3.387,244,3.387,245,3.387,246,3.387,247,3.387,248,3.387,249,3.387,250,3.387,251,3.387,252,3.387,253,3.387,254,3.387,255,3.387,256,3.387]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateSampleDto.html":{},"classes/QueryCountSampleDto.html":{},"classes/QueryManySampleDto.html":{},"classes/QueryOneSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{},"classes/SampleRelationParamDto.html":{},"classes/SampleUnsetRelationParamDto.html":{},"classes/SampleView.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateSampleDto.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":150,"title":{},"body":{"coverage.html":{}}}],["0.3.20",{"_index":168,"title":{},"body":{"dependencies.html":{}}}],["0.5.15",{"_index":160,"title":{},"body":{"dependencies.html":{}}}],["0.5.30",{"_index":166,"title":{},"body":{"dependencies.html":{},"properties.html":{}}}],["0/1",{"_index":151,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":153,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":152,"title":{},"body":{"coverage.html":{}}}],["11.0.11",{"_index":163,"title":{},"body":{"dependencies.html":{}}}],["11.0.6",{"_index":164,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":241,"title":{},"body":{"overview.html":{}}}],["2",{"_index":240,"title":{},"body":{"overview.html":{}}}],["200",{"_index":105,"title":{},"body":{"classes/QueryCountSampleDto.html":{}}}],["50",{"_index":52,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/QueryCountSampleDto.html":{}}}],["add",{"_index":183,"title":{},"body":{"index.html":{}}}],["array",{"_index":74,"title":{},"body":{"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{}}}],["author",{"_index":254,"title":{},"body":{"properties.html":{}}}],["baseentity",{"_index":24,"title":{},"body":{"entities/Category.html":{},"entities/Sample.html":{}}}],["baseview",{"_index":38,"title":{},"body":{"classes/CategoryView.html":{},"classes/SampleView.html":{}}}],["boolean",{"_index":73,"title":{},"body":{"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{}}}],["booleanarray",{"_index":61,"title":{},"body":{"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{}}}],["booleanvalue",{"_index":62,"title":{},"body":{"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{}}}],["brightline",{"_index":256,"title":{},"body":{"properties.html":{}}}],["bug",{"_index":214,"title":{},"body":{"index.html":{}}}],["bugs",{"_index":248,"title":{},"body":{"properties.html":{}}}],["category",{"_index":1,"title":{"entities/Category.html":{}},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"coverage.html":{}}}],["category.dto.ts",{"_index":47,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/UpdateCategoryDto.html":{},"coverage.html":{}}}],["category.dto.ts:6",{"_index":53,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/UpdateCategoryDto.html":{}}}],["category.entity.js",{"_index":40,"title":{},"body":{"classes/CategoryView.html":{}}}],["categorymodel",{"_index":21,"title":{},"body":{"entities/Category.html":{},"classes/CategoryView.html":{}}}],["categoryview",{"_index":32,"title":{"classes/CategoryView.html":{}},"body":{"classes/CategoryView.html":{},"coverage.html":{}}}],["class",{"_index":27,"title":{"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateSampleDto.html":{},"classes/QueryCountSampleDto.html":{},"classes/QueryManySampleDto.html":{},"classes/QueryOneSampleDto.html":{},"classes/SampleObjDto.html":{},"classes/SampleRelationParamDto.html":{},"classes/SampleUnsetRelationParamDto.html":{},"classes/SampleView.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateSampleDto.html":{}},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateSampleDto.html":{},"classes/QueryCountSampleDto.html":{},"classes/QueryManySampleDto.html":{},"classes/QueryOneSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{},"classes/SampleRelationParamDto.html":{},"classes/SampleUnsetRelationParamDto.html":{},"classes/SampleView.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateSampleDto.html":{},"coverage.html":{}}}],["classes",{"_index":33,"title":{},"body":{"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateSampleDto.html":{},"classes/QueryCountSampleDto.html":{},"classes/QueryManySampleDto.html":{},"classes/QueryOneSampleDto.html":{},"classes/SampleObjDto.html":{},"classes/SampleRelationParamDto.html":{},"classes/SampleUnsetRelationParamDto.html":{},"classes/SampleView.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateSampleDto.html":{},"overview.html":{}}}],["column",{"_index":23,"title":{},"body":{"entities/Category.html":{},"entities/Sample.html":{}}}],["column({type",{"_index":14,"title":{},"body":{"entities/Category.html":{},"entities/Sample.html":{}}}],["compatibility",{"_index":217,"title":{},"body":{"index.html":{}}}],["consider",{"_index":198,"title":{},"body":{"index.html":{}}}],["contact",{"_index":234,"title":{},"body":{"index.html":{}}}],["contributions",{"_index":202,"title":{},"body":{"index.html":{}}}],["count",{"_index":99,"title":{},"body":{"classes/QueryCountSampleDto.html":{},"coverage.html":{}}}],["coverage",{"_index":146,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":126,"title":{},"body":{"entities/Sample.html":{},"classes/UpdateSampleDto.html":{}}}],["createcategorydto",{"_index":45,"title":{"classes/CreateCategoryDto.html":{}},"body":{"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["createcategorymodel",{"_index":48,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["createquerycountdto",{"_index":100,"title":{},"body":{"classes/QueryCountSampleDto.html":{}}}],["createquerymanydto",{"_index":108,"title":{},"body":{"classes/QueryManySampleDto.html":{}}}],["createqueryonedto",{"_index":111,"title":{},"body":{"classes/QueryOneSampleDto.html":{}}}],["createrelationparamdto",{"_index":131,"title":{},"body":{"classes/SampleRelationParamDto.html":{},"classes/SampleUnsetRelationParamDto.html":{}}}],["createsampledto",{"_index":57,"title":{"classes/CreateSampleDto.html":{}},"body":{"classes/CreateSampleDto.html":{},"classes/SampleObjDto.html":{},"classes/UpdateSampleDto.html":{},"coverage.html":{}}}],["createsamplemodel",{"_index":60,"title":{},"body":{"classes/CreateSampleDto.html":{},"classes/SampleObjDto.html":{}}}],["createunsetrelationparamdto",{"_index":132,"title":{},"body":{"classes/SampleRelationParamDto.html":{},"classes/SampleUnsetRelationParamDto.html":{}}}],["database",{"_index":175,"title":{},"body":{"index.html":{},"properties.html":{}}}],["date",{"_index":79,"title":{},"body":{"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{},"index.html":{}}}],["datearray",{"_index":63,"title":{},"body":{"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{}}}],["datevalue",{"_index":64,"title":{},"body":{"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{}}}],["decorators",{"_index":13,"title":{},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{},"classes/UpdateCategoryDto.html":{}}}],["defaulttake",{"_index":103,"title":{},"body":{"classes/QueryCountSampleDto.html":{}}}],["defined",{"_index":18,"title":{},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{},"classes/UpdateCategoryDto.html":{}}}],["dependencies",{"_index":158,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["description",{"_index":243,"title":{},"body":{"properties.html":{}}}],["developer",{"_index":235,"title":{},"body":{"index.html":{}}}],["development",{"_index":201,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":147,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dto",{"_index":54,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreateSampleDto.html":{},"classes/QueryCountSampleDto.html":{},"classes/QueryManySampleDto.html":{},"classes/QueryOneSampleDto.html":{},"classes/SampleObjDto.html":{},"classes/SampleRelationParamDto.html":{},"classes/SampleUnsetRelationParamDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateSampleDto.html":{}}}],["dtos",{"_index":177,"title":{},"body":{"index.html":{},"properties.html":{}}}],["effort",{"_index":193,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":204,"title":{},"body":{"index.html":{}}}],["entities",{"_index":2,"title":{},"body":{"entities/Category.html":{},"entities/Sample.html":{},"index.html":{},"overview.html":{},"properties.html":{}}}],["entity",{"_index":0,"title":{"entities/Category.html":{},"entities/Sample.html":{}},"body":{"entities/Category.html":{},"classes/QueryCountSampleDto.html":{},"classes/QueryManySampleDto.html":{},"classes/QueryOneSampleDto.html":{},"entities/Sample.html":{},"coverage.html":{},"properties.html":{}}}],["even",{"_index":222,"title":{},"body":{"index.html":{}}}],["example",{"_index":181,"title":{},"body":{"index.html":{}}}],["export",{"_index":26,"title":{},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateSampleDto.html":{},"classes/QueryCountSampleDto.html":{},"classes/QueryManySampleDto.html":{},"classes/QueryOneSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{},"classes/SampleRelationParamDto.html":{},"classes/SampleUnsetRelationParamDto.html":{},"classes/SampleView.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateSampleDto.html":{}}}],["extends",{"_index":28,"title":{},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"classes/QueryCountSampleDto.html":{},"classes/QueryManySampleDto.html":{},"classes/QueryOneSampleDto.html":{},"entities/Sample.html":{},"classes/SampleRelationParamDto.html":{},"classes/SampleUnsetRelationParamDto.html":{},"classes/SampleView.html":{},"classes/UpdateSampleDto.html":{}}}],["features",{"_index":220,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateSampleDto.html":{},"classes/QueryCountSampleDto.html":{},"classes/QueryManySampleDto.html":{},"classes/QueryOneSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{},"classes/SampleRelationParamDto.html":{},"classes/SampleUnsetRelationParamDto.html":{},"classes/SampleView.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateSampleDto.html":{},"coverage.html":{}}}],["find",{"_index":194,"title":{},"body":{"index.html":{}}}],["fixes",{"_index":215,"title":{},"body":{"index.html":{}}}],["funding",{"_index":211,"title":{},"body":{"index.html":{}}}],["general",{"_index":228,"title":{},"body":{"index.html":{}}}],["generated",{"_index":178,"title":{},"body":{"index.html":{},"properties.html":{}}}],["getting",{"_index":171,"title":{"index.html":{}},"body":{}}],["go",{"_index":212,"title":{},"body":{"index.html":{}}}],["help",{"_index":203,"title":{},"body":{"index.html":{}}}],["homepage",{"_index":246,"title":{},"body":{"properties.html":{}}}],["https://github.com/rbrightline/puq/tree/main",{"_index":253,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io",{"_index":249,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io/puq/entity",{"_index":247,"title":{},"body":{"properties.html":{}}}],["identifier",{"_index":148,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":29,"title":{},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{},"classes/SampleView.html":{},"classes/UpdateSampleDto.html":{}}}],["import",{"_index":20,"title":{},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateSampleDto.html":{},"classes/QueryCountSampleDto.html":{},"classes/QueryManySampleDto.html":{},"classes/QueryOneSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{},"classes/SampleRelationParamDto.html":{},"classes/SampleUnsetRelationParamDto.html":{},"classes/SampleView.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateSampleDto.html":{}}}],["improvements",{"_index":225,"title":{},"body":{"index.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{},"classes/UpdateCategoryDto.html":{}}}],["info",{"_index":3,"title":{},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateSampleDto.html":{},"classes/QueryCountSampleDto.html":{},"classes/QueryManySampleDto.html":{},"classes/QueryOneSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{},"classes/SampleRelationParamDto.html":{},"classes/SampleUnsetRelationParamDto.html":{},"classes/SampleView.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateSampleDto.html":{}}}],["install",{"_index":180,"title":{},"body":{"index.html":{}}}],["instant",{"_index":210,"title":{},"body":{"index.html":{}}}],["integer",{"_index":84,"title":{},"body":{"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{}}}],["integerarray",{"_index":65,"title":{},"body":{"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{}}}],["integervalue",{"_index":66,"title":{},"body":{"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{}}}],["it's",{"_index":187,"title":{},"body":{"index.html":{}}}],["items",{"_index":75,"title":{},"body":{"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{}}}],["keep",{"_index":230,"title":{},"body":{"index.html":{}}}],["keywords",{"_index":244,"title":{},"body":{"properties.html":{}}}],["latest",{"_index":218,"title":{},"body":{"index.html":{}}}],["library",{"_index":195,"title":{},"body":{"index.html":{}}}],["license",{"_index":250,"title":{},"body":{"properties.html":{}}}],["m",{"_index":44,"title":{},"body":{"classes/CategoryView.html":{},"classes/SampleView.html":{}}}],["maintained",{"_index":209,"title":{},"body":{"index.html":{}}}],["maintaining",{"_index":190,"title":{},"body":{"index.html":{}}}],["maintenance",{"_index":229,"title":{},"body":{"index.html":{}}}],["make",{"_index":221,"title":{},"body":{"index.html":{}}}],["many",{"_index":107,"title":{},"body":{"classes/QueryManySampleDto.html":{},"coverage.html":{}}}],["matching",{"_index":31,"title":{},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateSampleDto.html":{},"classes/QueryCountSampleDto.html":{},"classes/QueryManySampleDto.html":{},"classes/QueryOneSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{},"classes/SampleRelationParamDto.html":{},"classes/SampleUnsetRelationParamDto.html":{},"classes/SampleView.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateSampleDto.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["maxlength",{"_index":51,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["maxtake",{"_index":104,"title":{},"body":{"classes/QueryCountSampleDto.html":{}}}],["mit",{"_index":251,"title":{},"body":{"properties.html":{}}}],["modules",{"_index":238,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":223,"title":{},"body":{"index.html":{}}}],["name",{"_index":9,"title":{},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"classes/UpdateCategoryDto.html":{},"index.html":{}}}],["name').from(category",{"_index":43,"title":{},"body":{"classes/CategoryView.html":{}}}],["nestjs/common",{"_index":162,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":144,"title":{},"body":{"classes/UpdateSampleDto.html":{},"dependencies.html":{}}}],["new",{"_index":154,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["number",{"_index":82,"title":{},"body":{"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{}}}],["numberarray",{"_index":67,"title":{},"body":{"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{}}}],["numbervalue",{"_index":68,"title":{},"body":{"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{}}}],["object",{"_index":90,"title":{},"body":{"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{}}}],["objectarray",{"_index":69,"title":{},"body":{"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{}}}],["objectvalue",{"_index":70,"title":{},"body":{"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{}}}],["one",{"_index":110,"title":{},"body":{"classes/QueryOneSampleDto.html":{},"coverage.html":{}}}],["ongoing",{"_index":200,"title":{},"body":{"index.html":{}}}],["open",{"_index":188,"title":{},"body":{"index.html":{}}}],["out",{"_index":227,"title":{},"body":{"index.html":{}}}],["overview",{"_index":239,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":157,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["partialtype",{"_index":143,"title":{},"body":{"classes/UpdateSampleDto.html":{}}}],["partialtype(createsampledto",{"_index":145,"title":{},"body":{"classes/UpdateSampleDto.html":{}}}],["peer",{"_index":161,"title":{},"body":{"dependencies.html":{}}}],["please",{"_index":197,"title":{},"body":{"index.html":{}}}],["pnpm",{"_index":182,"title":{},"body":{"index.html":{}}}],["powerful",{"_index":224,"title":{},"body":{"index.html":{}}}],["project",{"_index":189,"title":{},"body":{"index.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{},"classes/UpdateCategoryDto.html":{},"properties.html":{}}}],["property",{"_index":55,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreateSampleDto.html":{},"classes/SampleObjDto.html":{},"classes/UpdateCategoryDto.html":{}}}],["property({type",{"_index":49,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreateSampleDto.html":{},"classes/SampleObjDto.html":{},"classes/UpdateCategoryDto.html":{}}}],["puq",{"_index":245,"title":{},"body":{"properties.html":{}}}],["puq/entity",{"_index":173,"title":{},"body":{"index.html":{}}}],["puq/entityfunding",{"_index":184,"title":{},"body":{"index.html":{}}}],["puq/gen:entity",{"_index":179,"title":{},"body":{"index.html":{},"properties.html":{}}}],["puq/is",{"_index":165,"title":{},"body":{"dependencies.html":{}}}],["puq/model",{"_index":22,"title":{},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{},"classes/SampleView.html":{},"classes/UpdateSampleDto.html":{},"dependencies.html":{}}}],["puq/orm",{"_index":25,"title":{},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"classes/QueryCountSampleDto.html":{},"classes/QueryManySampleDto.html":{},"classes/QueryOneSampleDto.html":{},"entities/Sample.html":{},"classes/SampleRelationParamDto.html":{},"classes/SampleUnsetRelationParamDto.html":{},"classes/SampleView.html":{},"dependencies.html":{}}}],["puq/property",{"_index":56,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreateSampleDto.html":{},"classes/QueryCountSampleDto.html":{},"classes/QueryManySampleDto.html":{},"classes/QueryOneSampleDto.html":{},"classes/SampleObjDto.html":{},"classes/SampleRelationParamDto.html":{},"classes/SampleUnsetRelationParamDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateSampleDto.html":{},"dependencies.html":{}}}],["puq/query",{"_index":169,"title":{},"body":{"dependencies.html":{}}}],["puq/type",{"_index":170,"title":{},"body":{"dependencies.html":{}}}],["q.addselect('m.name",{"_index":42,"title":{},"body":{"classes/CategoryView.html":{}}}],["q.from(sample",{"_index":137,"title":{},"body":{"classes/SampleView.html":{}}}],["querycountsampledto",{"_index":97,"title":{"classes/QueryCountSampleDto.html":{}},"body":{"classes/QueryCountSampleDto.html":{},"coverage.html":{}}}],["querymanysampledto",{"_index":106,"title":{"classes/QueryManySampleDto.html":{}},"body":{"classes/QueryManySampleDto.html":{},"coverage.html":{}}}],["queryonesampledto",{"_index":109,"title":{"classes/QueryOneSampleDto.html":{}},"body":{"classes/QueryOneSampleDto.html":{},"coverage.html":{}}}],["readonly",{"_index":17,"title":{},"body":{"entities/Category.html":{}}}],["repository",{"_index":252,"title":{},"body":{"properties.html":{}}}],["required",{"_index":50,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreateSampleDto.html":{},"classes/SampleObjDto.html":{}}}],["results",{"_index":30,"title":{},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateSampleDto.html":{},"classes/QueryCountSampleDto.html":{},"classes/QueryManySampleDto.html":{},"classes/QueryOneSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{},"classes/SampleRelationParamDto.html":{},"classes/SampleUnsetRelationParamDto.html":{},"classes/SampleView.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateSampleDto.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["robert",{"_index":255,"title":{},"body":{"properties.html":{}}}],["robert.brightline@gmail.com",{"_index":236,"title":{},"body":{"index.html":{}}}],["running",{"_index":231,"title":{},"body":{"index.html":{}}}],["sample",{"_index":101,"title":{"entities/Sample.html":{}},"body":{"classes/QueryCountSampleDto.html":{},"classes/QueryManySampleDto.html":{},"classes/QueryOneSampleDto.html":{},"entities/Sample.html":{},"classes/SampleView.html":{},"coverage.html":{}}}],["sample.dto.js",{"_index":127,"title":{},"body":{"entities/Sample.html":{},"classes/UpdateSampleDto.html":{}}}],["sample.dto.ts",{"_index":59,"title":{},"body":{"classes/CreateSampleDto.html":{},"classes/QueryCountSampleDto.html":{},"classes/QueryManySampleDto.html":{},"classes/QueryOneSampleDto.html":{},"classes/SampleObjDto.html":{},"classes/UpdateSampleDto.html":{},"coverage.html":{}}}],["sample.dto.ts:13",{"_index":77,"title":{},"body":{"classes/CreateSampleDto.html":{}}}],["sample.dto.ts:15",{"_index":78,"title":{},"body":{"classes/CreateSampleDto.html":{}}}],["sample.dto.ts:18",{"_index":80,"title":{},"body":{"classes/CreateSampleDto.html":{}}}],["sample.dto.ts:20",{"_index":81,"title":{},"body":{"classes/CreateSampleDto.html":{}}}],["sample.dto.ts:23",{"_index":83,"title":{},"body":{"classes/CreateSampleDto.html":{}}}],["sample.dto.ts:25",{"_index":85,"title":{},"body":{"classes/CreateSampleDto.html":{}}}],["sample.dto.ts:28",{"_index":86,"title":{},"body":{"classes/CreateSampleDto.html":{}}}],["sample.dto.ts:30",{"_index":87,"title":{},"body":{"classes/CreateSampleDto.html":{}}}],["sample.dto.ts:37",{"_index":89,"title":{},"body":{"classes/CreateSampleDto.html":{}}}],["sample.dto.ts:40",{"_index":93,"title":{},"body":{"classes/CreateSampleDto.html":{}}}],["sample.dto.ts:43",{"_index":94,"title":{},"body":{"classes/CreateSampleDto.html":{}}}],["sample.dto.ts:45",{"_index":95,"title":{},"body":{"classes/CreateSampleDto.html":{}}}],["sample.dto.ts:7",{"_index":128,"title":{},"body":{"classes/SampleObjDto.html":{}}}],["sample.entity.js",{"_index":102,"title":{},"body":{"classes/QueryCountSampleDto.html":{},"classes/QueryManySampleDto.html":{},"classes/QueryOneSampleDto.html":{},"classes/SampleView.html":{}}}],["samplemodel",{"_index":125,"title":{},"body":{"entities/Sample.html":{}}}],["sampleobj",{"_index":88,"title":{},"body":{"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{}}}],["sampleobjdto",{"_index":92,"title":{"classes/SampleObjDto.html":{}},"body":{"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{},"coverage.html":{}}}],["samplerelationparamdto",{"_index":129,"title":{"classes/SampleRelationParamDto.html":{}},"body":{"classes/SampleRelationParamDto.html":{},"classes/SampleUnsetRelationParamDto.html":{},"coverage.html":{}}}],["sampleunsetrelationparamdto",{"_index":133,"title":{"classes/SampleUnsetRelationParamDto.html":{}},"body":{"classes/SampleRelationParamDto.html":{},"classes/SampleUnsetRelationParamDto.html":{},"coverage.html":{}}}],["sampleview",{"_index":134,"title":{"classes/SampleView.html":{}},"body":{"classes/SampleView.html":{},"coverage.html":{}}}],["sampleviewmodel",{"_index":136,"title":{},"body":{"classes/SampleView.html":{}}}],["secure",{"_index":207,"title":{},"body":{"index.html":{}}}],["securely",{"_index":233,"title":{},"body":{"index.html":{}}}],["smoothly",{"_index":232,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateSampleDto.html":{},"classes/QueryCountSampleDto.html":{},"classes/QueryManySampleDto.html":{},"classes/QueryOneSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{},"classes/SampleRelationParamDto.html":{},"classes/SampleUnsetRelationParamDto.html":{},"classes/SampleView.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateSampleDto.html":{},"index.html":{}}}],["src/lib/common/category/category.entity.ts",{"_index":6,"title":{},"body":{"entities/Category.html":{},"coverage.html":{}}}],["src/lib/common/category/category.entity.ts:6",{"_index":19,"title":{},"body":{"entities/Category.html":{}}}],["src/lib/common/category/category.view.ts",{"_index":34,"title":{},"body":{"classes/CategoryView.html":{},"coverage.html":{}}}],["src/lib/common/category/category.view.ts:7",{"_index":36,"title":{},"body":{"classes/CategoryView.html":{}}}],["src/lib/common/category/create",{"_index":46,"title":{},"body":{"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["src/lib/common/category/update",{"_index":139,"title":{},"body":{"classes/UpdateCategoryDto.html":{},"coverage.html":{}}}],["src/lib/common/sample/create",{"_index":58,"title":{},"body":{"classes/CreateSampleDto.html":{},"classes/SampleObjDto.html":{},"coverage.html":{}}}],["src/lib/common/sample/query",{"_index":98,"title":{},"body":{"classes/QueryCountSampleDto.html":{},"classes/QueryManySampleDto.html":{},"classes/QueryOneSampleDto.html":{},"coverage.html":{}}}],["src/lib/common/sample/relation.dto.ts",{"_index":130,"title":{},"body":{"classes/SampleRelationParamDto.html":{},"classes/SampleUnsetRelationParamDto.html":{},"coverage.html":{}}}],["src/lib/common/sample/sample.entity.ts",{"_index":112,"title":{},"body":{"entities/Sample.html":{},"coverage.html":{}}}],["src/lib/common/sample/sample.entity.ts:10",{"_index":114,"title":{},"body":{"entities/Sample.html":{}}}],["src/lib/common/sample/sample.entity.ts:11",{"_index":116,"title":{},"body":{"entities/Sample.html":{}}}],["src/lib/common/sample/sample.entity.ts:13",{"_index":122,"title":{},"body":{"entities/Sample.html":{}}}],["src/lib/common/sample/sample.entity.ts:14",{"_index":123,"title":{},"body":{"entities/Sample.html":{}}}],["src/lib/common/sample/sample.entity.ts:15",{"_index":119,"title":{},"body":{"entities/Sample.html":{}}}],["src/lib/common/sample/sample.entity.ts:16",{"_index":117,"title":{},"body":{"entities/Sample.html":{}}}],["src/lib/common/sample/sample.entity.ts:18",{"_index":113,"title":{},"body":{"entities/Sample.html":{}}}],["src/lib/common/sample/sample.entity.ts:23",{"_index":121,"title":{},"body":{"entities/Sample.html":{}}}],["src/lib/common/sample/sample.entity.ts:24",{"_index":115,"title":{},"body":{"entities/Sample.html":{}}}],["src/lib/common/sample/sample.entity.ts:7",{"_index":124,"title":{},"body":{"entities/Sample.html":{}}}],["src/lib/common/sample/sample.entity.ts:8",{"_index":120,"title":{},"body":{"entities/Sample.html":{}}}],["src/lib/common/sample/sample.entity.ts:9",{"_index":118,"title":{},"body":{"entities/Sample.html":{}}}],["src/lib/common/sample/sample.view.ts",{"_index":135,"title":{},"body":{"classes/SampleView.html":{},"coverage.html":{}}}],["src/lib/common/sample/update",{"_index":141,"title":{},"body":{"classes/UpdateSampleDto.html":{},"coverage.html":{}}}],["started",{"_index":172,"title":{"index.html":{}},"body":{}}],["statements",{"_index":149,"title":{},"body":{"coverage.html":{}}}],["stays",{"_index":205,"title":{},"body":{"index.html":{}}}],["string",{"_index":12,"title":{},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{},"classes/UpdateCategoryDto.html":{}}}],["stringarray",{"_index":71,"title":{},"body":{"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{}}}],["stringvalue",{"_index":72,"title":{},"body":{"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{}}}],["summary",{"_index":174,"title":{},"body":{"index.html":{}}}],["support",{"_index":237,"title":{},"body":{"index.html":{}}}],["supporting",{"_index":199,"title":{},"body":{"index.html":{}}}],["swc/helpers",{"_index":159,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":156,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":155,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":191,"title":{},"body":{"index.html":{}}}],["target",{"_index":91,"title":{},"body":{"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{}}}],["thank",{"_index":185,"title":{},"body":{"index.html":{}}}],["time",{"_index":192,"title":{},"body":{"index.html":{}}}],["toward",{"_index":213,"title":{},"body":{"index.html":{}}}],["true",{"_index":16,"title":{},"body":{"entities/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateSampleDto.html":{},"classes/SampleObjDto.html":{}}}],["type",{"_index":10,"title":{},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{},"classes/SampleView.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateSampleDto.html":{},"coverage.html":{}}}],["typeorm",{"_index":167,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":76,"title":{},"body":{"classes/CreateSampleDto.html":{},"entities/Sample.html":{}}}],["unique",{"_index":15,"title":{},"body":{"entities/Category.html":{}}}],["up",{"_index":206,"title":{},"body":{"index.html":{}}}],["updatecategorydto",{"_index":138,"title":{"classes/UpdateCategoryDto.html":{}},"body":{"classes/UpdateCategoryDto.html":{},"coverage.html":{}}}],["updates",{"_index":216,"title":{},"body":{"index.html":{}}}],["updatesampledto",{"_index":140,"title":{"classes/UpdateSampleDto.html":{}},"body":{"classes/UpdateSampleDto.html":{},"coverage.html":{}}}],["updatesamplemodel",{"_index":142,"title":{},"body":{"classes/UpdateSampleDto.html":{}}}],["useful",{"_index":196,"title":{},"body":{"index.html":{}}}],["users",{"_index":226,"title":{},"body":{"index.html":{}}}],["using",{"_index":186,"title":{},"body":{"index.html":{}}}],["value",{"_index":96,"title":{},"body":{"classes/CreateSampleDto.html":{},"classes/SampleObjDto.html":{}}}],["version",{"_index":242,"title":{},"body":{"properties.html":{}}}],["versions",{"_index":219,"title":{},"body":{"index.html":{}}}],["viewcolumn",{"_index":39,"title":{},"body":{"classes/CategoryView.html":{}}}],["viewcolumn({type",{"_index":35,"title":{},"body":{"classes/CategoryView.html":{}}}],["viewentity",{"_index":37,"title":{},"body":{"classes/CategoryView.html":{},"classes/SampleView.html":{}}}],["viewentity((q",{"_index":41,"title":{},"body":{"classes/CategoryView.html":{},"classes/SampleView.html":{}}}],["views",{"_index":176,"title":{},"body":{"index.html":{},"properties.html":{}}}],["well",{"_index":208,"title":{},"body":{"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"entities/Category.html":{"url":"entities/Category.html","title":"entity - Category","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/common/category/category.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string', unique: true, readonly: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/category/category.entity.ts:6\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import type { CategoryModel } from '@puq/model';\nimport { Entity, Column, BaseEntity } from '@puq/orm';\n\n@Entity()\nexport class Category extends BaseEntity implements CategoryModel {\n  @Column({ type: 'string', unique: true, readonly: true }) name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CategoryView.html":{"url":"classes/CategoryView.html","title":"class - CategoryView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CategoryView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/common/category/category.view.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            CategoryModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewColumn({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/category/category.view.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type { CategoryModel } from '@puq/model';\nimport { ViewEntity, BaseView, ViewColumn } from '@puq/orm';\nimport { Category } from './category.entity.js';\n\n@ViewEntity((q) => q.addSelect('m.name', 'name').from(Category, 'm'))\nexport class CategoryView extends BaseView implements CategoryModel {\n  @ViewColumn({ type: 'string' }) name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCategoryDto.html":{"url":"classes/CreateCategoryDto.html","title":"class - CreateCategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/common/category/create-category.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            CreateCategoryModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string', required: true, maxLength: 50})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/category/create-category.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type { CreateCategoryModel } from '@puq/model';\nimport { Dto, Property } from '@puq/property';\n\n@Dto()\nexport class CreateCategoryDto implements CreateCategoryModel {\n  @Property({ type: 'string', required: true, maxLength: 50 }) name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSampleDto.html":{"url":"classes/CreateSampleDto.html","title":"class - CreateSampleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSampleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/common/sample/create-sample.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            CreateSampleModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                booleanArray\n                            \n                            \n                                    \n                                booleanValue\n                            \n                            \n                                    \n                                dateArray\n                            \n                            \n                                    \n                                dateValue\n                            \n                            \n                                    \n                                integerArray\n                            \n                            \n                                    \n                                integerValue\n                            \n                            \n                                    \n                                numberArray\n                            \n                            \n                                    \n                                numberValue\n                            \n                            \n                                    \n                                objectArray\n                            \n                            \n                                    \n                                objectValue\n                            \n                            \n                                    \n                                stringArray\n                            \n                            \n                                    \n                                stringValue\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        booleanArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'array', required: true, items: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/sample/create-sample.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        booleanValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'boolean', required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/sample/create-sample.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dateArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'array', required: true, items: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/sample/create-sample.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dateValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'date', required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/sample/create-sample.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        integerArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'array', required: true, items: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/sample/create-sample.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        integerValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'integer', required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/sample/create-sample.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        numberArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'array', required: true, items: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/sample/create-sample.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        numberValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'number', required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/sample/create-sample.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        objectArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SampleObj[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'array', required: true, items: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/sample/create-sample.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        objectValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SampleObj\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'object', required: true, target: () => SampleObjDto})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/sample/create-sample.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        stringArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'array', required: true, items: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/sample/create-sample.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        stringValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string', required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/sample/create-sample.dto.ts:45\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type { CreateSampleModel, SampleObj } from '@puq/model';\nimport { Dto, Property } from '@puq/property';\n\n@Dto()\nexport class SampleObjDto implements SampleObj {\n  @Property({ type: 'string' })\n  value: string;\n}\n\n@Dto()\nexport class CreateSampleDto implements CreateSampleModel {\n  @Property({ type: 'array', required: true, items: { type: 'boolean' } })\n  booleanArray: boolean[];\n\n  @Property({ type: 'boolean', required: true }) booleanValue: boolean;\n\n  @Property({ type: 'array', required: true, items: { type: 'date' } })\n  dateArray: Date[];\n\n  @Property({ type: 'date', required: true }) dateValue: Date;\n\n  @Property({ type: 'array', required: true, items: { type: 'integer' } })\n  integerArray: number[];\n\n  @Property({ type: 'integer', required: true }) integerValue: number;\n\n  @Property({ type: 'array', required: true, items: { type: 'number' } })\n  numberArray: number[];\n\n  @Property({ type: 'number', required: true }) numberValue: number;\n\n  @Property({\n    type: 'array',\n    required: true,\n    items: { type: 'object', target: () => SampleObjDto },\n  })\n  objectArray: SampleObj[];\n\n  @Property({ type: 'object', required: true, target: () => SampleObjDto })\n  objectValue: SampleObj;\n\n  @Property({ type: 'array', required: true, items: { type: 'string' } })\n  stringArray: string[];\n\n  @Property({ type: 'string', required: true }) stringValue: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryCountSampleDto.html":{"url":"classes/QueryCountSampleDto.html","title":"class - QueryCountSampleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryCountSampleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/common/sample/query-count-sample.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateQueryCountDto } from '@puq/orm';\nimport { Dto } from '@puq/property';\nimport { Sample } from './sample.entity.js';\n\n@Dto()\nexport class QueryCountSampleDto extends CreateQueryCountDto({\n  entity: Sample,\n  defaultTake: 50,\n  maxTake: 200,\n}) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryManySampleDto.html":{"url":"classes/QueryManySampleDto.html","title":"class - QueryManySampleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryManySampleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/common/sample/query-many-sample.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateQueryManyDto } from '@puq/orm';\nimport { Dto } from '@puq/property';\nimport { Sample } from './sample.entity.js';\n\n@Dto()\nexport class QueryManySampleDto extends CreateQueryManyDto({\n  entity: Sample,\n}) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryOneSampleDto.html":{"url":"classes/QueryOneSampleDto.html","title":"class - QueryOneSampleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryOneSampleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/common/sample/query-one-sample.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateQueryOneDto } from '@puq/orm';\nimport { Dto } from '@puq/property';\nimport { Sample } from './sample.entity.js';\n\n@Dto()\nexport class QueryOneSampleDto extends CreateQueryOneDto({\n  entity: Sample,\n}) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Sample.html":{"url":"entities/Sample.html","title":"entity - Sample","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Sample\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/common/sample/sample.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                booleanArray\n                            \n                            \n                                    \n                                booleanValue\n                            \n                            \n                                    \n                                dateArray\n                            \n                            \n                                    \n                                dateValue\n                            \n                            \n                                    \n                                integerArray\n                            \n                            \n                                    \n                                integerValue\n                            \n                            \n                                    \n                                numberArray\n                            \n                            \n                                    \n                                numberValue\n                            \n                            \n                                    \n                                objectArray\n                            \n                            \n                                    \n                                objectValue\n                            \n                            \n                                    \n                                stringArray\n                            \n                            \n                                    \n                                stringValue\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        booleanArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'array', items: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/sample/sample.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        booleanValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/sample/sample.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dateArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'array', items: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/sample/sample.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dateValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/sample/sample.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        integerArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'array', items: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/sample/sample.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        integerValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'integer'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/sample/sample.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        numberArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'array', items: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/sample/sample.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        numberValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/sample/sample.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        objectArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SampleObj[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'array', items: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/sample/sample.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        objectValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SampleObj\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'object', target: () => SampleObjDto})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/sample/sample.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        stringArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'array', items: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/sample/sample.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        stringValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/sample/sample.entity.ts:7\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import type { SampleModel, SampleObj } from '@puq/model';\nimport { Entity, Column, BaseEntity } from '@puq/orm';\nimport { SampleObjDto } from './create-sample.dto.js';\n\n@Entity()\nexport class Sample extends BaseEntity implements SampleModel {\n  @Column({ type: 'string' }) stringValue: string;\n  @Column({ type: 'number' }) numberValue: number;\n  @Column({ type: 'integer' }) integerValue: number;\n  @Column({ type: 'boolean' }) booleanValue: boolean;\n  @Column({ type: 'date' }) dateValue: Date;\n  @Column({ type: 'object', target: () => SampleObjDto })\n  objectValue: SampleObj;\n  @Column({ type: 'array', items: { type: 'string' } }) stringArray: string[];\n  @Column({ type: 'array', items: { type: 'number' } }) numberArray: number[];\n  @Column({ type: 'array', items: { type: 'integer' } }) integerArray: number[];\n  @Column({ type: 'array', items: { type: 'boolean' } })\n  booleanArray: boolean[];\n  @Column({\n    type: 'array',\n    items: { type: 'object', target: () => SampleObjDto },\n  })\n  objectArray: SampleObj[];\n  @Column({ type: 'array', items: { type: 'date' } }) dateArray: Date[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SampleObjDto.html":{"url":"classes/SampleObjDto.html","title":"class - SampleObjDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SampleObjDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/common/sample/create-sample.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            SampleObj\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/sample/create-sample.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type { CreateSampleModel, SampleObj } from '@puq/model';\nimport { Dto, Property } from '@puq/property';\n\n@Dto()\nexport class SampleObjDto implements SampleObj {\n  @Property({ type: 'string' })\n  value: string;\n}\n\n@Dto()\nexport class CreateSampleDto implements CreateSampleModel {\n  @Property({ type: 'array', required: true, items: { type: 'boolean' } })\n  booleanArray: boolean[];\n\n  @Property({ type: 'boolean', required: true }) booleanValue: boolean;\n\n  @Property({ type: 'array', required: true, items: { type: 'date' } })\n  dateArray: Date[];\n\n  @Property({ type: 'date', required: true }) dateValue: Date;\n\n  @Property({ type: 'array', required: true, items: { type: 'integer' } })\n  integerArray: number[];\n\n  @Property({ type: 'integer', required: true }) integerValue: number;\n\n  @Property({ type: 'array', required: true, items: { type: 'number' } })\n  numberArray: number[];\n\n  @Property({ type: 'number', required: true }) numberValue: number;\n\n  @Property({\n    type: 'array',\n    required: true,\n    items: { type: 'object', target: () => SampleObjDto },\n  })\n  objectArray: SampleObj[];\n\n  @Property({ type: 'object', required: true, target: () => SampleObjDto })\n  objectValue: SampleObj;\n\n  @Property({ type: 'array', required: true, items: { type: 'string' } })\n  stringArray: string[];\n\n  @Property({ type: 'string', required: true }) stringValue: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SampleRelationParamDto.html":{"url":"classes/SampleRelationParamDto.html","title":"class - SampleRelationParamDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SampleRelationParamDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/common/sample/relation.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateRelationParamDto, CreateUnsetRelationParamDto } from '@puq/orm';\nimport { Dto } from '@puq/property';\n@Dto()\nexport class SampleRelationParamDto extends CreateRelationParamDto([]) {}\n\n@Dto()\nexport class SampleUnsetRelationParamDto extends CreateUnsetRelationParamDto(\n  [],\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SampleUnsetRelationParamDto.html":{"url":"classes/SampleUnsetRelationParamDto.html","title":"class - SampleUnsetRelationParamDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SampleUnsetRelationParamDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/common/sample/relation.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateRelationParamDto, CreateUnsetRelationParamDto } from '@puq/orm';\nimport { Dto } from '@puq/property';\n@Dto()\nexport class SampleRelationParamDto extends CreateRelationParamDto([]) {}\n\n@Dto()\nexport class SampleUnsetRelationParamDto extends CreateUnsetRelationParamDto(\n  [],\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SampleView.html":{"url":"classes/SampleView.html","title":"class - SampleView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SampleView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/common/sample/sample.view.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            SampleViewModel\n            \n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type { SampleViewModel } from '@puq/model';\nimport { ViewEntity, BaseView } from '@puq/orm';\nimport { Sample } from './sample.entity.js';\n\n@ViewEntity((q) => q.from(Sample, 'm'))\nexport class SampleView extends BaseView implements SampleViewModel {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCategoryDto.html":{"url":"classes/UpdateCategoryDto.html","title":"class - UpdateCategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/common/category/update-category.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/category/update-category.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\n\n@Dto()\nexport class UpdateCategoryDto {\n  @Property({ type: 'string' })\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSampleDto.html":{"url":"classes/UpdateSampleDto.html","title":"class - UpdateSampleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSampleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/common/sample/update-sample.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            UpdateSampleModel\n            \n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type { UpdateSampleModel } from '@puq/model';\nimport { CreateSampleDto } from './create-sample.dto.js';\nimport { PartialType } from '@nestjs/swagger';\nimport { Dto } from '@puq/property';\n\n@Dto()\nexport class UpdateSampleDto\n  extends PartialType(CreateSampleDto)\n  implements UpdateSampleModel {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/lib/common/category/category.entity.ts\n            \n            entity\n            Category\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/common/category/category.view.ts\n            \n            class\n            CategoryView\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/common/category/create-category.dto.ts\n            \n            class\n            CreateCategoryDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/common/category/update-category.dto.ts\n            \n            class\n            UpdateCategoryDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/common/sample/create-sample.dto.ts\n            \n            class\n            CreateSampleDto\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/lib/common/sample/create-sample.dto.ts\n            \n            class\n            SampleObjDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/common/sample/query-count-sample.dto.ts\n            \n            class\n            QueryCountSampleDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/common/sample/query-many-sample.dto.ts\n            \n            class\n            QueryManySampleDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/common/sample/query-one-sample.dto.ts\n            \n            class\n            QueryOneSampleDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/common/sample/relation.dto.ts\n            \n            class\n            SampleRelationParamDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/common/sample/relation.dto.ts\n            \n            class\n            SampleUnsetRelationParamDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/common/sample/sample.entity.ts\n            \n            entity\n            Sample\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/common/sample/sample.view.ts\n            \n            class\n            SampleView\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/common/sample/update-sample.dto.ts\n            \n            class\n            UpdateSampleDto\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @swc/helpers : ^0.5.15\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @nestjs/common : ^11.0.11\n        \n            @nestjs/swagger : ^11.0.6\n        \n            @puq/is : ^0.5.30\n        \n            @puq/orm : ^0.5.30\n        \n            @puq/property : ^0.5.30\n        \n            typeorm : ^0.3.20\n        \n            @puq/model : ^0.5.30\n        \n            @puq/query : ^0.5.30\n        \n            @puq/type : ^0.5.30\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n@puq/entity\nSummary\nDatabase entities, views, and dtos generated by @puq/gen:entity /\nInstall\nExample :  pnpm add @puq/entityFunding\nThank you for using @puq/entity It's an open-source project, and maintaining it takes time and effort. If you find this library useful, please consider supporting its ongoing development. Your contributions help ensure that the project stays up-to-date, secure, and well-maintained.\nInstant Funding\nYour funding will go toward\n\nBug fixes and updates to ensure compatibility with the latest versions of dependencies.\nNew features that will make the library even more powerful.\nDocumentation improvements to help users get the most out of [Your Library Name].\nGeneral maintenance to keep the library running smoothly and securely.\n\nContact to the developer: [robert.brightline@gmail.com]\nSupport the developer\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    2 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    12 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.5.30\n        \n            Description : Database entities, views, and dtos generated by @puq/gen:entity /\n        \n            Keywords : puq, entity\n        \n            Homepage : https://rbrightline.github.io/puq/entity\n        \n            Bugs : https://rbrightline.github.io\n        \n            License : MIT\n        \n            Repository : https://github.com/rbrightline/puq/tree/main\n        \n            Author : Robert Brightline\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
