var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/entities/Category.html",[0,0.882,1,1.538]],["body/entities/Category.html",[0,1.274,1,2.221,2,1.453,3,0.442,4,0.362,5,0.362,6,2.34,7,0.963,8,1.108,9,2.154,10,1.075,11,0.051,12,1.742,13,1.104,14,2.34,15,3.857,16,2.649,17,3.857,18,1.104,19,2.914,20,0.585,21,3.096,22,0.838,23,3.096,24,3.096,25,0.838,26,0.442,27,0.22,28,0.838,29,0.963,30,0.038,31,0.038]],["title/classes/CategoryView.html",[27,0.201,32,1.797]],["body/classes/CategoryView.html",[1,1.652,3,0.435,4,0.356,5,0.356,7,0.948,8,1.097,9,2.137,10,1.067,11,0.052,12,1.731,13,1.086,18,1.086,20,0.651,21,3.443,22,0.824,25,0.824,26,0.435,27,0.216,28,0.824,29,1.261,30,0.037,31,0.037,32,2.568,33,0.521,34,2.303,35,2.869,36,2.869,37,2.303,38,3.064,39,3.816,40,2.869,41,2.303,42,2.869,43,2.869,44,2.303]],["title/classes/CreateCategoryDto.html",[27,0.201,45,1.797]],["body/classes/CreateCategoryDto.html",[3,0.44,4,0.36,5,0.36,7,0.958,8,1.104,9,2.149,10,1.072,11,0.051,12,1.738,13,1.098,16,2.213,18,1.098,20,0.583,22,0.833,26,0.44,27,0.219,29,1.269,30,0.038,31,0.038,33,0.526,45,2.586,46,3.085,47,1.951,48,4.311,49,1.669,50,2.586,51,3.843,52,3.843,53,2.327,54,1.104,55,2.213,56,0.721]],["title/classes/CreateSampleDto.html",[27,0.201,57,1.331]],["body/classes/CreateSampleDto.html",[3,0.168,4,0.137,5,0.137,7,0.365,8,0.532,10,1.255,11,0.052,12,1.476,13,1.602,16,2.797,18,1.602,20,0.281,22,0.317,26,0.281,27,0.14,29,0.789,30,0.018,31,0.018,33,0.2,49,2.437,50,3.268,54,0.686,55,2.53,56,0.275,57,0.922,58,2.905,59,0.479,60,1.917,61,1.607,62,1.607,63,1.607,64,1.607,65,1.607,66,1.607,67,1.607,68,1.607,69,1.607,70,1.607,71,1.607,72,1.607,73,2.405,74,2.848,75,2.848,76,2.702,77,1.105,78,1.105,79,2.059,80,1.105,81,1.105,82,2.783,83,1.105,84,1.607,85,1.105,86,1.105,87,1.105,88,2.265,89,1.105,90,1.607,91,1.607,92,1.392,93,1.105,94,1.105,95,1.105,96,0.887]],["title/classes/QueryManySampleDto.html",[27,0.201,97,1.797]],["body/classes/QueryManySampleDto.html",[0,1.104,3,0.507,4,0.415,5,0.415,11,0.052,20,0.7,25,0.96,26,0.507,27,0.252,28,0.96,30,0.041,31,0.041,33,0.606,54,1.211,56,0.831,59,1.45,97,2.834,98,2.248,99,2.682,100,4.212,101,1.828,102,2.248]],["title/classes/QueryOneSampleDto.html",[27,0.201,103,1.797]],["body/classes/QueryOneSampleDto.html",[0,1.104,3,0.507,4,0.415,5,0.415,11,0.052,20,0.7,25,0.96,26,0.507,27,0.252,28,0.96,30,0.041,31,0.041,33,0.606,54,1.211,56,0.831,59,1.45,98,2.248,101,1.828,102,2.248,103,2.834,104,2.682,105,4.212]],["title/entities/Sample.html",[0,0.882,101,1.159]],["body/entities/Sample.html",[0,0.691,2,0.638,3,0.194,4,0.159,5,0.159,7,0.423,8,0.601,10,1.276,11,0.053,12,1.445,13,1.676,14,3.553,18,1.676,20,0.402,22,0.368,23,3.615,24,1.678,25,0.368,26,0.194,27,0.097,28,0.368,29,0.423,30,0.02,31,0.02,61,1.783,62,1.783,63,1.783,64,1.783,65,1.783,66,1.783,67,1.783,68,1.783,69,1.783,70,1.783,71,1.783,72,1.783,73,2.568,74,2.978,75,2.978,76,2.904,79,2.198,82,2.919,84,1.783,88,2.269,90,1.783,91,1.783,92,1.525,101,0.907,106,1.028,107,1.28,108,1.28,109,1.28,110,1.28,111,1.28,112,1.28,113,1.28,114,1.28,115,1.28,116,1.28,117,1.28,118,1.28,119,2.091,120,1.028,121,1.028]],["title/classes/SampleObjDto.html",[27,0.201,92,1.331]],["body/classes/SampleObjDto.html",[3,0.257,4,0.21,5,0.21,7,0.559,8,0.75,10,1.274,11,0.053,12,1.665,13,0.64,16,2.74,18,0.64,20,0.396,22,0.486,26,0.396,27,0.197,29,1.052,30,0.025,31,0.025,33,0.307,49,0.974,50,3.202,54,0.915,55,2.807,56,0.421,57,0.843,58,1.755,59,0.734,60,2.094,61,1.138,62,1.138,63,1.138,64,1.138,65,1.138,66,1.138,67,1.138,68,1.138,69,1.138,70,1.138,71,1.138,72,1.138,73,2.408,74,2.749,75,2.749,79,2.061,82,2.749,84,1.755,88,2.601,90,1.755,91,1.755,92,1.783,96,2.556,122,1.691]],["title/classes/SampleRelationParamDto.html",[27,0.201,123,1.538]],["body/classes/SampleRelationParamDto.html",[3,0.507,4,0.415,5,0.415,11,0.052,20,0.639,25,0.96,26,0.639,27,0.318,28,1.211,30,0.041,31,0.041,33,0.606,54,1.326,56,0.831,123,2.426,124,2.248,125,3.382,126,3.382,127,1.924]],["title/classes/SampleUnsetRelationParamDto.html",[27,0.201,127,1.538]],["body/classes/SampleUnsetRelationParamDto.html",[3,0.507,4,0.415,5,0.415,11,0.052,20,0.639,25,0.96,26,0.639,27,0.318,28,1.211,30,0.041,31,0.041,33,0.606,54,1.326,56,0.831,123,1.924,124,2.248,125,3.382,126,3.382,127,2.426]],["title/classes/SampleView.html",[27,0.201,128,1.797]],["body/classes/SampleView.html",[3,0.495,4,0.405,5,0.405,10,0.811,11,0.052,20,0.692,22,0.937,25,0.937,26,0.495,27,0.246,28,0.937,29,1.37,30,0.041,31,0.041,33,0.592,37,2.618,38,3.33,41,2.618,44,2.618,101,1.415,102,2.195,128,2.792,129,2.618,130,4.562,131,3.261]],["title/classes/UpdateCategoryDto.html",[27,0.201,132,1.797]],["body/classes/UpdateCategoryDto.html",[3,0.486,4,0.398,5,0.398,7,1.058,8,1.179,9,2.255,10,1.02,11,0.051,12,1.806,13,1.213,18,1.213,20,0.486,26,0.486,27,0.242,30,0.04,31,0.04,33,0.581,47,2.156,49,1.845,53,2.572,54,1.179,55,2.362,56,0.797,132,2.76,133,3.293]],["title/classes/UpdateSampleDto.html",[27,0.201,134,1.797]],["body/classes/UpdateSampleDto.html",[3,0.486,4,0.398,5,0.398,10,0.797,11,0.052,20,0.724,22,0.921,26,0.486,27,0.242,28,0.921,29,1.355,30,0.04,31,0.04,33,0.581,54,1.179,56,0.797,57,1.597,59,1.39,120,2.572,121,2.572,134,2.76,135,2.572,136,4.525,137,3.204,138,2.572,139,3.204]],["title/coverage.html",[140,2.919]],["body/coverage.html",[0,1.12,1,1.39,5,0.3,6,1.938,10,0.6,11,0.051,27,0.382,30,0.033,31,0.033,32,1.624,34,1.938,45,1.624,46,1.938,47,2.282,57,1.203,58,2.282,59,1.944,92,1.203,97,1.624,98,2.282,99,1.938,101,1.047,103,1.624,104,1.938,106,1.938,123,1.39,124,2.282,127,1.39,128,1.624,129,1.938,132,1.624,133,1.938,134,1.624,135,1.938,140,1.938,141,1.938,142,2.414,143,2.414,144,5.159,145,4.87,146,4.252,147,2.414,148,1.938,149,2.414,150,2.414]],["title/dependencies.html",[151,1.793,152,2.16]],["body/dependencies.html",[11,0.053,22,0.96,25,0.96,30,0.041,31,0.041,56,0.831,138,2.682,152,2.834,153,3.341,154,3.341,155,3.341,156,3.341,157,3.341,158,3.341,159,3.341,160,4.093,161,3.341,162,3.341,163,3.341,164,3.341]],["title/index.html",[7,0.738,165,2.234,166,2.234]],["body/index.html",[2,1.276,4,0.318,9,1.276,11,0.043,30,0.035,31,0.035,79,1.474,141,2.055,148,2.055,152,1.723,167,3.533,168,2.56,169,2.055,170,2.055,171,2.055,172,2.055,173,2.055,174,2.56,175,2.56,176,2.56,177,2.56,178,2.56,179,2.56,180,2.56,181,2.56,182,2.56,183,3.533,184,2.56,185,2.56,186,2.56,187,2.56,188,2.56,189,4.362,190,2.56,191,2.56,192,2.56,193,2.56,194,2.56,195,2.56,196,2.56,197,3.533,198,3.533,199,2.56,200,2.56,201,2.56,202,2.56,203,2.56,204,2.56,205,3.533,206,2.56,207,2.56,208,2.56,209,2.56,210,2.56,211,2.56,212,2.56,213,2.56,214,2.56,215,2.56,216,2.56,217,2.56,218,2.56,219,2.56,220,2.56,221,2.56,222,2.56,223,2.56,224,2.56,225,2.56,226,2.56,227,2.56,228,2.56,229,3.533,230,2.56,231,2.56]],["title/modules.html",[232,2.919]],["body/modules.html",[11,0.047,30,0.047,31,0.047,232,3.332]],["title/overview.html",[233,2.919]],["body/overview.html",[2,2.008,11,0.046,30,0.046,31,0.046,33,0.731,233,3.234,234,4.029,235,4.029]],["title/properties.html",[8,0.922,151,1.793]],["body/properties.html",[0,1.104,2,1.665,8,0.96,11,0.052,30,0.041,31,0.041,160,2.682,169,2.682,170,2.682,171,2.682,172,2.682,173,2.682,236,3.341,237,3.341,238,3.341,239,3.341,240,3.341,241,3.341,242,3.341,243,3.341,244,3.341,245,3.341,246,3.341,247,3.341,248,3.341,249,3.341,250,3.341]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateSampleDto.html":{},"classes/QueryManySampleDto.html":{},"classes/QueryOneSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{},"classes/SampleRelationParamDto.html":{},"classes/SampleUnsetRelationParamDto.html":{},"classes/SampleView.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateSampleDto.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":144,"title":{},"body":{"coverage.html":{}}}],["0.3.20",{"_index":162,"title":{},"body":{"dependencies.html":{}}}],["0.5.0",{"_index":160,"title":{},"body":{"dependencies.html":{},"properties.html":{}}}],["0.5.15",{"_index":154,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":145,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":147,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":146,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":235,"title":{},"body":{"overview.html":{}}}],["11.0.11",{"_index":157,"title":{},"body":{"dependencies.html":{}}}],["11.0.6",{"_index":158,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":234,"title":{},"body":{"overview.html":{}}}],["50",{"_index":52,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["add",{"_index":177,"title":{},"body":{"index.html":{}}}],["array",{"_index":74,"title":{},"body":{"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{}}}],["author",{"_index":248,"title":{},"body":{"properties.html":{}}}],["baseentity",{"_index":24,"title":{},"body":{"entities/Category.html":{},"entities/Sample.html":{}}}],["baseview",{"_index":38,"title":{},"body":{"classes/CategoryView.html":{},"classes/SampleView.html":{}}}],["boolean",{"_index":73,"title":{},"body":{"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{}}}],["booleanarray",{"_index":61,"title":{},"body":{"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{}}}],["booleanvalue",{"_index":62,"title":{},"body":{"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{}}}],["brightline",{"_index":250,"title":{},"body":{"properties.html":{}}}],["bug",{"_index":208,"title":{},"body":{"index.html":{}}}],["bugs",{"_index":242,"title":{},"body":{"properties.html":{}}}],["category",{"_index":1,"title":{"entities/Category.html":{}},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"coverage.html":{}}}],["category.dto.ts",{"_index":47,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/UpdateCategoryDto.html":{},"coverage.html":{}}}],["category.dto.ts:6",{"_index":53,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/UpdateCategoryDto.html":{}}}],["category.entity.js",{"_index":40,"title":{},"body":{"classes/CategoryView.html":{}}}],["categorymodel",{"_index":21,"title":{},"body":{"entities/Category.html":{},"classes/CategoryView.html":{}}}],["categoryview",{"_index":32,"title":{"classes/CategoryView.html":{}},"body":{"classes/CategoryView.html":{},"coverage.html":{}}}],["class",{"_index":27,"title":{"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateSampleDto.html":{},"classes/QueryManySampleDto.html":{},"classes/QueryOneSampleDto.html":{},"classes/SampleObjDto.html":{},"classes/SampleRelationParamDto.html":{},"classes/SampleUnsetRelationParamDto.html":{},"classes/SampleView.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateSampleDto.html":{}},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateSampleDto.html":{},"classes/QueryManySampleDto.html":{},"classes/QueryOneSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{},"classes/SampleRelationParamDto.html":{},"classes/SampleUnsetRelationParamDto.html":{},"classes/SampleView.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateSampleDto.html":{},"coverage.html":{}}}],["classes",{"_index":33,"title":{},"body":{"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateSampleDto.html":{},"classes/QueryManySampleDto.html":{},"classes/QueryOneSampleDto.html":{},"classes/SampleObjDto.html":{},"classes/SampleRelationParamDto.html":{},"classes/SampleUnsetRelationParamDto.html":{},"classes/SampleView.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateSampleDto.html":{},"overview.html":{}}}],["column",{"_index":23,"title":{},"body":{"entities/Category.html":{},"entities/Sample.html":{}}}],["column({type",{"_index":14,"title":{},"body":{"entities/Category.html":{},"entities/Sample.html":{}}}],["compatibility",{"_index":211,"title":{},"body":{"index.html":{}}}],["consider",{"_index":192,"title":{},"body":{"index.html":{}}}],["contact",{"_index":228,"title":{},"body":{"index.html":{}}}],["contributions",{"_index":196,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":140,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":120,"title":{},"body":{"entities/Sample.html":{},"classes/UpdateSampleDto.html":{}}}],["createcategorydto",{"_index":45,"title":{"classes/CreateCategoryDto.html":{}},"body":{"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["createcategorymodel",{"_index":48,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["createquerymanydto",{"_index":100,"title":{},"body":{"classes/QueryManySampleDto.html":{}}}],["createqueryonedto",{"_index":105,"title":{},"body":{"classes/QueryOneSampleDto.html":{}}}],["createrelationparamdto",{"_index":125,"title":{},"body":{"classes/SampleRelationParamDto.html":{},"classes/SampleUnsetRelationParamDto.html":{}}}],["createsampledto",{"_index":57,"title":{"classes/CreateSampleDto.html":{}},"body":{"classes/CreateSampleDto.html":{},"classes/SampleObjDto.html":{},"classes/UpdateSampleDto.html":{},"coverage.html":{}}}],["createsamplemodel",{"_index":60,"title":{},"body":{"classes/CreateSampleDto.html":{},"classes/SampleObjDto.html":{}}}],["createunsetrelationparamdto",{"_index":126,"title":{},"body":{"classes/SampleRelationParamDto.html":{},"classes/SampleUnsetRelationParamDto.html":{}}}],["database",{"_index":169,"title":{},"body":{"index.html":{},"properties.html":{}}}],["date",{"_index":79,"title":{},"body":{"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{},"index.html":{}}}],["datearray",{"_index":63,"title":{},"body":{"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{}}}],["datevalue",{"_index":64,"title":{},"body":{"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{}}}],["decorators",{"_index":13,"title":{},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{},"classes/UpdateCategoryDto.html":{}}}],["defined",{"_index":18,"title":{},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{},"classes/UpdateCategoryDto.html":{}}}],["dependencies",{"_index":152,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["description",{"_index":237,"title":{},"body":{"properties.html":{}}}],["developer",{"_index":229,"title":{},"body":{"index.html":{}}}],["development",{"_index":195,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":141,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dto",{"_index":54,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreateSampleDto.html":{},"classes/QueryManySampleDto.html":{},"classes/QueryOneSampleDto.html":{},"classes/SampleObjDto.html":{},"classes/SampleRelationParamDto.html":{},"classes/SampleUnsetRelationParamDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateSampleDto.html":{}}}],["dtos",{"_index":171,"title":{},"body":{"index.html":{},"properties.html":{}}}],["effort",{"_index":187,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":198,"title":{},"body":{"index.html":{}}}],["entities",{"_index":2,"title":{},"body":{"entities/Category.html":{},"entities/Sample.html":{},"index.html":{},"overview.html":{},"properties.html":{}}}],["entity",{"_index":0,"title":{"entities/Category.html":{},"entities/Sample.html":{}},"body":{"entities/Category.html":{},"classes/QueryManySampleDto.html":{},"classes/QueryOneSampleDto.html":{},"entities/Sample.html":{},"coverage.html":{},"properties.html":{}}}],["even",{"_index":216,"title":{},"body":{"index.html":{}}}],["example",{"_index":175,"title":{},"body":{"index.html":{}}}],["export",{"_index":26,"title":{},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateSampleDto.html":{},"classes/QueryManySampleDto.html":{},"classes/QueryOneSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{},"classes/SampleRelationParamDto.html":{},"classes/SampleUnsetRelationParamDto.html":{},"classes/SampleView.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateSampleDto.html":{}}}],["extends",{"_index":28,"title":{},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"classes/QueryManySampleDto.html":{},"classes/QueryOneSampleDto.html":{},"entities/Sample.html":{},"classes/SampleRelationParamDto.html":{},"classes/SampleUnsetRelationParamDto.html":{},"classes/SampleView.html":{},"classes/UpdateSampleDto.html":{}}}],["features",{"_index":214,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateSampleDto.html":{},"classes/QueryManySampleDto.html":{},"classes/QueryOneSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{},"classes/SampleRelationParamDto.html":{},"classes/SampleUnsetRelationParamDto.html":{},"classes/SampleView.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateSampleDto.html":{},"coverage.html":{}}}],["find",{"_index":188,"title":{},"body":{"index.html":{}}}],["fixes",{"_index":209,"title":{},"body":{"index.html":{}}}],["funding",{"_index":205,"title":{},"body":{"index.html":{}}}],["general",{"_index":222,"title":{},"body":{"index.html":{}}}],["generated",{"_index":172,"title":{},"body":{"index.html":{},"properties.html":{}}}],["getting",{"_index":165,"title":{"index.html":{}},"body":{}}],["go",{"_index":206,"title":{},"body":{"index.html":{}}}],["help",{"_index":197,"title":{},"body":{"index.html":{}}}],["homepage",{"_index":240,"title":{},"body":{"properties.html":{}}}],["https://github.com/rbrightline/puq/tree/main",{"_index":247,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io",{"_index":243,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io/puq/entity",{"_index":241,"title":{},"body":{"properties.html":{}}}],["identifier",{"_index":142,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":29,"title":{},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{},"classes/SampleView.html":{},"classes/UpdateSampleDto.html":{}}}],["import",{"_index":20,"title":{},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateSampleDto.html":{},"classes/QueryManySampleDto.html":{},"classes/QueryOneSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{},"classes/SampleRelationParamDto.html":{},"classes/SampleUnsetRelationParamDto.html":{},"classes/SampleView.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateSampleDto.html":{}}}],["improvements",{"_index":219,"title":{},"body":{"index.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{},"classes/UpdateCategoryDto.html":{}}}],["info",{"_index":3,"title":{},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateSampleDto.html":{},"classes/QueryManySampleDto.html":{},"classes/QueryOneSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{},"classes/SampleRelationParamDto.html":{},"classes/SampleUnsetRelationParamDto.html":{},"classes/SampleView.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateSampleDto.html":{}}}],["install",{"_index":174,"title":{},"body":{"index.html":{}}}],["instant",{"_index":204,"title":{},"body":{"index.html":{}}}],["integer",{"_index":84,"title":{},"body":{"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{}}}],["integerarray",{"_index":65,"title":{},"body":{"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{}}}],["integervalue",{"_index":66,"title":{},"body":{"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{}}}],["it's",{"_index":181,"title":{},"body":{"index.html":{}}}],["items",{"_index":75,"title":{},"body":{"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{}}}],["keep",{"_index":224,"title":{},"body":{"index.html":{}}}],["keywords",{"_index":238,"title":{},"body":{"properties.html":{}}}],["latest",{"_index":212,"title":{},"body":{"index.html":{}}}],["library",{"_index":189,"title":{},"body":{"index.html":{}}}],["license",{"_index":244,"title":{},"body":{"properties.html":{}}}],["m",{"_index":44,"title":{},"body":{"classes/CategoryView.html":{},"classes/SampleView.html":{}}}],["maintained",{"_index":203,"title":{},"body":{"index.html":{}}}],["maintaining",{"_index":184,"title":{},"body":{"index.html":{}}}],["maintenance",{"_index":223,"title":{},"body":{"index.html":{}}}],["make",{"_index":215,"title":{},"body":{"index.html":{}}}],["many",{"_index":99,"title":{},"body":{"classes/QueryManySampleDto.html":{},"coverage.html":{}}}],["matching",{"_index":31,"title":{},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateSampleDto.html":{},"classes/QueryManySampleDto.html":{},"classes/QueryOneSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{},"classes/SampleRelationParamDto.html":{},"classes/SampleUnsetRelationParamDto.html":{},"classes/SampleView.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateSampleDto.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["maxlength",{"_index":51,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["mit",{"_index":245,"title":{},"body":{"properties.html":{}}}],["modules",{"_index":232,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":217,"title":{},"body":{"index.html":{}}}],["name",{"_index":9,"title":{},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"classes/UpdateCategoryDto.html":{},"index.html":{}}}],["name').from(category",{"_index":43,"title":{},"body":{"classes/CategoryView.html":{}}}],["nestjs/common",{"_index":156,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":138,"title":{},"body":{"classes/UpdateSampleDto.html":{},"dependencies.html":{}}}],["new",{"_index":148,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["number",{"_index":82,"title":{},"body":{"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{}}}],["numberarray",{"_index":67,"title":{},"body":{"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{}}}],["numbervalue",{"_index":68,"title":{},"body":{"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{}}}],["object",{"_index":90,"title":{},"body":{"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{}}}],["objectarray",{"_index":69,"title":{},"body":{"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{}}}],["objectvalue",{"_index":70,"title":{},"body":{"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{}}}],["one",{"_index":104,"title":{},"body":{"classes/QueryOneSampleDto.html":{},"coverage.html":{}}}],["ongoing",{"_index":194,"title":{},"body":{"index.html":{}}}],["open",{"_index":182,"title":{},"body":{"index.html":{}}}],["out",{"_index":221,"title":{},"body":{"index.html":{}}}],["overview",{"_index":233,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":151,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["partialtype",{"_index":137,"title":{},"body":{"classes/UpdateSampleDto.html":{}}}],["partialtype(createsampledto",{"_index":139,"title":{},"body":{"classes/UpdateSampleDto.html":{}}}],["peer",{"_index":155,"title":{},"body":{"dependencies.html":{}}}],["please",{"_index":191,"title":{},"body":{"index.html":{}}}],["pnpm",{"_index":176,"title":{},"body":{"index.html":{}}}],["powerful",{"_index":218,"title":{},"body":{"index.html":{}}}],["project",{"_index":183,"title":{},"body":{"index.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{},"classes/UpdateCategoryDto.html":{},"properties.html":{}}}],["property",{"_index":55,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreateSampleDto.html":{},"classes/SampleObjDto.html":{},"classes/UpdateCategoryDto.html":{}}}],["property({type",{"_index":49,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreateSampleDto.html":{},"classes/SampleObjDto.html":{},"classes/UpdateCategoryDto.html":{}}}],["puq",{"_index":239,"title":{},"body":{"properties.html":{}}}],["puq/entity",{"_index":167,"title":{},"body":{"index.html":{}}}],["puq/entityfunding",{"_index":178,"title":{},"body":{"index.html":{}}}],["puq/gen:entity",{"_index":173,"title":{},"body":{"index.html":{},"properties.html":{}}}],["puq/is",{"_index":159,"title":{},"body":{"dependencies.html":{}}}],["puq/model",{"_index":22,"title":{},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{},"classes/SampleView.html":{},"classes/UpdateSampleDto.html":{},"dependencies.html":{}}}],["puq/orm",{"_index":25,"title":{},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"classes/QueryManySampleDto.html":{},"classes/QueryOneSampleDto.html":{},"entities/Sample.html":{},"classes/SampleRelationParamDto.html":{},"classes/SampleUnsetRelationParamDto.html":{},"classes/SampleView.html":{},"dependencies.html":{}}}],["puq/property",{"_index":56,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreateSampleDto.html":{},"classes/QueryManySampleDto.html":{},"classes/QueryOneSampleDto.html":{},"classes/SampleObjDto.html":{},"classes/SampleRelationParamDto.html":{},"classes/SampleUnsetRelationParamDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateSampleDto.html":{},"dependencies.html":{}}}],["puq/query",{"_index":163,"title":{},"body":{"dependencies.html":{}}}],["puq/type",{"_index":164,"title":{},"body":{"dependencies.html":{}}}],["q.addselect('m.name",{"_index":42,"title":{},"body":{"classes/CategoryView.html":{}}}],["q.from(sample",{"_index":131,"title":{},"body":{"classes/SampleView.html":{}}}],["querymanysampledto",{"_index":97,"title":{"classes/QueryManySampleDto.html":{}},"body":{"classes/QueryManySampleDto.html":{},"coverage.html":{}}}],["queryonesampledto",{"_index":103,"title":{"classes/QueryOneSampleDto.html":{}},"body":{"classes/QueryOneSampleDto.html":{},"coverage.html":{}}}],["readonly",{"_index":17,"title":{},"body":{"entities/Category.html":{}}}],["repository",{"_index":246,"title":{},"body":{"properties.html":{}}}],["required",{"_index":50,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreateSampleDto.html":{},"classes/SampleObjDto.html":{}}}],["results",{"_index":30,"title":{},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateSampleDto.html":{},"classes/QueryManySampleDto.html":{},"classes/QueryOneSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{},"classes/SampleRelationParamDto.html":{},"classes/SampleUnsetRelationParamDto.html":{},"classes/SampleView.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateSampleDto.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["robert",{"_index":249,"title":{},"body":{"properties.html":{}}}],["robert.brightline@gmail.com",{"_index":230,"title":{},"body":{"index.html":{}}}],["running",{"_index":225,"title":{},"body":{"index.html":{}}}],["sample",{"_index":101,"title":{"entities/Sample.html":{}},"body":{"classes/QueryManySampleDto.html":{},"classes/QueryOneSampleDto.html":{},"entities/Sample.html":{},"classes/SampleView.html":{},"coverage.html":{}}}],["sample.dto.js",{"_index":121,"title":{},"body":{"entities/Sample.html":{},"classes/UpdateSampleDto.html":{}}}],["sample.dto.ts",{"_index":59,"title":{},"body":{"classes/CreateSampleDto.html":{},"classes/QueryManySampleDto.html":{},"classes/QueryOneSampleDto.html":{},"classes/SampleObjDto.html":{},"classes/UpdateSampleDto.html":{},"coverage.html":{}}}],["sample.dto.ts:13",{"_index":77,"title":{},"body":{"classes/CreateSampleDto.html":{}}}],["sample.dto.ts:15",{"_index":78,"title":{},"body":{"classes/CreateSampleDto.html":{}}}],["sample.dto.ts:18",{"_index":80,"title":{},"body":{"classes/CreateSampleDto.html":{}}}],["sample.dto.ts:20",{"_index":81,"title":{},"body":{"classes/CreateSampleDto.html":{}}}],["sample.dto.ts:23",{"_index":83,"title":{},"body":{"classes/CreateSampleDto.html":{}}}],["sample.dto.ts:25",{"_index":85,"title":{},"body":{"classes/CreateSampleDto.html":{}}}],["sample.dto.ts:28",{"_index":86,"title":{},"body":{"classes/CreateSampleDto.html":{}}}],["sample.dto.ts:30",{"_index":87,"title":{},"body":{"classes/CreateSampleDto.html":{}}}],["sample.dto.ts:37",{"_index":89,"title":{},"body":{"classes/CreateSampleDto.html":{}}}],["sample.dto.ts:40",{"_index":93,"title":{},"body":{"classes/CreateSampleDto.html":{}}}],["sample.dto.ts:43",{"_index":94,"title":{},"body":{"classes/CreateSampleDto.html":{}}}],["sample.dto.ts:45",{"_index":95,"title":{},"body":{"classes/CreateSampleDto.html":{}}}],["sample.dto.ts:7",{"_index":122,"title":{},"body":{"classes/SampleObjDto.html":{}}}],["sample.entity.js",{"_index":102,"title":{},"body":{"classes/QueryManySampleDto.html":{},"classes/QueryOneSampleDto.html":{},"classes/SampleView.html":{}}}],["samplemodel",{"_index":119,"title":{},"body":{"entities/Sample.html":{}}}],["sampleobj",{"_index":88,"title":{},"body":{"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{}}}],["sampleobjdto",{"_index":92,"title":{"classes/SampleObjDto.html":{}},"body":{"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{},"coverage.html":{}}}],["samplerelationparamdto",{"_index":123,"title":{"classes/SampleRelationParamDto.html":{}},"body":{"classes/SampleRelationParamDto.html":{},"classes/SampleUnsetRelationParamDto.html":{},"coverage.html":{}}}],["sampleunsetrelationparamdto",{"_index":127,"title":{"classes/SampleUnsetRelationParamDto.html":{}},"body":{"classes/SampleRelationParamDto.html":{},"classes/SampleUnsetRelationParamDto.html":{},"coverage.html":{}}}],["sampleview",{"_index":128,"title":{"classes/SampleView.html":{}},"body":{"classes/SampleView.html":{},"coverage.html":{}}}],["sampleviewmodel",{"_index":130,"title":{},"body":{"classes/SampleView.html":{}}}],["secure",{"_index":201,"title":{},"body":{"index.html":{}}}],["securely",{"_index":227,"title":{},"body":{"index.html":{}}}],["smoothly",{"_index":226,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateSampleDto.html":{},"classes/QueryManySampleDto.html":{},"classes/QueryOneSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{},"classes/SampleRelationParamDto.html":{},"classes/SampleUnsetRelationParamDto.html":{},"classes/SampleView.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateSampleDto.html":{},"index.html":{}}}],["src/lib/common/category/category.entity.ts",{"_index":6,"title":{},"body":{"entities/Category.html":{},"coverage.html":{}}}],["src/lib/common/category/category.entity.ts:6",{"_index":19,"title":{},"body":{"entities/Category.html":{}}}],["src/lib/common/category/category.view.ts",{"_index":34,"title":{},"body":{"classes/CategoryView.html":{},"coverage.html":{}}}],["src/lib/common/category/category.view.ts:7",{"_index":36,"title":{},"body":{"classes/CategoryView.html":{}}}],["src/lib/common/category/create",{"_index":46,"title":{},"body":{"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["src/lib/common/category/update",{"_index":133,"title":{},"body":{"classes/UpdateCategoryDto.html":{},"coverage.html":{}}}],["src/lib/common/sample/create",{"_index":58,"title":{},"body":{"classes/CreateSampleDto.html":{},"classes/SampleObjDto.html":{},"coverage.html":{}}}],["src/lib/common/sample/query",{"_index":98,"title":{},"body":{"classes/QueryManySampleDto.html":{},"classes/QueryOneSampleDto.html":{},"coverage.html":{}}}],["src/lib/common/sample/relation.dto.ts",{"_index":124,"title":{},"body":{"classes/SampleRelationParamDto.html":{},"classes/SampleUnsetRelationParamDto.html":{},"coverage.html":{}}}],["src/lib/common/sample/sample.entity.ts",{"_index":106,"title":{},"body":{"entities/Sample.html":{},"coverage.html":{}}}],["src/lib/common/sample/sample.entity.ts:10",{"_index":108,"title":{},"body":{"entities/Sample.html":{}}}],["src/lib/common/sample/sample.entity.ts:11",{"_index":110,"title":{},"body":{"entities/Sample.html":{}}}],["src/lib/common/sample/sample.entity.ts:13",{"_index":116,"title":{},"body":{"entities/Sample.html":{}}}],["src/lib/common/sample/sample.entity.ts:14",{"_index":117,"title":{},"body":{"entities/Sample.html":{}}}],["src/lib/common/sample/sample.entity.ts:15",{"_index":113,"title":{},"body":{"entities/Sample.html":{}}}],["src/lib/common/sample/sample.entity.ts:16",{"_index":111,"title":{},"body":{"entities/Sample.html":{}}}],["src/lib/common/sample/sample.entity.ts:18",{"_index":107,"title":{},"body":{"entities/Sample.html":{}}}],["src/lib/common/sample/sample.entity.ts:23",{"_index":115,"title":{},"body":{"entities/Sample.html":{}}}],["src/lib/common/sample/sample.entity.ts:24",{"_index":109,"title":{},"body":{"entities/Sample.html":{}}}],["src/lib/common/sample/sample.entity.ts:7",{"_index":118,"title":{},"body":{"entities/Sample.html":{}}}],["src/lib/common/sample/sample.entity.ts:8",{"_index":114,"title":{},"body":{"entities/Sample.html":{}}}],["src/lib/common/sample/sample.entity.ts:9",{"_index":112,"title":{},"body":{"entities/Sample.html":{}}}],["src/lib/common/sample/sample.view.ts",{"_index":129,"title":{},"body":{"classes/SampleView.html":{},"coverage.html":{}}}],["src/lib/common/sample/update",{"_index":135,"title":{},"body":{"classes/UpdateSampleDto.html":{},"coverage.html":{}}}],["started",{"_index":166,"title":{"index.html":{}},"body":{}}],["statements",{"_index":143,"title":{},"body":{"coverage.html":{}}}],["stays",{"_index":199,"title":{},"body":{"index.html":{}}}],["string",{"_index":12,"title":{},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{},"classes/UpdateCategoryDto.html":{}}}],["stringarray",{"_index":71,"title":{},"body":{"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{}}}],["stringvalue",{"_index":72,"title":{},"body":{"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{}}}],["summary",{"_index":168,"title":{},"body":{"index.html":{}}}],["support",{"_index":231,"title":{},"body":{"index.html":{}}}],["supporting",{"_index":193,"title":{},"body":{"index.html":{}}}],["swc/helpers",{"_index":153,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":150,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":149,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":185,"title":{},"body":{"index.html":{}}}],["target",{"_index":91,"title":{},"body":{"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{}}}],["thank",{"_index":179,"title":{},"body":{"index.html":{}}}],["time",{"_index":186,"title":{},"body":{"index.html":{}}}],["toward",{"_index":207,"title":{},"body":{"index.html":{}}}],["true",{"_index":16,"title":{},"body":{"entities/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateSampleDto.html":{},"classes/SampleObjDto.html":{}}}],["type",{"_index":10,"title":{},"body":{"entities/Category.html":{},"classes/CategoryView.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateSampleDto.html":{},"entities/Sample.html":{},"classes/SampleObjDto.html":{},"classes/SampleView.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateSampleDto.html":{},"coverage.html":{}}}],["typeorm",{"_index":161,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":76,"title":{},"body":{"classes/CreateSampleDto.html":{},"entities/Sample.html":{}}}],["unique",{"_index":15,"title":{},"body":{"entities/Category.html":{}}}],["up",{"_index":200,"title":{},"body":{"index.html":{}}}],["updatecategorydto",{"_index":132,"title":{"classes/UpdateCategoryDto.html":{}},"body":{"classes/UpdateCategoryDto.html":{},"coverage.html":{}}}],["updates",{"_index":210,"title":{},"body":{"index.html":{}}}],["updatesampledto",{"_index":134,"title":{"classes/UpdateSampleDto.html":{}},"body":{"classes/UpdateSampleDto.html":{},"coverage.html":{}}}],["updatesamplemodel",{"_index":136,"title":{},"body":{"classes/UpdateSampleDto.html":{}}}],["useful",{"_index":190,"title":{},"body":{"index.html":{}}}],["users",{"_index":220,"title":{},"body":{"index.html":{}}}],["using",{"_index":180,"title":{},"body":{"index.html":{}}}],["value",{"_index":96,"title":{},"body":{"classes/CreateSampleDto.html":{},"classes/SampleObjDto.html":{}}}],["version",{"_index":236,"title":{},"body":{"properties.html":{}}}],["versions",{"_index":213,"title":{},"body":{"index.html":{}}}],["viewcolumn",{"_index":39,"title":{},"body":{"classes/CategoryView.html":{}}}],["viewcolumn({type",{"_index":35,"title":{},"body":{"classes/CategoryView.html":{}}}],["viewentity",{"_index":37,"title":{},"body":{"classes/CategoryView.html":{},"classes/SampleView.html":{}}}],["viewentity((q",{"_index":41,"title":{},"body":{"classes/CategoryView.html":{},"classes/SampleView.html":{}}}],["views",{"_index":170,"title":{},"body":{"index.html":{},"properties.html":{}}}],["well",{"_index":202,"title":{},"body":{"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"entities/Category.html":{"url":"entities/Category.html","title":"entity - Category","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/common/category/category.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string', unique: true, readonly: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/category/category.entity.ts:6\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import type { CategoryModel } from '@puq/model';\nimport { Entity, Column, BaseEntity } from '@puq/orm';\n\n@Entity()\nexport class Category extends BaseEntity implements CategoryModel {\n  @Column({ type: 'string', unique: true, readonly: true }) name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CategoryView.html":{"url":"classes/CategoryView.html","title":"class - CategoryView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CategoryView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/common/category/category.view.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            CategoryModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewColumn({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/category/category.view.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type { CategoryModel } from '@puq/model';\nimport { ViewEntity, BaseView, ViewColumn } from '@puq/orm';\nimport { Category } from './category.entity.js';\n\n@ViewEntity((q) => q.addSelect('m.name', 'name').from(Category, 'm'))\nexport class CategoryView extends BaseView implements CategoryModel {\n  @ViewColumn({ type: 'string' }) name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCategoryDto.html":{"url":"classes/CreateCategoryDto.html","title":"class - CreateCategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/common/category/create-category.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            CreateCategoryModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string', required: true, maxLength: 50})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/category/create-category.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type { CreateCategoryModel } from '@puq/model';\nimport { Dto, Property } from '@puq/property';\n\n@Dto()\nexport class CreateCategoryDto implements CreateCategoryModel {\n  @Property({ type: 'string', required: true, maxLength: 50 }) name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSampleDto.html":{"url":"classes/CreateSampleDto.html","title":"class - CreateSampleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSampleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/common/sample/create-sample.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            CreateSampleModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                booleanArray\n                            \n                            \n                                    \n                                booleanValue\n                            \n                            \n                                    \n                                dateArray\n                            \n                            \n                                    \n                                dateValue\n                            \n                            \n                                    \n                                integerArray\n                            \n                            \n                                    \n                                integerValue\n                            \n                            \n                                    \n                                numberArray\n                            \n                            \n                                    \n                                numberValue\n                            \n                            \n                                    \n                                objectArray\n                            \n                            \n                                    \n                                objectValue\n                            \n                            \n                                    \n                                stringArray\n                            \n                            \n                                    \n                                stringValue\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        booleanArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'array', required: true, items: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/sample/create-sample.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        booleanValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'boolean', required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/sample/create-sample.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dateArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'array', required: true, items: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/sample/create-sample.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dateValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'date', required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/sample/create-sample.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        integerArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'array', required: true, items: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/sample/create-sample.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        integerValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'integer', required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/sample/create-sample.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        numberArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'array', required: true, items: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/sample/create-sample.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        numberValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'number', required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/sample/create-sample.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        objectArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SampleObj[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'array', required: true, items: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/sample/create-sample.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        objectValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SampleObj\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'object', required: true, target: () => SampleObjDto})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/sample/create-sample.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        stringArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'array', required: true, items: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/sample/create-sample.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        stringValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string', required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/sample/create-sample.dto.ts:45\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type { CreateSampleModel, SampleObj } from '@puq/model';\nimport { Dto, Property } from '@puq/property';\n\n@Dto()\nexport class SampleObjDto implements SampleObj {\n  @Property({ type: 'string' })\n  value: string;\n}\n\n@Dto()\nexport class CreateSampleDto implements CreateSampleModel {\n  @Property({ type: 'array', required: true, items: { type: 'boolean' } })\n  booleanArray: boolean[];\n\n  @Property({ type: 'boolean', required: true }) booleanValue: boolean;\n\n  @Property({ type: 'array', required: true, items: { type: 'date' } })\n  dateArray: Date[];\n\n  @Property({ type: 'date', required: true }) dateValue: Date;\n\n  @Property({ type: 'array', required: true, items: { type: 'integer' } })\n  integerArray: number[];\n\n  @Property({ type: 'integer', required: true }) integerValue: number;\n\n  @Property({ type: 'array', required: true, items: { type: 'number' } })\n  numberArray: number[];\n\n  @Property({ type: 'number', required: true }) numberValue: number;\n\n  @Property({\n    type: 'array',\n    required: true,\n    items: { type: 'object', target: () => SampleObjDto },\n  })\n  objectArray: SampleObj[];\n\n  @Property({ type: 'object', required: true, target: () => SampleObjDto })\n  objectValue: SampleObj;\n\n  @Property({ type: 'array', required: true, items: { type: 'string' } })\n  stringArray: string[];\n\n  @Property({ type: 'string', required: true }) stringValue: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryManySampleDto.html":{"url":"classes/QueryManySampleDto.html","title":"class - QueryManySampleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryManySampleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/common/sample/query-many-sample.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateQueryManyDto } from '@puq/orm';\nimport { Dto } from '@puq/property';\nimport { Sample } from './sample.entity.js';\n\n@Dto()\nexport class QueryManySampleDto extends CreateQueryManyDto({\n  entity: Sample,\n}) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryOneSampleDto.html":{"url":"classes/QueryOneSampleDto.html","title":"class - QueryOneSampleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryOneSampleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/common/sample/query-one-sample.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateQueryOneDto } from '@puq/orm';\nimport { Dto } from '@puq/property';\nimport { Sample } from './sample.entity.js';\n\n@Dto()\nexport class QueryOneSampleDto extends CreateQueryOneDto({\n  entity: Sample,\n}) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Sample.html":{"url":"entities/Sample.html","title":"entity - Sample","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Sample\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/common/sample/sample.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                booleanArray\n                            \n                            \n                                    \n                                booleanValue\n                            \n                            \n                                    \n                                dateArray\n                            \n                            \n                                    \n                                dateValue\n                            \n                            \n                                    \n                                integerArray\n                            \n                            \n                                    \n                                integerValue\n                            \n                            \n                                    \n                                numberArray\n                            \n                            \n                                    \n                                numberValue\n                            \n                            \n                                    \n                                objectArray\n                            \n                            \n                                    \n                                objectValue\n                            \n                            \n                                    \n                                stringArray\n                            \n                            \n                                    \n                                stringValue\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        booleanArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'array', items: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/sample/sample.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        booleanValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/sample/sample.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dateArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'array', items: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/sample/sample.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dateValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/sample/sample.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        integerArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'array', items: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/sample/sample.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        integerValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'integer'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/sample/sample.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        numberArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'array', items: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/sample/sample.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        numberValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/sample/sample.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        objectArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SampleObj[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'array', items: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/sample/sample.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        objectValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SampleObj\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'object', target: () => SampleObjDto})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/sample/sample.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        stringArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'array', items: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/sample/sample.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        stringValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/sample/sample.entity.ts:7\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import type { SampleModel, SampleObj } from '@puq/model';\nimport { Entity, Column, BaseEntity } from '@puq/orm';\nimport { SampleObjDto } from './create-sample.dto.js';\n\n@Entity()\nexport class Sample extends BaseEntity implements SampleModel {\n  @Column({ type: 'string' }) stringValue: string;\n  @Column({ type: 'number' }) numberValue: number;\n  @Column({ type: 'integer' }) integerValue: number;\n  @Column({ type: 'boolean' }) booleanValue: boolean;\n  @Column({ type: 'date' }) dateValue: Date;\n  @Column({ type: 'object', target: () => SampleObjDto })\n  objectValue: SampleObj;\n  @Column({ type: 'array', items: { type: 'string' } }) stringArray: string[];\n  @Column({ type: 'array', items: { type: 'number' } }) numberArray: number[];\n  @Column({ type: 'array', items: { type: 'integer' } }) integerArray: number[];\n  @Column({ type: 'array', items: { type: 'boolean' } })\n  booleanArray: boolean[];\n  @Column({\n    type: 'array',\n    items: { type: 'object', target: () => SampleObjDto },\n  })\n  objectArray: SampleObj[];\n  @Column({ type: 'array', items: { type: 'date' } }) dateArray: Date[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SampleObjDto.html":{"url":"classes/SampleObjDto.html","title":"class - SampleObjDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SampleObjDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/common/sample/create-sample.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            SampleObj\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/sample/create-sample.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type { CreateSampleModel, SampleObj } from '@puq/model';\nimport { Dto, Property } from '@puq/property';\n\n@Dto()\nexport class SampleObjDto implements SampleObj {\n  @Property({ type: 'string' })\n  value: string;\n}\n\n@Dto()\nexport class CreateSampleDto implements CreateSampleModel {\n  @Property({ type: 'array', required: true, items: { type: 'boolean' } })\n  booleanArray: boolean[];\n\n  @Property({ type: 'boolean', required: true }) booleanValue: boolean;\n\n  @Property({ type: 'array', required: true, items: { type: 'date' } })\n  dateArray: Date[];\n\n  @Property({ type: 'date', required: true }) dateValue: Date;\n\n  @Property({ type: 'array', required: true, items: { type: 'integer' } })\n  integerArray: number[];\n\n  @Property({ type: 'integer', required: true }) integerValue: number;\n\n  @Property({ type: 'array', required: true, items: { type: 'number' } })\n  numberArray: number[];\n\n  @Property({ type: 'number', required: true }) numberValue: number;\n\n  @Property({\n    type: 'array',\n    required: true,\n    items: { type: 'object', target: () => SampleObjDto },\n  })\n  objectArray: SampleObj[];\n\n  @Property({ type: 'object', required: true, target: () => SampleObjDto })\n  objectValue: SampleObj;\n\n  @Property({ type: 'array', required: true, items: { type: 'string' } })\n  stringArray: string[];\n\n  @Property({ type: 'string', required: true }) stringValue: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SampleRelationParamDto.html":{"url":"classes/SampleRelationParamDto.html","title":"class - SampleRelationParamDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SampleRelationParamDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/common/sample/relation.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateRelationParamDto, CreateUnsetRelationParamDto } from '@puq/orm';\nimport { Dto } from '@puq/property';\n@Dto()\nexport class SampleRelationParamDto extends CreateRelationParamDto([]) {}\n\n@Dto()\nexport class SampleUnsetRelationParamDto extends CreateUnsetRelationParamDto(\n  [],\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SampleUnsetRelationParamDto.html":{"url":"classes/SampleUnsetRelationParamDto.html","title":"class - SampleUnsetRelationParamDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SampleUnsetRelationParamDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/common/sample/relation.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateRelationParamDto, CreateUnsetRelationParamDto } from '@puq/orm';\nimport { Dto } from '@puq/property';\n@Dto()\nexport class SampleRelationParamDto extends CreateRelationParamDto([]) {}\n\n@Dto()\nexport class SampleUnsetRelationParamDto extends CreateUnsetRelationParamDto(\n  [],\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SampleView.html":{"url":"classes/SampleView.html","title":"class - SampleView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SampleView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/common/sample/sample.view.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            SampleViewModel\n            \n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type { SampleViewModel } from '@puq/model';\nimport { ViewEntity, BaseView } from '@puq/orm';\nimport { Sample } from './sample.entity.js';\n\n@ViewEntity((q) => q.from(Sample, 'm'))\nexport class SampleView extends BaseView implements SampleViewModel {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCategoryDto.html":{"url":"classes/UpdateCategoryDto.html","title":"class - UpdateCategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/common/category/update-category.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/common/category/update-category.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\n\n@Dto()\nexport class UpdateCategoryDto {\n  @Property({ type: 'string' })\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSampleDto.html":{"url":"classes/UpdateSampleDto.html","title":"class - UpdateSampleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSampleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/common/sample/update-sample.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            UpdateSampleModel\n            \n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type { UpdateSampleModel } from '@puq/model';\nimport { CreateSampleDto } from './create-sample.dto.js';\nimport { PartialType } from '@nestjs/swagger';\nimport { Dto } from '@puq/property';\n\n@Dto()\nexport class UpdateSampleDto\n  extends PartialType(CreateSampleDto)\n  implements UpdateSampleModel {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/lib/common/category/category.entity.ts\n            \n            entity\n            Category\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/common/category/category.view.ts\n            \n            class\n            CategoryView\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/common/category/create-category.dto.ts\n            \n            class\n            CreateCategoryDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/common/category/update-category.dto.ts\n            \n            class\n            UpdateCategoryDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/common/sample/create-sample.dto.ts\n            \n            class\n            CreateSampleDto\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/lib/common/sample/create-sample.dto.ts\n            \n            class\n            SampleObjDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/common/sample/query-many-sample.dto.ts\n            \n            class\n            QueryManySampleDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/common/sample/query-one-sample.dto.ts\n            \n            class\n            QueryOneSampleDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/common/sample/relation.dto.ts\n            \n            class\n            SampleRelationParamDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/common/sample/relation.dto.ts\n            \n            class\n            SampleUnsetRelationParamDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/common/sample/sample.entity.ts\n            \n            entity\n            Sample\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/common/sample/sample.view.ts\n            \n            class\n            SampleView\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/common/sample/update-sample.dto.ts\n            \n            class\n            UpdateSampleDto\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @swc/helpers : ^0.5.15\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @nestjs/common : ^11.0.11\n        \n            @nestjs/swagger : ^11.0.6\n        \n            @puq/is : ^0.5.0\n        \n            @puq/orm : ^0.5.0\n        \n            @puq/property : ^0.5.0\n        \n            typeorm : ^0.3.20\n        \n            @puq/model : ^0.5.0\n        \n            @puq/query : ^0.5.0\n        \n            @puq/type : ^0.5.0\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n@puq/entity\nSummary\nDatabase entities, views, and dtos generated by @puq/gen:entity /\nInstall\nExample :  pnpm add @puq/entityFunding\nThank you for using @puq/entity It's an open-source project, and maintaining it takes time and effort. If you find this library useful, please consider supporting its ongoing development. Your contributions help ensure that the project stays up-to-date, secure, and well-maintained.\nInstant Funding\nYour funding will go toward\n\nBug fixes and updates to ensure compatibility with the latest versions of dependencies.\nNew features that will make the library even more powerful.\nDocumentation improvements to help users get the most out of [Your Library Name].\nGeneral maintenance to keep the library running smoothly and securely.\n\nContact to the developer: [robert.brightline@gmail.com]\nSupport the developer\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    2 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    11 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.5.0\n        \n            Description : Database entities, views, and dtos generated by @puq/gen:entity /\n        \n            Keywords : puq, entity\n        \n            Homepage : https://rbrightline.github.io/puq/entity\n        \n            Bugs : https://rbrightline.github.io\n        \n            License : MIT\n        \n            Repository : https://github.com/rbrightline/puq/tree/main\n        \n            Author : Robert Brightline\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
