var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/SampleAppModule.html",[0,0.833,1,1.315]],["body/modules/SampleAppModule.html",[0,0.802,1,1.267,2,0.524,3,0.658,4,0.524,5,0.524,6,1.396,7,1.396,8,1.757,9,0.09,10,1.613,11,0.524,12,2.139,13,2.6,14,1.053,15,1.396,16,0.827,17,1.396,18,1.053,19,1.396,20,1.053,21,1.613,22,1.613,23,1.613,24,1.613,25,1.375,26,1.961,27,1.613,28,1.613,29,0.658,30,2.139,31,0.827,32,1.396,33,1.053,34,1.053,35,2.6,36,2.139,37,1.053,38,1.396,39,1.053,40,1.613,41,1.396,42,1.396,43,1.396,44,1.396,45,1.396,46,1.396,47,1.396,48,1.396,49,1.396,50,1.396,51,1.396,52,1.396,53,2.915,54,1.541,55,1.727,56,2.915,57,1.396,58,1.396,59,1.396,60,1.396,61,1.053,62,0.827,63,1.396,64,1.396,65,1.396,66,1.396,67,1.396,68,1.396,69,1.396,70,1.396,71,1.396,72,1.396,73,1.396,74,1.053,75,1.396,76,1.396,77,2.139,78,1.396,79,1.396,80,1.396,81,1.613,82,2.6,83,1.396,84,1.396,85,1.396,86,1.396,87,1.053,88,1.053,89,1.396,90,1.396,91,1.396,92,1.396,93,1.396,94,1.396,95,1.396,96,1.053,97,1.053,98,1.053,99,1.053,100,1.053,101,1.053,102,1.053,103,1.053,104,1.053,105,1.053,106,0.827,107,0.658,108,0.524,109,0.044,110,0.044]],["title/controllers/SampleController.html",[111,1.047,112,1.047]],["body/controllers/SampleController.html",[3,0.454,4,0.361,5,0.361,8,1.233,9,0.089,11,0.361,21,1.971,22,1.971,23,1.971,24,1.2,25,0.75,26,2.509,28,1.971,29,0.454,31,0.57,55,1.971,61,2.509,62,1.971,81,2.435,96,2.247,97,0.726,98,0.726,99,0.726,100,0.726,101,0.726,102,0.726,103,0.726,104,0.726,105,0.726,107,0.454,108,0.361,109,0.033,110,0.033,111,0.75,112,0.75,113,0.726,114,0.726,115,1.59,116,0.454,117,1.2,118,2.613,119,2.613,120,2.613,121,2.613,122,2.613,123,2.613,124,2.613,125,2.613,126,2.613,127,2.814,128,0.963,129,2.509,130,2.509,131,0.963,132,3.326,133,3.326,134,3.114,135,2.509,136,0.963,137,0.963,138,2.613,139,0.963,140,0.963,141,2.814,142,0.963,143,0.963,144,0.963,145,0.963,146,0.963,147,0.963,148,0.963,149,0.963,150,0.963,151,0.963,152,0.963,153,2.36,154,0.963,155,0.963,156,0.963,157,1.59,158,0.726,159,1.59,160,0.963,161,2.36,162,1.59,163,0.963,164,0.57,165,1.59,166,0.963,167,0.963,168,0.963,169,0.963,170,0.57,171,0.963,172,0.963,173,0.963,174,0.963,175,0.963,176,0.963,177,0.963,178,0.963,179,0.963,180,0.963,181,0.963,182,0.963,183,0.963,184,0.963,185,0.963,186,0.963,187,0.963,188,0.963,189,0.963,190,0.963,191,0.963]],["title/injectables/SampleCron.html",[192,1.047,193,0.833]],["body/injectables/SampleCron.html",[3,1.24,4,0.986,5,0.986,8,1.575,9,0.088,10,1.983,11,0.986,16,1.557,107,1.24,108,0.986,109,0.068,110,0.068,116,1.24,117,2.518,129,1.983,130,1.983,135,1.983,192,1.575,193,1.253,194,2.628,195,1.983,196,3.86,197,3.339,198,2.628,199,2.628,200,2.628,201,2.628,202,2.628]],["title/modules/SampleModule.html",[0,0.833,203,1.047]],["body/modules/SampleModule.html",[0,1.278,2,0.846,3,1.064,4,0.846,5,0.846,8,1.79,9,0.089,11,0.846,25,1.425,27,2.279,29,1.064,40,1.701,74,1.701,106,2.019,107,1.064,108,0.846,109,0.062,110,0.062,112,1.607,113,2.279,164,1.336,193,1.465,203,1.842,204,0.846,205,1.701,206,1.701,207,1.701,208,1.701,209,1.701,210,1.701,211,2.279,212,1.701,213,1.336,214,2.255,215,2.255,216,2.255,217,2.255,218,2.255]],["title/coverage.html",[219,2.254]],["body/coverage.html",[5,1.075,9,0.084,54,1.698,62,1.698,109,0.072,110,0.072,111,1.351,112,1.351,114,2.161,192,1.351,193,1.075,195,2.161,219,2.161,220,2.161,221,2.865,222,2.865,223,2.161,224,2.865,225,2.161,226,3.816,227,2.865,228,2.865,229,2.865,230,2.865,231,2.865]],["title/dependencies.html",[204,0.997,232,0.884]],["body/dependencies.html",[9,0.09,11,0.787,14,1.582,16,1.243,18,1.582,20,1.582,29,0.989,31,1.243,33,1.582,34,1.582,37,1.582,39,1.582,108,1.079,109,0.059,110,0.059,158,1.582,164,1.243,204,1.079,233,3.282,234,2.097,235,2.097,236,2.097,237,2.097,238,2.097,239,2.097,240,2.097,241,2.097,242,2.097,243,2.097,244,2.097,245,3.142,246,2.097,247,2.097,248,2.097,249,2.097,250,2.097,251,2.097,252,2.097,253,2.097,254,2.097,255,2.097,256,2.097,257,2.097,258,2.097,259,2.097,260,2.097,261,2.097,262,2.097,263,2.097,264,2.097,265,2.097,266,2.097]],["title/miscellaneous/functions.html",[267,1.413,268,2.005]],["body/miscellaneous/functions.html",[9,0.077,109,0.077,110,0.077,116,1.513,223,2.42,225,3.022,267,2.42,268,2.42,269,3.208]],["title/index.html",[116,0.884,270,1.873,271,1.873]],["body/index.html",[4,0.724,9,0.078,54,1.144,55,1.144,87,1.456,88,1.456,109,0.056,110,0.056,170,1.144,204,0.724,213,1.144,220,1.456,232,0.91,272,2.715,273,1.93,274,1.456,275,1.456,276,2.048,277,2.048,278,1.456,279,1.456,280,1.456,281,2.048,282,1.456,283,1.456,284,1.456,285,1.456,286,1.456,287,1.456,288,2.048,289,1.456,290,1.456,291,2.048,292,1.456,293,2.715,294,1.93,295,1.93,296,1.93,297,1.93,298,1.93,299,1.93,300,1.93,301,1.93,302,1.93,303,1.93,304,1.93,305,1.93,306,1.93,307,1.93,308,2.715,309,1.93,310,1.93,311,1.93,312,1.93,313,1.93,314,3.408,315,1.93,316,1.93,317,1.93,318,1.93,319,1.93,320,1.93,321,1.93,322,2.715,323,2.715,324,1.93,325,1.93,326,1.93,327,1.93,328,1.93,329,1.93,330,1.93,331,2.715,332,1.93,333,1.93,334,1.93,335,1.93,336,1.93,337,1.93,338,1.93,339,1.93,340,1.93,341,1.93,342,1.93,343,1.93,344,1.93,345,1.93,346,1.93,347,1.93,348,1.93,349,1.93,350,1.93,351,1.93,352,2.715,353,1.93,354,1.456]],["title/modules.html",[2,1.121]],["body/modules.html",[1,1.877,2,1.189,9,0.077,109,0.077,110,0.077,203,1.494,354,2.39,355,3.168,356,3.168,357,3.744,358,3.168,359,3.168]],["title/overview.html",[360,2.254]],["body/overview.html",[0,1.069,2,1.069,9,0.078,106,1.688,109,0.072,110,0.072,111,1.344,192,1.344,193,1.428,203,1.874,204,1.069,205,2.149,206,2.149,207,2.149,208,2.149,209,2.149,210,2.149,211,2.649,212,2.149,213,1.688,360,2.149,361,2.849,362,3.511]],["title/properties.html",[232,0.884,363,2.005]],["body/properties.html",[9,0.087,25,1.215,109,0.067,110,0.067,170,1.526,232,1.215,245,1.942,274,1.942,275,1.942,276,1.942,277,1.942,278,1.942,279,1.942,280,1.942,281,1.942,282,1.942,283,1.942,284,1.942,285,1.942,286,1.942,287,1.942,288,1.942,289,1.942,290,1.942,291,1.942,292,1.942,363,1.942,364,2.575,365,2.575,366,2.575,367,2.575,368,2.575,369,2.575,370,2.575,371,2.575,372,2.575,373,2.575,374,2.575,375,2.575,376,2.575,377,2.575,378,2.575]]],"invertedIndex":[["",{"_index":9,"title":{},"body":{"modules/SampleAppModule.html":{},"controllers/SampleController.html":{},"injectables/SampleCron.html":{},"modules/SampleModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":226,"title":{},"body":{"coverage.html":{}}}],["0.14.1",{"_index":257,"title":{},"body":{"dependencies.html":{}}}],["0.3.21",{"_index":263,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":255,"title":{},"body":{"dependencies.html":{}}}],["0.5.15",{"_index":250,"title":{},"body":{"dependencies.html":{}}}],["0.5.30",{"_index":245,"title":{},"body":{"dependencies.html":{},"properties.html":{}}}],["0/1",{"_index":227,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":228,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":229,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":362,"title":{},"body":{"overview.html":{}}}],["10",{"_index":47,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["11.0.0",{"_index":243,"title":{},"body":{"dependencies.html":{}}}],["11.0.11",{"_index":233,"title":{},"body":{"dependencies.html":{}}}],["11.0.6",{"_index":241,"title":{},"body":{"dependencies.html":{}}}],["11.8.1",{"_index":253,"title":{},"body":{"dependencies.html":{}}}],["13.1.0",{"_index":259,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":361,"title":{},"body":{"overview.html":{}}}],["3.0.1",{"_index":236,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":93,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["30000",{"_index":90,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["4",{"_index":85,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["4.0.1",{"_index":234,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":239,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":77,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["6.4.0",{"_index":242,"title":{},"body":{"dependencies.html":{}}}],["60000",{"_index":45,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["8.14.0",{"_index":261,"title":{},"body":{"dependencies.html":{}}}],["add",{"_index":303,"title":{},"body":{"index.html":{}}}],["addrelation",{"_index":118,"title":{},"body":{"controllers/SampleController.html":{}}}],["addrelation(@param",{"_index":184,"title":{},"body":{"controllers/SampleController.html":{}}}],["addrelation(relation",{"_index":128,"title":{},"body":{"controllers/SampleController.html":{}}}],["alive",{"_index":196,"title":{},"body":{"injectables/SampleCron.html":{}}}],["app.module.ts",{"_index":7,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["appenv",{"_index":35,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["application",{"_index":282,"title":{},"body":{"index.html":{},"properties.html":{}}}],["author",{"_index":376,"title":{},"body":{"properties.html":{}}}],["available",{"_index":356,"title":{},"body":{"modules.html":{}}}],["basicresourcemodule",{"_index":38,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["basicresourcemodule.configure",{"_index":95,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["better",{"_index":251,"title":{},"body":{"dependencies.html":{}}}],["body",{"_index":159,"title":{},"body":{"controllers/SampleController.html":{}}}],["boot",{"_index":225,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":207,"title":{},"body":{"modules/SampleModule.html":{},"overview.html":{}}}],["brightline",{"_index":378,"title":{},"body":{"properties.html":{}}}],["browse",{"_index":357,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":358,"title":{},"body":{"modules.html":{}}}],["bug",{"_index":334,"title":{},"body":{"index.html":{}}}],["bugs",{"_index":370,"title":{},"body":{"properties.html":{}}}],["built",{"_index":298,"title":{},"body":{"index.html":{}}}],["class",{"_index":108,"title":{},"body":{"modules/SampleAppModule.html":{},"controllers/SampleController.html":{},"injectables/SampleCron.html":{},"modules/SampleModule.html":{},"dependencies.html":{}}}],["cli",{"_index":288,"title":{},"body":{"index.html":{},"properties.html":{}}}],["close",{"_index":91,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["cluster_samplemodule",{"_index":209,"title":{},"body":{"modules/SampleModule.html":{},"overview.html":{}}}],["cluster_samplemodule_providers",{"_index":210,"title":{},"body":{"modules/SampleModule.html":{},"overview.html":{}}}],["commander",{"_index":258,"title":{},"body":{"dependencies.html":{}}}],["compatibility",{"_index":337,"title":{},"body":{"index.html":{}}}],["config.getorthrow(appenv.name",{"_index":59,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["config.getorthrow(appenv.profile",{"_index":58,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["config.getorthrow(dbenv.database_host",{"_index":65,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["config.getorthrow(dbenv.database_name",{"_index":73,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["config.getorthrow(dbenv.database_password",{"_index":71,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["config.getorthrow(dbenv.database_port",{"_index":67,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["config.getorthrow(dbenv.database_username",{"_index":69,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["configmodule",{"_index":12,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["configmodule.forroot",{"_index":41,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["configservice",{"_index":13,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["connections",{"_index":82,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["consider",{"_index":317,"title":{},"body":{"index.html":{}}}],["const",{"_index":53,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["constructor",{"_index":166,"title":{},"body":{"controllers/SampleController.html":{}}}],["contact",{"_index":351,"title":{},"body":{"index.html":{}}}],["contributions",{"_index":321,"title":{},"body":{"index.html":{}}}],["controller",{"_index":111,"title":{"controllers/SampleController.html":{}},"body":{"controllers/SampleController.html":{},"coverage.html":{},"overview.html":{}}}],["controllers",{"_index":113,"title":{},"body":{"controllers/SampleController.html":{},"modules/SampleModule.html":{}}}],["count",{"_index":119,"title":{},"body":{"controllers/SampleController.html":{}}}],["count(@query",{"_index":176,"title":{},"body":{"controllers/SampleController.html":{}}}],["count(query",{"_index":136,"title":{},"body":{"controllers/SampleController.html":{}}}],["coverage",{"_index":219,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createcontroller",{"_index":157,"title":{},"body":{"controllers/SampleController.html":{}}}],["createdto",{"_index":97,"title":{},"body":{"modules/SampleAppModule.html":{},"controllers/SampleController.html":{}}}],["createsampledto",{"_index":21,"title":{},"body":{"modules/SampleAppModule.html":{},"controllers/SampleController.html":{}}}],["cron",{"_index":200,"title":{},"body":{"injectables/SampleCron.html":{}}}],["cron(cronexpression.every_second",{"_index":197,"title":{},"body":{"injectables/SampleCron.html":{}}}],["cronexpression",{"_index":201,"title":{},"body":{"injectables/SampleCron.html":{}}}],["database",{"_index":72,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["datasourceenv",{"_index":36,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["date",{"_index":326,"title":{},"body":{"index.html":{}}}],["dbenv",{"_index":60,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["declarations",{"_index":206,"title":{},"body":{"modules/SampleModule.html":{},"overview.html":{}}}],["decorators",{"_index":129,"title":{},"body":{"controllers/SampleController.html":{},"injectables/SampleCron.html":{}}}],["defined",{"_index":130,"title":{},"body":{"controllers/SampleController.html":{},"injectables/SampleCron.html":{}}}],["deleteonebyid",{"_index":120,"title":{},"body":{"controllers/SampleController.html":{}}}],["deleteonebyid(@param('id",{"_index":182,"title":{},"body":{"controllers/SampleController.html":{}}}],["deleteonebyid(id",{"_index":139,"title":{},"body":{"controllers/SampleController.html":{}}}],["delimiter",{"_index":49,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["dependencies",{"_index":204,"title":{"dependencies.html":{}},"body":{"modules/SampleModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["description",{"_index":365,"title":{},"body":{"properties.html":{}}}],["designed",{"_index":283,"title":{},"body":{"index.html":{},"properties.html":{}}}],["dev",{"_index":57,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["developer",{"_index":352,"title":{},"body":{"index.html":{}}}],["development",{"_index":320,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":220,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["ease",{"_index":285,"title":{},"body":{"index.html":{},"properties.html":{}}}],["easily",{"_index":278,"title":{},"body":{"index.html":{},"properties.html":{}}}],["effort",{"_index":312,"title":{},"body":{"index.html":{}}}],["emitter",{"_index":34,"title":{},"body":{"modules/SampleAppModule.html":{},"dependencies.html":{}}}],["ensure",{"_index":323,"title":{},"body":{"index.html":{}}}],["entities",{"_index":74,"title":{},"body":{"modules/SampleAppModule.html":{},"modules/SampleModule.html":{}}}],["entity",{"_index":96,"title":{},"body":{"modules/SampleAppModule.html":{},"controllers/SampleController.html":{}}}],["entitymodule",{"_index":217,"title":{},"body":{"modules/SampleModule.html":{}}}],["entitymodule.forfeature",{"_index":218,"title":{},"body":{"modules/SampleModule.html":{}}}],["entityservice",{"_index":162,"title":{},"body":{"controllers/SampleController.html":{}}}],["even",{"_index":341,"title":{},"body":{"index.html":{}}}],["eventemittermodule",{"_index":32,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["eventemittermodule.forroot",{"_index":48,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["example",{"_index":301,"title":{},"body":{"index.html":{}}}],["execution",{"_index":291,"title":{},"body":{"index.html":{},"properties.html":{}}}],["export",{"_index":107,"title":{},"body":{"modules/SampleAppModule.html":{},"controllers/SampleController.html":{},"injectables/SampleCron.html":{},"modules/SampleModule.html":{}}}],["exports",{"_index":208,"title":{},"body":{"modules/SampleModule.html":{},"overview.html":{}}}],["express",{"_index":238,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":115,"title":{},"body":{"controllers/SampleController.html":{}}}],["extra",{"_index":78,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["false",{"_index":105,"title":{},"body":{"modules/SampleAppModule.html":{},"controllers/SampleController.html":{}}}],["features",{"_index":293,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"modules/SampleAppModule.html":{},"controllers/SampleController.html":{},"injectables/SampleCron.html":{},"modules/SampleModule.html":{},"coverage.html":{}}}],["find",{"_index":313,"title":{},"body":{"index.html":{}}}],["findall",{"_index":121,"title":{},"body":{"controllers/SampleController.html":{}}}],["findall(@query",{"_index":172,"title":{},"body":{"controllers/SampleController.html":{}}}],["findall(query",{"_index":142,"title":{},"body":{"controllers/SampleController.html":{}}}],["findonebyid",{"_index":122,"title":{},"body":{"controllers/SampleController.html":{}}}],["findonebyid(@param('id",{"_index":174,"title":{},"body":{"controllers/SampleController.html":{}}}],["findonebyid(id",{"_index":144,"title":{},"body":{"controllers/SampleController.html":{}}}],["fixes",{"_index":335,"title":{},"body":{"index.html":{}}}],["flexibility",{"_index":284,"title":{},"body":{"index.html":{},"properties.html":{}}}],["fully",{"_index":275,"title":{},"body":{"index.html":{},"properties.html":{}}}],["function",{"_index":224,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":268,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funding",{"_index":331,"title":{},"body":{"index.html":{}}}],["general",{"_index":346,"title":{},"body":{"index.html":{}}}],["getting",{"_index":270,"title":{"index.html":{}},"body":{}}],["go",{"_index":332,"title":{},"body":{"index.html":{}}}],["graph",{"_index":355,"title":{},"body":{"modules.html":{}}}],["help",{"_index":322,"title":{},"body":{"index.html":{}}}],["homepage",{"_index":368,"title":{},"body":{"properties.html":{}}}],["host",{"_index":64,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["https://github.com/rbrightline/puq/tree/main",{"_index":375,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io",{"_index":371,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io/puq/sample",{"_index":369,"title":{},"body":{"properties.html":{}}}],["id",{"_index":141,"title":{},"body":{"controllers/SampleController.html":{}}}],["identifier",{"_index":221,"title":{},"body":{"coverage.html":{}}}],["idle",{"_index":92,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["idletimeoutmillis",{"_index":89,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["import",{"_index":8,"title":{},"body":{"modules/SampleAppModule.html":{},"controllers/SampleController.html":{},"injectables/SampleCron.html":{},"modules/SampleModule.html":{}}}],["imports",{"_index":40,"title":{},"body":{"modules/SampleAppModule.html":{},"modules/SampleModule.html":{}}}],["improvements",{"_index":344,"title":{},"body":{"index.html":{}}}],["includes",{"_index":287,"title":{},"body":{"index.html":{},"properties.html":{}}}],["index",{"_index":116,"title":{"index.html":{}},"body":{"controllers/SampleController.html":{},"injectables/SampleCron.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"modules/SampleAppModule.html":{},"controllers/SampleController.html":{},"injectables/SampleCron.html":{},"modules/SampleModule.html":{}}}],["inject",{"_index":51,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["injectable",{"_index":192,"title":{"injectables/SampleCron.html":{}},"body":{"injectables/SampleCron.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":194,"title":{},"body":{"injectables/SampleCron.html":{}}}],["injectentityservice",{"_index":163,"title":{},"body":{"controllers/SampleController.html":{}}}],["injectentityservice(sample",{"_index":167,"title":{},"body":{"controllers/SampleController.html":{}}}],["install",{"_index":300,"title":{},"body":{"index.html":{}}}],["installable",{"_index":294,"title":{},"body":{"index.html":{}}}],["installed",{"_index":279,"title":{},"body":{"index.html":{},"properties.html":{}}}],["instant",{"_index":330,"title":{},"body":{"index.html":{}}}],["ispublic",{"_index":104,"title":{},"body":{"modules/SampleAppModule.html":{},"controllers/SampleController.html":{}}}],["it's",{"_index":307,"title":{},"body":{"index.html":{}}}],["keep",{"_index":87,"title":{},"body":{"modules/SampleAppModule.html":{},"index.html":{}}}],["keywords",{"_index":366,"title":{},"body":{"properties.html":{}}}],["latest",{"_index":338,"title":{},"body":{"index.html":{}}}],["legend",{"_index":205,"title":{},"body":{"modules/SampleModule.html":{},"overview.html":{}}}],["library",{"_index":314,"title":{},"body":{"index.html":{}}}],["license",{"_index":372,"title":{},"body":{"properties.html":{}}}],["lightweight",{"_index":297,"title":{},"body":{"index.html":{}}}],["limit",{"_index":46,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["logger",{"_index":10,"title":{},"body":{"modules/SampleAppModule.html":{},"injectables/SampleCron.html":{}}}],["logger.debug('cronexpression.every_second",{"_index":202,"title":{},"body":{"injectables/SampleCron.html":{}}}],["maintained",{"_index":329,"title":{},"body":{"index.html":{}}}],["maintaining",{"_index":309,"title":{},"body":{"index.html":{}}}],["maintenance",{"_index":347,"title":{},"body":{"index.html":{}}}],["make",{"_index":340,"title":{},"body":{"index.html":{}}}],["manage",{"_index":290,"title":{},"body":{"index.html":{},"properties.html":{}}}],["matching",{"_index":110,"title":{},"body":{"modules/SampleAppModule.html":{},"controllers/SampleController.html":{},"injectables/SampleCron.html":{},"modules/SampleModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["max",{"_index":79,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["maximum",{"_index":80,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["methods",{"_index":117,"title":{},"body":{"controllers/SampleController.html":{},"injectables/SampleCron.html":{}}}],["min",{"_index":84,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["minimum",{"_index":86,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["miscellaneous",{"_index":267,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":373,"title":{},"body":{"properties.html":{}}}],["module",{"_index":0,"title":{"modules/SampleAppModule.html":{},"modules/SampleModule.html":{}},"body":{"modules/SampleAppModule.html":{},"modules/SampleModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/SampleAppModule.html":{},"modules/SampleModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":342,"title":{},"body":{"index.html":{}}}],["name",{"_index":55,"title":{},"body":{"modules/SampleAppModule.html":{},"controllers/SampleController.html":{},"index.html":{}}}],["namingstrategy",{"_index":75,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["nestjs",{"_index":277,"title":{},"body":{"index.html":{},"properties.html":{}}}],["nestjs/common",{"_index":11,"title":{},"body":{"modules/SampleAppModule.html":{},"controllers/SampleController.html":{},"injectables/SampleCron.html":{},"modules/SampleModule.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":14,"title":{},"body":{"modules/SampleAppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":235,"title":{},"body":{"dependencies.html":{}}}],["nestjs/event",{"_index":33,"title":{},"body":{"modules/SampleAppModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":237,"title":{},"body":{"dependencies.html":{}}}],["nestjs/schedule",{"_index":16,"title":{},"body":{"modules/SampleAppModule.html":{},"injectables/SampleCron.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":240,"title":{},"body":{"dependencies.html":{}}}],["nestjs/throttler",{"_index":18,"title":{},"body":{"modules/SampleAppModule.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":20,"title":{},"body":{"modules/SampleAppModule.html":{},"dependencies.html":{}}}],["new",{"_index":54,"title":{},"body":{"modules/SampleAppModule.html":{},"coverage.html":{},"index.html":{}}}],["npm",{"_index":296,"title":{},"body":{"index.html":{}}}],["number",{"_index":81,"title":{},"body":{"modules/SampleAppModule.html":{},"controllers/SampleController.html":{}}}],["ongoing",{"_index":319,"title":{},"body":{"index.html":{}}}],["open",{"_index":88,"title":{},"body":{"modules/SampleAppModule.html":{},"index.html":{}}}],["optional",{"_index":133,"title":{},"body":{"controllers/SampleController.html":{}}}],["out",{"_index":213,"title":{},"body":{"modules/SampleModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":360,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":232,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{},"properties.html":{}}}],["param",{"_index":160,"title":{},"body":{"controllers/SampleController.html":{}}}],["param('id",{"_index":180,"title":{},"body":{"controllers/SampleController.html":{}}}],["parameters",{"_index":132,"title":{},"body":{"controllers/SampleController.html":{}}}],["parseintpipe",{"_index":161,"title":{},"body":{"controllers/SampleController.html":{}}}],["password",{"_index":70,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["peer",{"_index":264,"title":{},"body":{"dependencies.html":{}}}],["pg",{"_index":260,"title":{},"body":{"dependencies.html":{}}}],["please",{"_index":316,"title":{},"body":{"index.html":{}}}],["pnpm",{"_index":302,"title":{},"body":{"index.html":{}}}],["pool",{"_index":83,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["poolsize",{"_index":76,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["port",{"_index":66,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["portable",{"_index":276,"title":{},"body":{"index.html":{},"properties.html":{}}}],["postgres",{"_index":63,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["powerful",{"_index":343,"title":{},"body":{"index.html":{}}}],["profile",{"_index":56,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["project",{"_index":308,"title":{},"body":{"index.html":{}}}],["properties",{"_index":363,"title":{"properties.html":{}},"body":{"properties.html":{}}}],["protected",{"_index":168,"title":{},"body":{"controllers/SampleController.html":{}}}],["providers",{"_index":106,"title":{},"body":{"modules/SampleAppModule.html":{},"modules/SampleModule.html":{},"overview.html":{}}}],["provides",{"_index":274,"title":{},"body":{"index.html":{},"properties.html":{}}}],["puq",{"_index":367,"title":{},"body":{"properties.html":{}}}],["puq/boot",{"_index":244,"title":{},"body":{"dependencies.html":{}}}],["puq/entity",{"_index":29,"title":{},"body":{"modules/SampleAppModule.html":{},"controllers/SampleController.html":{},"modules/SampleModule.html":{},"dependencies.html":{}}}],["puq/env",{"_index":37,"title":{},"body":{"modules/SampleAppModule.html":{},"dependencies.html":{}}}],["puq/is",{"_index":246,"title":{},"body":{"dependencies.html":{}}}],["puq/model",{"_index":265,"title":{},"body":{"dependencies.html":{}}}],["puq/module",{"_index":39,"title":{},"body":{"modules/SampleAppModule.html":{},"dependencies.html":{}}}],["puq/orm",{"_index":31,"title":{},"body":{"modules/SampleAppModule.html":{},"controllers/SampleController.html":{},"dependencies.html":{}}}],["puq/property",{"_index":247,"title":{},"body":{"dependencies.html":{}}}],["puq/provider",{"_index":164,"title":{},"body":{"controllers/SampleController.html":{},"modules/SampleModule.html":{},"dependencies.html":{}}}],["puq/query",{"_index":248,"title":{},"body":{"dependencies.html":{}}}],["puq/rest",{"_index":158,"title":{},"body":{"controllers/SampleController.html":{},"dependencies.html":{}}}],["puq/sample",{"_index":272,"title":{},"body":{"index.html":{}}}],["puq/samplefunding",{"_index":304,"title":{},"body":{"index.html":{}}}],["puq/type",{"_index":266,"title":{},"body":{"dependencies.html":{}}}],["query",{"_index":138,"title":{},"body":{"controllers/SampleController.html":{}}}],["querycountdto",{"_index":101,"title":{},"body":{"modules/SampleAppModule.html":{},"controllers/SampleController.html":{}}}],["querycountsampledto",{"_index":24,"title":{},"body":{"modules/SampleAppModule.html":{},"controllers/SampleController.html":{}}}],["querymanydto",{"_index":99,"title":{},"body":{"modules/SampleAppModule.html":{},"controllers/SampleController.html":{}}}],["querymanysampledto",{"_index":22,"title":{},"body":{"modules/SampleAppModule.html":{},"controllers/SampleController.html":{}}}],["queryonedto",{"_index":100,"title":{},"body":{"modules/SampleAppModule.html":{},"controllers/SampleController.html":{}}}],["queryonesampledto",{"_index":23,"title":{},"body":{"modules/SampleAppModule.html":{},"controllers/SampleController.html":{}}}],["readonly",{"_index":169,"title":{},"body":{"controllers/SampleController.html":{}}}],["relation",{"_index":134,"title":{},"body":{"controllers/SampleController.html":{}}}],["relationdto",{"_index":102,"title":{},"body":{"modules/SampleAppModule.html":{},"controllers/SampleController.html":{}}}],["removerelation",{"_index":123,"title":{},"body":{"controllers/SampleController.html":{}}}],["removerelation(@param",{"_index":186,"title":{},"body":{"controllers/SampleController.html":{}}}],["removerelation(relation",{"_index":146,"title":{},"body":{"controllers/SampleController.html":{}}}],["repository",{"_index":374,"title":{},"body":{"properties.html":{}}}],["reset",{"_index":212,"title":{},"body":{"modules/SampleModule.html":{},"overview.html":{}}}],["results",{"_index":109,"title":{},"body":{"modules/SampleAppModule.html":{},"controllers/SampleController.html":{},"injectables/SampleCron.html":{},"modules/SampleModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["return",{"_index":61,"title":{},"body":{"modules/SampleAppModule.html":{},"controllers/SampleController.html":{}}}],["returns",{"_index":135,"title":{},"body":{"controllers/SampleController.html":{},"injectables/SampleCron.html":{}}}],["robert",{"_index":377,"title":{},"body":{"properties.html":{}}}],["robert.brightline@gmail.com",{"_index":353,"title":{},"body":{"index.html":{}}}],["run",{"_index":280,"title":{},"body":{"index.html":{},"properties.html":{}}}],["running",{"_index":348,"title":{},"body":{"index.html":{}}}],["sample",{"_index":25,"title":{},"body":{"modules/SampleAppModule.html":{},"controllers/SampleController.html":{},"modules/SampleModule.html":{},"properties.html":{}}}],["sample.controller.js",{"_index":215,"title":{},"body":{"modules/SampleModule.html":{}}}],["sample.cron.js",{"_index":216,"title":{},"body":{"modules/SampleModule.html":{}}}],["sampleappmodule",{"_index":1,"title":{"modules/SampleAppModule.html":{}},"body":{"modules/SampleAppModule.html":{},"modules.html":{}}}],["samplecontroller",{"_index":112,"title":{"controllers/SampleController.html":{}},"body":{"controllers/SampleController.html":{},"modules/SampleModule.html":{},"coverage.html":{}}}],["samplecron",{"_index":193,"title":{"injectables/SampleCron.html":{}},"body":{"injectables/SampleCron.html":{},"modules/SampleModule.html":{},"coverage.html":{},"overview.html":{}}}],["samplemodule",{"_index":203,"title":{"modules/SampleModule.html":{}},"body":{"modules/SampleModule.html":{},"modules.html":{},"overview.html":{}}}],["samplerelationparamdto",{"_index":26,"title":{},"body":{"modules/SampleAppModule.html":{},"controllers/SampleController.html":{}}}],["sampleunsetrelationparamdto",{"_index":153,"title":{},"body":{"controllers/SampleController.html":{}}}],["sampleview",{"_index":27,"title":{},"body":{"modules/SampleAppModule.html":{},"modules/SampleModule.html":{}}}],["saveone",{"_index":124,"title":{},"body":{"controllers/SampleController.html":{}}}],["saveone(@body",{"_index":178,"title":{},"body":{"controllers/SampleController.html":{}}}],["saveone(entity",{"_index":148,"title":{},"body":{"controllers/SampleController.html":{}}}],["scalability",{"_index":299,"title":{},"body":{"index.html":{}}}],["schedulemodule",{"_index":15,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["schedulemodule.forroot",{"_index":42,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["seamlessly",{"_index":292,"title":{},"body":{"index.html":{},"properties.html":{}}}],["seconds",{"_index":94,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["secure",{"_index":327,"title":{},"body":{"index.html":{}}}],["securely",{"_index":350,"title":{},"body":{"index.html":{}}}],["service",{"_index":170,"title":{},"body":{"controllers/SampleController.html":{},"index.html":{},"properties.html":{}}}],["setrelation",{"_index":125,"title":{},"body":{"controllers/SampleController.html":{}}}],["setrelation(@param",{"_index":188,"title":{},"body":{"controllers/SampleController.html":{}}}],["setrelation(relation",{"_index":150,"title":{},"body":{"controllers/SampleController.html":{}}}],["smoothly",{"_index":349,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"modules/SampleAppModule.html":{},"controllers/SampleController.html":{},"injectables/SampleCron.html":{},"modules/SampleModule.html":{},"index.html":{}}}],["sqlite3",{"_index":252,"title":{},"body":{"dependencies.html":{}}}],["src/.../program.ts",{"_index":269,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/lib/program.ts",{"_index":223,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/sample",{"_index":6,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["src/lib/sample/sample.controller.ts",{"_index":114,"title":{},"body":{"controllers/SampleController.html":{},"coverage.html":{}}}],["src/lib/sample/sample.controller.ts:49",{"_index":143,"title":{},"body":{"controllers/SampleController.html":{}}}],["src/lib/sample/sample.controller.ts:54",{"_index":145,"title":{},"body":{"controllers/SampleController.html":{}}}],["src/lib/sample/sample.controller.ts:59",{"_index":137,"title":{},"body":{"controllers/SampleController.html":{}}}],["src/lib/sample/sample.controller.ts:64",{"_index":149,"title":{},"body":{"controllers/SampleController.html":{}}}],["src/lib/sample/sample.controller.ts:69",{"_index":156,"title":{},"body":{"controllers/SampleController.html":{}}}],["src/lib/sample/sample.controller.ts:77",{"_index":140,"title":{},"body":{"controllers/SampleController.html":{}}}],["src/lib/sample/sample.controller.ts:82",{"_index":131,"title":{},"body":{"controllers/SampleController.html":{}}}],["src/lib/sample/sample.controller.ts:87",{"_index":147,"title":{},"body":{"controllers/SampleController.html":{}}}],["src/lib/sample/sample.controller.ts:92",{"_index":151,"title":{},"body":{"controllers/SampleController.html":{}}}],["src/lib/sample/sample.controller.ts:97",{"_index":154,"title":{},"body":{"controllers/SampleController.html":{}}}],["src/lib/sample/sample.cron.ts",{"_index":195,"title":{},"body":{"injectables/SampleCron.html":{},"coverage.html":{}}}],["src/lib/sample/sample.cron.ts:7",{"_index":198,"title":{},"body":{"injectables/SampleCron.html":{}}}],["src/lib/sample/sample.module.ts",{"_index":214,"title":{},"body":{"modules/SampleModule.html":{}}}],["standalone",{"_index":281,"title":{},"body":{"index.html":{},"properties.html":{}}}],["started",{"_index":271,"title":{"index.html":{}},"body":{}}],["statements",{"_index":222,"title":{},"body":{"coverage.html":{}}}],["stays",{"_index":324,"title":{},"body":{"index.html":{}}}],["summary",{"_index":273,"title":{},"body":{"index.html":{}}}],["super(service",{"_index":171,"title":{},"body":{"controllers/SampleController.html":{}}}],["support",{"_index":354,"title":{},"body":{"index.html":{},"modules.html":{}}}],["supporting",{"_index":318,"title":{},"body":{"index.html":{}}}],["svg",{"_index":359,"title":{},"body":{"modules.html":{}}}],["swc/helpers",{"_index":249,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":231,"title":{},"body":{"coverage.html":{}}}],["tablenamingstrategy",{"_index":30,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":230,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":310,"title":{},"body":{"index.html":{}}}],["thank",{"_index":305,"title":{},"body":{"index.html":{}}}],["this.service.addrelation(relation",{"_index":185,"title":{},"body":{"controllers/SampleController.html":{}}}],["this.service.count(query",{"_index":177,"title":{},"body":{"controllers/SampleController.html":{}}}],["this.service.find(query",{"_index":173,"title":{},"body":{"controllers/SampleController.html":{}}}],["this.service.findonebyid(id",{"_index":175,"title":{},"body":{"controllers/SampleController.html":{}}}],["this.service.removerelation(relation",{"_index":187,"title":{},"body":{"controllers/SampleController.html":{}}}],["this.service.save(entity",{"_index":179,"title":{},"body":{"controllers/SampleController.html":{}}}],["this.service.setrelation(relation",{"_index":189,"title":{},"body":{"controllers/SampleController.html":{}}}],["this.service.softdelete(id",{"_index":183,"title":{},"body":{"controllers/SampleController.html":{}}}],["this.service.unsetrelation(relation",{"_index":191,"title":{},"body":{"controllers/SampleController.html":{}}}],["this.service.update(id",{"_index":181,"title":{},"body":{"controllers/SampleController.html":{}}}],["throttlermodule",{"_index":17,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["throttlermodule.forroot",{"_index":43,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["time",{"_index":311,"title":{},"body":{"index.html":{}}}],["tool",{"_index":289,"title":{},"body":{"index.html":{},"properties.html":{}}}],["toward",{"_index":333,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":254,"title":{},"body":{"dependencies.html":{}}}],["ttl",{"_index":44,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["type",{"_index":62,"title":{},"body":{"modules/SampleAppModule.html":{},"controllers/SampleController.html":{},"coverage.html":{}}}],["typeorm",{"_index":262,"title":{},"body":{"dependencies.html":{}}}],["typeormmodule",{"_index":19,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["typeormmodule.forrootasync",{"_index":50,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["undefined",{"_index":165,"title":{},"body":{"controllers/SampleController.html":{}}}],["unsetrelation",{"_index":126,"title":{},"body":{"controllers/SampleController.html":{}}}],["unsetrelation(@param",{"_index":190,"title":{},"body":{"controllers/SampleController.html":{}}}],["unsetrelation(relation",{"_index":152,"title":{},"body":{"controllers/SampleController.html":{}}}],["unsetrelationdto",{"_index":103,"title":{},"body":{"modules/SampleAppModule.html":{},"controllers/SampleController.html":{}}}],["up",{"_index":325,"title":{},"body":{"index.html":{}}}],["updatedto",{"_index":98,"title":{},"body":{"modules/SampleAppModule.html":{},"controllers/SampleController.html":{}}}],["updateonebyid",{"_index":127,"title":{},"body":{"controllers/SampleController.html":{}}}],["updateonebyid(id",{"_index":155,"title":{},"body":{"controllers/SampleController.html":{}}}],["updates",{"_index":336,"title":{},"body":{"index.html":{}}}],["updatesampledto",{"_index":28,"title":{},"body":{"modules/SampleAppModule.html":{},"controllers/SampleController.html":{}}}],["use",{"_index":286,"title":{},"body":{"index.html":{},"properties.html":{}}}],["usefactory(config",{"_index":52,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["useful",{"_index":315,"title":{},"body":{"index.html":{}}}],["username",{"_index":68,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["users",{"_index":345,"title":{},"body":{"index.html":{}}}],["using",{"_index":306,"title":{},"body":{"index.html":{}}}],["validator",{"_index":256,"title":{},"body":{"dependencies.html":{}}}],["version",{"_index":364,"title":{},"body":{"properties.html":{}}}],["versions",{"_index":339,"title":{},"body":{"index.html":{}}}],["via",{"_index":295,"title":{},"body":{"index.html":{}}}],["void",{"_index":199,"title":{},"body":{"injectables/SampleCron.html":{}}}],["well",{"_index":328,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":211,"title":{},"body":{"modules/SampleModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/SampleAppModule.html":{"url":"modules/SampleAppModule.html","title":"module - SampleAppModule","body":"\n                   \n\n\n\n\n    Modules\n    SampleAppModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/sample-app.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Logger, Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { ScheduleModule } from '@nestjs/schedule';\nimport { ThrottlerModule } from '@nestjs/throttler';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport {\n  CreateSampleDto,\n  QueryManySampleDto,\n  QueryOneSampleDto,\n  QueryCountSampleDto,\n  Sample,\n  SampleRelationParamDto,\n  SampleView,\n  UpdateSampleDto,\n} from '@puq/entity';\nimport { TableNamingStrategy } from '@puq/orm';\nimport { EventEmitterModule } from '@nestjs/event-emitter';\nimport { AppEnv, DataSourceEnv } from '@puq/env';\nimport { BasicResourceModule } from '@puq/module';\n@Module({\n  imports: [\n    ConfigModule.forRoot({}),\n    ScheduleModule.forRoot(),\n    ThrottlerModule.forRoot([{ ttl: 60000, limit: 10 }]),\n    EventEmitterModule.forRoot({ delimiter: '.' }),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory(config: ConfigService) {\n        const appEnv = new AppEnv({ name: 'sample', profile: 'dev' });\n        const PROFILE = config.getOrThrow(appEnv.PROFILE);\n        const NAME = config.getOrThrow(appEnv.NAME);\n        const dbEnv = new DataSourceEnv({ name: NAME, profile: PROFILE });\n\n        return {\n          type: 'postgres',\n          host: config.getOrThrow(dbEnv.DATABASE_HOST),\n          port: config.getOrThrow(dbEnv.DATABASE_PORT),\n          username: config.getOrThrow(dbEnv.DATABASE_USERNAME),\n          password: config.getOrThrow(dbEnv.DATABASE_PASSWORD),\n          database: config.getOrThrow(dbEnv.DATABASE_NAME),\n          entities: [Sample, SampleView],\n          namingStrategy: new TableNamingStrategy(),\n          poolSize: 50,\n          extra: {\n            max: 50, // Maximum number of connections in the pool\n            min: 4, // Minimum number of connections to keep open\n            idleTimeoutMillis: 30000, // Close idle connections after 30 seconds\n          },\n        };\n      },\n    }),\n    BasicResourceModule.configure({\n      entity: () => Sample,\n      createDto: () => CreateSampleDto,\n      updateDto: () => UpdateSampleDto,\n      queryManyDto: () => QueryManySampleDto,\n      queryOneDto: () => QueryOneSampleDto,\n      queryCountDto: () => QueryCountSampleDto,\n      relationDto: () => SampleRelationParamDto,\n      unsetRelationDto: () => SampleRelationParamDto,\n      isPublic: false,\n    }),\n  ],\n  providers: [Logger],\n})\nexport class SampleAppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SampleController.html":{"url":"controllers/SampleController.html","title":"controller - SampleController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SampleController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/sample/sample.controller.ts\n        \n\n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                addRelation\n                            \n                            \n                                    \n                                count\n                            \n                            \n                                    \n                                DeleteOneById\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOneById\n                            \n                            \n                                    \n                                removeRelation\n                            \n                            \n                                    \n                                saveOne\n                            \n                            \n                                    \n                                setRelation\n                            \n                            \n                                    \n                                unsetRelation\n                            \n                            \n                                    \n                                updateOneById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        addRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    addRelation(relation: SampleRelationParamDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @AddRelation()\n                \n            \n\n                    \n                        \n                            Defined in src/lib/sample/sample.controller.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relation\n                                            \n                                                        SampleRelationParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(query: QueryOneSampleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Count()\n                \n            \n\n                    \n                        \n                            Defined in src/lib/sample/sample.controller.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        QueryOneSampleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        DeleteOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    DeleteOneById(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DeleteOneById()\n                \n            \n\n                    \n                        \n                            Defined in src/lib/sample/sample.controller.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(query: QueryManySampleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @FindAll()\n                \n            \n\n                    \n                        \n                            Defined in src/lib/sample/sample.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        QueryManySampleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @FindOneById()\n                \n            \n\n                    \n                        \n                            Defined in src/lib/sample/sample.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        removeRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeRelation(relation: SampleRelationParamDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @RemoveRelation()\n                \n            \n\n                    \n                        \n                            Defined in src/lib/sample/sample.controller.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relation\n                                            \n                                                        SampleRelationParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        saveOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveOne(entity: CreateSampleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SaveOne()\n                \n            \n\n                    \n                        \n                            Defined in src/lib/sample/sample.controller.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        CreateSampleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        setRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    setRelation(relation: SampleRelationParamDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SetRelation()\n                \n            \n\n                    \n                        \n                            Defined in src/lib/sample/sample.controller.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relation\n                                            \n                                                        SampleRelationParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        unsetRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    unsetRelation(relation: SampleUnsetRelationParamDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UnsetRelation()\n                \n            \n\n                    \n                        \n                            Defined in src/lib/sample/sample.controller.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relation\n                                            \n                                                        SampleUnsetRelationParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOneById(id: number, entity: UpdateSampleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UpdateOneById()\n                \n            \n\n                    \n                        \n                            Defined in src/lib/sample/sample.controller.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        UpdateSampleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  CreateController,\n  FindAll,\n  FindOneById,\n  Count,\n  SaveOne,\n  UpdateOneById,\n  DeleteOneById,\n  AddRelation,\n  RemoveRelation,\n  SetRelation,\n  UnsetRelation,\n} from '@puq/rest';\nimport {\n  Sample,\n  QueryManySampleDto,\n  QueryOneSampleDto,\n  QueryCountSampleDto,\n  CreateSampleDto,\n  UpdateSampleDto,\n  SampleRelationParamDto,\n  SampleUnsetRelationParamDto,\n} from '@puq/entity';\nimport { Body, Param, ParseIntPipe, Query } from '@nestjs/common';\nimport { EntityService } from '@puq/orm';\nimport { InjectEntityService } from '@puq/provider';\n\n@Controller()\nexport class SampleController extends CreateController({\n  entity: () => Sample,\n  createDto: () => CreateSampleDto,\n  updateDto: () => UpdateSampleDto,\n  queryManyDto: () => QueryManySampleDto,\n  queryOneDto: () => QueryOneSampleDto,\n  queryCountDto: () => QueryCountSampleDto,\n  unsetRelationDto: undefined,\n  relationDto: undefined,\n  isPublic: false,\n}) {\n  constructor(\n    @InjectEntityService(Sample)\n    protected readonly service: EntityService,\n  ) {\n    super(service);\n  }\n\n  @FindAll()\n  findAll(@Query() query: QueryManySampleDto) {\n    return this.service.find(query);\n  }\n\n  @FindOneById()\n  findOneById(@Param('id', ParseIntPipe) id: number) {\n    return this.service.findOneById(id);\n  }\n\n  @Count()\n  count(@Query() query: QueryOneSampleDto) {\n    return this.service.count(query);\n  }\n\n  @SaveOne()\n  saveOne(@Body() entity: CreateSampleDto) {\n    return this.service.save(entity);\n  }\n\n  @UpdateOneById()\n  updateOneById(\n    @Param('id', ParseIntPipe) id: number,\n    @Body() entity: UpdateSampleDto,\n  ) {\n    return this.service.update(id, entity);\n  }\n\n  @DeleteOneById()\n  DeleteOneById(@Param('id', ParseIntPipe) id: number) {\n    return this.service.softDelete(id);\n  }\n\n  @AddRelation()\n  addRelation(@Param() relation: SampleRelationParamDto) {\n    return this.service.addRelation(relation);\n  }\n\n  @RemoveRelation()\n  removeRelation(@Param() relation: SampleRelationParamDto) {\n    return this.service.removeRelation(relation);\n  }\n\n  @SetRelation()\n  setRelation(@Param() relation: SampleRelationParamDto) {\n    return this.service.setRelation(relation);\n  }\n\n  @UnsetRelation()\n  unsetRelation(@Param() relation: SampleUnsetRelationParamDto) {\n    return this.service.unsetRelation(relation);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SampleCron.html":{"url":"injectables/SampleCron.html","title":"injectable - SampleCron","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SampleCron\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/sample/sample.cron.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                alive\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        alive\n                        \n                    \n                \n            \n            \n                \n                        \n                    alive()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cron(CronExpression.EVERY_SECOND)\n                \n            \n\n                    \n                        \n                            Defined in src/lib/sample/sample.cron.ts:7\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { Cron, CronExpression } from '@nestjs/schedule';\n\n@Injectable()\nexport class SampleCron {\n  @Cron(CronExpression.EVERY_SECOND)\n  alive() {\n    Logger.debug('CronExpression.EVERY_SECOND');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SampleModule.html":{"url":"modules/SampleModule.html","title":"module - SampleModule","body":"\n                   \n\n\n\n\n    Modules\n    SampleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SampleModule\n\n\n\ncluster_SampleModule_providers\n\n\n\n\nSampleCron\n\nSampleCron\n\n\n\nSampleModule\n\nSampleModule\n\nSampleModule -->\n\nSampleCron->SampleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/sample/sample.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SampleCron\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SampleController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SampleController } from './sample.controller.js';\nimport { SampleCron } from './sample.cron.js';\nimport { Sample, SampleView } from '@puq/entity';\nimport { EntityModule } from '@puq/provider';\n\n@Module({\n  imports: [\n    EntityModule.forFeature({\n      entities: [Sample, SampleView],\n    }),\n  ],\n  controllers: [SampleController],\n  providers: [SampleCron],\n})\nexport class SampleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/lib/program.ts\n            \n            function\n            boot\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/sample/sample.controller.ts\n            \n            controller\n            SampleController\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/lib/sample/sample.cron.ts\n            \n            injectable\n            SampleCron\n            \n                0 %\n                (0/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^11.0.11\n        \n            @nestjs/config : ^4.0.1\n        \n            @nestjs/core : ^11.0.11\n        \n            @nestjs/event-emitter : ^3.0.1\n        \n            @nestjs/platform-express : ^11.0.11\n        \n            @nestjs/schedule : ^5.0.1\n        \n            @nestjs/swagger : ^11.0.6\n        \n            @nestjs/throttler : ^6.4.0\n        \n            @nestjs/typeorm : ^11.0.0\n        \n            @puq/boot : ^0.5.30\n        \n            @puq/entity : ^0.5.30\n        \n            @puq/env : ^0.5.30\n        \n            @puq/is : ^0.5.30\n        \n            @puq/module : ^0.5.30\n        \n            @puq/orm : ^0.5.30\n        \n            @puq/property : ^0.5.30\n        \n            @puq/provider : ^0.5.30\n        \n            @puq/query : ^0.5.30\n        \n            @puq/rest : ^0.5.30\n        \n            @swc/helpers : ^0.5.15\n        \n            better-sqlite3 : ^11.8.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            commander : ^13.1.0\n        \n            pg : ^8.14.0\n        \n            typeorm : ^0.3.21\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @puq/model : ^0.5.30\n        \n            @puq/type : ^0.5.30\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            boot   (src/.../program.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/program.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        boot\n                        \n                    \n                \n            \n            \n                \nboot()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n@puq/sample\nSummary\nThis package provides a fully portable NestJS service that can be easily installed and run as a standalone application. Designed for flexibility and ease of use, it includes its own CLI tool to manage execution seamlessly.\nFeatures\n\n📦 Installable via npm\n🚀 Standalone execution with CLI\n⚡ Lightweight and portable\n🛠 Built with NestJS for scalability\n\nInstall\nExample :  pnpm add @puq/sampleFunding\nThank you for using @puq/sample It's an open-source project, and maintaining it takes time and effort. If you find this library useful, please consider supporting its ongoing development. Your contributions help ensure that the project stays up-to-date, secure, and well-maintained.\nInstant Funding\nYour funding will go toward\n\nBug fixes and updates to ensure compatibility with the latest versions of dependencies.\nNew features that will make the library even more powerful.\nDocumentation improvements to help users get the most out of [Your Library Name].\nGeneral maintenance to keep the library running smoothly and securely.\n\nContact to the developer: [robert.brightline@gmail.com]\nSupport the developer\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        SampleAppModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SampleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SampleModule\n\n\n\ncluster_SampleModule_providers\n\n\n\n\nSampleCron\n\nSampleCron\n\n\n\nSampleModule\n\nSampleModule\n\nSampleModule -->\n\nSampleCron->SampleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.5.30\n        \n            Description : This package provides a fully portable NestJS service that can be easily installed and run as a standalone application. Designed for flexibility and ease of use, it includes its own CLI tool to manage execution seamlessly.\n        \n            Keywords : puq, sample\n        \n            Homepage : https://rbrightline.github.io/puq/sample\n        \n            Bugs : https://rbrightline.github.io\n        \n            License : MIT\n        \n            Repository : https://github.com/rbrightline/puq/tree/main\n        \n            Author : Robert Brightline\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
