var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/SampleAppModule.html",[0,0.925,1,1.141]],["body/modules/SampleAppModule.html",[0,1.078,1,1.694,2,0.579,3,0.579,4,1.11,5,1.11,6,0.715,7,1.11,8,1.11,9,1.11,10,1.11,11,1.374,12,0.082,13,1.7,14,1.11,15,0.884,16,0.715,17,0.579,18,0.579,19,1.455,20,1.455,21,2.066,22,1.903,23,0.579,24,2.227,25,2.706,26,1.11,27,1.455,28,0.884,29,1.455,30,1.11,31,1.455,32,1.11,33,1.078,34,1.7,35,0.715,36,2.227,37,0.884,38,1.455,39,1.11,40,1.11,41,2.706,42,2.227,43,1.11,44,1.455,45,1.455,46,1.455,47,1.455,48,1.455,49,1.455,50,1.455,51,1.455,52,1.455,53,1.455,54,1.455,55,1.455,56,1.455,57,3.033,58,1.645,59,1.49,60,3.033,61,1.455,62,1.455,63,1.455,64,1.455,65,1.11,66,0.579,67,1.455,68,1.455,69,1.455,70,1.455,71,1.455,72,1.455,73,1.455,74,1.455,75,1.455,76,1.455,77,1.455,78,1.11,79,1.455,80,1.455,81,2.227,82,1.455,83,1.455,84,2.227,85,1.455,86,1.455,87,1.455,88,2.227,89,2.706,90,1.455,91,1.455,92,1.455,93,1.455,94,1.11,95,1.11,96,1.455,97,1.455,98,1.455,99,1.455,100,1.455,101,1.455,102,0.715,103,0.579,104,0.04,105,0.04]],["title/controllers/SampleController.html",[106,1.141,107,1.141]],["body/controllers/SampleController.html",[12,0.082,16,0.45,17,0.365,18,0.365,22,1.461,23,0.365,33,0.612,35,0.45,37,0.557,59,1.645,65,2.628,66,1.334,102,0.45,103,0.612,104,0.028,105,0.028,106,0.755,107,0.755,108,0.7,109,0.7,110,1.984,111,0.365,112,1.173,113,2.586,114,2.586,115,2.586,116,2.586,117,2.586,118,2.586,119,2.586,120,2.586,121,2.586,122,2.586,123,0.916,124,3.349,125,2.557,126,2.557,127,0.916,128,2.557,129,2.557,130,3.119,131,2.557,132,0.916,133,2.322,134,0.916,135,2.586,136,0.916,137,3.349,138,0.916,139,2.974,140,0.916,141,2.322,142,0.916,143,0.916,144,0.916,145,0.916,146,0.916,147,0.916,148,2.322,149,0.916,150,3.119,151,0.916,152,0.916,153,0.916,154,2.322,155,0.916,156,0.916,157,2.322,158,0.916,159,0.7,160,1.536,161,0.7,162,1.536,163,0.916,164,1.536,165,0.916,166,0.557,167,1.536,168,0.7,169,0.916,170,0.916,171,0.916,172,0.916,173,0.916,174,0.916,175,0.916,176,0.916,177,0.916,178,0.916,179,0.916,180,0.916,181,0.916,182,0.916,183,0.916,184,0.916,185,0.916,186,0.45,187,0.916,188,0.916,189,1.536,190,0.916,191,0.916,192,1.536,193,0.916,194,0.916,195,0.916,196,0.916,197,0.916,198,0.916,199,0.916,200,0.916,201,0.916,202,0.916,203,0.916,204,2.322,205,0.916,206,0.916,207,0.916,208,0.916,209,0.916,210,0.916,211,0.916]],["title/injectables/SampleCron.html",[212,1.141,213,1.412]],["body/injectables/SampleCron.html",[12,0.081,16,1.315,17,1.066,18,1.066,22,1.682,23,1.066,28,1.627,102,1.315,103,1.066,104,0.062,105,0.062,111,1.066,112,2.614,125,2.044,126,2.044,131,2.044,212,1.682,213,2.081,214,2.677,215,2.044,216,3.98,217,3.425,218,2.677,219,2.677,220,2.677,221,2.677,222,2.677,223,2.677]],["title/modules/SampleModule.html",[0,0.925,11,0.925]],["body/modules/SampleModule.html",[0,1.355,2,1.055,11,1.355,12,0.082,16,1.301,17,1.055,18,1.055,21,2.022,22,1.947,23,1.055,33,1.355,34,2.596,35,1.301,78,2.022,102,1.301,103,1.055,104,0.062,105,0.062,107,1.845,108,2.596,166,1.609,224,2.648,225,2.648,226,2.648,227,2.648]],["title/coverage.html",[228,2.382]],["body/coverage.html",[6,1.337,12,0.078,18,1.084,58,1.654,66,1.379,104,0.063,105,0.063,106,1.337,107,1.337,109,2.078,212,1.337,213,1.654,215,2.078,228,2.078,229,2.078,230,2.722,231,2.722,232,2.078,233,3.461,234,2.078,235,3.805,236,2.722,237,2.722,238,2.722,239,2.103,240,3.461,241,3.461,242,2.722,243,1.654,244,2.722,245,2.722]],["title/dependencies.html",[3,1.108,246,0.966]],["body/dependencies.html",[3,0.852,12,0.083,23,0.852,26,1.634,28,1.3,30,1.634,32,1.634,35,1.051,37,1.3,39,1.634,40,1.634,43,1.634,103,1.175,104,0.054,105,0.054,159,1.634,161,1.634,166,1.3,168,1.634,247,3.377,248,2.14,249,2.14,250,2.14,251,2.14,252,2.14,253,2.14,254,2.14,255,2.14,256,2.14,257,2.14,258,2.14,259,3.316,260,2.14,261,2.14,262,2.14,263,2.14,264,2.14,265,2.14,266,2.14,267,2.14,268,2.14,269,2.14,270,2.14,271,2.14,272,2.14,273,2.14,274,2.14,275,2.14,276,2.14]],["title/miscellaneous/functions.html",[277,0.966,278,2.123]],["body/miscellaneous/functions.html",[6,1.95,12,0.072,33,1.19,59,1.467,66,1.19,104,0.067,105,0.067,111,1.19,128,2.28,129,2.28,186,1.467,232,2.28,234,3.03,239,1.815,243,2.229,277,1.467,278,2.28,279,2.987,280,2.28,281,2.987,282,2.28]],["title/index.html",[111,0.783,283,1.965,284,1.965]],["body/index.html",[3,0.772,12,0.071,15,1.177,17,0.772,58,1.177,59,0.952,94,1.479,95,1.479,104,0.05,105,0.05,186,0.952,229,1.479,246,0.952,285,2.752,286,1.937,287,1.479,288,1.479,289,2.101,290,2.101,291,1.479,292,1.479,293,1.479,294,2.101,295,1.479,296,1.479,297,1.479,298,1.479,299,1.479,300,1.479,301,2.101,302,1.479,303,1.479,304,2.101,305,1.479,306,2.752,307,1.937,308,1.937,309,1.937,310,1.937,311,1.937,312,1.937,313,1.937,314,1.937,315,1.937,316,1.937,317,1.937,318,1.937,319,1.937,320,1.937,321,2.752,322,1.937,323,1.937,324,1.937,325,1.937,326,1.937,327,3.485,328,1.937,329,1.937,330,1.937,331,1.937,332,1.937,333,1.937,334,1.937,335,2.752,336,2.752,337,1.937,338,1.937,339,1.937,340,1.937,341,1.937,342,1.937,343,1.937,344,2.752,345,1.937,346,1.937,347,1.937,348,1.937,349,1.937,350,1.937,351,1.937,352,1.937,353,1.937,354,1.937,355,1.937,356,1.937,357,1.937,358,1.937,359,1.937,360,1.937,361,1.937,362,1.937,363,1.937,364,1.937,365,2.752,366,1.937,367,1.479]],["title/modules.html",[2,1.243]],["body/modules.html",[1,1.604,2,1.301,11,1.301,12,0.07,104,0.07,105,0.07,367,2.493,368,3.265,369,3.265,370,3.87,371,3.265,372,3.265]],["title/overview.html",[373,2.382]],["body/overview.html",[0,1.161,1,2.017,2,1.161,3,1.161,4,2.226,5,2.226,6,1.432,7,2.226,8,2.226,9,2.226,10,2.226,11,1.564,12,0.071,13,2.759,14,2.226,15,1.772,104,0.066,105,0.066,106,1.432,212,1.432,373,2.226,374,2.916,375,3.614]],["title/properties.html",[246,0.966,376,2.123]],["body/properties.html",[12,0.08,33,1.044,104,0.061,105,0.061,186,1.287,246,1.287,259,2,287,2,288,2,289,2,290,2,291,2,292,2,293,2,294,2,295,2,296,2,297,2,298,2,299,2,300,2,301,2,302,2,303,2,304,2,305,2,376,2,377,2.62,378,2.62,379,2.62,380,2.62,381,2.62,382,2.62,383,2.62,384,2.62,385,2.62,386,2.62,387,2.62,388,2.62,389,2.62,390,2.62,391,2.62]],["title/miscellaneous/typealiases.html",[277,0.966,392,2.781]],["body/miscellaneous/typealiases.html",[12,0.07,66,1.53,104,0.07,105,0.07,111,1.284,239,1.958,243,2.333,277,1.583,280,2.46,282,2.46,393,3.222,394,3.222,395,3.222]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/SampleAppModule.html":{},"controllers/SampleController.html":{},"injectables/SampleCron.html":{},"modules/SampleModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":235,"title":{},"body":{"coverage.html":{}}}],["0.14.1",{"_index":270,"title":{},"body":{"dependencies.html":{}}}],["0.3.21",{"_index":276,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":268,"title":{},"body":{"dependencies.html":{}}}],["0.5.15",{"_index":266,"title":{},"body":{"dependencies.html":{}}}],["0.5.50",{"_index":259,"title":{},"body":{"dependencies.html":{},"properties.html":{}}}],["0/1",{"_index":236,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":237,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":238,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":375,"title":{},"body":{"overview.html":{}}}],["1/1",{"_index":241,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":51,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["100",{"_index":240,"title":{},"body":{"coverage.html":{}}}],["11.0.0",{"_index":257,"title":{},"body":{"dependencies.html":{}}}],["11.0.11",{"_index":247,"title":{},"body":{"dependencies.html":{}}}],["11.0.6",{"_index":255,"title":{},"body":{"dependencies.html":{}}}],["13.1.0",{"_index":272,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":374,"title":{},"body":{"overview.html":{}}}],["3.0.1",{"_index":250,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":100,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["30000",{"_index":97,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["4",{"_index":92,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["4.0.1",{"_index":248,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":253,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":84,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["6.4.0",{"_index":256,"title":{},"body":{"dependencies.html":{}}}],["60000",{"_index":49,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["8.14.0",{"_index":274,"title":{},"body":{"dependencies.html":{}}}],["add",{"_index":316,"title":{},"body":{"index.html":{}}}],["addrelation",{"_index":113,"title":{},"body":{"controllers/SampleController.html":{}}}],["addrelation(@param",{"_index":203,"title":{},"body":{"controllers/SampleController.html":{}}}],["addrelation(relation",{"_index":123,"title":{},"body":{"controllers/SampleController.html":{}}}],["alias",{"_index":242,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":393,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alive",{"_index":216,"title":{},"body":{"injectables/SampleCron.html":{}}}],["app",{"_index":394,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["app.module.ts",{"_index":20,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["appenv",{"_index":41,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["application",{"_index":295,"title":{},"body":{"index.html":{},"properties.html":{}}}],["argumentmetadata",{"_index":174,"title":{},"body":{"controllers/SampleController.html":{}}}],["author",{"_index":389,"title":{},"body":{"properties.html":{}}}],["available",{"_index":372,"title":{},"body":{"modules.html":{}}}],["body",{"_index":162,"title":{},"body":{"controllers/SampleController.html":{}}}],["boot",{"_index":234,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/SampleAppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["bootstrap(options",{"_index":281,"title":{},"body":{"miscellaneous/functions.html":{}}}],["bootstrapoptions",{"_index":243,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["brightline",{"_index":391,"title":{},"body":{"properties.html":{}}}],["browse",{"_index":370,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":368,"title":{},"body":{"modules.html":{}}}],["bug",{"_index":347,"title":{},"body":{"index.html":{}}}],["bugs",{"_index":383,"title":{},"body":{"properties.html":{}}}],["built",{"_index":311,"title":{},"body":{"index.html":{}}}],["class",{"_index":103,"title":{},"body":{"modules/SampleAppModule.html":{},"controllers/SampleController.html":{},"injectables/SampleCron.html":{},"modules/SampleModule.html":{},"dependencies.html":{}}}],["cli",{"_index":301,"title":{},"body":{"index.html":{},"properties.html":{}}}],["close",{"_index":98,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["cluster_sampleappmodule",{"_index":9,"title":{},"body":{"modules/SampleAppModule.html":{},"overview.html":{}}}],["cluster_sampleappmodule_imports",{"_index":10,"title":{},"body":{"modules/SampleAppModule.html":{},"overview.html":{}}}],["commander",{"_index":271,"title":{},"body":{"dependencies.html":{}}}],["compatibility",{"_index":350,"title":{},"body":{"index.html":{}}}],["config.getorthrow(appenv.name",{"_index":63,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["config.getorthrow(appenv.profile",{"_index":62,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["config.getorthrow(dbenv.database_host",{"_index":69,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["config.getorthrow(dbenv.database_name",{"_index":77,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["config.getorthrow(dbenv.database_password",{"_index":75,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["config.getorthrow(dbenv.database_port",{"_index":71,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["config.getorthrow(dbenv.database_username",{"_index":73,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["configmodule",{"_index":24,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["configmodule.forroot",{"_index":45,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["configservice",{"_index":25,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["connections",{"_index":89,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["consider",{"_index":330,"title":{},"body":{"index.html":{}}}],["console.log(value",{"_index":176,"title":{},"body":{"controllers/SampleController.html":{}}}],["const",{"_index":57,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["constructor",{"_index":182,"title":{},"body":{"controllers/SampleController.html":{}}}],["contact",{"_index":364,"title":{},"body":{"index.html":{}}}],["contributions",{"_index":334,"title":{},"body":{"index.html":{}}}],["controller",{"_index":106,"title":{"controllers/SampleController.html":{}},"body":{"controllers/SampleController.html":{},"coverage.html":{},"overview.html":{}}}],["controllers",{"_index":108,"title":{},"body":{"controllers/SampleController.html":{},"modules/SampleModule.html":{}}}],["count",{"_index":114,"title":{},"body":{"controllers/SampleController.html":{}}}],["count(@query",{"_index":194,"title":{},"body":{"controllers/SampleController.html":{}}}],["count(query",{"_index":132,"title":{},"body":{"controllers/SampleController.html":{}}}],["coverage",{"_index":228,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createcontroller",{"_index":160,"title":{},"body":{"controllers/SampleController.html":{}}}],["createsampledto",{"_index":148,"title":{},"body":{"controllers/SampleController.html":{}}}],["cron",{"_index":221,"title":{},"body":{"injectables/SampleCron.html":{}}}],["cron(cronexpression.every_second",{"_index":217,"title":{},"body":{"injectables/SampleCron.html":{}}}],["cronexpression",{"_index":222,"title":{},"body":{"injectables/SampleCron.html":{}}}],["customvaliationpipe",{"_index":169,"title":{},"body":{"controllers/SampleController.html":{}}}],["database",{"_index":76,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["datasourceenv",{"_index":42,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["date",{"_index":339,"title":{},"body":{"index.html":{}}}],["dbenv",{"_index":64,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["debug",{"_index":167,"title":{},"body":{"controllers/SampleController.html":{}}}],["debug(entity",{"_index":197,"title":{},"body":{"controllers/SampleController.html":{}}}],["debug(objectid",{"_index":192,"title":{},"body":{"controllers/SampleController.html":{}}}],["debug(query",{"_index":189,"title":{},"body":{"controllers/SampleController.html":{}}}],["debug(relation",{"_index":204,"title":{},"body":{"controllers/SampleController.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/SampleAppModule.html":{},"overview.html":{}}}],["decorators",{"_index":125,"title":{},"body":{"controllers/SampleController.html":{},"injectables/SampleCron.html":{}}}],["defined",{"_index":126,"title":{},"body":{"controllers/SampleController.html":{},"injectables/SampleCron.html":{}}}],["deleteonebyid",{"_index":115,"title":{},"body":{"controllers/SampleController.html":{}}}],["deleteonebyid(@param",{"_index":201,"title":{},"body":{"controllers/SampleController.html":{}}}],["deleteonebyid(objectid",{"_index":136,"title":{},"body":{"controllers/SampleController.html":{}}}],["delimiter",{"_index":53,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/SampleAppModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["description",{"_index":378,"title":{},"body":{"properties.html":{}}}],["designed",{"_index":296,"title":{},"body":{"index.html":{},"properties.html":{}}}],["dev",{"_index":61,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["developer",{"_index":365,"title":{},"body":{"index.html":{}}}],["development",{"_index":333,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":229,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dropschema",{"_index":82,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["ease",{"_index":298,"title":{},"body":{"index.html":{},"properties.html":{}}}],["easily",{"_index":291,"title":{},"body":{"index.html":{},"properties.html":{}}}],["effort",{"_index":325,"title":{},"body":{"index.html":{}}}],["emitter",{"_index":40,"title":{},"body":{"modules/SampleAppModule.html":{},"dependencies.html":{}}}],["ensure",{"_index":336,"title":{},"body":{"index.html":{}}}],["entities",{"_index":78,"title":{},"body":{"modules/SampleAppModule.html":{},"modules/SampleModule.html":{}}}],["entity",{"_index":150,"title":{},"body":{"controllers/SampleController.html":{}}}],["entitymodule",{"_index":226,"title":{},"body":{"modules/SampleModule.html":{}}}],["entitymodule.forfeature",{"_index":227,"title":{},"body":{"modules/SampleModule.html":{}}}],["entityservice",{"_index":164,"title":{},"body":{"controllers/SampleController.html":{}}}],["even",{"_index":354,"title":{},"body":{"index.html":{}}}],["eventemittermodule",{"_index":38,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["eventemittermodule.forroot",{"_index":52,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["example",{"_index":314,"title":{},"body":{"index.html":{}}}],["execution",{"_index":304,"title":{},"body":{"index.html":{},"properties.html":{}}}],["export",{"_index":102,"title":{},"body":{"modules/SampleAppModule.html":{},"controllers/SampleController.html":{},"injectables/SampleCron.html":{},"modules/SampleModule.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/SampleAppModule.html":{},"overview.html":{}}}],["express",{"_index":252,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":110,"title":{},"body":{"controllers/SampleController.html":{}}}],["extra",{"_index":85,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["false",{"_index":181,"title":{},"body":{"controllers/SampleController.html":{}}}],["features",{"_index":306,"title":{},"body":{"index.html":{}}}],["file",{"_index":18,"title":{},"body":{"modules/SampleAppModule.html":{},"controllers/SampleController.html":{},"injectables/SampleCron.html":{},"modules/SampleModule.html":{},"coverage.html":{}}}],["find",{"_index":326,"title":{},"body":{"index.html":{}}}],["findall",{"_index":116,"title":{},"body":{"controllers/SampleController.html":{}}}],["findall(@query",{"_index":188,"title":{},"body":{"controllers/SampleController.html":{}}}],["findall(query",{"_index":140,"title":{},"body":{"controllers/SampleController.html":{}}}],["findonebyid",{"_index":117,"title":{},"body":{"controllers/SampleController.html":{}}}],["findonebyid(@param",{"_index":191,"title":{},"body":{"controllers/SampleController.html":{}}}],["findonebyid(objectid",{"_index":143,"title":{},"body":{"controllers/SampleController.html":{}}}],["fixes",{"_index":348,"title":{},"body":{"index.html":{}}}],["flexibility",{"_index":297,"title":{},"body":{"index.html":{},"properties.html":{}}}],["fully",{"_index":288,"title":{},"body":{"index.html":{},"properties.html":{}}}],["function",{"_index":233,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":278,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funding",{"_index":344,"title":{},"body":{"index.html":{}}}],["general",{"_index":359,"title":{},"body":{"index.html":{}}}],["getting",{"_index":283,"title":{"index.html":{}},"body":{}}],["go",{"_index":345,"title":{},"body":{"index.html":{}}}],["graph",{"_index":371,"title":{},"body":{"modules.html":{}}}],["help",{"_index":335,"title":{},"body":{"index.html":{}}}],["homepage",{"_index":381,"title":{},"body":{"properties.html":{}}}],["host",{"_index":68,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["https://github.com/rbrightline/puq/tree/main",{"_index":388,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io",{"_index":384,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io/puq/sample",{"_index":382,"title":{},"body":{"properties.html":{}}}],["iddto",{"_index":137,"title":{},"body":{"controllers/SampleController.html":{}}}],["identifier",{"_index":230,"title":{},"body":{"coverage.html":{}}}],["idle",{"_index":99,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["idletimeoutmillis",{"_index":96,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["import",{"_index":22,"title":{},"body":{"modules/SampleAppModule.html":{},"controllers/SampleController.html":{},"injectables/SampleCron.html":{},"modules/SampleModule.html":{}}}],["imports",{"_index":21,"title":{},"body":{"modules/SampleAppModule.html":{},"modules/SampleModule.html":{}}}],["improvements",{"_index":357,"title":{},"body":{"index.html":{}}}],["includes",{"_index":300,"title":{},"body":{"index.html":{},"properties.html":{}}}],["index",{"_index":111,"title":{"index.html":{}},"body":{"controllers/SampleController.html":{},"injectables/SampleCron.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":16,"title":{},"body":{"modules/SampleAppModule.html":{},"controllers/SampleController.html":{},"injectables/SampleCron.html":{},"modules/SampleModule.html":{}}}],["inject",{"_index":55,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["injectable",{"_index":212,"title":{"injectables/SampleCron.html":{}},"body":{"injectables/SampleCron.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":214,"title":{},"body":{"injectables/SampleCron.html":{}}}],["injectentityservice",{"_index":165,"title":{},"body":{"controllers/SampleController.html":{}}}],["injectentityservice(sample",{"_index":183,"title":{},"body":{"controllers/SampleController.html":{}}}],["install",{"_index":313,"title":{},"body":{"index.html":{}}}],["installable",{"_index":307,"title":{},"body":{"index.html":{}}}],["installed",{"_index":292,"title":{},"body":{"index.html":{},"properties.html":{}}}],["instant",{"_index":343,"title":{},"body":{"index.html":{}}}],["ispublic",{"_index":180,"title":{},"body":{"controllers/SampleController.html":{}}}],["it's",{"_index":320,"title":{},"body":{"index.html":{}}}],["keep",{"_index":94,"title":{},"body":{"modules/SampleAppModule.html":{},"index.html":{}}}],["keywords",{"_index":379,"title":{},"body":{"properties.html":{}}}],["latest",{"_index":351,"title":{},"body":{"index.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/SampleAppModule.html":{},"overview.html":{}}}],["library",{"_index":327,"title":{},"body":{"index.html":{}}}],["license",{"_index":385,"title":{},"body":{"properties.html":{}}}],["lightweight",{"_index":310,"title":{},"body":{"index.html":{}}}],["limit",{"_index":50,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["literal",{"_index":395,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["logger",{"_index":220,"title":{},"body":{"injectables/SampleCron.html":{}}}],["logger.debug('cronexpression.every_second",{"_index":223,"title":{},"body":{"injectables/SampleCron.html":{}}}],["maintained",{"_index":342,"title":{},"body":{"index.html":{}}}],["maintaining",{"_index":322,"title":{},"body":{"index.html":{}}}],["maintenance",{"_index":360,"title":{},"body":{"index.html":{}}}],["make",{"_index":353,"title":{},"body":{"index.html":{}}}],["manage",{"_index":303,"title":{},"body":{"index.html":{},"properties.html":{}}}],["matching",{"_index":105,"title":{},"body":{"modules/SampleAppModule.html":{},"controllers/SampleController.html":{},"injectables/SampleCron.html":{},"modules/SampleModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["max",{"_index":86,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["maximum",{"_index":87,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["metadata",{"_index":173,"title":{},"body":{"controllers/SampleController.html":{}}}],["methods",{"_index":112,"title":{},"body":{"controllers/SampleController.html":{},"injectables/SampleCron.html":{}}}],["min",{"_index":91,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["minimum",{"_index":93,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["miscellaneous",{"_index":277,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["mit",{"_index":386,"title":{},"body":{"properties.html":{}}}],["module",{"_index":0,"title":{"modules/SampleAppModule.html":{},"modules/SampleModule.html":{}},"body":{"modules/SampleAppModule.html":{},"modules/SampleModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/SampleAppModule.html":{},"modules/SampleModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":355,"title":{},"body":{"index.html":{}}}],["name",{"_index":59,"title":{},"body":{"modules/SampleAppModule.html":{},"controllers/SampleController.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["namingstrategy",{"_index":79,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["nestjs",{"_index":290,"title":{},"body":{"index.html":{},"properties.html":{}}}],["nestjs/common",{"_index":23,"title":{},"body":{"modules/SampleAppModule.html":{},"controllers/SampleController.html":{},"injectables/SampleCron.html":{},"modules/SampleModule.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":26,"title":{},"body":{"modules/SampleAppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":249,"title":{},"body":{"dependencies.html":{}}}],["nestjs/event",{"_index":39,"title":{},"body":{"modules/SampleAppModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":251,"title":{},"body":{"dependencies.html":{}}}],["nestjs/schedule",{"_index":28,"title":{},"body":{"modules/SampleAppModule.html":{},"injectables/SampleCron.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":254,"title":{},"body":{"dependencies.html":{}}}],["nestjs/throttler",{"_index":30,"title":{},"body":{"modules/SampleAppModule.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":32,"title":{},"body":{"modules/SampleAppModule.html":{},"dependencies.html":{}}}],["new",{"_index":58,"title":{},"body":{"modules/SampleAppModule.html":{},"coverage.html":{},"index.html":{}}}],["npm",{"_index":309,"title":{},"body":{"index.html":{}}}],["number",{"_index":88,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["objectid",{"_index":139,"title":{},"body":{"controllers/SampleController.html":{}}}],["ongoing",{"_index":332,"title":{},"body":{"index.html":{}}}],["open",{"_index":95,"title":{},"body":{"modules/SampleAppModule.html":{},"index.html":{}}}],["optional",{"_index":129,"title":{},"body":{"controllers/SampleController.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":282,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["out",{"_index":15,"title":{},"body":{"modules/SampleAppModule.html":{},"index.html":{},"overview.html":{}}}],["override",{"_index":171,"title":{},"body":{"controllers/SampleController.html":{}}}],["overview",{"_index":373,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":246,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{},"properties.html":{}}}],["param",{"_index":163,"title":{},"body":{"controllers/SampleController.html":{}}}],["parameters",{"_index":128,"title":{},"body":{"controllers/SampleController.html":{},"miscellaneous/functions.html":{}}}],["password",{"_index":74,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["pg",{"_index":273,"title":{},"body":{"dependencies.html":{}}}],["please",{"_index":329,"title":{},"body":{"index.html":{}}}],["pnpm",{"_index":315,"title":{},"body":{"index.html":{}}}],["pool",{"_index":90,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["poolsize",{"_index":83,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["port",{"_index":70,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["portable",{"_index":289,"title":{},"body":{"index.html":{},"properties.html":{}}}],["postgres",{"_index":67,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["powerful",{"_index":356,"title":{},"body":{"index.html":{}}}],["profile",{"_index":60,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["project",{"_index":321,"title":{},"body":{"index.html":{}}}],["promise",{"_index":175,"title":{},"body":{"controllers/SampleController.html":{}}}],["properties",{"_index":376,"title":{"properties.html":{}},"body":{"properties.html":{}}}],["protected",{"_index":184,"title":{},"body":{"controllers/SampleController.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/SampleAppModule.html":{},"overview.html":{}}}],["provides",{"_index":287,"title":{},"body":{"index.html":{},"properties.html":{}}}],["puq",{"_index":380,"title":{},"body":{"properties.html":{}}}],["puq/boot",{"_index":258,"title":{},"body":{"dependencies.html":{}}}],["puq/debug",{"_index":168,"title":{},"body":{"controllers/SampleController.html":{},"dependencies.html":{}}}],["puq/entity",{"_index":35,"title":{},"body":{"modules/SampleAppModule.html":{},"controllers/SampleController.html":{},"modules/SampleModule.html":{},"dependencies.html":{}}}],["puq/env",{"_index":43,"title":{},"body":{"modules/SampleAppModule.html":{},"dependencies.html":{}}}],["puq/is",{"_index":260,"title":{},"body":{"dependencies.html":{}}}],["puq/middleware",{"_index":261,"title":{},"body":{"dependencies.html":{}}}],["puq/model",{"_index":262,"title":{},"body":{"dependencies.html":{}}}],["puq/orm",{"_index":37,"title":{},"body":{"modules/SampleAppModule.html":{},"controllers/SampleController.html":{},"dependencies.html":{}}}],["puq/property",{"_index":263,"title":{},"body":{"dependencies.html":{}}}],["puq/provider",{"_index":166,"title":{},"body":{"controllers/SampleController.html":{},"modules/SampleModule.html":{},"dependencies.html":{}}}],["puq/query",{"_index":264,"title":{},"body":{"dependencies.html":{}}}],["puq/rest",{"_index":161,"title":{},"body":{"controllers/SampleController.html":{},"dependencies.html":{}}}],["puq/sample",{"_index":285,"title":{},"body":{"index.html":{}}}],["puq/samplefunding",{"_index":317,"title":{},"body":{"index.html":{}}}],["puq/type",{"_index":159,"title":{},"body":{"controllers/SampleController.html":{},"dependencies.html":{}}}],["query",{"_index":135,"title":{},"body":{"controllers/SampleController.html":{}}}],["querycountsampledto",{"_index":133,"title":{},"body":{"controllers/SampleController.html":{}}}],["querymanysampledto",{"_index":141,"title":{},"body":{"controllers/SampleController.html":{}}}],["readonly",{"_index":185,"title":{},"body":{"controllers/SampleController.html":{}}}],["relation",{"_index":130,"title":{},"body":{"controllers/SampleController.html":{}}}],["removerelation",{"_index":118,"title":{},"body":{"controllers/SampleController.html":{}}}],["removerelation(@param",{"_index":206,"title":{},"body":{"controllers/SampleController.html":{}}}],["removerelation(relation",{"_index":145,"title":{},"body":{"controllers/SampleController.html":{}}}],["repository",{"_index":387,"title":{},"body":{"properties.html":{}}}],["reset",{"_index":14,"title":{},"body":{"modules/SampleAppModule.html":{},"overview.html":{}}}],["results",{"_index":104,"title":{},"body":{"modules/SampleAppModule.html":{},"controllers/SampleController.html":{},"injectables/SampleCron.html":{},"modules/SampleModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":65,"title":{},"body":{"modules/SampleAppModule.html":{},"controllers/SampleController.html":{}}}],["returns",{"_index":131,"title":{},"body":{"controllers/SampleController.html":{},"injectables/SampleCron.html":{}}}],["robert",{"_index":390,"title":{},"body":{"properties.html":{}}}],["robert.brightline@gmail.com",{"_index":366,"title":{},"body":{"index.html":{}}}],["run",{"_index":293,"title":{},"body":{"index.html":{},"properties.html":{}}}],["running",{"_index":361,"title":{},"body":{"index.html":{}}}],["sample",{"_index":33,"title":{},"body":{"modules/SampleAppModule.html":{},"controllers/SampleController.html":{},"modules/SampleModule.html":{},"miscellaneous/functions.html":{},"properties.html":{}}}],["sample.controller.js",{"_index":225,"title":{},"body":{"modules/SampleModule.html":{}}}],["sample/sample.module.js",{"_index":44,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["sampleappmodule",{"_index":1,"title":{"modules/SampleAppModule.html":{}},"body":{"modules/SampleAppModule.html":{},"modules.html":{},"overview.html":{}}}],["samplecontroller",{"_index":107,"title":{"controllers/SampleController.html":{}},"body":{"controllers/SampleController.html":{},"modules/SampleModule.html":{},"coverage.html":{}}}],["samplecron",{"_index":213,"title":{"injectables/SampleCron.html":{}},"body":{"injectables/SampleCron.html":{},"coverage.html":{}}}],["samplemodule",{"_index":11,"title":{"modules/SampleModule.html":{}},"body":{"modules/SampleAppModule.html":{},"modules/SampleModule.html":{},"modules.html":{},"overview.html":{}}}],["samplerelationparamdto",{"_index":124,"title":{},"body":{"controllers/SampleController.html":{}}}],["sampleunsetrelationparamdto",{"_index":154,"title":{},"body":{"controllers/SampleController.html":{}}}],["sampleview",{"_index":34,"title":{},"body":{"modules/SampleAppModule.html":{},"modules/SampleModule.html":{}}}],["saveone",{"_index":119,"title":{},"body":{"controllers/SampleController.html":{}}}],["saveone(@body",{"_index":196,"title":{},"body":{"controllers/SampleController.html":{}}}],["saveone(entity",{"_index":147,"title":{},"body":{"controllers/SampleController.html":{}}}],["scalability",{"_index":312,"title":{},"body":{"index.html":{}}}],["schedulemodule",{"_index":27,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["schedulemodule.forroot",{"_index":46,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["seamlessly",{"_index":305,"title":{},"body":{"index.html":{},"properties.html":{}}}],["seconds",{"_index":101,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["secure",{"_index":340,"title":{},"body":{"index.html":{}}}],["securely",{"_index":363,"title":{},"body":{"index.html":{}}}],["service",{"_index":186,"title":{},"body":{"controllers/SampleController.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["setrelation",{"_index":120,"title":{},"body":{"controllers/SampleController.html":{}}}],["setrelation(@param",{"_index":208,"title":{},"body":{"controllers/SampleController.html":{}}}],["setrelation(relation",{"_index":151,"title":{},"body":{"controllers/SampleController.html":{}}}],["smoothly",{"_index":362,"title":{},"body":{"index.html":{}}}],["source",{"_index":17,"title":{},"body":{"modules/SampleAppModule.html":{},"controllers/SampleController.html":{},"injectables/SampleCron.html":{},"modules/SampleModule.html":{},"index.html":{}}}],["src/.../program.ts",{"_index":279,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../run.ts",{"_index":280,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/program.ts",{"_index":232,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/sample",{"_index":19,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["src/lib/sample/sample.controller.ts",{"_index":109,"title":{},"body":{"controllers/SampleController.html":{},"coverage.html":{}}}],["src/lib/sample/sample.controller.ts:102",{"_index":146,"title":{},"body":{"controllers/SampleController.html":{}}}],["src/lib/sample/sample.controller.ts:108",{"_index":152,"title":{},"body":{"controllers/SampleController.html":{}}}],["src/lib/sample/sample.controller.ts:114",{"_index":155,"title":{},"body":{"controllers/SampleController.html":{}}}],["src/lib/sample/sample.controller.ts:57",{"_index":142,"title":{},"body":{"controllers/SampleController.html":{}}}],["src/lib/sample/sample.controller.ts:63",{"_index":144,"title":{},"body":{"controllers/SampleController.html":{}}}],["src/lib/sample/sample.controller.ts:69",{"_index":134,"title":{},"body":{"controllers/SampleController.html":{}}}],["src/lib/sample/sample.controller.ts:75",{"_index":149,"title":{},"body":{"controllers/SampleController.html":{}}}],["src/lib/sample/sample.controller.ts:81",{"_index":158,"title":{},"body":{"controllers/SampleController.html":{}}}],["src/lib/sample/sample.controller.ts:90",{"_index":138,"title":{},"body":{"controllers/SampleController.html":{}}}],["src/lib/sample/sample.controller.ts:96",{"_index":127,"title":{},"body":{"controllers/SampleController.html":{}}}],["src/lib/sample/sample.cron.ts",{"_index":215,"title":{},"body":{"injectables/SampleCron.html":{},"coverage.html":{}}}],["src/lib/sample/sample.cron.ts:7",{"_index":218,"title":{},"body":{"injectables/SampleCron.html":{}}}],["src/lib/sample/sample.module.ts",{"_index":224,"title":{},"body":{"modules/SampleModule.html":{}}}],["src/run.ts",{"_index":239,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["standalone",{"_index":294,"title":{},"body":{"index.html":{},"properties.html":{}}}],["started",{"_index":284,"title":{"index.html":{}},"body":{}}],["statements",{"_index":231,"title":{},"body":{"coverage.html":{}}}],["stays",{"_index":337,"title":{},"body":{"index.html":{}}}],["summary",{"_index":286,"title":{},"body":{"index.html":{}}}],["super(service",{"_index":187,"title":{},"body":{"controllers/SampleController.html":{}}}],["super.validate(object",{"_index":178,"title":{},"body":{"controllers/SampleController.html":{}}}],["support",{"_index":367,"title":{},"body":{"index.html":{},"modules.html":{}}}],["supporting",{"_index":331,"title":{},"body":{"index.html":{}}}],["svg",{"_index":369,"title":{},"body":{"modules.html":{}}}],["swc/helpers",{"_index":265,"title":{},"body":{"dependencies.html":{}}}],["synchronize",{"_index":80,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["table",{"_index":245,"title":{},"body":{"coverage.html":{}}}],["tablenamingstrategy",{"_index":36,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":244,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":323,"title":{},"body":{"index.html":{}}}],["thank",{"_index":318,"title":{},"body":{"index.html":{}}}],["this.service.addrelation(relation",{"_index":205,"title":{},"body":{"controllers/SampleController.html":{}}}],["this.service.count(query",{"_index":195,"title":{},"body":{"controllers/SampleController.html":{}}}],["this.service.find(query",{"_index":190,"title":{},"body":{"controllers/SampleController.html":{}}}],["this.service.findonebyidorthrow(objectid.id",{"_index":193,"title":{},"body":{"controllers/SampleController.html":{}}}],["this.service.removerelation(relation",{"_index":207,"title":{},"body":{"controllers/SampleController.html":{}}}],["this.service.save(entity",{"_index":198,"title":{},"body":{"controllers/SampleController.html":{}}}],["this.service.setrelation(relation",{"_index":209,"title":{},"body":{"controllers/SampleController.html":{}}}],["this.service.softdelete(objectid.id",{"_index":202,"title":{},"body":{"controllers/SampleController.html":{}}}],["this.service.unsetrelation(relation",{"_index":211,"title":{},"body":{"controllers/SampleController.html":{}}}],["this.service.update(objectid.id",{"_index":200,"title":{},"body":{"controllers/SampleController.html":{}}}],["throttlermodule",{"_index":29,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["throttlermodule.forroot",{"_index":47,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["time",{"_index":324,"title":{},"body":{"index.html":{}}}],["tool",{"_index":302,"title":{},"body":{"index.html":{},"properties.html":{}}}],["toward",{"_index":346,"title":{},"body":{"index.html":{}}}],["transform(value",{"_index":172,"title":{},"body":{"controllers/SampleController.html":{}}}],["transformer",{"_index":267,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":81,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["ttl",{"_index":48,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["type",{"_index":66,"title":{},"body":{"modules/SampleAppModule.html":{},"controllers/SampleController.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":392,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeorm",{"_index":275,"title":{},"body":{"dependencies.html":{}}}],["typeormmodule",{"_index":31,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["typeormmodule.forrootasync",{"_index":54,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["unsetrelation",{"_index":121,"title":{},"body":{"controllers/SampleController.html":{}}}],["unsetrelation(@param",{"_index":210,"title":{},"body":{"controllers/SampleController.html":{}}}],["unsetrelation(relation",{"_index":153,"title":{},"body":{"controllers/SampleController.html":{}}}],["up",{"_index":338,"title":{},"body":{"index.html":{}}}],["updateonebyid",{"_index":122,"title":{},"body":{"controllers/SampleController.html":{}}}],["updateonebyid(@param",{"_index":199,"title":{},"body":{"controllers/SampleController.html":{}}}],["updateonebyid(objectid",{"_index":156,"title":{},"body":{"controllers/SampleController.html":{}}}],["updates",{"_index":349,"title":{},"body":{"index.html":{}}}],["updatesampledto",{"_index":157,"title":{},"body":{"controllers/SampleController.html":{}}}],["use",{"_index":299,"title":{},"body":{"index.html":{},"properties.html":{}}}],["usefactory(config",{"_index":56,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["useful",{"_index":328,"title":{},"body":{"index.html":{}}}],["username",{"_index":72,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["users",{"_index":358,"title":{},"body":{"index.html":{}}}],["using",{"_index":319,"title":{},"body":{"index.html":{}}}],["validationerror",{"_index":177,"title":{},"body":{"controllers/SampleController.html":{}}}],["validationpipe",{"_index":170,"title":{},"body":{"controllers/SampleController.html":{}}}],["validator",{"_index":269,"title":{},"body":{"dependencies.html":{}}}],["validatoroptions",{"_index":179,"title":{},"body":{"controllers/SampleController.html":{}}}],["version",{"_index":377,"title":{},"body":{"properties.html":{}}}],["versions",{"_index":352,"title":{},"body":{"index.html":{}}}],["via",{"_index":308,"title":{},"body":{"index.html":{}}}],["void",{"_index":219,"title":{},"body":{"injectables/SampleCron.html":{}}}],["well",{"_index":341,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":13,"title":{},"body":{"modules/SampleAppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/SampleAppModule.html":{"url":"modules/SampleAppModule.html","title":"module - SampleAppModule","body":"\n                   \n\n\n\n\n    Modules\n    SampleAppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SampleAppModule\n\n\n\ncluster_SampleAppModule_imports\n\n\n\n\nSampleModule\n\nSampleModule\n\n\n\nSampleAppModule\n\nSampleAppModule\n\nSampleAppModule -->\n\nSampleModule->SampleAppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/sample-app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            SampleModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { ScheduleModule } from '@nestjs/schedule';\nimport { ThrottlerModule } from '@nestjs/throttler';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Sample, SampleView } from '@puq/entity';\nimport { TableNamingStrategy } from '@puq/orm';\nimport { EventEmitterModule } from '@nestjs/event-emitter';\nimport { AppEnv, DataSourceEnv } from '@puq/env';\nimport { SampleModule } from './sample/sample.module.js';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({}),\n    ScheduleModule.forRoot(),\n    ThrottlerModule.forRoot([{ ttl: 60000, limit: 10 }]),\n    EventEmitterModule.forRoot({ delimiter: '.' }),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory(config: ConfigService) {\n        const appEnv = new AppEnv({ name: 'sample', profile: 'dev' });\n        const PROFILE = config.getOrThrow(appEnv.PROFILE);\n        const NAME = config.getOrThrow(appEnv.NAME);\n        const dbEnv = new DataSourceEnv({ name: NAME, profile: PROFILE });\n\n        return {\n          type: 'postgres',\n          host: config.getOrThrow(dbEnv.DATABASE_HOST),\n          port: config.getOrThrow(dbEnv.DATABASE_PORT),\n          username: config.getOrThrow(dbEnv.DATABASE_USERNAME),\n          password: config.getOrThrow(dbEnv.DATABASE_PASSWORD),\n          database: config.getOrThrow(dbEnv.DATABASE_NAME),\n          entities: [Sample, SampleView],\n          namingStrategy: new TableNamingStrategy(),\n          synchronize: true,\n          dropSchema: true,\n          poolSize: 50,\n          extra: {\n            max: 50, // Maximum number of connections in the pool\n            min: 4, // Minimum number of connections to keep open\n            idleTimeoutMillis: 30000, // Close idle connections after 30 seconds\n          },\n        };\n      },\n    }),\n    SampleModule,\n  ],\n})\nexport class SampleAppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SampleController.html":{"url":"controllers/SampleController.html","title":"controller - SampleController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SampleController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/sample/sample.controller.ts\n        \n\n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                addRelation\n                            \n                            \n                                    \n                                count\n                            \n                            \n                                    \n                                deleteOneById\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOneById\n                            \n                            \n                                    \n                                removeRelation\n                            \n                            \n                                    \n                                saveOne\n                            \n                            \n                                    \n                                setRelation\n                            \n                            \n                                    \n                                unsetRelation\n                            \n                            \n                                    \n                                updateOneById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        addRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    addRelation(relation: SampleRelationParamDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @AddRelation()\n                \n            \n\n                    \n                        \n                            Defined in src/lib/sample/sample.controller.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relation\n                                            \n                                                        SampleRelationParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(query: QueryCountSampleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Count()\n                \n            \n\n                    \n                        \n                            Defined in src/lib/sample/sample.controller.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        QueryCountSampleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deleteOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteOneById(objectId: IDDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DeleteOneById()\n                \n            \n\n                    \n                        \n                            Defined in src/lib/sample/sample.controller.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                objectId\n                                            \n                                                        IDDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(query: QueryManySampleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @FindAll()\n                \n            \n\n                    \n                        \n                            Defined in src/lib/sample/sample.controller.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        QueryManySampleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(objectID: IDDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @FindOneById()\n                \n            \n\n                    \n                        \n                            Defined in src/lib/sample/sample.controller.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                objectID\n                                            \n                                                        IDDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        removeRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeRelation(relation: SampleRelationParamDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @RemoveRelation()\n                \n            \n\n                    \n                        \n                            Defined in src/lib/sample/sample.controller.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relation\n                                            \n                                                        SampleRelationParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        saveOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveOne(entity: CreateSampleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SaveOne()\n                \n            \n\n                    \n                        \n                            Defined in src/lib/sample/sample.controller.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        CreateSampleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        setRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    setRelation(relation: SampleRelationParamDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SetRelation()\n                \n            \n\n                    \n                        \n                            Defined in src/lib/sample/sample.controller.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relation\n                                            \n                                                        SampleRelationParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        unsetRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    unsetRelation(relation: SampleUnsetRelationParamDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UnsetRelation()\n                \n            \n\n                    \n                        \n                            Defined in src/lib/sample/sample.controller.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relation\n                                            \n                                                        SampleUnsetRelationParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOneById(objectId: IDDto, entity: UpdateSampleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UpdateOneById()\n                \n            \n\n                    \n                        \n                            Defined in src/lib/sample/sample.controller.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                objectId\n                                            \n                                                        IDDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        UpdateSampleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import '@puq/type';\nimport {\n  Controller,\n  CreateController,\n  FindAll,\n  FindOneById,\n  Count,\n  SaveOne,\n  UpdateOneById,\n  DeleteOneById,\n  AddRelation,\n  RemoveRelation,\n  SetRelation,\n  UnsetRelation,\n} from '@puq/rest';\nimport { Body, Param, Query } from '@nestjs/common';\nimport {\n  Sample,\n  QueryManySampleDto,\n  CreateSampleDto,\n  UpdateSampleDto,\n  SampleRelationParamDto,\n  SampleUnsetRelationParamDto,\n  QueryCountSampleDto,\n} from '@puq/entity';\nimport { EntityService, IDDto } from '@puq/orm';\nimport { InjectEntityService } from '@puq/provider';\nimport { debug } from '@puq/debug';\n\n// class CustomValiationPipe extends ValidationPipe {\n//   override transform(value: any, metadata: ArgumentMetadata): Promise {\n//     console.log(value, ' | ValidationError[] {\n//     return super.validate(object, validatorOptions);\n//   }\n// }\n\n@Controller()\nexport class SampleController extends CreateController({\n  entity: () => Sample,\n  isPublic: false,\n}) {\n  constructor(\n    @InjectEntityService(Sample)\n    protected readonly service: EntityService,\n  ) {\n    super(service);\n  }\n\n  @FindAll()\n  findAll(@Query() query: QueryManySampleDto) {\n    debug(query);\n    return this.service.find(query);\n  }\n\n  @FindOneById()\n  findOneById(@Param() objectID: IDDto) {\n    debug(objectID);\n    return this.service.findOneByIdOrThrow(objectID.id);\n  }\n\n  @Count()\n  count(@Query() query: QueryCountSampleDto) {\n    debug(query);\n    return this.service.count(query);\n  }\n\n  @SaveOne()\n  saveOne(@Body() entity: CreateSampleDto) {\n    debug(entity);\n    return this.service.save(entity);\n  }\n\n  @UpdateOneById()\n  updateOneById(@Param() objectId: IDDto, @Body() entity: UpdateSampleDto) {\n    debug({\n      objectId,\n      entity,\n    });\n    return this.service.update(objectId.id, entity);\n  }\n\n  @DeleteOneById()\n  deleteOneById(@Param() objectId: IDDto) {\n    debug(objectId);\n    return this.service.softDelete(objectId.id);\n  }\n\n  @AddRelation()\n  addRelation(@Param() relation: SampleRelationParamDto) {\n    debug(relation);\n    return this.service.addRelation(relation);\n  }\n\n  @RemoveRelation()\n  removeRelation(@Param() relation: SampleRelationParamDto) {\n    debug(relation);\n    return this.service.removeRelation(relation);\n  }\n\n  @SetRelation()\n  setRelation(@Param() relation: SampleRelationParamDto) {\n    debug(relation);\n    return this.service.setRelation(relation);\n  }\n\n  @UnsetRelation()\n  unsetRelation(@Param() relation: SampleUnsetRelationParamDto) {\n    debug(relation);\n    return this.service.unsetRelation(relation);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SampleCron.html":{"url":"injectables/SampleCron.html","title":"injectable - SampleCron","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SampleCron\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/sample/sample.cron.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                alive\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        alive\n                        \n                    \n                \n            \n            \n                \n                        \n                    alive()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cron(CronExpression.EVERY_SECOND)\n                \n            \n\n                    \n                        \n                            Defined in src/lib/sample/sample.cron.ts:7\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { Cron, CronExpression } from '@nestjs/schedule';\n\n@Injectable()\nexport class SampleCron {\n  @Cron(CronExpression.EVERY_SECOND)\n  alive() {\n    Logger.debug('CronExpression.EVERY_SECOND');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SampleModule.html":{"url":"modules/SampleModule.html","title":"module - SampleModule","body":"\n                   \n\n\n\n\n    Modules\n    SampleModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/sample/sample.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            SampleController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SampleController } from './sample.controller.js';\nimport { Sample, SampleView } from '@puq/entity';\nimport { EntityModule } from '@puq/provider';\n\n@Module({\n  imports: [\n    EntityModule.forFeature({\n      entities: [Sample, SampleView],\n    }),\n  ],\n  controllers: [SampleController],\n})\nexport class SampleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/lib/program.ts\n            \n            function\n            boot\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/sample/sample.controller.ts\n            \n            controller\n            SampleController\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/lib/sample/sample.cron.ts\n            \n            injectable\n            SampleCron\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/run.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/run.ts\n            \n            type alias\n            BootstrapOptions\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^11.0.11\n        \n            @nestjs/config : ^4.0.1\n        \n            @nestjs/core : ^11.0.11\n        \n            @nestjs/event-emitter : ^3.0.1\n        \n            @nestjs/platform-express : ^11.0.11\n        \n            @nestjs/schedule : ^5.0.1\n        \n            @nestjs/swagger : ^11.0.6\n        \n            @nestjs/throttler : ^6.4.0\n        \n            @nestjs/typeorm : ^11.0.0\n        \n            @puq/boot : ^0.5.50\n        \n            @puq/debug : ^0.5.50\n        \n            @puq/entity : ^0.5.50\n        \n            @puq/env : ^0.5.50\n        \n            @puq/is : ^0.5.50\n        \n            @puq/middleware : ^0.5.50\n        \n            @puq/model : ^0.5.50\n        \n            @puq/orm : ^0.5.50\n        \n            @puq/property : ^0.5.50\n        \n            @puq/provider : ^0.5.50\n        \n            @puq/query : ^0.5.50\n        \n            @puq/rest : ^0.5.50\n        \n            @puq/type : ^0.5.50\n        \n            @swc/helpers : ^0.5.15\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            commander : ^13.1.0\n        \n            pg : ^8.14.0\n        \n            typeorm : ^0.3.21\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            boot   (src/.../program.ts)\n                        \n                        \n                            bootstrap   (src/.../run.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/program.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        boot\n                        \n                    \n                \n            \n            \n                \nboot()\n                \n            \n\n\n\n\n        \n    \n    src/run.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap(options: BootstrapOptions)\n                \n            \n\n\n\n\n            \n                \n                        Bootstrap the sample service\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            BootstrapOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n@puq/sample\nSummary\nThis package provides a fully portable NestJS service that can be easily installed and run as a standalone application. Designed for flexibility and ease of use, it includes its own CLI tool to manage execution seamlessly.\nFeatures\n\n📦 Installable via npm\n🚀 Standalone execution with CLI\n⚡ Lightweight and portable\n🛠 Built with NestJS for scalability\n\nInstall\nExample :  pnpm add @puq/sampleFunding\nThank you for using @puq/sample It's an open-source project, and maintaining it takes time and effort. If you find this library useful, please consider supporting its ongoing development. Your contributions help ensure that the project stays up-to-date, secure, and well-maintained.\nInstant Funding\nYour funding will go toward\n\nBug fixes and updates to ensure compatibility with the latest versions of dependencies.\nNew features that will make the library even more powerful.\nDocumentation improvements to help users get the most out of [Your Library Name].\nGeneral maintenance to keep the library running smoothly and securely.\n\nContact to the developer: [robert.brightline@gmail.com]\nSupport the developer\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        SampleAppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SampleModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SampleAppModule\n\n\n\ncluster_SampleAppModule_imports\n\n\n\n\nSampleModule\n\nSampleModule\n\n\n\nSampleAppModule\n\nSampleAppModule\n\nSampleAppModule -->\n\nSampleModule->SampleAppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.5.50\n        \n            Description : This package provides a fully portable NestJS service that can be easily installed and run as a standalone application. Designed for flexibility and ease of use, it includes its own CLI tool to manage execution seamlessly.\n        \n            Keywords : puq, sample\n        \n            Homepage : https://rbrightline.github.io/puq/sample\n        \n            Bugs : https://rbrightline.github.io\n        \n            License : MIT\n        \n            Repository : https://github.com/rbrightline/puq/tree/main\n        \n            Author : Robert Brightline\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BootstrapOptions   (src/.../run.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/run.ts\n    \n    \n        \n            \n                \n                    \n                    BootstrapOptions\n                \n            \n            \n                \n                    App options\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
