var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/SampleAppModule.html",[0,0.744,1,0.959]],["body/modules/SampleAppModule.html",[0,1.061,1,1.614,2,0.66,3,0.66,4,1.41,5,1.41,6,1.41,7,1.41,8,1.41,9,1.41,10,1.41,11,1.251,12,0.098,13,1.968,14,1.41,15,1.09,16,1.09,17,0.851,18,0.851,19,1.896,20,1.896,21,1.968,22,2.164,23,0.851,24,1.896,25,1.41,26,1.896,27,1.41,28,1.896,29,1.41,30,1.896,31,1.41,32,1.41,33,1.896,34,1.41,35,0.851,36,0.921,37,2.647,38,0.851,39,1.896,40,1.896,41,1.896,42,1.896,43,1.896,44,1.896,45,1.896,46,1.896,47,1.896,48,1.896,49,1.896,50,1.41,51,1.896,52,2.647,53,1.896,54,1.09,55,0.364,56,0.062,57,0.062]],["title/classes/SampleController.html",[55,0.411,58,0.959]],["body/classes/SampleController.html",[12,0.098,16,0.448,17,0.35,18,0.35,22,1.169,23,0.35,35,0.35,36,0.6,38,0.35,54,0.448,55,0.15,56,0.031,57,0.031,58,0.594,59,0.78,60,0.58,61,0.448,62,0.761,63,2.034,64,2.034,65,1.726,66,1.324,67,1.324,68,1.324,69,1.324,70,1.324,71,0.985,72,1.324,73,1.324,74,1.324,75,1.324,76,1.324,77,1.324,78,1.324,79,1.324,80,1.324,81,0.78,82,2.034,83,3.351,84,1.324,85,3.296,86,2.451,87,2.492,88,3.296,89,0.761,90,0.78,91,0.78,92,0.78,93,3.296,94,1.324,95,0.78,96,2.998,97,0.78,98,3.593,99,3.234,100,0.78,101,2.034,102,0.78,103,2.998,104,0.78,105,3.526,106,3.488,107,2.034,108,0.78,109,0.78,110,0.78,111,0.78,112,2.034,113,0.78,114,0.78,115,2.034,116,0.78,117,0.78,118,2.034,119,0.78,120,0.78,121,0.78,122,0.78,123,0.78,124,0.78,125,2.034,126,0.78,127,0.78,128,0.78,129,0.78,130,2.034,131,0.78,132,0.78,133,2.034,134,0.78,135,0.78,136,0.58,137,1.324,138,0.78,139,0.78,140,0.78,141,0.78,142,3.234,143,0.78,144,0.78,145,0.78,146,0.78,147,0.78,148,0.78,149,0.78,150,0.78,151,0.78,152,0.78,153,0.78,154,0.78,155,0.78,156,0.78,157,0.78,158,0.78,159,0.78,160,0.78,161,0.78,162,0.78,163,0.78,164,0.78,165,0.78,166,0.78,167,0.78,168,0.78,169,0.78,170,0.78,171,0.78,172,0.78,173,0.78,174,0.78,175,0.78,176,0.78,177,0.78,178,0.78,179,0.78]],["title/modules/SampleModule.html",[0,0.744,11,0.744]],["body/modules/SampleModule.html",[0,1.127,2,0.894,11,1.127,12,0.097,16,1.476,17,1.152,18,1.152,21,1.91,22,2.141,23,1.152,34,1.91,35,1.152,36,1.127,38,1.152,50,1.91,54,1.476,55,0.494,56,0.076,57,0.076,58,1.453,180,2.568,181,2.568,182,2.568,183,2.568]],["title/coverage.html",[184,2.137]],["body/coverage.html",[12,0.09,18,1.274,55,0.546,56,0.08,57,0.08,58,1.274,60,2.111,87,2.111,184,2.111,185,2.111,186,2.839,187,2.839,188,2.111,189,2.839,190,2.111,191,3.446,192,2.839,193,2.839,194,2.111,195,2.839,196,2.839]],["title/dependencies.html",[3,0.89,197,0.811]],["body/dependencies.html",[3,0.698,12,0.099,23,0.9,25,1.491,27,1.491,29,1.491,31,1.491,32,1.491,35,0.9,38,0.9,55,0.529,56,0.064,57,0.064,136,1.491,198,3.142,199,2.006,200,2.006,201,2.006,202,2.006,203,2.006,204,2.006,205,2.006,206,2.006,207,2.006,208,2.006,209,2.006,210,2.006,211,3.005,212,2.006,213,2.006,214,2.006,215,2.006,216,2.006,217,2.006,218,2.006,219,2.006,220,2.006,221,2.006,222,2.006,223,2.006,224,2.006,225,2.006,226,2.006,227,2.006,228,2.006,229,2.006,230,2.006,231,2.006,232,2.006,233,2.006]],["title/miscellaneous/functions.html",[234,1.344,235,1.903]],["body/miscellaneous/functions.html",[12,0.084,56,0.084,57,0.084,61,1.766,188,2.285,190,2.854,234,2.285,235,2.285,236,3.073]],["title/index.html",[61,1.039,237,1.808,238,1.808]],["body/index.html",[3,0.64,12,0.085,15,1.057,17,0.825,36,0.64,56,0.06,57,0.06,71,1.367,86,1.367,89,1.057,185,1.367,194,1.367,197,0.825,239,2.59,240,1.838,241,1.367,242,1.367,243,2.23,244,1.367,245,1.367,246,1.367,247,1.926,248,1.367,249,1.367,250,1.367,251,1.367,252,1.367,253,1.367,254,1.926,255,1.367,256,1.367,257,1.926,258,1.367,259,2.59,260,1.838,261,1.838,262,1.838,263,1.838,264,1.838,265,1.838,266,1.838,267,1.838,268,1.838,269,1.838,270,1.838,271,1.838,272,1.838,273,1.838,274,1.838,275,1.838,276,2.59,277,1.838,278,1.838,279,1.838,280,1.838,281,3.256,282,1.838,283,1.838,284,1.838,285,1.838,286,1.838,287,1.838,288,1.838,289,2.59,290,2.59,291,1.838,292,1.838,293,1.838,294,1.838,295,1.838,296,1.838,297,1.838,298,2.59,299,1.838,300,1.838,301,1.838,302,1.838,303,1.838,304,1.838,305,1.838,306,1.838,307,1.838,308,1.838,309,1.838,310,1.838,311,1.838,312,1.838,313,1.838,314,1.838,315,1.838,316,1.838,317,1.838,318,1.838,319,1.838,320,2.59,321,1.838,322,1.367]],["title/modules.html",[2,1]],["body/modules.html",[1,1.361,2,1.056,11,1.056,12,0.084,56,0.084,57,0.084,322,2.256,323,3.034,324,3.034,325,3.586,326,3.034,327,3.034]],["title/overview.html",[328,2.137]],["body/overview.html",[0,0.96,1,1.714,2,0.96,3,0.96,4,2.051,5,2.051,6,2.051,7,2.051,8,2.051,9,2.051,10,2.051,11,1.275,12,0.086,13,2.518,14,2.051,15,1.585,55,0.53,56,0.079,57,0.079,328,2.051,329,2.758,330,2.758]],["title/properties.html",[62,1.471,197,0.811]],["body/properties.html",[12,0.095,36,1.094,56,0.073,57,0.073,62,1.409,89,1.409,197,1.1,211,1.823,241,1.823,242,1.823,243,2.338,244,1.823,245,1.823,246,1.823,247,1.823,248,1.823,249,1.823,250,1.823,251,1.823,252,1.823,253,1.823,254,1.823,255,1.823,256,1.823,257,1.823,258,1.823,331,2.452,332,2.452,333,2.452,334,2.452,335,2.452,336,2.452,337,2.452,338,2.452,339,2.452,340,2.452,341,2.452,342,2.452,343,2.452,344,2.452,345,2.452]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/SampleAppModule.html":{},"classes/SampleController.html":{},"modules/SampleModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":191,"title":{},"body":{"coverage.html":{}}}],["0.14.1",{"_index":227,"title":{},"body":{"dependencies.html":{}}}],["0.3.21",{"_index":233,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":225,"title":{},"body":{"dependencies.html":{}}}],["0.5.15",{"_index":223,"title":{},"body":{"dependencies.html":{}}}],["0.6.2",{"_index":211,"title":{},"body":{"dependencies.html":{},"properties.html":{}}}],["0/1",{"_index":192,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":193,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":330,"title":{},"body":{"overview.html":{}}}],["1000",{"_index":44,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["11.0.0",{"_index":209,"title":{},"body":{"dependencies.html":{}}}],["11.0.11",{"_index":198,"title":{},"body":{"dependencies.html":{}}}],["11.0.6",{"_index":206,"title":{},"body":{"dependencies.html":{}}}],["13.1.0",{"_index":229,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":329,"title":{},"body":{"overview.html":{}}}],["3.0.1",{"_index":201,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":199,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":204,"title":{},"body":{"dependencies.html":{}}}],["6.4.0",{"_index":207,"title":{},"body":{"dependencies.html":{}}}],["60_000",{"_index":46,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["8.14.0",{"_index":231,"title":{},"body":{"dependencies.html":{}}}],["__metadata__",{"_index":65,"title":{},"body":{"classes/SampleController.html":{}}}],["add",{"_index":270,"title":{},"body":{"index.html":{}}}],["addrelation",{"_index":67,"title":{},"body":{"classes/SampleController.html":{}}}],["addrelation(@param",{"_index":163,"title":{},"body":{"classes/SampleController.html":{}}}],["addrelation(param",{"_index":95,"title":{},"body":{"classes/SampleController.html":{}}}],["app.module.ts",{"_index":20,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["application",{"_index":248,"title":{},"body":{"index.html":{},"properties.html":{}}}],["author",{"_index":343,"title":{},"body":{"properties.html":{}}}],["available",{"_index":327,"title":{},"body":{"modules.html":{}}}],["body",{"_index":106,"title":{},"body":{"classes/SampleController.html":{}}}],["boot",{"_index":190,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/SampleAppModule.html":{},"overview.html":{}}}],["brightline",{"_index":345,"title":{},"body":{"properties.html":{}}}],["browse",{"_index":325,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":323,"title":{},"body":{"modules.html":{}}}],["bug",{"_index":301,"title":{},"body":{"index.html":{}}}],["bugs",{"_index":337,"title":{},"body":{"properties.html":{}}}],["built",{"_index":264,"title":{},"body":{"index.html":{}}}],["class",{"_index":55,"title":{"classes/SampleController.html":{}},"body":{"modules/SampleAppModule.html":{},"classes/SampleController.html":{},"modules/SampleModule.html":{},"coverage.html":{},"dependencies.html":{},"overview.html":{}}}],["classes",{"_index":59,"title":{},"body":{"classes/SampleController.html":{}}}],["cli",{"_index":254,"title":{},"body":{"index.html":{},"properties.html":{}}}],["cluster_sampleappmodule",{"_index":9,"title":{},"body":{"modules/SampleAppModule.html":{},"overview.html":{}}}],["cluster_sampleappmodule_imports",{"_index":10,"title":{},"body":{"modules/SampleAppModule.html":{},"overview.html":{}}}],["commander",{"_index":228,"title":{},"body":{"dependencies.html":{}}}],["compatibility",{"_index":304,"title":{},"body":{"index.html":{}}}],["configmodule",{"_index":24,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["configmodule.forroot",{"_index":39,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["consider",{"_index":284,"title":{},"body":{"index.html":{}}}],["constructor",{"_index":80,"title":{},"body":{"classes/SampleController.html":{}}}],["constructor(service",{"_index":81,"title":{},"body":{"classes/SampleController.html":{}}}],["contact",{"_index":319,"title":{},"body":{"index.html":{}}}],["contributions",{"_index":288,"title":{},"body":{"index.html":{}}}],["controllers",{"_index":183,"title":{},"body":{"modules/SampleModule.html":{}}}],["count",{"_index":68,"title":{},"body":{"classes/SampleController.html":{}}}],["count(@query",{"_index":148,"title":{},"body":{"classes/SampleController.html":{}}}],["count(query",{"_index":100,"title":{},"body":{"classes/SampleController.html":{}}}],["coverage",{"_index":184,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createsampledto",{"_index":125,"title":{},"body":{"classes/SampleController.html":{}}}],["datasourcemodule",{"_index":34,"title":{},"body":{"modules/SampleAppModule.html":{},"modules/SampleModule.html":{}}}],["datasourcemodule.forfeature",{"_index":182,"title":{},"body":{"modules/SampleModule.html":{}}}],["datasourcemodule.forroot",{"_index":49,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["date",{"_index":293,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/SampleAppModule.html":{},"overview.html":{}}}],["decorators",{"_index":93,"title":{},"body":{"classes/SampleController.html":{}}}],["decrement",{"_index":69,"title":{},"body":{"classes/SampleController.html":{}}}],["decrement(@param",{"_index":178,"title":{},"body":{"classes/SampleController.html":{}}}],["decrement(param",{"_index":104,"title":{},"body":{"classes/SampleController.html":{}}}],["decrementsampledto",{"_index":107,"title":{},"body":{"classes/SampleController.html":{}}}],["default",{"_index":91,"title":{},"body":{"classes/SampleController.html":{}}}],["defined",{"_index":83,"title":{},"body":{"classes/SampleController.html":{}}}],["deleteonebyid",{"_index":70,"title":{},"body":{"classes/SampleController.html":{}}}],["deleteonebyid(@param",{"_index":157,"title":{},"body":{"classes/SampleController.html":{}}}],["deleteonebyid(param",{"_index":109,"title":{},"body":{"classes/SampleController.html":{}}}],["delimiter",{"_index":48,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/SampleAppModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["description",{"_index":332,"title":{},"body":{"properties.html":{}}}],["designed",{"_index":249,"title":{},"body":{"index.html":{},"properties.html":{}}}],["developer",{"_index":320,"title":{},"body":{"index.html":{}}}],["development",{"_index":287,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":185,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dropschema",{"_index":53,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["ease",{"_index":251,"title":{},"body":{"index.html":{},"properties.html":{}}}],["easily",{"_index":244,"title":{},"body":{"index.html":{},"properties.html":{}}}],["effort",{"_index":280,"title":{},"body":{"index.html":{}}}],["emitter",{"_index":32,"title":{},"body":{"modules/SampleAppModule.html":{},"dependencies.html":{}}}],["ensure",{"_index":290,"title":{},"body":{"index.html":{}}}],["entities",{"_index":50,"title":{},"body":{"modules/SampleAppModule.html":{},"modules/SampleModule.html":{}}}],["entity",{"_index":94,"title":{},"body":{"classes/SampleController.html":{}}}],["entityservice",{"_index":82,"title":{},"body":{"classes/SampleController.html":{}}}],["even",{"_index":308,"title":{},"body":{"index.html":{}}}],["eventemittermodule",{"_index":30,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["eventemittermodule.forroot",{"_index":47,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["example",{"_index":268,"title":{},"body":{"index.html":{}}}],["execution",{"_index":257,"title":{},"body":{"index.html":{},"properties.html":{}}}],["export",{"_index":54,"title":{},"body":{"modules/SampleAppModule.html":{},"classes/SampleController.html":{},"modules/SampleModule.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/SampleAppModule.html":{},"overview.html":{}}}],["express",{"_index":203,"title":{},"body":{"dependencies.html":{}}}],["features",{"_index":259,"title":{},"body":{"index.html":{}}}],["file",{"_index":18,"title":{},"body":{"modules/SampleAppModule.html":{},"classes/SampleController.html":{},"modules/SampleModule.html":{},"coverage.html":{}}}],["find",{"_index":71,"title":{},"body":{"classes/SampleController.html":{},"index.html":{}}}],["find(@query",{"_index":141,"title":{},"body":{"classes/SampleController.html":{}}}],["find(query",{"_index":111,"title":{},"body":{"classes/SampleController.html":{}}}],["findonebyid",{"_index":72,"title":{},"body":{"classes/SampleController.html":{}}}],["findonebyid(@param",{"_index":145,"title":{},"body":{"classes/SampleController.html":{}}}],["findonebyid(param",{"_index":114,"title":{},"body":{"classes/SampleController.html":{}}}],["fixes",{"_index":302,"title":{},"body":{"index.html":{}}}],["flexibility",{"_index":250,"title":{},"body":{"index.html":{},"properties.html":{}}}],["fully",{"_index":242,"title":{},"body":{"index.html":{},"properties.html":{}}}],["function",{"_index":189,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":235,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funding",{"_index":298,"title":{},"body":{"index.html":{}}}],["general",{"_index":313,"title":{},"body":{"index.html":{}}}],["getting",{"_index":237,"title":{"index.html":{}},"body":{}}],["go",{"_index":299,"title":{},"body":{"index.html":{}}}],["graph",{"_index":326,"title":{},"body":{"modules.html":{}}}],["help",{"_index":289,"title":{},"body":{"index.html":{}}}],["homepage",{"_index":335,"title":{},"body":{"properties.html":{}}}],["https://github.com/rbrightline/puq/tree/main",{"_index":342,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io",{"_index":338,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io/puq/sample",{"_index":336,"title":{},"body":{"properties.html":{}}}],["iddto",{"_index":105,"title":{},"body":{"classes/SampleController.html":{}}}],["identifier",{"_index":186,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":22,"title":{},"body":{"modules/SampleAppModule.html":{},"classes/SampleController.html":{},"modules/SampleModule.html":{}}}],["imports",{"_index":21,"title":{},"body":{"modules/SampleAppModule.html":{},"modules/SampleModule.html":{}}}],["improvements",{"_index":311,"title":{},"body":{"index.html":{}}}],["includes",{"_index":253,"title":{},"body":{"index.html":{},"properties.html":{}}}],["increment",{"_index":73,"title":{},"body":{"classes/SampleController.html":{}}}],["increment(@param",{"_index":175,"title":{},"body":{"classes/SampleController.html":{}}}],["increment(param",{"_index":117,"title":{},"body":{"classes/SampleController.html":{}}}],["incrementsampledto",{"_index":118,"title":{},"body":{"classes/SampleController.html":{}}}],["index",{"_index":61,"title":{"index.html":{}},"body":{"classes/SampleController.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":16,"title":{},"body":{"modules/SampleAppModule.html":{},"classes/SampleController.html":{},"modules/SampleModule.html":{}}}],["injectentityservice",{"_index":137,"title":{},"body":{"classes/SampleController.html":{}}}],["install",{"_index":267,"title":{},"body":{"index.html":{}}}],["installable",{"_index":260,"title":{},"body":{"index.html":{}}}],["installed",{"_index":245,"title":{},"body":{"index.html":{},"properties.html":{}}}],["instant",{"_index":297,"title":{},"body":{"index.html":{}}}],["it's",{"_index":274,"title":{},"body":{"index.html":{}}}],["keep",{"_index":315,"title":{},"body":{"index.html":{}}}],["keywords",{"_index":333,"title":{},"body":{"properties.html":{}}}],["latest",{"_index":305,"title":{},"body":{"index.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/SampleAppModule.html":{},"overview.html":{}}}],["library",{"_index":281,"title":{},"body":{"index.html":{}}}],["license",{"_index":339,"title":{},"body":{"properties.html":{}}}],["lightweight",{"_index":263,"title":{},"body":{"index.html":{}}}],["limit",{"_index":43,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["maintained",{"_index":296,"title":{},"body":{"index.html":{}}}],["maintaining",{"_index":277,"title":{},"body":{"index.html":{}}}],["maintenance",{"_index":314,"title":{},"body":{"index.html":{}}}],["make",{"_index":307,"title":{},"body":{"index.html":{}}}],["manage",{"_index":256,"title":{},"body":{"index.html":{},"properties.html":{}}}],["matching",{"_index":57,"title":{},"body":{"modules/SampleAppModule.html":{},"classes/SampleController.html":{},"modules/SampleModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["methods",{"_index":66,"title":{},"body":{"classes/SampleController.html":{}}}],["miscellaneous",{"_index":234,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":340,"title":{},"body":{"properties.html":{}}}],["module",{"_index":0,"title":{"modules/SampleAppModule.html":{},"modules/SampleModule.html":{}},"body":{"modules/SampleAppModule.html":{},"modules/SampleModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/SampleAppModule.html":{},"modules/SampleModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":309,"title":{},"body":{"index.html":{}}}],["name",{"_index":86,"title":{},"body":{"classes/SampleController.html":{},"index.html":{}}}],["nestjs",{"_index":265,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":23,"title":{},"body":{"modules/SampleAppModule.html":{},"classes/SampleController.html":{},"modules/SampleModule.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":25,"title":{},"body":{"modules/SampleAppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":200,"title":{},"body":{"dependencies.html":{}}}],["nestjs/event",{"_index":31,"title":{},"body":{"modules/SampleAppModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":202,"title":{},"body":{"dependencies.html":{}}}],["nestjs/schedule",{"_index":27,"title":{},"body":{"modules/SampleAppModule.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":205,"title":{},"body":{"dependencies.html":{}}}],["nestjs/throttler",{"_index":29,"title":{},"body":{"modules/SampleAppModule.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":208,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":194,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["npm",{"_index":262,"title":{},"body":{"index.html":{}}}],["ongoing",{"_index":286,"title":{},"body":{"index.html":{}}}],["open",{"_index":275,"title":{},"body":{"index.html":{}}}],["optional",{"_index":88,"title":{},"body":{"classes/SampleController.html":{}}}],["out",{"_index":15,"title":{},"body":{"modules/SampleAppModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":328,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":197,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{},"properties.html":{}}}],["param",{"_index":98,"title":{},"body":{"classes/SampleController.html":{}}}],["parameters",{"_index":85,"title":{},"body":{"classes/SampleController.html":{}}}],["pg",{"_index":230,"title":{},"body":{"dependencies.html":{}}}],["please",{"_index":283,"title":{},"body":{"index.html":{}}}],["pnpm",{"_index":269,"title":{},"body":{"index.html":{}}}],["portable",{"_index":243,"title":{},"body":{"index.html":{},"properties.html":{}}}],["powerful",{"_index":310,"title":{},"body":{"index.html":{}}}],["project",{"_index":276,"title":{},"body":{"index.html":{}}}],["properties",{"_index":62,"title":{"properties.html":{}},"body":{"classes/SampleController.html":{},"properties.html":{}}}],["protected",{"_index":63,"title":{},"body":{"classes/SampleController.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/SampleAppModule.html":{},"overview.html":{}}}],["provides",{"_index":241,"title":{},"body":{"index.html":{},"properties.html":{}}}],["puq",{"_index":334,"title":{},"body":{"properties.html":{}}}],["puq/boot",{"_index":210,"title":{},"body":{"dependencies.html":{}}}],["puq/debug",{"_index":212,"title":{},"body":{"dependencies.html":{}}}],["puq/entity",{"_index":38,"title":{},"body":{"modules/SampleAppModule.html":{},"classes/SampleController.html":{},"modules/SampleModule.html":{},"dependencies.html":{}}}],["puq/env",{"_index":213,"title":{},"body":{"dependencies.html":{}}}],["puq/is",{"_index":214,"title":{},"body":{"dependencies.html":{}}}],["puq/meta",{"_index":215,"title":{},"body":{"dependencies.html":{}}}],["puq/middleware",{"_index":216,"title":{},"body":{"dependencies.html":{}}}],["puq/model",{"_index":217,"title":{},"body":{"dependencies.html":{}}}],["puq/orm",{"_index":35,"title":{},"body":{"modules/SampleAppModule.html":{},"classes/SampleController.html":{},"modules/SampleModule.html":{},"dependencies.html":{}}}],["puq/property",{"_index":218,"title":{},"body":{"dependencies.html":{}}}],["puq/provider",{"_index":219,"title":{},"body":{"dependencies.html":{}}}],["puq/query",{"_index":220,"title":{},"body":{"dependencies.html":{}}}],["puq/rest",{"_index":136,"title":{},"body":{"classes/SampleController.html":{},"dependencies.html":{}}}],["puq/sample",{"_index":239,"title":{},"body":{"index.html":{}}}],["puq/samplefunding",{"_index":271,"title":{},"body":{"index.html":{}}}],["puq/type",{"_index":221,"title":{},"body":{"dependencies.html":{}}}],["query",{"_index":103,"title":{},"body":{"classes/SampleController.html":{}}}],["querycountsampledto",{"_index":101,"title":{},"body":{"classes/SampleController.html":{}}}],["querymanysampledto",{"_index":112,"title":{},"body":{"classes/SampleController.html":{}}}],["queryonesampledto",{"_index":115,"title":{},"body":{"classes/SampleController.html":{}}}],["readonly",{"_index":64,"title":{},"body":{"classes/SampleController.html":{}}}],["removerelation",{"_index":74,"title":{},"body":{"classes/SampleController.html":{}}}],["removerelation(@param",{"_index":166,"title":{},"body":{"classes/SampleController.html":{}}}],["removerelation(param",{"_index":120,"title":{},"body":{"classes/SampleController.html":{}}}],["repository",{"_index":341,"title":{},"body":{"properties.html":{}}}],["reset",{"_index":14,"title":{},"body":{"modules/SampleAppModule.html":{},"overview.html":{}}}],["rest",{"_index":135,"title":{},"body":{"classes/SampleController.html":{}}}],["rest.addrelation",{"_index":162,"title":{},"body":{"classes/SampleController.html":{}}}],["rest.controller",{"_index":138,"title":{},"body":{"classes/SampleController.html":{}}}],["rest.count",{"_index":147,"title":{},"body":{"classes/SampleController.html":{}}}],["rest.decrement",{"_index":177,"title":{},"body":{"classes/SampleController.html":{}}}],["rest.deleteonebyid",{"_index":156,"title":{},"body":{"classes/SampleController.html":{}}}],["rest.find",{"_index":140,"title":{},"body":{"classes/SampleController.html":{}}}],["rest.findonebyid",{"_index":144,"title":{},"body":{"classes/SampleController.html":{}}}],["rest.increment",{"_index":174,"title":{},"body":{"classes/SampleController.html":{}}}],["rest.removerelation",{"_index":165,"title":{},"body":{"classes/SampleController.html":{}}}],["rest.restoreonebyid",{"_index":159,"title":{},"body":{"classes/SampleController.html":{}}}],["rest.saveone",{"_index":150,"title":{},"body":{"classes/SampleController.html":{}}}],["rest.setrelation",{"_index":168,"title":{},"body":{"classes/SampleController.html":{}}}],["rest.setresourcemetadata",{"_index":139,"title":{},"body":{"classes/SampleController.html":{}}}],["rest.unsetrelation",{"_index":171,"title":{},"body":{"classes/SampleController.html":{}}}],["rest.updateonebyid",{"_index":153,"title":{},"body":{"classes/SampleController.html":{}}}],["restore",{"_index":75,"title":{},"body":{"classes/SampleController.html":{}}}],["restore(@param",{"_index":160,"title":{},"body":{"classes/SampleController.html":{}}}],["restore(param",{"_index":122,"title":{},"body":{"classes/SampleController.html":{}}}],["results",{"_index":56,"title":{},"body":{"modules/SampleAppModule.html":{},"classes/SampleController.html":{},"modules/SampleModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["return",{"_index":142,"title":{},"body":{"classes/SampleController.html":{}}}],["returns",{"_index":99,"title":{},"body":{"classes/SampleController.html":{}}}],["robert",{"_index":344,"title":{},"body":{"properties.html":{}}}],["robert.brightline@gmail.com",{"_index":321,"title":{},"body":{"index.html":{}}}],["run",{"_index":246,"title":{},"body":{"index.html":{},"properties.html":{}}}],["running",{"_index":316,"title":{},"body":{"index.html":{}}}],["sample",{"_index":36,"title":{},"body":{"modules/SampleAppModule.html":{},"classes/SampleController.html":{},"modules/SampleModule.html":{},"index.html":{},"properties.html":{}}}],["sample.controller.js",{"_index":181,"title":{},"body":{"modules/SampleModule.html":{}}}],["sample/sample.module.js",{"_index":33,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["sampleappmodule",{"_index":1,"title":{"modules/SampleAppModule.html":{}},"body":{"modules/SampleAppModule.html":{},"modules.html":{},"overview.html":{}}}],["samplecontroller",{"_index":58,"title":{"classes/SampleController.html":{}},"body":{"classes/SampleController.html":{},"modules/SampleModule.html":{},"coverage.html":{}}}],["samplemodule",{"_index":11,"title":{"modules/SampleModule.html":{}},"body":{"modules/SampleAppModule.html":{},"modules/SampleModule.html":{},"modules.html":{},"overview.html":{}}}],["samplerelationparamdto",{"_index":96,"title":{},"body":{"classes/SampleController.html":{}}}],["sampleunsetrelationparamdto",{"_index":130,"title":{},"body":{"classes/SampleController.html":{}}}],["sampleview",{"_index":37,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["saveone",{"_index":76,"title":{},"body":{"classes/SampleController.html":{}}}],["saveone(@body",{"_index":151,"title":{},"body":{"classes/SampleController.html":{}}}],["saveone(body",{"_index":124,"title":{},"body":{"classes/SampleController.html":{}}}],["scalability",{"_index":266,"title":{},"body":{"index.html":{}}}],["schedulemodule",{"_index":26,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["schedulemodule.forroot",{"_index":40,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["seamlessly",{"_index":258,"title":{},"body":{"index.html":{},"properties.html":{}}}],["secure",{"_index":294,"title":{},"body":{"index.html":{}}}],["securely",{"_index":318,"title":{},"body":{"index.html":{}}}],["service",{"_index":89,"title":{},"body":{"classes/SampleController.html":{},"index.html":{},"properties.html":{}}}],["setrelation",{"_index":77,"title":{},"body":{"classes/SampleController.html":{}}}],["setrelation(@param",{"_index":169,"title":{},"body":{"classes/SampleController.html":{}}}],["setrelation(param",{"_index":127,"title":{},"body":{"classes/SampleController.html":{}}}],["smoothly",{"_index":317,"title":{},"body":{"index.html":{}}}],["source",{"_index":17,"title":{},"body":{"modules/SampleAppModule.html":{},"classes/SampleController.html":{},"modules/SampleModule.html":{},"index.html":{}}}],["src/.../program.ts",{"_index":236,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/lib/program.ts",{"_index":188,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/sample",{"_index":19,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["src/lib/sample/sample.controller.ts",{"_index":60,"title":{},"body":{"classes/SampleController.html":{},"coverage.html":{}}}],["src/lib/sample/sample.controller.ts:20",{"_index":84,"title":{},"body":{"classes/SampleController.html":{}}}],["src/lib/sample/sample.controller.ts:27",{"_index":113,"title":{},"body":{"classes/SampleController.html":{}}}],["src/lib/sample/sample.controller.ts:32",{"_index":116,"title":{},"body":{"classes/SampleController.html":{}}}],["src/lib/sample/sample.controller.ts:37",{"_index":102,"title":{},"body":{"classes/SampleController.html":{}}}],["src/lib/sample/sample.controller.ts:42",{"_index":126,"title":{},"body":{"classes/SampleController.html":{}}}],["src/lib/sample/sample.controller.ts:47",{"_index":134,"title":{},"body":{"classes/SampleController.html":{}}}],["src/lib/sample/sample.controller.ts:52",{"_index":110,"title":{},"body":{"classes/SampleController.html":{}}}],["src/lib/sample/sample.controller.ts:57",{"_index":123,"title":{},"body":{"classes/SampleController.html":{}}}],["src/lib/sample/sample.controller.ts:62",{"_index":97,"title":{},"body":{"classes/SampleController.html":{}}}],["src/lib/sample/sample.controller.ts:67",{"_index":121,"title":{},"body":{"classes/SampleController.html":{}}}],["src/lib/sample/sample.controller.ts:72",{"_index":128,"title":{},"body":{"classes/SampleController.html":{}}}],["src/lib/sample/sample.controller.ts:77",{"_index":131,"title":{},"body":{"classes/SampleController.html":{}}}],["src/lib/sample/sample.controller.ts:82",{"_index":119,"title":{},"body":{"classes/SampleController.html":{}}}],["src/lib/sample/sample.controller.ts:87",{"_index":108,"title":{},"body":{"classes/SampleController.html":{}}}],["src/lib/sample/sample.module.ts",{"_index":180,"title":{},"body":{"modules/SampleModule.html":{}}}],["standalone",{"_index":247,"title":{},"body":{"index.html":{},"properties.html":{}}}],["started",{"_index":238,"title":{"index.html":{}},"body":{}}],["statements",{"_index":187,"title":{},"body":{"coverage.html":{}}}],["stays",{"_index":291,"title":{},"body":{"index.html":{}}}],["string",{"_index":90,"title":{},"body":{"classes/SampleController.html":{}}}],["summary",{"_index":240,"title":{},"body":{"index.html":{}}}],["support",{"_index":322,"title":{},"body":{"index.html":{},"modules.html":{}}}],["supporting",{"_index":285,"title":{},"body":{"index.html":{}}}],["svg",{"_index":324,"title":{},"body":{"modules.html":{}}}],["swc/helpers",{"_index":222,"title":{},"body":{"dependencies.html":{}}}],["synchronize",{"_index":51,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["table",{"_index":196,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":195,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":278,"title":{},"body":{"index.html":{}}}],["thank",{"_index":272,"title":{},"body":{"index.html":{}}}],["this.service.addrelation(param",{"_index":164,"title":{},"body":{"classes/SampleController.html":{}}}],["this.service.count(query",{"_index":149,"title":{},"body":{"classes/SampleController.html":{}}}],["this.service.decrement(param",{"_index":179,"title":{},"body":{"classes/SampleController.html":{}}}],["this.service.find(query",{"_index":143,"title":{},"body":{"classes/SampleController.html":{}}}],["this.service.findonebyidorthrow(param",{"_index":146,"title":{},"body":{"classes/SampleController.html":{}}}],["this.service.increment(param",{"_index":176,"title":{},"body":{"classes/SampleController.html":{}}}],["this.service.removerelation(param",{"_index":167,"title":{},"body":{"classes/SampleController.html":{}}}],["this.service.restore(param",{"_index":161,"title":{},"body":{"classes/SampleController.html":{}}}],["this.service.save(body",{"_index":152,"title":{},"body":{"classes/SampleController.html":{}}}],["this.service.setrelation(param",{"_index":170,"title":{},"body":{"classes/SampleController.html":{}}}],["this.service.softdelete(param",{"_index":158,"title":{},"body":{"classes/SampleController.html":{}}}],["this.service.unsetrelation(param",{"_index":173,"title":{},"body":{"classes/SampleController.html":{}}}],["this.service.update(param",{"_index":155,"title":{},"body":{"classes/SampleController.html":{}}}],["throttlermodule",{"_index":28,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["throttlermodule.forroot",{"_index":41,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["throttlers",{"_index":42,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["time",{"_index":279,"title":{},"body":{"index.html":{}}}],["tool",{"_index":255,"title":{},"body":{"index.html":{},"properties.html":{}}}],["toward",{"_index":300,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":224,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":52,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["ttl",{"_index":45,"title":{},"body":{"modules/SampleAppModule.html":{}}}],["type",{"_index":87,"title":{},"body":{"classes/SampleController.html":{},"coverage.html":{}}}],["typeorm",{"_index":232,"title":{},"body":{"dependencies.html":{}}}],["unsetrelation",{"_index":78,"title":{},"body":{"classes/SampleController.html":{}}}],["unsetrelation(@param",{"_index":172,"title":{},"body":{"classes/SampleController.html":{}}}],["unsetrelation(param",{"_index":129,"title":{},"body":{"classes/SampleController.html":{}}}],["up",{"_index":292,"title":{},"body":{"index.html":{}}}],["updateonebyid",{"_index":79,"title":{},"body":{"classes/SampleController.html":{}}}],["updateonebyid(@param",{"_index":154,"title":{},"body":{"classes/SampleController.html":{}}}],["updateonebyid(param",{"_index":132,"title":{},"body":{"classes/SampleController.html":{}}}],["updates",{"_index":303,"title":{},"body":{"index.html":{}}}],["updatesampledto",{"_index":133,"title":{},"body":{"classes/SampleController.html":{}}}],["use",{"_index":252,"title":{},"body":{"index.html":{},"properties.html":{}}}],["useful",{"_index":282,"title":{},"body":{"index.html":{}}}],["users",{"_index":312,"title":{},"body":{"index.html":{}}}],["using",{"_index":273,"title":{},"body":{"index.html":{}}}],["validator",{"_index":226,"title":{},"body":{"dependencies.html":{}}}],["value",{"_index":92,"title":{},"body":{"classes/SampleController.html":{}}}],["version",{"_index":331,"title":{},"body":{"properties.html":{}}}],["versions",{"_index":306,"title":{},"body":{"index.html":{}}}],["via",{"_index":261,"title":{},"body":{"index.html":{}}}],["well",{"_index":295,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":13,"title":{},"body":{"modules/SampleAppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/SampleAppModule.html":{"url":"modules/SampleAppModule.html","title":"module - SampleAppModule","body":"\n                   \n\n\n\n\n    Modules\n    SampleAppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SampleAppModule\n\n\n\ncluster_SampleAppModule_imports\n\n\n\n\nSampleModule\n\nSampleModule\n\n\n\nSampleAppModule\n\nSampleAppModule\n\nSampleAppModule -->\n\nSampleModule->SampleAppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/sample-app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            SampleModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { ScheduleModule } from '@nestjs/schedule';\nimport { ThrottlerModule } from '@nestjs/throttler';\nimport { EventEmitterModule } from '@nestjs/event-emitter';\nimport { SampleModule } from './sample/sample.module.js';\nimport { DataSourceModule } from '@puq/orm';\nimport { Sample, SampleView } from '@puq/entity';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({}),\n    ScheduleModule.forRoot(),\n    ThrottlerModule.forRoot({ throttlers: [{ limit: 1000, ttl: 60_000 }] }),\n    EventEmitterModule.forRoot({ delimiter: '.' }),\n    DataSourceModule.forRoot({\n      entities: [Sample, SampleView],\n      synchronize: true,\n      dropSchema: true,\n    }),\n    SampleModule,\n  ],\n})\nexport class SampleAppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SampleController.html":{"url":"classes/SampleController.html","title":"class - SampleController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SampleController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/sample/sample.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Protected\n                                    Readonly\n                                __metadata__\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                addRelation\n                            \n                            \n                                    \n                                count\n                            \n                            \n                                    \n                                decrement\n                            \n                            \n                                    \n                                deleteOneById\n                            \n                            \n                                    \n                                find\n                            \n                            \n                                    \n                                findOneById\n                            \n                            \n                                    \n                                increment\n                            \n                            \n                                    \n                                removeRelation\n                            \n                            \n                                    \n                                restore\n                            \n                            \n                                    \n                                saveOne\n                            \n                            \n                                    \n                                setRelation\n                            \n                            \n                                    \n                                unsetRelation\n                            \n                            \n                                    \n                                updateOneById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: EntityService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/sample/sample.controller.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                    EntityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Protected\n                            Readonly\n                        __metadata__\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @({entity: () => Sample})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/sample/sample.controller.ts:20\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        addRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    addRelation(param: SampleRelationParamDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @()\n                \n            \n\n                    \n                        \n                            Defined in src/lib/sample/sample.controller.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                param\n                                            \n                                                        SampleRelationParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(query: QueryCountSampleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @()\n                \n            \n\n                    \n                        \n                            Defined in src/lib/sample/sample.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        QueryCountSampleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        decrement\n                        \n                    \n                \n            \n            \n                \n                        \n                    decrement(param: IDDto, body: DecrementSampleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @()\n                \n            \n\n                    \n                        \n                            Defined in src/lib/sample/sample.controller.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                param\n                                            \n                                                        IDDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                        DecrementSampleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deleteOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteOneById(param: IDDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @()\n                \n            \n\n                    \n                        \n                            Defined in src/lib/sample/sample.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                param\n                                            \n                                                        IDDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(query: QueryManySampleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @()\n                \n            \n\n                    \n                        \n                            Defined in src/lib/sample/sample.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        QueryManySampleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(param: IDDto, query: QueryOneSampleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @()\n                \n            \n\n                    \n                        \n                            Defined in src/lib/sample/sample.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                param\n                                            \n                                                        IDDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                        QueryOneSampleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        increment\n                        \n                    \n                \n            \n            \n                \n                        \n                    increment(param: IDDto, body: IncrementSampleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @()\n                \n            \n\n                    \n                        \n                            Defined in src/lib/sample/sample.controller.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                param\n                                            \n                                                        IDDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                        IncrementSampleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        removeRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeRelation(param: SampleRelationParamDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @()\n                \n            \n\n                    \n                        \n                            Defined in src/lib/sample/sample.controller.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                param\n                                            \n                                                        SampleRelationParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        restore\n                        \n                    \n                \n            \n            \n                \n                        \n                    restore(param: IDDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @()\n                \n            \n\n                    \n                        \n                            Defined in src/lib/sample/sample.controller.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                param\n                                            \n                                                        IDDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        saveOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveOne(body: CreateSampleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @()\n                \n            \n\n                    \n                        \n                            Defined in src/lib/sample/sample.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                        CreateSampleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        setRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    setRelation(param: SampleRelationParamDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @()\n                \n            \n\n                    \n                        \n                            Defined in src/lib/sample/sample.controller.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                param\n                                            \n                                                        SampleRelationParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        unsetRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    unsetRelation(param: SampleUnsetRelationParamDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @()\n                \n            \n\n                    \n                        \n                            Defined in src/lib/sample/sample.controller.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                param\n                                            \n                                                        SampleUnsetRelationParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOneById(param: IDDto, body: UpdateSampleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @()\n                \n            \n\n                    \n                        \n                            Defined in src/lib/sample/sample.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                param\n                                            \n                                                        IDDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                        UpdateSampleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Rest } from '@puq/rest';\nimport { Body, Param, Query } from '@nestjs/common';\nimport {\n  Sample,\n  CreateSampleDto,\n  UpdateSampleDto,\n  SampleRelationParamDto,\n  SampleUnsetRelationParamDto,\n  QueryCountSampleDto,\n  IncrementSampleDto,\n  DecrementSampleDto,\n  QueryManySampleDto,\n  QueryOneSampleDto,\n} from '@puq/entity';\nimport { EntityService, IDDto, InjectEntityService } from '@puq/orm';\n\n@Rest.Controller()\nexport class SampleController {\n  @Rest.SetResourceMetadata({ entity: () => Sample })\n  protected readonly __metadata__ = '';\n\n  constructor(\n    @InjectEntityService() protected readonly service: EntityService,\n  ) {}\n\n  @Rest.Find()\n  find(@Query() query: QueryManySampleDto) {\n    return this.service.find(query);\n  }\n\n  @Rest.FindOneById()\n  findOneById(@Param() param: IDDto, @Query() query: QueryOneSampleDto) {\n    return this.service.findOneByIdOrThrow(param, query);\n  }\n\n  @Rest.Count()\n  count(@Query() query: QueryCountSampleDto) {\n    return this.service.count(query);\n  }\n\n  @Rest.SaveOne()\n  saveOne(@Body() body: CreateSampleDto) {\n    return this.service.save(body);\n  }\n\n  @Rest.UpdateOneById()\n  updateOneById(@Param() param: IDDto, @Body() body: UpdateSampleDto) {\n    return this.service.update(param, body);\n  }\n\n  @Rest.DeleteOneById()\n  deleteOneById(@Param() param: IDDto) {\n    return this.service.softDelete(param);\n  }\n\n  @Rest.RestoreOneById()\n  restore(@Param() param: IDDto) {\n    return this.service.restore(param);\n  }\n\n  @Rest.AddRelation()\n  addRelation(@Param() param: SampleRelationParamDto) {\n    return this.service.addRelation(param);\n  }\n\n  @Rest.RemoveRelation()\n  removeRelation(@Param() param: SampleRelationParamDto) {\n    return this.service.removeRelation(param);\n  }\n\n  @Rest.SetRelation()\n  setRelation(@Param() param: SampleRelationParamDto) {\n    return this.service.setRelation(param);\n  }\n\n  @Rest.UnsetRelation()\n  unsetRelation(@Param() param: SampleUnsetRelationParamDto) {\n    return this.service.unsetRelation(param);\n  }\n\n  @Rest.Increment()\n  increment(@Param() param: IDDto, @Body() body: IncrementSampleDto) {\n    return this.service.increment(param, body);\n  }\n\n  @Rest.Decrement()\n  decrement(@Param() param: IDDto, @Body() body: DecrementSampleDto) {\n    return this.service.decrement(param, body);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SampleModule.html":{"url":"modules/SampleModule.html","title":"module - SampleModule","body":"\n                   \n\n\n\n\n    Modules\n    SampleModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/sample/sample.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SampleController } from './sample.controller.js';\nimport { DataSourceModule } from '@puq/orm';\nimport { Sample } from '@puq/entity';\n\n@Module({\n  imports: [DataSourceModule.forFeature({ entities: [Sample] })],\n  controllers: [SampleController],\n})\nexport class SampleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/lib/program.ts\n            \n            function\n            boot\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/sample/sample.controller.ts\n            \n            class\n            SampleController\n            \n                0 %\n                (0/16)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^11.0.11\n        \n            @nestjs/config : ^4.0.1\n        \n            @nestjs/core : ^11.0.11\n        \n            @nestjs/event-emitter : ^3.0.1\n        \n            @nestjs/platform-express : ^11.0.11\n        \n            @nestjs/schedule : ^5.0.1\n        \n            @nestjs/swagger : ^11.0.6\n        \n            @nestjs/throttler : ^6.4.0\n        \n            @nestjs/typeorm : ^11.0.0\n        \n            @puq/boot : ^0.6.2\n        \n            @puq/debug : ^0.6.2\n        \n            @puq/entity : ^0.6.2\n        \n            @puq/env : ^0.6.2\n        \n            @puq/is : ^0.6.2\n        \n            @puq/meta : ^0.6.2\n        \n            @puq/middleware : ^0.6.2\n        \n            @puq/model : ^0.6.2\n        \n            @puq/orm : ^0.6.2\n        \n            @puq/property : ^0.6.2\n        \n            @puq/provider : ^0.6.2\n        \n            @puq/query : ^0.6.2\n        \n            @puq/rest : ^0.6.2\n        \n            @puq/type : ^0.6.2\n        \n            @swc/helpers : ^0.5.15\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            commander : ^13.1.0\n        \n            pg : ^8.14.0\n        \n            typeorm : ^0.3.21\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            boot   (src/.../program.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/program.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        boot\n                        \n                    \n                \n            \n            \n                \nboot()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n@puq/sample\nSummary\nThis package provides a fully portable sample portable service that can be easily installed and run as a standalone application. Designed for flexibility and ease of use, it includes its own CLI tool to manage execution seamlessly.\nFeatures\n\n📦 Installable via npm\n🚀 Standalone execution with CLI\n⚡ Lightweight and portable\n🛠 Built with NestJS for scalability\n\nInstall\nExample :  pnpm add @puq/sampleFunding\nThank you for using @puq/sample It's an open-source project, and maintaining it takes time and effort. If you find this library useful, please consider supporting its ongoing development. Your contributions help ensure that the project stays up-to-date, secure, and well-maintained.\nInstant Funding\nYour funding will go toward\n\nBug fixes and updates to ensure compatibility with the latest versions of dependencies.\nNew features that will make the library even more powerful.\nDocumentation improvements to help users get the most out of [Your Library Name].\nGeneral maintenance to keep the library running smoothly and securely.\n\nContact to the developer: [robert.brightline@gmail.com]\nSupport the developer\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        SampleAppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SampleModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SampleAppModule\n\n\n\ncluster_SampleAppModule_imports\n\n\n\n\nSampleModule\n\nSampleModule\n\n\n\nSampleAppModule\n\nSampleAppModule\n\nSampleAppModule -->\n\nSampleModule->SampleAppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.6.2\n        \n            Description : This package provides a fully portable sample portable service that can be easily installed and run as a standalone application. Designed for flexibility and ease of use, it includes its own CLI tool to manage execution seamlessly.\n        \n            Keywords : puq, sample\n        \n            Homepage : https://rbrightline.github.io/puq/sample\n        \n            Bugs : https://rbrightline.github.io\n        \n            License : MIT\n        \n            Repository : https://github.com/rbrightline/puq/tree/main\n        \n            Author : Robert Brightline\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
