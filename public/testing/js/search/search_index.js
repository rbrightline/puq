var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/coverage.html",[0,1.888]],["body/coverage.html",[0,1.224,1,1.224,2,1.713,3,1.259,4,1.713,5,1.713,6,1.224,7,0.663,8,1.259,9,1.224,10,2.749,11,1.224,12,2.749,13,0.103,14,2.749,15,1.224,16,1.224,17,1.224,18,1.224,19,1.224,20,1.224,21,1.713,22,1.224,23,1.224,24,1.224,25,1.224,26,1.713,27,1.713,28,1.224,29,1.713,30,1.713,31,0.076,32,0.076]],["title/dependencies.html",[33,1.21,34,1.248]],["body/dependencies.html",[13,0.111,31,0.094,32,0.094,34,1.553,35,2.352,36,2.352,37,2.352,38,2.352,39,2.106,40,2.352]],["title/miscellaneous/functions.html",[41,0.655,42,1.693]],["body/miscellaneous/functions.html",[3,1.456,6,0.898,7,0.737,8,1.214,9,1.363,11,1.363,13,0.096,15,0.898,16,1.363,17,1.363,23,0.898,24,1.363,25,1.363,31,0.061,32,0.061,41,0.486,42,0.898,43,0.662,44,1.257,45,1.257,46,1.257,47,1.257,48,1.906,49,1.906,50,1.906,51,2.302,52,1.646,53,2.302,54,1.257,55,1.906,56,1.257,57,1.257,58,1.257,59,1.257,60,1.257,61,1.906,62,1.906,63,2.302,64,1.257,65,1.257,66,1.906,67,1.257,68,1.257,69,1.257,70,1.257,71,0.898,72,1.257,73,1.906,74,1.257,75,1.257,76,1.257]],["title/index.html",[43,0.892,77,1.693,78,1.693]],["body/index.html",[1,0.822,7,0.689,13,0.069,28,0.822,31,0.057,32,0.057,34,0.606,52,0.822,79,1.78,80,1.15,81,1.897,82,0.822,83,0.822,84,0.822,85,0.822,86,0.822,87,0.822,88,0.822,89,0.822,90,0.822,91,0.822,92,0.822,93,1.273,94,1.273,95,0.822,96,0.822,97,0.822,98,1.15,99,1.15,100,1.15,101,1.15,102,1.15,103,1.15,104,1.15,105,1.15,106,1.15,107,1.15,108,1.15,109,1.78,110,1.15,111,1.15,112,1.15,113,1.15,114,1.15,115,1.15,116,1.15,117,1.15,118,1.15,119,1.15,120,1.78,121,1.78,122,1.15,123,1.15,124,1.15,125,1.15,126,1.15,127,1.15,128,1.15,129,1.78,130,1.15,131,1.15,132,1.15,133,1.15,134,1.15,135,1.15,136,1.15,137,1.15,138,1.15,139,1.15,140,1.15,141,1.15,142,1.15,143,1.15,144,1.15,145,1.15,146,1.15,147,1.15,148,1.15,149,1.15,150,1.15,151,1.15,152,1.15,153,1.78,154,1.15,155,1.15]],["title/modules.html",[156,1.888]],["body/modules.html",[13,0.103,31,0.103,32,0.103,156,1.949]],["title/overview.html",[157,1.888]],["body/overview.html",[13,0.103,31,0.103,32,0.103,157,1.949]],["title/properties.html",[33,1.21,158,1.693]],["body/properties.html",[7,1.038,13,0.11,31,0.074,32,0.074,39,1.171,71,1.171,81,1.171,82,1.171,83,1.171,84,1.171,85,1.655,86,1.171,87,1.171,88,1.171,89,1.171,90,1.655,91,1.171,92,1.171,93,1.171,94,1.171,95,1.171,96,1.171,97,1.171,158,1.171,159,1.638,160,1.638,161,1.638,162,1.638,163,1.638,164,1.638,165,1.638,166,1.638,167,1.638,168,1.638,169,1.638,170,1.638,171,1.638,172,1.638]],["title/miscellaneous/typealiases.html",[41,0.655,173,2.369]],["body/miscellaneous/typealiases.html",[3,1.506,8,1.506,13,0.091,18,1.602,19,2.043,20,2.043,22,2.043,31,0.091,32,0.091,41,0.867,43,1.181,174,2.241,175,2.241,176,2.241]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":12,"title":{},"body":{"coverage.html":{}}}],["0.5.15",{"_index":36,"title":{},"body":{"dependencies.html":{}}}],["0.5.20",{"_index":39,"title":{},"body":{"dependencies.html":{},"properties.html":{}}}],["0/1",{"_index":14,"title":{},"body":{"coverage.html":{}}}],["1/1",{"_index":27,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":26,"title":{},"body":{"coverage.html":{}}}],["actualerrors",{"_index":70,"title":{},"body":{"miscellaneous/functions.html":{}}}],["add",{"_index":101,"title":{},"body":{"index.html":{}}}],["alias",{"_index":21,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":174,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["author",{"_index":170,"title":{},"body":{"properties.html":{}}}],["brightline",{"_index":172,"title":{},"body":{"properties.html":{}}}],["bug",{"_index":132,"title":{},"body":{"index.html":{}}}],["bugs",{"_index":164,"title":{},"body":{"properties.html":{}}}],["check",{"_index":68,"title":{},"body":{"miscellaneous/functions.html":{}}}],["class",{"_index":8,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["classdecoratorfactory",{"_index":49,"title":{},"body":{"miscellaneous/functions.html":{}}}],["collection",{"_index":83,"title":{},"body":{"index.html":{},"properties.html":{}}}],["compatibility",{"_index":135,"title":{},"body":{"index.html":{}}}],["consider",{"_index":115,"title":{},"body":{"index.html":{}}}],["constraints",{"_index":75,"title":{},"body":{"miscellaneous/functions.html":{}}}],["constraints.ts",{"_index":16,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["contact",{"_index":152,"title":{},"body":{"index.html":{}}}],["contributions",{"_index":119,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":0,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createtestclasswithwithsinglepropertydecorators",{"_index":11,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createtestclasswithwithsinglepropertydecorators(options",{"_index":47,"title":{},"body":{"miscellaneous/functions.html":{}}}],["d",{"_index":102,"title":{},"body":{"index.html":{}}}],["date",{"_index":124,"title":{},"body":{"index.html":{}}}],["decorators.ts",{"_index":9,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["dependencies",{"_index":34,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["description",{"_index":71,"title":{},"body":{"miscellaneous/functions.html":{},"properties.html":{}}}],["designed",{"_index":86,"title":{},"body":{"index.html":{},"properties.html":{}}}],["developer",{"_index":153,"title":{},"body":{"index.html":{}}}],["development",{"_index":118,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["effective",{"_index":96,"title":{},"body":{"index.html":{},"properties.html":{}}}],["effort",{"_index":94,"title":{},"body":{"index.html":{},"properties.html":{}}}],["enhance",{"_index":87,"title":{},"body":{"index.html":{},"properties.html":{}}}],["ensure",{"_index":121,"title":{},"body":{"index.html":{}}}],["errors",{"_index":57,"title":{},"body":{"miscellaneous/functions.html":{}}}],["even",{"_index":140,"title":{},"body":{"index.html":{}}}],["example",{"_index":99,"title":{},"body":{"index.html":{}}}],["expected",{"_index":76,"title":{},"body":{"miscellaneous/functions.html":{}}}],["expectederrors",{"_index":63,"title":{},"body":{"miscellaneous/functions.html":{}}}],["extractconstraints",{"_index":17,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["extractconstraints(errors",{"_index":56,"title":{},"body":{"miscellaneous/functions.html":{}}}],["features",{"_index":138,"title":{},"body":{"index.html":{}}}],["file",{"_index":2,"title":{},"body":{"coverage.html":{}}}],["find",{"_index":112,"title":{},"body":{"index.html":{}}}],["fixes",{"_index":133,"title":{},"body":{"index.html":{}}}],["function",{"_index":10,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":42,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funding",{"_index":129,"title":{},"body":{"index.html":{}}}],["general",{"_index":146,"title":{},"body":{"index.html":{}}}],["getting",{"_index":77,"title":{"index.html":{}},"body":{}}],["go",{"_index":130,"title":{},"body":{"index.html":{}}}],["help",{"_index":120,"title":{},"body":{"index.html":{}}}],["homepage",{"_index":162,"title":{},"body":{"properties.html":{}}}],["https://github.com/rbrightline/puq/tree/main",{"_index":169,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io",{"_index":165,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io/puq/testing",{"_index":163,"title":{},"body":{"properties.html":{}}}],["identifier",{"_index":4,"title":{},"body":{"coverage.html":{}}}],["implementation",{"_index":97,"title":{},"body":{"index.html":{},"properties.html":{}}}],["improvements",{"_index":143,"title":{},"body":{"index.html":{}}}],["index",{"_index":43,"title":{"index.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["install",{"_index":98,"title":{},"body":{"index.html":{}}}],["instance",{"_index":67,"title":{},"body":{"miscellaneous/functions.html":{}}}],["instant",{"_index":128,"title":{},"body":{"index.html":{}}}],["it's",{"_index":106,"title":{},"body":{"index.html":{}}}],["keep",{"_index":148,"title":{},"body":{"index.html":{}}}],["keywords",{"_index":160,"title":{},"body":{"properties.html":{}}}],["latest",{"_index":136,"title":{},"body":{"index.html":{}}}],["library",{"_index":81,"title":{},"body":{"index.html":{},"properties.html":{}}}],["license",{"_index":166,"title":{},"body":{"properties.html":{}}}],["list",{"_index":74,"title":{},"body":{"miscellaneous/functions.html":{}}}],["literal",{"_index":176,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["maintained",{"_index":127,"title":{},"body":{"index.html":{}}}],["maintaining",{"_index":110,"title":{},"body":{"index.html":{}}}],["maintenance",{"_index":147,"title":{},"body":{"index.html":{}}}],["make",{"_index":139,"title":{},"body":{"index.html":{}}}],["matches",{"_index":69,"title":{},"body":{"miscellaneous/functions.html":{}}}],["matching",{"_index":32,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["minimize",{"_index":92,"title":{},"body":{"index.html":{},"properties.html":{}}}],["miscellaneous",{"_index":41,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["mit",{"_index":167,"title":{},"body":{"properties.html":{}}}],["modules",{"_index":156,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":141,"title":{},"body":{"index.html":{}}}],["name",{"_index":52,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["new",{"_index":28,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["offers",{"_index":82,"title":{},"body":{"index.html":{},"properties.html":{}}}],["ongoing",{"_index":117,"title":{},"body":{"index.html":{}}}],["open",{"_index":107,"title":{},"body":{"index.html":{}}}],["optional",{"_index":53,"title":{},"body":{"miscellaneous/functions.html":{}}}],["options",{"_index":54,"title":{},"body":{"miscellaneous/functions.html":{}}}],["out",{"_index":145,"title":{},"body":{"index.html":{}}}],["overview",{"_index":157,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":33,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":51,"title":{},"body":{"miscellaneous/functions.html":{}}}],["peer",{"_index":37,"title":{},"body":{"dependencies.html":{}}}],["please",{"_index":114,"title":{},"body":{"index.html":{}}}],["pnpm",{"_index":100,"title":{},"body":{"index.html":{}}}],["powerful",{"_index":142,"title":{},"body":{"index.html":{}}}],["processes",{"_index":91,"title":{},"body":{"index.html":{},"properties.html":{}}}],["project",{"_index":109,"title":{},"body":{"index.html":{}}}],["properties",{"_index":158,"title":{"properties.html":{}},"body":{"properties.html":{}}}],["property.ts",{"_index":20,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["propertydecoratorfactory",{"_index":50,"title":{},"body":{"miscellaneous/functions.html":{}}}],["propertyoptions",{"_index":48,"title":{},"body":{"miscellaneous/functions.html":{}}}],["puq",{"_index":161,"title":{},"body":{"properties.html":{}}}],["puq/debug",{"_index":40,"title":{},"body":{"dependencies.html":{}}}],["puq/is",{"_index":38,"title":{},"body":{"dependencies.html":{}}}],["puq/testing",{"_index":79,"title":{},"body":{"index.html":{}}}],["puq/testingfunding",{"_index":103,"title":{},"body":{"index.html":{}}}],["quality",{"_index":88,"title":{},"body":{"index.html":{},"properties.html":{}}}],["repository",{"_index":168,"title":{},"body":{"properties.html":{}}}],["required",{"_index":95,"title":{},"body":{"index.html":{},"properties.html":{}}}],["results",{"_index":31,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["returns",{"_index":55,"title":{},"body":{"miscellaneous/functions.html":{}}}],["robert",{"_index":171,"title":{},"body":{"properties.html":{}}}],["robert.brightline@gmail.com",{"_index":154,"title":{},"body":{"index.html":{}}}],["robust",{"_index":84,"title":{},"body":{"index.html":{},"properties.html":{}}}],["running",{"_index":149,"title":{},"body":{"index.html":{}}}],["secure",{"_index":125,"title":{},"body":{"index.html":{}}}],["securely",{"_index":151,"title":{},"body":{"index.html":{}}}],["single",{"_index":19,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["smoothly",{"_index":150,"title":{},"body":{"index.html":{}}}],["somerecord",{"_index":62,"title":{},"body":{"miscellaneous/functions.html":{}}}],["source",{"_index":108,"title":{},"body":{"index.html":{}}}],["src/.../create",{"_index":44,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../extract",{"_index":45,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../test",{"_index":175,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../transform",{"_index":46,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/lib/validation/create",{"_index":6,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/validation/extract",{"_index":15,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/validation/test",{"_index":18,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/validation/transform",{"_index":23,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["started",{"_index":78,"title":{"index.html":{}},"body":{}}],["statements",{"_index":5,"title":{},"body":{"coverage.html":{}}}],["stays",{"_index":122,"title":{},"body":{"index.html":{}}}],["streamline",{"_index":89,"title":{},"body":{"index.html":{},"properties.html":{}}}],["string",{"_index":59,"title":{},"body":{"miscellaneous/functions.html":{}}}],["summary",{"_index":80,"title":{},"body":{"index.html":{}}}],["support",{"_index":155,"title":{},"body":{"index.html":{}}}],["supporting",{"_index":116,"title":{},"body":{"index.html":{}}}],["swc/helpers",{"_index":35,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":30,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":29,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":111,"title":{},"body":{"index.html":{}}}],["target",{"_index":73,"title":{},"body":{"miscellaneous/functions.html":{}}}],["targetclass",{"_index":72,"title":{},"body":{"miscellaneous/functions.html":{}}}],["targetvalue",{"_index":61,"title":{},"body":{"miscellaneous/functions.html":{}}}],["test",{"_index":7,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["testclasswithsingleproperty",{"_index":22,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["testing",{"_index":90,"title":{},"body":{"index.html":{},"properties.html":{}}}],["thank",{"_index":104,"title":{},"body":{"index.html":{}}}],["time",{"_index":93,"title":{},"body":{"index.html":{},"properties.html":{}}}],["toward",{"_index":131,"title":{},"body":{"index.html":{}}}],["transform",{"_index":64,"title":{},"body":{"miscellaneous/functions.html":{}}}],["transformandvalidate",{"_index":25,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["transformandvalidate(targetclass",{"_index":60,"title":{},"body":{"miscellaneous/functions.html":{}}}],["type",{"_index":3,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":173,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["up",{"_index":123,"title":{},"body":{"index.html":{}}}],["updates",{"_index":134,"title":{},"body":{"index.html":{}}}],["useful",{"_index":113,"title":{},"body":{"index.html":{}}}],["users",{"_index":144,"title":{},"body":{"index.html":{}}}],["using",{"_index":105,"title":{},"body":{"index.html":{}}}],["utilities",{"_index":85,"title":{},"body":{"index.html":{},"properties.html":{}}}],["validate",{"_index":65,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validate.ts",{"_index":24,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["value",{"_index":66,"title":{},"body":{"miscellaneous/functions.html":{}}}],["version",{"_index":159,"title":{},"body":{"properties.html":{}}}],["versions",{"_index":137,"title":{},"body":{"index.html":{}}}],["well",{"_index":126,"title":{},"body":{"index.html":{}}}],["yes",{"_index":58,"title":{},"body":{"miscellaneous/functions.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/lib/validation/create-test-class-with-decorators.ts\n            \n            function\n            createTestClassWithWithSinglePropertyDecorators\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/validation/extract-constraints.ts\n            \n            function\n            extractConstraints\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/validation/test-class-with-single-property.ts\n            \n            type alias\n            TestClassWithSingleProperty\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/validation/transform-and-validate.ts\n            \n            function\n            transformAndValidate\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @swc/helpers : ^0.5.15\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @puq/is : ^0.5.20\n        \n            @puq/debug : ^0.5.20\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createTestClassWithWithSinglePropertyDecorators   (src/.../create-test-class-with-decorators.ts)\n                        \n                        \n                            extractConstraints   (src/.../extract-constraints.ts)\n                        \n                        \n                            transformAndValidate   (src/.../transform-and-validate.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/validation/create-test-class-with-decorators.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createTestClassWithWithSinglePropertyDecorators\n                        \n                    \n                \n            \n            \n                \ncreateTestClassWithWithSinglePropertyDecorators(options: PropertyOptions, ClassDecoratorFactory, PropertyDecoratorFactory)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        PropertyOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ClassDecoratorFactory\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                PropertyDecoratorFactory\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Type>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/validation/extract-constraints.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        extractConstraints\n                        \n                    \n                \n            \n            \n                \nextractConstraints(errors?)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                errors\n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/validation/transform-and-validate.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        transformAndValidate\n                        \n                    \n                \n            \n            \n                \ntransformAndValidate(targetClass: Type, targetValue: SomeRecord, expectedErrors)\n                \n            \n\n\n\n\n            \n                \n                        Transform and validate value by instance. And check the expectedErrors matches with the actualErrors\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                targetClass\n                                            \n                                                        Type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \ntarget class\n\n\n                                            \n                                        \n                                        \n                                                targetValue\n                                            \n                                                        SomeRecord\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \ntarget value\n\n\n                                            \n                                        \n                                        \n                                                expectedErrors\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nlist of constraints to be expected\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n@puq/testing\nSummary\nThe library offers a collection of robust utilities designed to enhance test quality, streamline testing processes, and minimize the time and effort required for effective test implementation.\nInstall\nExample :  pnpm add -D @puq/testingFunding\nThank you for using @puq/testing It's an open-source project, and maintaining it takes time and effort. If you find this library useful, please consider supporting its ongoing development. Your contributions help ensure that the project stays up-to-date, secure, and well-maintained.\nInstant Funding\nYour funding will go toward\n\nBug fixes and updates to ensure compatibility with the latest versions of dependencies.\nNew features that will make the library even more powerful.\nDocumentation improvements to help users get the most out of [Your Library Name].\nGeneral maintenance to keep the library running smoothly and securely.\n\nContact to the developer: [robert.brightline@gmail.com]\nSupport the developer\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.5.20\n        \n            Description : The library offers a collection of robust utilities designed to enhance test quality, streamline testing processes, and minimize the time and effort required for effective test implementation.\n        \n            Keywords : puq, testing, test-utilities\n        \n            Homepage : https://rbrightline.github.io/puq/testing\n        \n            Bugs : https://rbrightline.github.io\n        \n            License : MIT\n        \n            Repository : https://github.com/rbrightline/puq/tree/main\n        \n            Author : Robert Brightline\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            TestClassWithSingleProperty   (src/.../test-class-with-single-property.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/validation/test-class-with-single-property.ts\n    \n    \n        \n            \n                \n                    \n                    TestClassWithSingleProperty\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
