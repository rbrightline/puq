var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/coverage.html",[0,1.888]],["body/coverage.html",[0,1.221,1,1.221,2,1.708,3,1.256,4,1.708,5,1.708,6,1.221,7,0.661,8,1.256,9,1.221,10,2.745,11,1.221,12,2.745,13,0.103,14,2.745,15,1.221,16,1.221,17,1.221,18,1.221,19,1.221,20,1.221,21,1.708,22,1.221,23,1.221,24,1.221,25,1.221,26,1.708,27,1.708,28,1.221,29,1.708,30,1.708,31,0.076,32,0.076]],["title/dependencies.html",[33,1.21,34,1.248]],["body/dependencies.html",[13,0.112,31,0.095,32,0.095,34,1.27,35,2.41,36,2.991,37,2.41,38,2.41,39,2.41]],["title/miscellaneous/functions.html",[40,0.655,41,1.693]],["body/miscellaneous/functions.html",[3,1.454,6,0.895,7,0.735,8,1.211,9,1.359,11,1.359,13,0.096,15,0.895,16,1.359,17,1.359,23,0.895,24,1.359,25,1.359,31,0.061,32,0.061,40,0.485,41,0.895,42,0.66,43,1.252,44,1.252,45,1.252,46,1.252,47,1.901,48,1.901,49,1.901,50,2.297,51,1.642,52,2.297,53,1.252,54,1.901,55,1.252,56,1.252,57,1.252,58,1.252,59,1.252,60,1.901,61,1.901,62,2.297,63,1.252,64,1.252,65,1.901,66,1.252,67,1.252,68,1.252,69,1.252,70,0.895,71,1.252,72,1.901,73,1.252,74,1.252,75,1.252]],["title/index.html",[42,0.892,76,1.693,77,1.693]],["body/index.html",[1,0.819,7,0.687,13,0.069,28,0.819,31,0.057,32,0.057,34,0.604,51,0.819,78,1.775,79,1.146,80,1.894,81,0.819,82,0.819,83,0.819,84,0.819,85,0.819,86,0.819,87,0.819,88,0.819,89,0.819,90,0.819,91,0.819,92,1.269,93,1.269,94,0.819,95,0.819,96,0.819,97,1.146,98,1.146,99,1.146,100,1.146,101,1.146,102,1.146,103,1.146,104,1.146,105,1.146,106,1.146,107,1.146,108,1.775,109,1.146,110,1.146,111,1.146,112,1.146,113,1.146,114,1.146,115,1.146,116,1.146,117,1.146,118,1.146,119,1.775,120,1.775,121,1.146,122,1.146,123,1.146,124,1.146,125,1.146,126,1.146,127,1.146,128,1.775,129,1.146,130,1.146,131,1.146,132,1.146,133,1.146,134,1.146,135,1.146,136,1.146,137,1.146,138,1.146,139,1.146,140,1.146,141,1.146,142,1.146,143,1.146,144,1.146,145,1.146,146,1.146,147,1.146,148,1.146,149,1.146,150,1.146,151,1.146,152,1.775,153,1.146,154,1.146]],["title/modules.html",[155,1.888]],["body/modules.html",[13,0.103,31,0.103,32,0.103,155,1.948]],["title/overview.html",[156,1.888]],["body/overview.html",[13,0.103,31,0.103,32,0.103,156,1.948]],["title/properties.html",[33,1.21,157,1.693]],["body/properties.html",[7,1.037,13,0.11,31,0.074,32,0.074,70,1.168,80,1.168,81,1.168,82,1.168,83,1.168,84,1.652,85,1.168,86,1.168,87,1.168,88,1.168,89,1.652,90,1.168,91,1.168,92,1.168,93,1.168,94,1.168,95,1.168,96,1.168,157,1.168,158,1.634,159,1.634,160,1.634,161,1.634,162,1.634,163,1.634,164,1.634,165,1.634,166,1.634,167,1.634,168,1.634,169,1.634,170,1.634,171,1.634,172,1.634]],["title/miscellaneous/typealiases.html",[40,0.655,173,2.369]],["body/miscellaneous/typealiases.html",[3,1.505,8,1.505,13,0.091,18,1.6,19,2.041,20,2.041,22,2.041,31,0.091,32,0.091,40,0.866,42,1.179,174,2.237,175,2.237,176,2.237]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":12,"title":{},"body":{"coverage.html":{}}}],["0.4.20",{"_index":159,"title":{},"body":{"properties.html":{}}}],["0.5.15",{"_index":39,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":14,"title":{},"body":{"coverage.html":{}}}],["1/1",{"_index":27,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":26,"title":{},"body":{"coverage.html":{}}}],["actualerrors",{"_index":69,"title":{},"body":{"miscellaneous/functions.html":{}}}],["add",{"_index":100,"title":{},"body":{"index.html":{}}}],["alias",{"_index":21,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":174,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["author",{"_index":170,"title":{},"body":{"properties.html":{}}}],["brightline",{"_index":172,"title":{},"body":{"properties.html":{}}}],["bug",{"_index":131,"title":{},"body":{"index.html":{}}}],["bugs",{"_index":164,"title":{},"body":{"properties.html":{}}}],["check",{"_index":67,"title":{},"body":{"miscellaneous/functions.html":{}}}],["class",{"_index":8,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["classdecoratorfactory",{"_index":48,"title":{},"body":{"miscellaneous/functions.html":{}}}],["collection",{"_index":82,"title":{},"body":{"index.html":{},"properties.html":{}}}],["compatibility",{"_index":134,"title":{},"body":{"index.html":{}}}],["consider",{"_index":114,"title":{},"body":{"index.html":{}}}],["constraints",{"_index":74,"title":{},"body":{"miscellaneous/functions.html":{}}}],["constraints.ts",{"_index":16,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["contact",{"_index":151,"title":{},"body":{"index.html":{}}}],["contributions",{"_index":118,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":0,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createtestclasswithwithsinglepropertydecorators",{"_index":11,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createtestclasswithwithsinglepropertydecorators(options",{"_index":46,"title":{},"body":{"miscellaneous/functions.html":{}}}],["d",{"_index":101,"title":{},"body":{"index.html":{}}}],["date",{"_index":123,"title":{},"body":{"index.html":{}}}],["decorators.ts",{"_index":9,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["dependencies",{"_index":34,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["description",{"_index":70,"title":{},"body":{"miscellaneous/functions.html":{},"properties.html":{}}}],["designed",{"_index":85,"title":{},"body":{"index.html":{},"properties.html":{}}}],["developer",{"_index":152,"title":{},"body":{"index.html":{}}}],["development",{"_index":117,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["effective",{"_index":95,"title":{},"body":{"index.html":{},"properties.html":{}}}],["effort",{"_index":93,"title":{},"body":{"index.html":{},"properties.html":{}}}],["enhance",{"_index":86,"title":{},"body":{"index.html":{},"properties.html":{}}}],["ensure",{"_index":120,"title":{},"body":{"index.html":{}}}],["errors",{"_index":56,"title":{},"body":{"miscellaneous/functions.html":{}}}],["even",{"_index":139,"title":{},"body":{"index.html":{}}}],["example",{"_index":98,"title":{},"body":{"index.html":{}}}],["expected",{"_index":75,"title":{},"body":{"miscellaneous/functions.html":{}}}],["expectederrors",{"_index":62,"title":{},"body":{"miscellaneous/functions.html":{}}}],["extractconstraints",{"_index":17,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["extractconstraints(errors",{"_index":55,"title":{},"body":{"miscellaneous/functions.html":{}}}],["features",{"_index":137,"title":{},"body":{"index.html":{}}}],["file",{"_index":2,"title":{},"body":{"coverage.html":{}}}],["find",{"_index":111,"title":{},"body":{"index.html":{}}}],["fixes",{"_index":132,"title":{},"body":{"index.html":{}}}],["function",{"_index":10,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":41,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funding",{"_index":128,"title":{},"body":{"index.html":{}}}],["general",{"_index":145,"title":{},"body":{"index.html":{}}}],["getting",{"_index":76,"title":{"index.html":{}},"body":{}}],["go",{"_index":129,"title":{},"body":{"index.html":{}}}],["help",{"_index":119,"title":{},"body":{"index.html":{}}}],["homepage",{"_index":162,"title":{},"body":{"properties.html":{}}}],["https://github.com/rbrightline/puq/tree/main",{"_index":169,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io",{"_index":165,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io/puq/testing",{"_index":163,"title":{},"body":{"properties.html":{}}}],["identifier",{"_index":4,"title":{},"body":{"coverage.html":{}}}],["implementation",{"_index":96,"title":{},"body":{"index.html":{},"properties.html":{}}}],["improvements",{"_index":142,"title":{},"body":{"index.html":{}}}],["index",{"_index":42,"title":{"index.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["install",{"_index":97,"title":{},"body":{"index.html":{}}}],["instance",{"_index":66,"title":{},"body":{"miscellaneous/functions.html":{}}}],["instant",{"_index":127,"title":{},"body":{"index.html":{}}}],["it's",{"_index":105,"title":{},"body":{"index.html":{}}}],["keep",{"_index":147,"title":{},"body":{"index.html":{}}}],["keywords",{"_index":160,"title":{},"body":{"properties.html":{}}}],["latest",{"_index":135,"title":{},"body":{"index.html":{}}}],["library",{"_index":80,"title":{},"body":{"index.html":{},"properties.html":{}}}],["license",{"_index":166,"title":{},"body":{"properties.html":{}}}],["list",{"_index":73,"title":{},"body":{"miscellaneous/functions.html":{}}}],["literal",{"_index":176,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["maintained",{"_index":126,"title":{},"body":{"index.html":{}}}],["maintaining",{"_index":109,"title":{},"body":{"index.html":{}}}],["maintenance",{"_index":146,"title":{},"body":{"index.html":{}}}],["make",{"_index":138,"title":{},"body":{"index.html":{}}}],["matches",{"_index":68,"title":{},"body":{"miscellaneous/functions.html":{}}}],["matching",{"_index":32,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["minimize",{"_index":91,"title":{},"body":{"index.html":{},"properties.html":{}}}],["miscellaneous",{"_index":40,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["mit",{"_index":167,"title":{},"body":{"properties.html":{}}}],["modules",{"_index":155,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":140,"title":{},"body":{"index.html":{}}}],["name",{"_index":51,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["new",{"_index":28,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["offers",{"_index":81,"title":{},"body":{"index.html":{},"properties.html":{}}}],["ongoing",{"_index":116,"title":{},"body":{"index.html":{}}}],["open",{"_index":106,"title":{},"body":{"index.html":{}}}],["optional",{"_index":52,"title":{},"body":{"miscellaneous/functions.html":{}}}],["options",{"_index":53,"title":{},"body":{"miscellaneous/functions.html":{}}}],["out",{"_index":144,"title":{},"body":{"index.html":{}}}],["overview",{"_index":156,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":33,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":50,"title":{},"body":{"miscellaneous/functions.html":{}}}],["please",{"_index":113,"title":{},"body":{"index.html":{}}}],["pnpm",{"_index":99,"title":{},"body":{"index.html":{}}}],["powerful",{"_index":141,"title":{},"body":{"index.html":{}}}],["processes",{"_index":90,"title":{},"body":{"index.html":{},"properties.html":{}}}],["project",{"_index":108,"title":{},"body":{"index.html":{}}}],["properties",{"_index":157,"title":{"properties.html":{}},"body":{"properties.html":{}}}],["property.ts",{"_index":20,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["propertydecoratorfactory",{"_index":49,"title":{},"body":{"miscellaneous/functions.html":{}}}],["propertyoptions",{"_index":47,"title":{},"body":{"miscellaneous/functions.html":{}}}],["puq",{"_index":161,"title":{},"body":{"properties.html":{}}}],["puq/debug",{"_index":35,"title":{},"body":{"dependencies.html":{}}}],["puq/is",{"_index":37,"title":{},"body":{"dependencies.html":{}}}],["puq/testing",{"_index":78,"title":{},"body":{"index.html":{}}}],["puq/testingfunding",{"_index":102,"title":{},"body":{"index.html":{}}}],["quality",{"_index":87,"title":{},"body":{"index.html":{},"properties.html":{}}}],["repository",{"_index":168,"title":{},"body":{"properties.html":{}}}],["required",{"_index":94,"title":{},"body":{"index.html":{},"properties.html":{}}}],["results",{"_index":31,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["returns",{"_index":54,"title":{},"body":{"miscellaneous/functions.html":{}}}],["robert",{"_index":171,"title":{},"body":{"properties.html":{}}}],["robert.brightline@gmail.com",{"_index":153,"title":{},"body":{"index.html":{}}}],["robust",{"_index":83,"title":{},"body":{"index.html":{},"properties.html":{}}}],["running",{"_index":148,"title":{},"body":{"index.html":{}}}],["secure",{"_index":124,"title":{},"body":{"index.html":{}}}],["securely",{"_index":150,"title":{},"body":{"index.html":{}}}],["single",{"_index":19,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["smoothly",{"_index":149,"title":{},"body":{"index.html":{}}}],["somerecord",{"_index":61,"title":{},"body":{"miscellaneous/functions.html":{}}}],["source",{"_index":107,"title":{},"body":{"index.html":{}}}],["src/.../create",{"_index":43,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../extract",{"_index":44,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../test",{"_index":175,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../transform",{"_index":45,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/lib/validation/create",{"_index":6,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/validation/extract",{"_index":15,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/validation/test",{"_index":18,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/validation/transform",{"_index":23,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["started",{"_index":77,"title":{"index.html":{}},"body":{}}],["statements",{"_index":5,"title":{},"body":{"coverage.html":{}}}],["stays",{"_index":121,"title":{},"body":{"index.html":{}}}],["streamline",{"_index":88,"title":{},"body":{"index.html":{},"properties.html":{}}}],["string",{"_index":58,"title":{},"body":{"miscellaneous/functions.html":{}}}],["summary",{"_index":79,"title":{},"body":{"index.html":{}}}],["support",{"_index":154,"title":{},"body":{"index.html":{}}}],["supporting",{"_index":115,"title":{},"body":{"index.html":{}}}],["swc/helpers",{"_index":38,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":30,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":29,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":110,"title":{},"body":{"index.html":{}}}],["target",{"_index":72,"title":{},"body":{"miscellaneous/functions.html":{}}}],["targetclass",{"_index":71,"title":{},"body":{"miscellaneous/functions.html":{}}}],["targetvalue",{"_index":60,"title":{},"body":{"miscellaneous/functions.html":{}}}],["test",{"_index":7,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["testclasswithsingleproperty",{"_index":22,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["testing",{"_index":89,"title":{},"body":{"index.html":{},"properties.html":{}}}],["thank",{"_index":103,"title":{},"body":{"index.html":{}}}],["time",{"_index":92,"title":{},"body":{"index.html":{},"properties.html":{}}}],["toward",{"_index":130,"title":{},"body":{"index.html":{}}}],["transform",{"_index":63,"title":{},"body":{"miscellaneous/functions.html":{}}}],["transformandvalidate",{"_index":25,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["transformandvalidate(targetclass",{"_index":59,"title":{},"body":{"miscellaneous/functions.html":{}}}],["type",{"_index":3,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":173,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["up",{"_index":122,"title":{},"body":{"index.html":{}}}],["updates",{"_index":133,"title":{},"body":{"index.html":{}}}],["useful",{"_index":112,"title":{},"body":{"index.html":{}}}],["users",{"_index":143,"title":{},"body":{"index.html":{}}}],["using",{"_index":104,"title":{},"body":{"index.html":{}}}],["utilities",{"_index":84,"title":{},"body":{"index.html":{},"properties.html":{}}}],["validate",{"_index":64,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validate.ts",{"_index":24,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["value",{"_index":65,"title":{},"body":{"miscellaneous/functions.html":{}}}],["version",{"_index":158,"title":{},"body":{"properties.html":{}}}],["versions",{"_index":136,"title":{},"body":{"index.html":{}}}],["well",{"_index":125,"title":{},"body":{"index.html":{}}}],["workspace",{"_index":36,"title":{},"body":{"dependencies.html":{}}}],["yes",{"_index":57,"title":{},"body":{"miscellaneous/functions.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/lib/validation/create-test-class-with-decorators.ts\n            \n            function\n            createTestClassWithWithSinglePropertyDecorators\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/validation/extract-constraints.ts\n            \n            function\n            extractConstraints\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/validation/test-class-with-single-property.ts\n            \n            type alias\n            TestClassWithSingleProperty\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/validation/transform-and-validate.ts\n            \n            function\n            transformAndValidate\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @puq/debug : workspace:^\n        \n            @puq/is : workspace:^\n        \n            @swc/helpers : ^0.5.15\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createTestClassWithWithSinglePropertyDecorators   (src/.../create-test-class-with-decorators.ts)\n                        \n                        \n                            extractConstraints   (src/.../extract-constraints.ts)\n                        \n                        \n                            transformAndValidate   (src/.../transform-and-validate.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/validation/create-test-class-with-decorators.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createTestClassWithWithSinglePropertyDecorators\n                        \n                    \n                \n            \n            \n                \ncreateTestClassWithWithSinglePropertyDecorators(options: PropertyOptions, ClassDecoratorFactory, PropertyDecoratorFactory)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        PropertyOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ClassDecoratorFactory\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                PropertyDecoratorFactory\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Type>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/validation/extract-constraints.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        extractConstraints\n                        \n                    \n                \n            \n            \n                \nextractConstraints(errors?)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                errors\n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/validation/transform-and-validate.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        transformAndValidate\n                        \n                    \n                \n            \n            \n                \ntransformAndValidate(targetClass: Type, targetValue: SomeRecord, expectedErrors)\n                \n            \n\n\n\n\n            \n                \n                        Transform and validate value by instance. And check the expectedErrors matches with the actualErrors\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                targetClass\n                                            \n                                                        Type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \ntarget class\n\n\n                                            \n                                        \n                                        \n                                                targetValue\n                                            \n                                                        SomeRecord\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \ntarget value\n\n\n                                            \n                                        \n                                        \n                                                expectedErrors\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nlist of constraints to be expected\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n@puq/testing\nSummary\nThe library offers a collection of robust utilities designed to enhance test quality, streamline testing processes, and minimize the time and effort required for effective test implementation.\nInstall\nExample :  pnpm add -D @puq/testingFunding\nThank you for using @puq/testing It's an open-source project, and maintaining it takes time and effort. If you find this library useful, please consider supporting its ongoing development. Your contributions help ensure that the project stays up-to-date, secure, and well-maintained.\nInstant Funding\nYour funding will go toward\n\nBug fixes and updates to ensure compatibility with the latest versions of dependencies.\nNew features that will make the library even more powerful.\nDocumentation improvements to help users get the most out of [Your Library Name].\nGeneral maintenance to keep the library running smoothly and securely.\n\nContact to the developer: [robert.brightline@gmail.com]\nSupport the developer\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.4.20\n        \n            Description : The library offers a collection of robust utilities designed to enhance test quality, streamline testing processes, and minimize the time and effort required for effective test implementation.\n        \n            Keywords : puq, testing, test-utilities\n        \n            Homepage : https://rbrightline.github.io/puq/testing\n        \n            Bugs : https://rbrightline.github.io\n        \n            License : MIT\n        \n            Repository : https://github.com/rbrightline/puq/tree/main\n        \n            Author : Robert Brightline\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            TestClassWithSingleProperty   (src/.../test-class-with-single-property.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/validation/test-class-with-single-property.ts\n    \n    \n        \n            \n                \n                    \n                    TestClassWithSingleProperty\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
