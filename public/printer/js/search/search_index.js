var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/coverage.html",[0,1.888]],["body/coverage.html",[0,1.162,1,1.162,2,1.626,3,1.213,4,1.626,5,1.626,6,1.213,7,1.213,8,1.213,9,2.54,10,1.162,11,3.553,12,0.115,13,3.553,14,1.626,15,0.857,16,1.626,17,1.626,18,2.277,19,2.277,20,2.277,21,1.162,22,1.162,23,1.646,24,1.646,25,1.162,26,1.646,27,1.162,28,1.646,29,1.162,30,2.277,31,1.162,32,1.162,33,1.162,34,1.162,35,1.162,36,1.162,37,1.626,38,1.626,39,0.073,40,0.073]],["title/dependencies.html",[41,1.21,42,1.248]],["body/dependencies.html",[12,0.115,39,0.102,40,0.102,42,1.685,43,2.689,44,2.689,45,2.689,46,2.689,47,2.286,48,2.689]],["title/miscellaneous/functions.html",[49,0.655,50,1.693]],["body/miscellaneous/functions.html",[3,1.658,6,0.392,7,1.658,8,0.66,9,0.894,10,0.894,12,0.109,15,0.66,18,1.358,19,2.117,20,1.833,21,0.894,22,0.894,23,1.358,24,1.358,25,0.894,26,1.358,27,0.894,28,1.358,29,0.894,30,1.358,31,0.894,32,0.894,33,0.894,34,0.894,35,0.894,39,0.04,40,0.04,49,0.288,50,0.532,51,0.392,52,0.532,53,2.296,54,2.296,55,0.744,56,1.251,57,2.442,58,0.744,59,1.406,60,0.744,61,1.41,62,2.962,63,1.638,64,2.117,65,1.658,66,3.146,67,2.962,68,2.902,69,0.744,70,3.146,71,0.744,72,0.66,73,1.62,74,0.744,75,0.744,76,0.744,77,2.834,78,1.251,79,2.902,80,0.744,81,1.899,82,1.251,83,0.744,84,0.744,85,0.744,86,0.744,87,0.744,88,0.744,89,0.744,90,0.744,91,0.744,92,0.744,93,0.744,94,0.744,95,0.744,96,0.392,97,0.744,98,0.744,99,0.744,100,2.442,101,1.251,102,1.001,103,0.392,104,0.744,105,0.744,106,0.744,107,1.251,108,1.251,109,0.744,110,0.744,111,1.251,112,0.744,113,0.744]],["title/index.html",[51,0.892,114,1.693,115,1.693]],["body/index.html",[1,1.213,12,0.094,36,1.213,39,0.076,40,0.076,42,0.894,59,1.561,61,1.058,63,1.561,65,0.894,72,0.894,102,0.894,103,0.894,116,2.372,117,1.697,118,1.213,119,2.228,120,1.213,121,1.213,122,1.213,123,1.696,124,1.213,125,1.213,126,1.213,127,1.213,128,1.213,129,1.213,130,1.213,131,1.697,132,1.697,133,1.697,134,1.697,135,1.697,136,1.697,137,1.697,138,1.697,139,1.697,140,1.697,141,2.372,142,1.697,143,1.697,144,1.697,145,1.697,146,1.697,147,1.697,148,1.697,149,1.697,150,1.697,151,1.697,152,1.697,153,1.697,154,2.372,155,2.372,156,1.697,157,1.697,158,1.697,159,1.697,160,1.697,161,1.697,162,1.697,163,2.372,164,1.697,165,1.697,166,1.697,167,1.697,168,1.697,169,1.697,170,1.697,171,1.697,172,1.697,173,1.697,174,1.697,175,1.697,176,1.697,177,1.697,178,1.697,179,1.697,180,1.697,181,1.697,182,1.697,183,1.697,184,1.697,185,1.697,186,1.697,187,2.372,188,1.697,189,1.697]],["title/modules.html",[190,1.888]],["body/modules.html",[12,0.106,39,0.106,40,0.106,190,2.065]],["title/overview.html",[191,1.888]],["body/overview.html",[12,0.106,39,0.106,40,0.106,191,2.065]],["title/properties.html",[41,1.21,96,1.248]],["body/properties.html",[12,0.117,39,0.088,40,0.088,47,1.513,59,1.709,61,1.184,63,1.614,64,1.513,65,1.116,72,1.116,96,1.116,102,1.116,103,1.116,118,1.513,119,1.513,120,1.513,121,1.513,122,1.513,123,1.969,124,1.513,125,1.513,126,1.513,127,1.513,128,1.513,129,1.513,130,1.513,192,2.117,193,2.117,194,2.117,195,2.117,196,2.117,197,2.117,198,2.117,199,2.117,200,2.117,201,2.117,202,2.117,203,2.117,204,2.117,205,2.117,206,2.117]],["title/miscellaneous/typealiases.html",[49,0.655,207,2.369]],["body/miscellaneous/typealiases.html",[3,1.391,6,1.391,7,1.667,8,1.667,12,0.112,15,1.667,39,0.101,40,0.101,49,1.021,51,1.391,52,1.887,61,1.021,208,2.639]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":16,"title":{},"body":{"coverage.html":{}}}],["0.5.15",{"_index":44,"title":{},"body":{"dependencies.html":{}}}],["0.5.30",{"_index":47,"title":{},"body":{"dependencies.html":{},"properties.html":{}}}],["0/1",{"_index":17,"title":{},"body":{"coverage.html":{}}}],["1/1",{"_index":13,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":11,"title":{},"body":{"coverage.html":{}}}],["actual",{"_index":107,"title":{},"body":{"miscellaneous/functions.html":{}}}],["add",{"_index":134,"title":{},"body":{"index.html":{}}}],["alias",{"_index":14,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":208,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["applicable",{"_index":88,"title":{},"body":{"miscellaneous/functions.html":{}}}],["author",{"_index":204,"title":{},"body":{"properties.html":{}}}],["based",{"_index":86,"title":{},"body":{"miscellaneous/functions.html":{}}}],["brightline",{"_index":206,"title":{},"body":{"properties.html":{}}}],["bug",{"_index":166,"title":{},"body":{"index.html":{}}}],["bugs",{"_index":198,"title":{},"body":{"properties.html":{}}}],["category",{"_index":111,"title":{},"body":{"miscellaneous/functions.html":{}}}],["code",{"_index":93,"title":{},"body":{"miscellaneous/functions.html":{}}}],["column",{"_index":103,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["compatibility",{"_index":169,"title":{},"body":{"index.html":{}}}],["consider",{"_index":149,"title":{},"body":{"index.html":{}}}],["contact",{"_index":186,"title":{},"body":{"index.html":{}}}],["contributions",{"_index":153,"title":{},"body":{"index.html":{}}}],["convert",{"_index":76,"title":{},"body":{"miscellaneous/functions.html":{}}}],["coverage",{"_index":0,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["date",{"_index":158,"title":{},"body":{"index.html":{}}}],["decorator",{"_index":19,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["decorator.ts",{"_index":24,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["decoratorname",{"_index":101,"title":{},"body":{"miscellaneous/functions.html":{}}}],["definition",{"_index":100,"title":{},"body":{"miscellaneous/functions.html":{}}}],["definition.ts",{"_index":26,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["definitions",{"_index":123,"title":{},"body":{"index.html":{},"properties.html":{}}}],["dependencies",{"_index":42,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["description",{"_index":64,"title":{},"body":{"miscellaneous/functions.html":{},"properties.html":{}}}],["determine",{"_index":113,"title":{},"body":{"miscellaneous/functions.html":{}}}],["developer",{"_index":187,"title":{},"body":{"index.html":{}}}],["development",{"_index":152,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dto",{"_index":126,"title":{},"body":{"index.html":{},"properties.html":{}}}],["effort",{"_index":145,"title":{},"body":{"index.html":{}}}],["empty",{"_index":60,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ensure",{"_index":155,"title":{},"body":{"index.html":{}}}],["entity",{"_index":72,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["entity's",{"_index":74,"title":{},"body":{"miscellaneous/functions.html":{}}}],["even",{"_index":174,"title":{},"body":{"index.html":{}}}],["example",{"_index":132,"title":{},"body":{"index.html":{}}}],["extracts",{"_index":85,"title":{},"body":{"miscellaneous/functions.html":{}}}],["factory",{"_index":82,"title":{},"body":{"miscellaneous/functions.html":{}}}],["features",{"_index":172,"title":{},"body":{"index.html":{}}}],["file",{"_index":2,"title":{},"body":{"coverage.html":{}}}],["find",{"_index":146,"title":{},"body":{"index.html":{}}}],["fixes",{"_index":167,"title":{},"body":{"index.html":{}}}],["function",{"_index":9,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":50,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funding",{"_index":163,"title":{},"body":{"index.html":{}}}],["general",{"_index":180,"title":{},"body":{"index.html":{}}}],["getoptionalmarker",{"_index":10,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getoptionalmarker(options",{"_index":55,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gettargetclassname",{"_index":31,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["gettargetclassname(options",{"_index":69,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gettargetstring",{"_index":21,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["gettargetstring(options",{"_index":84,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getting",{"_index":114,"title":{"index.html":{}},"body":{}}],["go",{"_index":164,"title":{},"body":{"index.html":{}}}],["handling",{"_index":95,"title":{},"body":{"miscellaneous/functions.html":{}}}],["help",{"_index":154,"title":{},"body":{"index.html":{}}}],["homepage",{"_index":196,"title":{},"body":{"properties.html":{}}}],["https://github.com/rbrightline/puq/tree/main",{"_index":203,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io",{"_index":199,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io/puq/printer",{"_index":197,"title":{},"body":{"properties.html":{}}}],["identifier",{"_index":4,"title":{},"body":{"coverage.html":{}}}],["improvements",{"_index":177,"title":{},"body":{"index.html":{}}}],["index",{"_index":51,"title":{"index.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["inspect",{"_index":87,"title":{},"body":{"miscellaneous/functions.html":{}}}],["install",{"_index":131,"title":{},"body":{"index.html":{}}}],["instant",{"_index":162,"title":{},"body":{"index.html":{}}}],["it's",{"_index":138,"title":{},"body":{"index.html":{}}}],["json",{"_index":77,"title":{},"body":{"miscellaneous/functions.html":{}}}],["keep",{"_index":182,"title":{},"body":{"index.html":{}}}],["keywords",{"_index":193,"title":{},"body":{"properties.html":{}}}],["latest",{"_index":170,"title":{},"body":{"index.html":{}}}],["library",{"_index":119,"title":{},"body":{"index.html":{},"properties.html":{}}}],["license",{"_index":200,"title":{},"body":{"properties.html":{}}}],["link",{"_index":68,"title":{},"body":{"miscellaneous/functions.html":{}}}],["maintained",{"_index":161,"title":{},"body":{"index.html":{}}}],["maintaining",{"_index":142,"title":{},"body":{"index.html":{}}}],["maintenance",{"_index":181,"title":{},"body":{"index.html":{}}}],["make",{"_index":173,"title":{},"body":{"index.html":{}}}],["mark",{"_index":58,"title":{},"body":{"miscellaneous/functions.html":{}}}],["marker.ts",{"_index":8,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["matching",{"_index":40,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["miscellaneous",{"_index":49,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["mit",{"_index":201,"title":{},"body":{"properties.html":{}}}],["modules",{"_index":190,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":175,"title":{},"body":{"index.html":{}}}],["name",{"_index":63,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["name:string",{"_index":125,"title":{},"body":{"index.html":{},"properties.html":{}}}],["new",{"_index":36,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["ongoing",{"_index":151,"title":{},"body":{"index.html":{}}}],["open",{"_index":139,"title":{},"body":{"index.html":{}}}],["option",{"_index":81,"title":{},"body":{"miscellaneous/functions.html":{}}}],["optional",{"_index":7,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["optionalorrequiredmark",{"_index":15,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["options",{"_index":65,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["options.ts",{"_index":20,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["original",{"_index":98,"title":{},"body":{"miscellaneous/functions.html":{}}}],["otherwise",{"_index":90,"title":{},"body":{"miscellaneous/functions.html":{}}}],["out",{"_index":179,"title":{},"body":{"index.html":{}}}],["overview",{"_index":191,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":41,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":62,"title":{},"body":{"miscellaneous/functions.html":{}}}],["peer",{"_index":45,"title":{},"body":{"dependencies.html":{}}}],["plain",{"_index":124,"title":{},"body":{"index.html":{},"properties.html":{}}}],["please",{"_index":148,"title":{},"body":{"index.html":{}}}],["pnpm",{"_index":133,"title":{},"body":{"index.html":{}}}],["powerful",{"_index":176,"title":{},"body":{"index.html":{}}}],["printer",{"_index":195,"title":{},"body":{"properties.html":{}}}],["project",{"_index":141,"title":{},"body":{"index.html":{}}}],["projects",{"_index":130,"title":{},"body":{"index.html":{},"properties.html":{}}}],["properties",{"_index":96,"title":{"properties.html":{}},"body":{"miscellaneous/functions.html":{},"properties.html":{}}}],["property",{"_index":59,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["propertydecorator",{"_index":25,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["propertydecorator(decoratorname",{"_index":99,"title":{},"body":{"miscellaneous/functions.html":{}}}],["propertydecoratoroptions",{"_index":22,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["propertydecoratoroptions(options",{"_index":91,"title":{},"body":{"miscellaneous/functions.html":{}}}],["propertydefinition",{"_index":27,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["propertydefinition(options",{"_index":104,"title":{},"body":{"miscellaneous/functions.html":{}}}],["propertyoptions",{"_index":66,"title":{},"body":{"miscellaneous/functions.html":{}}}],["propertytype",{"_index":29,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["propertytype(options",{"_index":105,"title":{},"body":{"miscellaneous/functions.html":{}}}],["puq",{"_index":194,"title":{},"body":{"properties.html":{}}}],["puq/error",{"_index":46,"title":{},"body":{"dependencies.html":{}}}],["puq/is",{"_index":48,"title":{},"body":{"dependencies.html":{}}}],["puq/printer",{"_index":116,"title":{},"body":{"index.html":{}}}],["puq/printerfunding",{"_index":135,"title":{},"body":{"index.html":{}}}],["relation",{"_index":73,"title":{},"body":{"miscellaneous/functions.html":{}}}],["relation's",{"_index":71,"title":{},"body":{"miscellaneous/functions.html":{}}}],["relationdecorator",{"_index":33,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["relationdecorator(decoratorname",{"_index":109,"title":{},"body":{"miscellaneous/functions.html":{}}}],["relationdecoratoroptions",{"_index":32,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["relationdecoratoroptions(options",{"_index":75,"title":{},"body":{"miscellaneous/functions.html":{}}}],["relationdefinition",{"_index":34,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["relationdefinition(options",{"_index":110,"title":{},"body":{"miscellaneous/functions.html":{}}}],["relationoptions",{"_index":70,"title":{},"body":{"miscellaneous/functions.html":{}}}],["relationtype",{"_index":35,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["relationtype(options",{"_index":112,"title":{},"body":{"miscellaneous/functions.html":{}}}],["replace",{"_index":80,"title":{},"body":{"miscellaneous/functions.html":{}}}],["replaces",{"_index":97,"title":{},"body":{"miscellaneous/functions.html":{}}}],["replacetargetwithfunction",{"_index":23,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["replacetargetwithfunction(json",{"_index":78,"title":{},"body":{"miscellaneous/functions.html":{}}}],["repository",{"_index":202,"title":{},"body":{"properties.html":{}}}],["resolve",{"_index":106,"title":{},"body":{"miscellaneous/functions.html":{}}}],["results",{"_index":39,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":57,"title":{},"body":{"miscellaneous/functions.html":{}}}],["returns",{"_index":67,"title":{},"body":{"miscellaneous/functions.html":{}}}],["robert",{"_index":205,"title":{},"body":{"properties.html":{}}}],["robert.brightline@gmail.com",{"_index":188,"title":{},"body":{"index.html":{}}}],["running",{"_index":183,"title":{},"body":{"index.html":{}}}],["secure",{"_index":159,"title":{},"body":{"index.html":{}}}],["securely",{"_index":185,"title":{},"body":{"index.html":{}}}],["serializes",{"_index":92,"title":{},"body":{"miscellaneous/functions.html":{}}}],["smoothly",{"_index":184,"title":{},"body":{"index.html":{}}}],["source",{"_index":140,"title":{},"body":{"index.html":{}}}],["special",{"_index":94,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../get",{"_index":52,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../property",{"_index":54,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../relation",{"_index":53,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/lib/get",{"_index":6,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/property",{"_index":18,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/relation",{"_index":30,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["started",{"_index":115,"title":{"index.html":{}},"body":{}}],["statements",{"_index":5,"title":{},"body":{"coverage.html":{}}}],["stays",{"_index":156,"title":{},"body":{"index.html":{}}}],["string",{"_index":61,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["such",{"_index":102,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["summary",{"_index":117,"title":{},"body":{"index.html":{}}}],["support",{"_index":189,"title":{},"body":{"index.html":{}}}],["supporting",{"_index":150,"title":{},"body":{"index.html":{}}}],["swc/helpers",{"_index":43,"title":{},"body":{"dependencies.html":{}}}],["t",{"_index":56,"title":{},"body":{"miscellaneous/functions.html":{}}}],["table",{"_index":38,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":37,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":143,"title":{},"body":{"index.html":{}}}],["target",{"_index":79,"title":{},"body":{"miscellaneous/functions.html":{}}}],["thank",{"_index":136,"title":{},"body":{"index.html":{}}}],["time",{"_index":144,"title":{},"body":{"index.html":{}}}],["toward",{"_index":165,"title":{},"body":{"index.html":{}}}],["transforms",{"_index":120,"title":{},"body":{"index.html":{},"properties.html":{}}}],["type",{"_index":3,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["type.ts",{"_index":28,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["type:'string",{"_index":121,"title":{},"body":{"index.html":{},"properties.html":{}}}],["typealiases",{"_index":207,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typescript",{"_index":108,"title":{},"body":{"miscellaneous/functions.html":{}}}],["typescript/javascript",{"_index":129,"title":{},"body":{"index.html":{},"properties.html":{}}}],["undefined",{"_index":89,"title":{},"body":{"miscellaneous/functions.html":{}}}],["up",{"_index":157,"title":{},"body":{"index.html":{}}}],["updated",{"_index":83,"title":{},"body":{"miscellaneous/functions.html":{}}}],["updates",{"_index":168,"title":{},"body":{"index.html":{}}}],["useful",{"_index":147,"title":{},"body":{"index.html":{}}}],["users",{"_index":178,"title":{},"body":{"index.html":{}}}],["using",{"_index":137,"title":{},"body":{"index.html":{}}}],["utility",{"_index":118,"title":{},"body":{"index.html":{},"properties.html":{}}}],["various",{"_index":122,"title":{},"body":{"index.html":{},"properties.html":{}}}],["version",{"_index":192,"title":{},"body":{"properties.html":{}}}],["versions",{"_index":171,"title":{},"body":{"index.html":{}}}],["view",{"_index":127,"title":{},"body":{"index.html":{},"properties.html":{}}}],["viewcolumn",{"_index":128,"title":{},"body":{"index.html":{},"properties.html":{}}}],["well",{"_index":160,"title":{},"body":{"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/lib/get-optional-marker.ts\n            \n            function\n            getOptionalMarker\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/get-optional-marker.ts\n            \n            type alias\n            OptionalOrRequiredMark\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/property-decorator-options.ts\n            \n            function\n            getTargetString\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/property-decorator-options.ts\n            \n            function\n            propertyDecoratorOptions\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/property-decorator-options.ts\n            \n            function\n            replaceTargetWithFunction\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/property-decorator.ts\n            \n            function\n            propertyDecorator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/property-definition.ts\n            \n            function\n            propertyDefinition\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/property-type.ts\n            \n            function\n            propertyType\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/relation-decorator-options.ts\n            \n            function\n            getTargetClassName\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/relation-decorator-options.ts\n            \n            function\n            relationDecoratorOptions\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/relation-decorator-options.ts\n            \n            function\n            replaceTargetWithFunction\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/relation-decorator.ts\n            \n            function\n            relationDecorator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/relation-definition.ts\n            \n            function\n            relationDefinition\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/relation-type.ts\n            \n            function\n            relationType\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @swc/helpers : ^0.5.15\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @puq/error : ^0.5.30\n        \n            @puq/is : ^0.5.30\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getOptionalMarker   (src/.../get-optional-marker.ts)\n                        \n                        \n                            getTargetClassName   (src/.../relation-decorator-options.ts)\n                        \n                        \n                            getTargetString   (src/.../property-decorator-options.ts)\n                        \n                        \n                            propertyDecorator   (src/.../property-decorator.ts)\n                        \n                        \n                            propertyDecoratorOptions   (src/.../property-decorator-options.ts)\n                        \n                        \n                            propertyDefinition   (src/.../property-definition.ts)\n                        \n                        \n                            propertyType   (src/.../property-type.ts)\n                        \n                        \n                            relationDecorator   (src/.../relation-decorator.ts)\n                        \n                        \n                            relationDecoratorOptions   (src/.../relation-decorator-options.ts)\n                        \n                        \n                            relationDefinition   (src/.../relation-definition.ts)\n                        \n                        \n                            relationType   (src/.../relation-type.ts)\n                        \n                        \n                            replaceTargetWithFunction   (src/.../property-decorator-options.ts)\n                        \n                        \n                            replaceTargetWithFunction   (src/.../relation-decorator-options.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/get-optional-marker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getOptionalMarker\n                        \n                    \n                \n            \n            \n                \ngetOptionalMarker(options: T)\n                \n            \n\n\n\n\n            \n                \n                        Return optional mark for optional property or empty string\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nPropertyOptions\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         OptionalOrRequiredMark\n\n                        \n                            \n                                \n{@link OptionalOrRequiredMark}\n\n\n                            \n                \n            \n        \n    \n    src/lib/relation-decorator-options.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getTargetClassName\n                        \n                    \n                \n            \n            \n                \ngetTargetClassName(options: RelationOptions)\n                \n            \n\n\n\n\n            \n                \n                        Return the relation's entity name\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        RelationOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nRelationOptions\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n{@link string} relation entity's name\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        relationDecoratorOptions\n                        \n                    \n                \n            \n            \n                \nrelationDecoratorOptions(options: RelationOptions)\n                \n            \n\n\n\n\n            \n                \n                        Convert RelationOptions into JSON string\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        RelationOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nRelationOptions\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n{@link string} JSON string\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        replaceTargetWithFunction\n                        \n                    \n                \n            \n            \n                \nreplaceTargetWithFunction(json: string, target: string)\n                \n            \n\n\n\n\n            \n                \n                        Replace target option in the json string with a factory function ()=>Target\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                json\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nstring json string\n\n\n                                            \n                                        \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n{@link string} JSON string with updated target option\n\n\n                            \n                \n            \n        \n    \n    src/lib/property-decorator-options.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getTargetString\n                        \n                    \n                \n            \n            \n                \ngetTargetString(options: PropertyOptions)\n                \n            \n\n\n\n\n            \n                \n                        Extracts target string from options based on type\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        PropertyOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Property options to inspect\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Target string if applicable, undefined otherwise\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        propertyDecoratorOptions\n                        \n                    \n                \n            \n            \n                \npropertyDecoratorOptions(options: PropertyOptions)\n                \n            \n\n\n\n\n            \n                \n                        Serializes property decorator options to a JSON-CODE string with special handling for target properties\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        PropertyOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nPropertyOptions\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n{@link string} JSON string\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        replaceTargetWithFunction\n                        \n                    \n                \n            \n            \n                \nreplaceTargetWithFunction(json: string, target: string)\n                \n            \n\n\n\n\n            \n                \n                        Replaces target option string with factory function\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                json\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Original JSON string\n\n                                            \n                                        \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nstring target option in PropertyOptions\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n{@link string} JSON string\n\n\n                            \n                \n            \n        \n    \n    src/lib/property-decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        propertyDecorator\n                        \n                    \n                \n            \n            \n                \npropertyDecorator(decoratorName: string, options: PropertyOptions)\n                \n            \n\n\n\n\n            \n                \n                        Return property decorator definition\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                decoratorName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nstring such as Property, Column, Entity\n\n\n                                            \n                                        \n                                        \n                                                options\n                                            \n                                                        PropertyOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nPropertyOptions\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n{@link string} decorator definition such as\n\n\n                            \n                \n            \n        \n    \n    src/lib/property-definition.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        propertyDefinition\n                        \n                    \n                \n            \n            \n                \npropertyDefinition(options: PropertyOptions)\n                \n            \n\n\n\n\n            \n                \n                        Return property definition\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        PropertyOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nPropertyOptions\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n{@link string} property definition such as name: string;\n\n\n                            \n                \n            \n        \n    \n    src/lib/property-type.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        propertyType\n                        \n                    \n                \n            \n            \n                \npropertyType(options: PropertyOptions)\n                \n            \n\n\n\n\n            \n                \n                        Resolve the type options in PropertyOptions into actual typescript property type and return it\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        PropertyOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nPropertyOptions\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n{@link string}\n\n\n                            \n                \n            \n        \n    \n    src/lib/relation-decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        relationDecorator\n                        \n                    \n                \n            \n            \n                \nrelationDecorator(decoratorName: string, options: RelationOptions)\n                \n            \n\n\n\n\n            \n                \n                        Return relation decorator definition\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                decoratorName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nstring\n\n\n                                            \n                                        \n                                        \n                                                options\n                                            \n                                                        RelationOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nRelationOptions\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n{@link string} decorator definition\n\n\n                            \n                \n            \n        \n    \n    src/lib/relation-definition.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        relationDefinition\n                        \n                    \n                \n            \n            \n                \nrelationDefinition(options: RelationOptions)\n                \n            \n\n\n\n\n            \n                \n                        Return relation property definition such as category: Category;\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        RelationOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nRelationOptions\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n{@link string}\n\n\n                            \n                \n            \n        \n    \n    src/lib/relation-type.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        relationType\n                        \n                    \n                \n            \n            \n                \nrelationType(options: RelationOptions)\n                \n            \n\n\n\n\n            \n                \n                        Determine the actual typescript type for RelationOptions\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        RelationOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nRelationOptions\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n{@link string}\n\n\n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n@puq/printer\nSummary\nA utility library that transforms property options such as { type:'string'} into various property definitions like plain (name: string), entity (@Column() name:string), dto (@Property() name: string), or view (@ViewColumn() name: string) property definitions for TypeScript/JavaScript projects.\nInstall\nExample :  pnpm add @puq/printerFunding\nThank you for using @puq/printer It's an open-source project, and maintaining it takes time and effort. If you find this library useful, please consider supporting its ongoing development. Your contributions help ensure that the project stays up-to-date, secure, and well-maintained.\nInstant Funding\nYour funding will go toward\n\nBug fixes and updates to ensure compatibility with the latest versions of dependencies.\nNew features that will make the library even more powerful.\nDocumentation improvements to help users get the most out of [Your Library Name].\nGeneral maintenance to keep the library running smoothly and securely.\n\nContact to the developer: [robert.brightline@gmail.com]\nSupport the developer\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.5.30\n        \n            Description : A utility library that transforms property options such as `{ type:'string'}` into various property definitions like plain (`name: string`), entity (`@Column() name:string`), dto (`@Property() name: string`), or view (`@ViewColumn() name: string`) property definitions for TypeScript/JavaScript projects.\n        \n            Keywords : puq, printer\n        \n            Homepage : https://rbrightline.github.io/puq/printer\n        \n            Bugs : https://rbrightline.github.io\n        \n            License : MIT\n        \n            Repository : https://github.com/rbrightline/puq/tree/main\n        \n            Author : Robert Brightline\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            OptionalOrRequiredMark   (src/.../get-optional-marker.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/get-optional-marker.ts\n    \n    \n        \n            \n                \n                    \n                    OptionalOrRequiredMark\n                \n            \n            \n                \n                        string | \"?\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
