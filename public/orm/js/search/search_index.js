var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/entities/AttributeRelation.html",[0,0.233,1,0.951]],["body/entities/AttributeRelation.html",[0,0.38,1,1.398,2,0.645,3,0.239,4,0.211,5,0.183,6,2.306,7,1.35,8,0.156,9,0.435,10,1.58,11,1.398,12,0.321,13,0.028,14,1.366,15,0.435,16,2.333,17,2.969,18,0.306,19,2.689,20,2.689,21,0.476,22,0.53,23,0.53,24,0.365,25,1.484,26,0.925,27,0.925,28,1.642,29,0.925,30,1.339,31,0.925,32,0.497,33,0.382,34,1.274,35,1.274,36,1.104,37,3.448,38,1.301,39,1.274,40,1.758,41,1.274,42,1.342,43,0.746,44,0.805,45,0.749,46,1.471,47,1.58,48,1.007,49,1.484,50,0.936,51,0.555,52,1.083,53,1.733,54,1.636,55,1.613,56,1.613,57,1.58,58,1.163,59,1.342,60,1.733,61,1.58,62,0.925,63,0.925,64,0.925,65,0.016,66,0.016]],["title/entities/AttributeRelation-1.html",[0,0.196,1,0.801,67,1.338]],["body/entities/AttributeRelation-1.html",[0,0.387,1,1.434,2,0.681,3,0.253,4,0.222,5,0.193,8,0.165,9,0.453,10,1.629,11,1.434,12,0.321,13,0.028,14,1.374,15,0.453,18,0.318,21,0.487,22,0.551,23,0.551,24,0.386,25,1.517,26,0.977,27,0.977,28,1.657,29,0.977,30,1.364,31,0.977,32,0.506,33,0.389,34,1.314,35,1.314,36,1.128,38,1.334,39,1.314,40,1.784,41,1.314,42,1.396,43,0.788,44,0.838,45,0.768,46,1.517,47,1.629,48,1.048,49,1.517,50,0.974,51,0.586,52,1.126,53,1.778,54,1.661,55,1.655,56,1.655,57,1.629,58,1.21,59,1.396,60,1.778,61,1.629,62,0.977,63,0.977,64,0.977,65,0.017,66,0.017,68,1.426,69,2.427,70,2.84,71,2.84]],["title/classes/BaseEntity.html",[30,0.822,33,0.235]],["body/classes/BaseEntity.html",[0,0.392,2,1.162,3,0.327,4,0.288,5,0.25,8,0.213,9,0.54,12,0.308,13,0.028,15,0.643,18,0.451,21,0.513,23,0.782,24,0.499,30,1.3,32,0.431,33,0.251,36,1.189,45,0.546,52,1.787,65,0.02,66,0.02,72,0.701,73,2.71,74,1.019,75,4.844,76,2.893,77,5.043,78,5.043,79,5.043,80,3.574,81,3.804,82,2.244,83,3.577,84,1.845,85,3.673,86,3.673,87,3.673,88,3.673,89,3.673,90,3.673,91,3.092,92,3.092,93,3.673,94,1.263,95,4.844,96,4.844,97,4.844,98,1.462,99,2.71,100,3.673,101,2.71,102,2.71,103,3.092]],["title/classes/BaseEntityService.html",[33,0.235,104,2.263]],["body/classes/BaseEntityService.html",[3,0.421,4,0.37,5,0.321,12,0.294,13,0.028,18,0.37,21,0.505,32,0.421,33,0.323,65,0.023,66,0.023,72,0.902,83,3.119,94,1.625,98,1.88,104,3.748,105,4.78,106,3.978,107,4.725,108,4.725,109,5.522,110,4.725,111,2.826,112,2.581,113,2.027,114,4.725,115,4.725]],["title/classes/BaseIdEntity.html",[33,0.235,81,2.263]],["body/classes/BaseIdEntity.html",[3,0.407,4,0.358,5,0.311,8,0.265,9,0.62,12,0.29,13,0.028,15,0.51,18,0.358,21,0.534,23,0.756,24,0.621,32,0.407,33,0.313,44,0.943,45,0.827,65,0.023,66,0.023,72,0.873,76,3.012,81,3.672,82,2.578,84,1.463,91,3.847,94,1.572,98,1.818,116,4.684,117,3.847,118,5.999,119,4.569,120,5.564]],["title/classes/BaseView.html",[33,0.235,121,2.529]],["body/classes/BaseView.html",[0,0.348,3,0.356,4,0.313,5,0.272,8,0.232,9,0.571,12,0.313,13,0.028,15,0.664,18,0.466,21,0.356,32,0.356,33,0.274,44,1.057,45,0.761,52,1.853,65,0.021,66,0.021,72,0.764,74,1.109,76,3.089,77,4.754,78,4.754,79,4.754,80,3.777,99,3.777,121,3.777,122,3.367,123,4.31,124,5.119,125,4.31,126,5.953,127,3.999,128,3.999,129,3.999,130,3.999,131,4.54,132,3.999,133,3.999]],["title/classes/CommonQueryDto.html",[33,0.235,134,2.529]],["body/classes/CommonQueryDto.html",[3,0.388,4,0.341,5,0.296,8,0.253,9,0.602,12,0.261,13,0.028,15,0.486,18,0.341,21,0.388,22,0.834,23,0.733,24,0.591,32,0.388,33,0.298,46,1.966,51,1.115,54,1.499,56,1.729,65,0.022,66,0.022,72,0.831,74,1.629,84,1.394,113,2.317,134,3.985,135,4.548,136,2.844,137,3.213,138,4.548,139,5.872,140,5.401,141,5.401,142,5.401,143,3.985,144,5.401,145,4.354]],["title/classes/CountResultDto.html",[33,0.235,146,2.529]],["body/classes/CountResultDto.html",[3,0.392,4,0.345,5,0.299,8,0.255,9,0.606,12,0.285,13,0.028,15,0.491,18,0.345,21,0.484,22,0.738,23,0.738,24,0.598,32,0.392,33,0.301,44,1.122,45,0.916,51,1.122,65,0.022,66,0.022,72,0.84,74,1.637,82,2.519,84,1.409,94,1.514,136,2.519,146,4.011,147,4.577,148,2.905,149,3.786,150,4.011,151,4.967,152,5.436,153,3.247]],["title/classes/DeleteResultDto.html",[33,0.235,154,2.529]],["body/classes/DeleteResultDto.html",[3,0.388,4,0.341,5,0.296,8,0.253,9,0.602,12,0.284,13,0.028,15,0.486,18,0.341,21,0.481,22,0.834,23,0.733,24,0.591,32,0.388,33,0.298,44,1.115,45,0.913,51,1.115,65,0.022,66,0.022,72,0.831,74,1.629,82,2.503,84,1.394,94,1.498,148,2.874,150,3.985,153,3.213,154,3.985,155,4.548,156,5.169,157,5.872,158,4.657,159,3.985]],["title/classes/EntityQueryService.html",[33,0.235,160,2.263]],["body/classes/EntityQueryService.html",[0,0.35,2,0.967,3,0.25,4,0.22,5,0.191,8,0.163,12,0.294,13,0.028,18,0.444,21,0.504,32,0.25,33,0.192,36,0.832,38,1.328,45,0.7,65,0.017,66,0.017,72,0.537,74,1.307,76,2.582,83,1.856,94,0.967,98,1.603,99,2.074,101,2.973,104,3.109,111,3.388,112,3.096,113,2.43,136,2.922,149,2.816,151,2.367,160,2.66,161,4.913,162,2.367,163,4.029,164,3.392,165,2.973,166,5.117,167,2.41,168,3.392,169,3.392,170,3.392,171,3.392,172,3.392,173,4.331,174,2.811,175,3.94,176,3.392,177,3.392,178,4.771,179,2.811,180,3.392,181,5.256,182,2.811,183,3.392,184,2.811,185,3.392,186,3.392,187,2.811,188,3.392,189,3.392,190,2.811,191,4.71,192,2.367,193,2.811,194,4.71,195,2.367,196,4.181,197,2.811,198,2.973,199,2.41,200,4.029,201,5.666,202,3.965,203,4.029,204,2.973,205,4.029,206,2.811,207,2.811,208,2.811]],["title/classes/EntityService.html",[33,0.235,209,2.529]],["body/classes/EntityService.html",[0,0.375,2,0.791,3,0.191,4,0.168,5,0.146,8,0.124,12,0.305,13,0.028,18,0.483,21,0.401,25,1.53,32,0.191,33,0.147,36,0.68,38,0.851,45,0.873,65,0.014,66,0.014,67,2.087,72,0.41,74,1.114,76,2.839,83,1.416,92,4.32,94,0.738,98,0.854,101,3.323,111,3.684,112,3.365,113,2.642,136,2.476,149,1.971,156,2.775,158,3.323,160,3.733,164,2.775,165,2.432,166,5.305,167,1.971,168,2.775,169,2.775,170,2.775,171,2.775,172,1.806,173,2.775,175,4.066,176,5.082,177,1.806,178,3.379,180,1.806,181,4.32,183,1.806,185,1.806,186,2.775,188,2.775,189,1.806,196,4.173,202,3.792,209,2.432,210,1.806,211,3.296,212,3.296,213,3.296,214,3.296,215,3.296,216,3.296,217,3.296,218,3.296,219,2.775,220,3.296,221,4.861,222,2.145,223,3.296,224,2.145,225,3.296,226,2.145,227,3.296,228,5.343,229,2.145,230,3.296,231,2.145,232,3.296,233,2.145,234,3.296,235,2.145,236,3.296,237,3.792,238,2.145,239,3.296,240,4.504,241,2.145,242,2.145,243,2.145,244,2.145,245,2.145,246,2.145,247,2.145,248,2.145,249,2.145,250,1.806,251,2.145,252,2.145,253,2.145,254,2.145,255,2.145,256,2.145,257,4.013,258,4.092,259,4.504,260,4.504,261,4.504,262,4.504,263,2.145,264,2.145,265,2.145,266,2.145]],["title/classes/HttpErrorDto.html",[33,0.235,267,1.873]],["body/classes/HttpErrorDto.html",[3,0.378,4,0.332,5,0.289,8,0.246,9,0.593,12,0.294,13,0.028,14,1.256,15,0.593,18,0.416,21,0.378,22,0.722,23,0.788,24,0.576,32,0.378,33,0.29,44,1.097,45,0.79,65,0.022,66,0.022,72,0.81,74,1.177,84,1.702,138,4.475,267,2.904,268,4.886,269,2.538,270,4.015,271,5.315,272,6.264,273,5.804,274,4.243,275,3.573,276,5.315,277,4.475]],["title/classes/IDDto.html",[33,0.235,278,2.529]],["body/classes/IDDto.html",[3,0.416,4,0.366,5,0.318,8,0.271,9,0.629,12,0.273,13,0.028,15,0.521,18,0.366,21,0.416,22,0.766,23,0.766,24,0.634,32,0.416,33,0.32,44,1.164,45,0.838,54,1.565,55,1.806,65,0.023,66,0.023,67,2.613,72,0.892,76,3.041,84,1.496,278,4.161,279,3.934,280,4.748,281,4.672]],["title/entities/ManyRelation.html",[0,0.233,39,0.951]],["body/entities/ManyRelation.html",[0,0.383,1,1.291,2,0.66,3,0.245,4,0.215,5,0.187,6,1.992,7,1.381,8,0.16,9,0.442,10,0.946,11,1.101,12,0.32,13,0.028,14,1.36,15,0.307,16,1.645,17,2.959,18,0.215,21,0.481,22,0.539,23,0.539,24,0.374,25,1.498,26,0.946,27,0.946,28,1.649,29,0.946,30,1.349,31,0.946,32,0.501,33,0.385,34,1.291,35,1.291,36,1.114,37,3.463,38,1.314,39,1.413,40,1.83,41,1.291,42,1.365,43,0.763,44,0.819,45,0.757,46,1.49,47,1.6,48,1.024,49,1.498,50,0.952,51,0.568,52,1.101,53,1.752,54,1.647,55,1.631,56,1.631,57,1.6,58,1.182,59,1.365,60,1.752,61,1.6,62,0.946,63,0.946,64,0.946,65,0.016,66,0.016,282,2.751]],["title/entities/ManyRelation-1.html",[0,0.196,39,0.801,67,1.338]],["body/entities/ManyRelation-1.html",[0,0.389,1,1.328,2,0.694,3,0.258,4,0.227,5,0.197,8,0.168,9,0.459,10,0.996,11,1.141,12,0.321,13,0.028,14,1.368,15,0.323,18,0.227,21,0.49,22,0.559,23,0.559,24,0.393,25,1.528,26,0.996,27,0.996,28,1.662,29,0.996,30,1.373,31,0.996,32,0.509,33,0.391,34,1.328,35,1.328,36,1.137,38,1.345,39,1.446,40,1.85,41,1.328,42,1.415,43,0.803,44,0.849,45,0.775,46,1.533,47,1.646,48,1.062,49,1.528,50,0.987,51,0.597,52,1.141,53,1.793,54,1.669,55,1.669,56,1.669,57,1.646,58,1.226,59,1.415,60,1.793,61,1.646,62,0.996,63,0.996,64,0.996,65,0.017,66,0.017,68,1.453,69,1.731,283,2.894]],["title/entities/OneRelation.html",[0,0.233,35,0.951]],["body/entities/OneRelation.html",[0,0.383,1,1.291,2,0.66,3,0.245,4,0.215,5,0.187,6,1.992,7,1.381,8,0.16,9,0.442,10,0.946,11,1.101,12,0.32,13,0.028,14,1.36,15,0.307,16,1.645,17,2.959,18,0.215,21,0.481,22,0.539,23,0.539,24,0.374,25,1.498,26,0.946,27,0.946,28,1.649,29,0.946,30,1.349,31,0.946,32,0.501,33,0.385,34,1.291,35,1.413,36,1.114,37,3.463,38,1.452,39,1.291,40,1.769,41,1.291,42,1.365,43,0.763,44,0.819,45,0.757,46,1.49,47,1.6,48,1.024,49,1.498,50,0.952,51,0.568,52,1.101,53,1.752,54,1.647,55,1.631,56,1.631,57,1.6,58,1.182,59,1.365,60,1.752,61,1.6,62,0.946,63,0.946,64,0.946,65,0.016,66,0.016,284,2.751]],["title/entities/OneRelation-1.html",[0,0.196,35,0.801,67,1.338]],["body/entities/OneRelation-1.html",[0,0.389,1,1.328,2,0.694,3,0.258,4,0.227,5,0.197,8,0.168,9,0.459,10,0.996,11,1.141,12,0.321,13,0.028,14,1.368,15,0.323,18,0.227,21,0.49,22,0.559,23,0.559,24,0.393,25,1.528,26,0.996,27,0.996,28,1.662,29,0.996,30,1.373,31,0.996,32,0.509,33,0.391,34,1.328,35,1.446,36,1.137,38,1.477,39,1.328,40,1.793,41,1.328,42,1.415,43,0.803,44,0.849,45,0.775,46,1.533,47,1.646,48,1.062,49,1.528,50,0.987,51,0.597,52,1.141,53,1.793,54,1.669,55,1.669,56,1.669,57,1.646,58,1.226,59,1.415,60,1.793,61,1.646,62,0.996,63,0.996,64,0.996,65,0.017,66,0.017,68,1.453,69,1.731,285,2.894]],["title/entities/OwnerRelation.html",[0,0.233,41,0.951]],["body/entities/OwnerRelation.html",[0,0.383,1,1.291,2,0.66,3,0.245,4,0.215,5,0.187,6,1.992,7,1.381,8,0.16,9,0.442,10,0.946,11,1.101,12,0.32,13,0.028,14,1.36,15,0.307,16,1.645,17,2.959,18,0.215,21,0.481,22,0.539,23,0.539,24,0.374,25,1.498,26,0.946,27,0.946,28,1.649,29,0.946,30,1.349,31,0.946,32,0.501,33,0.385,34,1.291,35,1.291,36,1.114,37,3.463,38,1.314,39,1.291,40,1.769,41,1.413,42,1.752,43,0.763,44,0.819,45,0.757,46,1.49,47,1.6,48,1.024,49,1.498,50,0.952,51,0.568,52,1.101,53,1.752,54,1.647,55,1.631,56,1.631,57,1.6,58,1.182,59,1.365,60,1.752,61,1.6,62,0.946,63,0.946,64,0.946,65,0.016,66,0.016,286,2.751]],["title/entities/OwnerRelation-1.html",[0,0.196,41,0.801,67,1.338]],["body/entities/OwnerRelation-1.html",[0,0.389,1,1.328,2,0.694,3,0.258,4,0.227,5,0.197,8,0.168,9,0.459,10,0.996,11,1.141,12,0.321,13,0.028,14,1.368,15,0.323,18,0.227,21,0.49,22,0.559,23,0.559,24,0.393,25,1.528,26,0.996,27,0.996,28,1.662,29,0.996,30,1.373,31,0.996,32,0.509,33,0.391,34,1.328,35,1.328,36,1.137,38,1.345,39,1.328,40,1.793,41,1.446,42,1.793,43,0.803,44,0.849,45,0.775,46,1.533,47,1.646,48,1.062,49,1.528,50,0.987,51,0.597,52,1.141,53,1.793,54,1.669,55,1.669,56,1.669,57,1.646,58,1.226,59,1.415,60,1.793,61,1.646,62,0.996,63,0.996,64,0.996,65,0.017,66,0.017,68,1.453,69,1.731,287,2.894]],["title/classes/SingleValidationErrorDto.html",[33,0.235,288,2.05]],["body/classes/SingleValidationErrorDto.html",[3,0.267,4,0.235,5,0.204,8,0.174,9,0.47,12,0.321,13,0.028,14,1.399,15,0.47,18,0.33,21,0.434,22,0.824,23,0.906,24,0.407,32,0.434,33,0.334,36,0.619,48,1.259,49,1.354,50,0.719,51,0.619,65,0.017,66,0.017,72,0.573,74,0.832,82,2.453,84,1.351,94,1.031,113,2.271,199,2.522,267,2.304,269,1.793,270,4.007,288,3.337,289,3.221,290,2.304,291,3.048,292,3.6,293,4.27,294,3.556,295,2.998,296,2.998,297,3.112,298,3.112,299,3.112,300,2.212,301,2.212,302,1.979,303,1.979,304,2.212,305,2.212,306,2.212,307,2.212,308,2.212,309,2.212,310,2.212,311,2.212,312,2.212,313,2.212,314,1.793,315,2.212,316,2.784]],["title/classes/TableNamingStrategy.html",[33,0.235,317,2.529]],["body/classes/TableNamingStrategy.html",[3,0.325,4,0.286,5,0.248,8,0.212,12,0.278,13,0.028,14,1.41,18,0.45,21,0.325,28,1.245,32,0.325,33,0.25,36,0.995,65,0.02,66,0.02,72,0.697,74,1.012,98,1.452,111,3.437,112,3.14,113,2.465,165,3.558,175,3.794,196,4.241,258,4.06,317,3.558,318,5.032,319,3.072,320,3.183,321,4.06,322,4.823,323,4.823,324,5.402,325,4.823,326,4.823,327,4.823,328,5.402,329,4.823,330,3.649,331,4.823,332,3.649,333,5.747,334,4.823,335,3.649,336,3.649,337,5.402,338,3.649,339,4.823,340,5.747,341,3.649]],["title/entities/TestEntity.html",[0,0.233,43,0.951]],["body/entities/TestEntity.html",[0,0.343,1,1.322,2,0.493,3,0.183,4,0.161,5,0.14,6,3.002,7,1.032,8,0.119,9,0.356,10,0.707,11,0.885,12,0.323,13,0.028,14,1.331,15,0.658,16,3.252,17,2.949,18,0.462,21,0.424,22,0.433,23,0.433,24,0.279,25,1.322,26,0.707,27,0.707,28,1.561,29,0.707,30,1.21,31,0.707,32,0.449,33,0.345,34,1.322,35,1.322,36,0.984,37,3.267,38,1.404,39,1.322,40,1.837,41,1.322,42,1.515,43,0.885,44,0.984,45,0.83,46,1.685,47,1.735,48,1.23,49,1.583,50,1.143,51,0.658,52,1.322,53,1.871,54,1.71,55,1.741,56,1.741,57,1.735,58,1.312,59,1.515,60,1.871,61,1.735,62,1.097,63,0.707,64,1.344,65,0.013,66,0.013,342,2.105,343,2.055,344,3.707,345,2.055,346,2.055,347,2.055,348,2.055,349,2.055,350,2.055,351,2.055,352,2.055,353,2.055,354,2.055,355,2.055]],["title/entities/TestEntity-1.html",[0,0.196,43,0.801,67,1.338]],["body/entities/TestEntity-1.html",[0,0.353,1,1.365,2,0.529,3,0.196,4,0.173,5,0.15,8,0.128,9,0.375,10,0.758,11,0.934,12,0.32,13,0.028,14,1.343,15,0.669,18,0.47,21,0.438,22,0.457,23,0.457,24,0.299,25,1.365,26,0.758,27,0.758,28,1.584,29,0.758,30,1.244,31,0.758,32,0.462,33,0.355,34,1.365,35,1.365,36,1.016,38,1.436,39,1.365,40,1.861,41,1.365,42,1.572,43,0.934,44,1.016,45,0.848,46,1.728,47,1.784,48,1.27,49,1.614,50,1.18,51,0.695,52,1.365,53,1.914,54,1.732,55,1.781,56,1.781,57,1.784,58,1.362,59,1.572,60,1.914,61,1.784,62,1.158,63,0.758,64,1.404,65,0.014,66,0.014,68,1.107,69,3.327,342,2.222,344,3.847,356,2.205,357,2.205,358,2.205,359,2.205,360,2.205,361,2.205,362,2.205,363,2.205,364,2.205,365,2.205,366,2.205,367,2.205]],["title/classes/TestObject.html",[33,0.235,34,0.951]],["body/classes/TestObject.html",[0,0.383,1,1.293,3,0.246,4,0.216,5,0.188,6,1.996,7,1.386,8,0.16,9,0.443,10,0.949,11,1.415,12,0.319,13,0.028,14,1.361,15,0.308,17,2.938,18,0.216,21,0.481,22,0.54,23,0.54,24,0.375,25,1.5,26,0.949,27,0.949,28,1.65,29,0.949,30,1.351,31,0.949,32,0.501,33,0.385,34,1.415,35,1.293,36,1.116,37,3.465,38,1.316,39,1.293,40,1.771,41,1.293,42,1.368,43,0.766,44,0.821,45,0.758,46,1.492,47,1.603,48,1.026,49,1.5,50,0.954,51,0.57,52,1.103,53,1.755,54,1.648,55,1.633,56,1.633,57,1.603,58,1.185,59,1.368,60,1.755,61,1.603,62,0.949,63,0.949,64,0.949,65,0.016,66,0.016,72,0.527,84,0.884,368,2.76]],["title/classes/TestObject-1.html",[33,0.198,34,0.801,67,1.338]],["body/classes/TestObject-1.html",[0,0.389,1,1.328,3,0.258,4,0.227,5,0.197,8,0.168,9,0.459,10,0.996,11,1.446,12,0.321,13,0.028,14,1.368,15,0.323,18,0.227,21,0.49,22,0.559,23,0.559,24,0.393,25,1.528,26,0.996,27,0.996,28,1.662,29,0.996,30,1.373,31,0.996,32,0.509,33,0.391,34,1.446,35,1.328,36,1.137,38,1.345,39,1.328,40,1.793,41,1.328,42,1.415,43,0.803,44,0.849,45,0.775,46,1.533,47,1.646,48,1.062,49,1.528,50,0.987,51,0.597,52,1.141,53,1.793,54,1.669,55,1.669,56,1.669,57,1.646,58,1.226,59,1.415,60,1.793,61,1.646,62,0.996,63,0.996,64,0.996,65,0.017,66,0.017,68,1.453,72,0.553,84,0.927,369,2.894]],["title/classes/UpdateResultDto.html",[33,0.235,370,2.529]],["body/classes/UpdateResultDto.html",[3,0.39,4,0.343,5,0.298,8,0.254,9,0.604,12,0.285,13,0.028,15,0.488,18,0.343,21,0.482,22,0.736,23,0.736,24,0.594,32,0.39,33,0.3,44,1.119,45,0.915,51,1.119,65,0.022,66,0.022,72,0.836,74,1.633,82,2.511,84,1.402,94,1.506,148,2.889,150,3.998,153,3.23,158,4.664,159,3.998,219,5.178,250,4.955,370,3.998,371,4.562]],["title/classes/ValidationConstraintsDto.html",[33,0.235,294,2.05]],["body/classes/ValidationConstraintsDto.html",[3,0.216,4,0.19,5,0.165,8,0.141,9,0.404,12,0.323,13,0.028,14,1.413,15,0.683,18,0.48,21,0.385,22,0.778,23,0.872,24,0.33,32,0.385,33,0.296,36,0.502,48,0.935,49,1.005,50,0.583,51,0.502,65,0.015,66,0.015,72,0.464,74,0.674,82,2.224,84,1.962,94,0.836,113,2.823,199,2.166,267,1.979,269,1.453,270,3.553,275,2.046,288,2.87,289,4.088,290,1.327,291,2.804,292,2.672,293,3.541,294,3.07,297,1.793,298,3.195,299,2.672,300,1.793,301,1.793,302,2.858,303,2.858,304,3.195,305,3.195,306,3.195,307,3.195,308,3.195,309,3.195,310,3.195,311,3.195,312,3.195,313,3.195,314,1.453,315,1.793,316,2.391,372,2.43,373,2.43,374,2.43,375,2.43,376,2.43,377,2.43,378,2.43,379,2.43,380,2.43,381,2.43,382,2.43]],["title/classes/ValidationErrorDto.html",[33,0.235,314,2.05]],["body/classes/ValidationErrorDto.html",[3,0.276,4,0.243,5,0.211,8,0.18,9,0.482,12,0.321,13,0.028,14,1.398,15,0.346,18,0.243,21,0.443,22,0.831,23,0.901,24,0.422,32,0.443,33,0.34,36,0.641,48,1.116,49,1.199,50,1.037,51,0.892,65,0.018,66,0.018,72,0.593,74,0.861,82,2.491,84,0.994,94,1.068,113,1.854,199,2.585,267,2.361,269,1.857,270,3.863,288,3.5,289,2.853,290,1.696,291,3.197,292,3.189,293,3.669,294,3.215,297,2.291,298,3.189,299,3.669,300,2.291,301,2.291,302,2.049,303,2.049,304,2.291,305,2.291,306,2.291,307,2.291,308,2.291,309,2.291,310,2.291,311,2.291,312,2.291,313,2.291,314,2.585,315,3.189,316,3.731,342,2.049,383,3.104]],["title/coverage.html",[384,3.895]],["body/coverage.html",[0,0.417,1,1.051,5,0.176,6,2.762,7,2.762,12,0.183,13,0.028,25,1.244,28,0.977,30,0.619,33,0.443,34,1.051,35,1.051,38,0.666,39,1.051,40,0.769,41,1.051,43,1.051,65,0.016,66,0.016,68,2.762,73,2.794,81,1.703,102,1.904,104,1.703,105,2.172,106,2.172,116,2.172,117,2.172,121,1.904,122,2.172,131,1.904,134,1.904,135,2.172,136,2.549,137,4.195,146,1.904,147,2.172,148,2.961,149,1.543,154,1.904,155,2.172,160,1.703,161,2.172,162,2.172,167,1.543,198,2.794,204,1.904,209,1.904,210,2.172,267,1.41,268,2.172,269,2.955,278,1.904,279,2.172,288,1.543,289,2.961,294,1.543,314,1.543,317,1.904,318,2.172,319,2.172,321,2.172,370,1.904,371,2.172,384,2.172,385,1.703,386,2.58,387,2.58,388,3.188,389,2.172,390,5.395,391,2.172,392,6.509,393,6.408,394,3.777,395,2.172,396,2.172,397,2.172,398,2.172,399,3.188,400,2.172,401,2.172,402,2.172,403,4.161,404,4.942,405,3.188,406,2.172,407,2.172,408,2.172,409,3.786,410,6.445,411,5.263,412,2.58,413,2.58,414,2.58,415,4.485,416,4.485,417,2.58,418,6.203,419,4.059,420,2.172,421,2.172,422,2.172,423,2.172,424,2.172,425,2.172,426,2.58,427,1.904,428,2.172,429,2.172,430,2.172,431,2.172,432,2.172,433,2.172,434,2.58,435,2.58,436,2.172,437,2.58,438,2.58]],["title/dependencies.html",[439,2.432,440,3.031]],["body/dependencies.html",[13,0.028,24,0.651,33,0.328,65,0.023,66,0.023,94,1.649,98,1.907,192,4.035,195,4.035,440,4.225,441,4.793,442,4.793,443,4.793,444,5.459,445,4.793,446,4.793,447,4.793,448,3.536,449,4.793,450,4.793,451,4.793,452,4.793,453,4.793,454,4.793]],["title/miscellaneous/functions.html",[455,1.578,456,3.459]],["body/miscellaneous/functions.html",[0,0.359,2,0.497,8,0.12,11,0.575,12,0.312,13,0.027,14,0.428,17,0.96,18,0.162,22,0.76,23,0.601,25,1.587,28,1.306,30,0.497,33,0.303,38,0.829,40,1.171,50,0.77,54,0.575,58,0.618,65,0.013,66,0.013,72,0.396,74,1.662,76,1.041,80,1.529,98,2.014,111,3.659,112,3.343,113,2.625,123,1.745,125,1.745,131,2.368,136,2.938,137,4.363,143,1.529,149,2.349,167,2.645,175,4.075,198,3.531,199,3.261,221,1.745,237,1.745,290,1.132,291,1.132,320,2.119,342,1.368,385,2.119,388,2.703,389,2.703,390,1.745,391,2.703,394,4.261,395,2.703,396,1.745,397,1.745,398,1.745,399,2.703,400,2.703,401,2.703,402,2.703,405,2.703,406,2.703,407,2.703,408,2.703,419,3.531,420,2.703,421,2.703,422,2.703,423,2.703,424,2.703,427,4.471,428,3.724,429,2.703,430,1.745,431,3.307,432,1.745,433,2.703,448,2.898,455,1.132,456,1.745,457,2.073,458,4.444,459,2.073,460,3.21,461,2.073,462,2.073,463,3.21,464,2.073,465,2.073,466,5.824,467,3.894,468,2.073,469,6.059,470,5.454,471,2.073,472,4.423,473,5.278,474,3.21,475,2.073,476,2.073,477,2.073,478,2.073,479,2.073,480,4.423,481,3.21,482,3.21,483,2.073,484,2.073,485,2.073,486,3.21,487,2.073,488,2.073,489,2.073,490,3.21,491,2.073,492,2.073,493,2.073,494,3.21,495,4.423,496,2.073,497,2.073,498,2.073,499,3.21,500,3.307,501,3.21,502,2.073,503,2.073,504,2.073,505,2.703,506,2.073,507,2.703,508,2.073,509,2.073,510,1.745,511,2.073,512,2.073,513,2.073,514,3.21,515,2.073,516,3.928,517,2.073,518,2.073,519,2.073,520,2.073,521,2.073,522,3.21,523,2.073,524,2.073,525,3.21,526,2.073,527,2.073,528,2.073,529,2.073,530,2.073,531,2.073]],["title/index.html",[8,0.168,532,2.889,533,2.889]],["body/index.html",[0,0.25,2,0.594,4,0.194,5,0.168,11,0.687,12,0.12,13,0.018,14,0.758,15,0.54,17,1.147,22,0.595,28,1.13,33,0.331,45,0.769,48,0.948,50,0.594,52,0.687,58,1.542,65,0.015,66,0.015,98,1.743,112,1.353,136,2.245,159,1.827,167,1.481,204,1.827,277,2.085,280,3.093,290,1.353,291,1.353,302,1.635,303,1.635,316,1.635,320,2.891,385,2.891,403,3.093,436,2.085,440,1.827,448,3.231,467,1.827,500,4.564,505,3.093,507,2.085,510,2.085,534,3.674,535,2.477,536,2.085,537,2.085,538,2.085,539,2.085,540,2.085,541,2.085,542,3.093,543,4.079,544,4.079,545,2.085,546,2.085,547,2.085,548,2.085,549,2.085,550,2.085,551,3.687,552,2.085,553,4.379,554,2.477,555,2.477,556,2.477,557,2.477,558,2.477,559,2.477,560,2.477,561,2.477,562,2.477,563,2.477,564,3.674,565,3.674,566,2.477,567,2.477,568,2.477,569,2.477,570,2.477,571,3.674,572,2.477,573,2.477,574,2.477,575,2.477,576,2.477,577,2.477,578,2.477,579,3.674,580,2.477,581,2.477,582,2.477,583,3.674,584,3.674,585,2.477,586,4.379,587,4.379,588,3.674,589,3.674,590,3.674,591,2.477,592,2.477,593,3.674,594,5.174,595,3.674,596,3.674,597,3.674,598,2.477,599,4.379,600,2.477,601,2.477,602,2.477,603,2.477,604,2.085,605,2.477,606,3.674,607,2.477,608,2.477,609,2.477,610,2.477,611,2.477,612,2.477,613,3.674,614,2.477,615,2.477,616,3.674,617,2.477,618,2.477,619,2.477,620,4.379,621,2.477,622,2.477,623,2.477,624,2.477,625,2.477,626,2.477,627,3.674,628,2.477,629,3.674,630,2.477,631,2.477,632,2.477,633,3.674,634,2.477,635,2.477,636,2.477,637,2.477,638,2.477,639,2.477,640,2.477,641,2.477,642,2.477,643,2.477,644,2.477,645,3.674,646,2.477,647,3.674,648,2.477,649,2.477,650,2.477,651,2.477,652,3.674,653,2.477,654,2.477,655,2.477,656,2.477,657,2.477,658,2.477,659,2.477,660,2.477,661,2.477,662,2.477,663,2.477,664,2.477,665,2.477,666,2.477,667,2.477,668,2.477,669,2.477,670,2.477,671,2.477,672,2.477,673,2.477,674,2.477,675,2.477,676,2.477,677,2.477,678,2.477,679,2.477,680,2.477,681,2.477,682,2.477,683,2.477,684,2.477,685,2.477,686,3.674,687,2.477,688,2.477,689,2.477,690,2.477,691,2.477,692,3.674,693,4.379,694,3.674,695,2.477,696,3.674,697,2.477,698,2.477,699,2.477,700,2.477,701,3.674,702,2.477,703,2.477,704,2.477,705,2.477,706,2.477,707,2.477,708,2.477,709,4.379,710,2.477,711,2.477,712,3.674,713,2.477,714,2.477,715,2.477,716,4.845,717,2.477,718,2.477,719,2.477,720,2.477,721,2.477,722,2.477,723,3.674,724,2.477,725,2.477,726,2.477,727,2.477,728,2.477,729,2.477,730,2.477,731,2.477,732,2.477,733,2.477,734,2.477,735,2.477,736,2.477,737,2.477,738,2.477,739,2.477,740,2.477,741,2.477,742,2.477,743,2.477,744,2.477,745,2.477,746,2.477,747,2.477,748,2.477,749,2.477,750,2.477,751,3.674,752,2.477]],["title/modules.html",[753,3.895]],["body/modules.html",[13,0.025,65,0.025,66,0.025,753,4.502]],["title/overview.html",[754,3.895]],["body/overview.html",[2,1.266,13,0.025,65,0.025,66,0.025,72,1.008,604,4.445,754,4.445,755,5.279]],["title/properties.html",[9,0.458,439,2.432]],["body/properties.html",[0,0.309,2,1.09,9,0.507,13,0.028,15,0.618,22,0.617,65,0.023,66,0.023,74,1.261,98,1.808,109,3.826,290,2.483,291,2.483,320,3,385,3.66,444,3.826,467,3.353,536,3.826,537,3.826,538,3.826,539,3.826,540,3.826,541,3.826,542,4.669,543,3.826,544,3.826,545,3.826,546,3.826,547,3.826,548,3.826,549,3.826,550,3.826,551,3.826,552,3.826,756,4.544,757,4.544,758,4.544,759,4.544,760,4.544,761,4.544,762,4.544,763,4.544,764,4.544,765,4.544,766,4.544,767,4.544,768,4.544,769,4.544]],["title/miscellaneous/typealiases.html",[455,1.578,770,4.108]],["body/miscellaneous/typealiases.html",[8,0.298,12,0.288,13,0.024,65,0.024,66,0.024,136,2.762,419,3.787,425,5.02,427,4.399,455,2.804,458,4.321,771,5.133,772,5.133]],["title/miscellaneous/variables.html",[455,1.578,773,3.459]],["body/miscellaneous/variables.html",[8,0.3,11,1.433,13,0.026,30,1.239,65,0.025,66,0.025,73,3.811,102,4.415,103,4.348,143,3.811,455,2.821,773,4.348,774,5.164]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/HttpErrorDto.html":{},"classes/IDDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":410,"title":{},"body":{"coverage.html":{}}}],["0.3.20",{"_index":452,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":449,"title":{},"body":{"dependencies.html":{}}}],["0.5.15",{"_index":442,"title":{},"body":{"dependencies.html":{}}}],["0.5.50",{"_index":444,"title":{},"body":{"dependencies.html":{},"properties.html":{}}}],["0/1",{"_index":418,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":411,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":67,"title":{"entities/AttributeRelation-1.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity-1.html":{},"classes/TestObject-1.html":{}},"body":{"classes/EntityService.html":{},"classes/IDDto.html":{}}}],["1/1",{"_index":393,"title":{},"body":{"coverage.html":{}}}],["1/13",{"_index":413,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":404,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":416,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":604,"title":{},"body":{"index.html":{},"overview.html":{}}}],["100",{"_index":392,"title":{},"body":{"coverage.html":{}}}],["11.0.0",{"_index":451,"title":{},"body":{"dependencies.html":{}}}],["11.0.11",{"_index":445,"title":{},"body":{"dependencies.html":{}}}],["16mb",{"_index":675,"title":{},"body":{"index.html":{}}}],["18",{"_index":755,"title":{},"body":{"overview.html":{}}}],["2,000",{"_index":643,"title":{},"body":{"index.html":{}}}],["2/2",{"_index":414,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":415,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":657,"title":{},"body":{"index.html":{}}}],["25",{"_index":436,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["3/3",{"_index":409,"title":{},"body":{"coverage.html":{}}}],["30,000",{"_index":628,"title":{},"body":{"index.html":{}}}],["4.0.0",{"_index":447,"title":{},"body":{"dependencies.html":{}}}],["4/16",{"_index":437,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":435,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":663,"title":{},"body":{"index.html":{}}}],["4gb",{"_index":668,"title":{},"body":{"index.html":{}}}],["50",{"_index":403,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["57",{"_index":434,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":570,"title":{},"body":{"index.html":{}}}],["7",{"_index":412,"title":{},"body":{"coverage.html":{}}}],["___viewcolumn",{"_index":520,"title":{},"body":{"miscellaneous/functions.html":{}}}],["___viewentity",{"_index":523,"title":{},"body":{"miscellaneous/functions.html":{}}}],["_tablename",{"_index":333,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["acceptstring",{"_index":144,"title":{},"body":{"classes/CommonQueryDto.html":{}}}],["accommodate",{"_index":579,"title":{},"body":{"index.html":{}}}],["accommodating",{"_index":601,"title":{},"body":{"index.html":{}}}],["achieves",{"_index":568,"title":{},"body":{"index.html":{}}}],["add",{"_index":577,"title":{},"body":{"index.html":{}}}],["add(relationid",{"_index":263,"title":{},"body":{"classes/EntityService.html":{}}}],["added",{"_index":530,"title":{},"body":{"miscellaneous/functions.html":{}}}],["addrelation",{"_index":212,"title":{},"body":{"classes/EntityService.html":{}}}],["addrelation(relation",{"_index":220,"title":{},"body":{"classes/EntityService.html":{}}}],["adjust",{"_index":653,"title":{},"body":{"index.html":{}}}],["administrative",{"_index":658,"title":{},"body":{"index.html":{}}}],["adopted",{"_index":559,"title":{},"body":{"index.html":{}}}],["affected",{"_index":158,"title":{},"body":{"classes/DeleteResultDto.html":{},"classes/EntityService.html":{},"classes/UpdateResultDto.html":{}}}],["alias",{"_index":426,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":771,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allocate",{"_index":662,"title":{},"body":{"index.html":{}}}],["allocation",{"_index":672,"title":{},"body":{"index.html":{}}}],["allowed",{"_index":595,"title":{},"body":{"index.html":{}}}],["api",{"_index":542,"title":{},"body":{"index.html":{},"properties.html":{}}}],["application",{"_index":647,"title":{},"body":{"index.html":{}}}],["apply",{"_index":705,"title":{},"body":{"index.html":{}}}],["approach",{"_index":567,"title":{},"body":{"index.html":{}}}],["array",{"_index":50,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["arraymaxsize",{"_index":313,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["arrayminsize",{"_index":312,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["associated",{"_index":573,"title":{},"body":{"index.html":{}}}],["async",{"_index":166,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{}}}],["attributerelation",{"_index":1,"title":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{}}}],["attributes",{"_index":64,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["author",{"_index":767,"title":{},"body":{"properties.html":{}}}],["availability",{"_index":623,"title":{},"body":{"index.html":{}}}],["available",{"_index":610,"title":{},"body":{"index.html":{}}}],["avoid",{"_index":684,"title":{},"body":{"index.html":{}}}],["await",{"_index":202,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{}}}],["balancing",{"_index":621,"title":{},"body":{"index.html":{}}}],["base",{"_index":99,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseView.html":{},"classes/EntityQueryService.html":{}}}],["base_entity_columns",{"_index":102,"title":{},"body":{"classes/BaseEntity.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["based",{"_index":498,"title":{},"body":{"miscellaneous/functions.html":{}}}],["baseentity",{"_index":30,"title":{"classes/BaseEntity.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["baseentityservice",{"_index":104,"title":{"classes/BaseEntityService.html":{}},"body":{"classes/BaseEntityService.html":{},"classes/EntityQueryService.html":{},"coverage.html":{}}}],["baseidentity",{"_index":81,"title":{"classes/BaseIdEntity.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"coverage.html":{}}}],["baseidentity:8",{"_index":93,"title":{},"body":{"classes/BaseEntity.html":{}}}],["baseline",{"_index":608,"title":{},"body":{"index.html":{}}}],["basemodel",{"_index":83,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{}}}],["baseview",{"_index":121,"title":{"classes/BaseView.html":{}},"body":{"classes/BaseView.html":{},"coverage.html":{}}}],["before",{"_index":635,"title":{},"body":{"index.html":{}}}],["being",{"_index":636,"title":{},"body":{"index.html":{}}}],["bigint",{"_index":47,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["boolean",{"_index":46,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/CommonQueryDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["both",{"_index":571,"title":{},"body":{"index.html":{}}}],["brightline",{"_index":769,"title":{},"body":{"properties.html":{}}}],["bug",{"_index":731,"title":{},"body":{"index.html":{}}}],["bugs",{"_index":762,"title":{},"body":{"properties.html":{}}}],["builder",{"_index":525,"title":{},"body":{"miscellaneous/functions.html":{}}}],["builder/querypartialentity.js",{"_index":249,"title":{},"body":{"classes/EntityService.html":{}}}],["capabilities",{"_index":468,"title":{},"body":{"miscellaneous/functions.html":{}}}],["capability",{"_index":486,"title":{},"body":{"miscellaneous/functions.html":{}}}],["capacity",{"_index":660,"title":{},"body":{"index.html":{}}}],["cascade",{"_index":61,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["certain",{"_index":506,"title":{},"body":{"miscellaneous/functions.html":{}}}],["class",{"_index":33,"title":{"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/HttpErrorDto.html":{},"classes/IDDto.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/HttpErrorDto.html":{},"classes/IDDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["classdecorator",{"_index":495,"title":{},"body":{"miscellaneous/functions.html":{}}}],["classes",{"_index":72,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/HttpErrorDto.html":{},"classes/IDDto.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["clear",{"_index":550,"title":{},"body":{"index.html":{},"properties.html":{}}}],["closed",{"_index":637,"title":{},"body":{"index.html":{}}}],["code",{"_index":277,"title":{},"body":{"classes/HttpErrorDto.html":{},"index.html":{}}}],["column",{"_index":28,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["column(options",{"_index":465,"title":{},"body":{"miscellaneous/functions.html":{}}}],["column({databasetype",{"_index":16,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/ManyRelation.html":{},"entities/OneRelation.html":{},"entities/OwnerRelation.html":{},"entities/TestEntity.html":{}}}],["column({type",{"_index":69,"title":{},"body":{"entities/AttributeRelation-1.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity-1.html":{}}}],["column.js",{"_index":133,"title":{},"body":{"classes/BaseView.html":{}}}],["column.ts",{"_index":400,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["columns",{"_index":80,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseView.html":{},"miscellaneous/functions.html":{}}}],["columntype",{"_index":502,"title":{},"body":{"miscellaneous/functions.html":{}}}],["common",{"_index":138,"title":{},"body":{"classes/CommonQueryDto.html":{},"classes/HttpErrorDto.html":{}}}],["commonquerydto",{"_index":134,"title":{"classes/CommonQueryDto.html":{}},"body":{"classes/CommonQueryDto.html":{},"coverage.html":{}}}],["compatibility",{"_index":734,"title":{},"body":{"index.html":{}}}],["compatible",{"_index":513,"title":{},"body":{"miscellaneous/functions.html":{}}}],["composite",{"_index":489,"title":{},"body":{"miscellaneous/functions.html":{}}}],["configuration",{"_index":589,"title":{},"body":{"index.html":{}}}],["configure",{"_index":627,"title":{},"body":{"index.html":{}}}],["configured",{"_index":667,"title":{},"body":{"index.html":{}}}],["connection",{"_index":633,"title":{},"body":{"index.html":{}}}],["connections",{"_index":594,"title":{},"body":{"index.html":{}}}],["connectiontimeoutmillis",{"_index":642,"title":{},"body":{"index.html":{}}}],["consider",{"_index":719,"title":{},"body":{"index.html":{}}}],["const",{"_index":101,"title":{},"body":{"classes/BaseEntity.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{}}}],["constraint",{"_index":491,"title":{},"body":{"miscellaneous/functions.html":{}}}],["constraints",{"_index":293,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["constructor",{"_index":107,"title":{},"body":{"classes/BaseEntityService.html":{}}}],["constructor(protected",{"_index":114,"title":{},"body":{"classes/BaseEntityService.html":{}}}],["constructor(repository",{"_index":108,"title":{},"body":{"classes/BaseEntityService.html":{}}}],["consumption",{"_index":640,"title":{},"body":{"index.html":{}}}],["contact",{"_index":750,"title":{},"body":{"index.html":{}}}],["contributions",{"_index":722,"title":{},"body":{"index.html":{}}}],["controller",{"_index":701,"title":{},"body":{"index.html":{}}}],["converted",{"_index":682,"title":{},"body":{"index.html":{}}}],["count",{"_index":149,"title":{},"body":{"classes/CountResultDto.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["count(query",{"_index":172,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{}}}],["countresult",{"_index":151,"title":{},"body":{"classes/CountResultDto.html":{},"classes/EntityQueryService.html":{}}}],["countresultdto",{"_index":146,"title":{"classes/CountResultDto.html":{}},"body":{"classes/CountResultDto.html":{},"coverage.html":{}}}],["coverage",{"_index":384,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["coverts",{"_index":526,"title":{},"body":{"miscellaneous/functions.html":{}}}],["create",{"_index":473,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createdat",{"_index":77,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseView.html":{}}}],["createdatecolumn",{"_index":95,"title":{},"body":{"classes/BaseEntity.html":{}}}],["createfindoperator",{"_index":421,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createfindoperator(query",{"_index":471,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createquerybuilder",{"_index":260,"title":{},"body":{"classes/EntityService.html":{}}}],["createquerycountdto",{"_index":422,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createquerycountdto(options",{"_index":476,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createquerymanydto",{"_index":423,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createquerymanydto(options",{"_index":477,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createqueryonedto",{"_index":424,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createqueryonedto(options",{"_index":478,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createqueryoptions",{"_index":427,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["createrelationparamdto",{"_index":406,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createrelationparamdto(relations",{"_index":479,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createunsetrelationparamdto",{"_index":408,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createunsetrelationparamdto(relations",{"_index":483,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createwhereoptiondto",{"_index":429,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createwhereoptiondto(options",{"_index":484,"title":{},"body":{"miscellaneous/functions.html":{}}}],["custom",{"_index":536,"title":{},"body":{"index.html":{},"properties.html":{}}}],["data",{"_index":500,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["database",{"_index":320,"title":{},"body":{"classes/TableNamingStrategy.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["databases",{"_index":504,"title":{},"body":{"miscellaneous/functions.html":{}}}],["databasetype",{"_index":37,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/ManyRelation.html":{},"entities/OneRelation.html":{},"entities/OwnerRelation.html":{},"entities/TestEntity.html":{},"classes/TestObject.html":{}}}],["datasource",{"_index":584,"title":{},"body":{"index.html":{}}}],["date",{"_index":52,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseView.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"index.html":{}}}],["date'})@createdatecolumn",{"_index":85,"title":{},"body":{"classes/BaseEntity.html":{}}}],["date'})@deletedatecolumn",{"_index":87,"title":{},"body":{"classes/BaseEntity.html":{}}}],["date'})@updatedatecolumn",{"_index":89,"title":{},"body":{"classes/BaseEntity.html":{}}}],["decorator",{"_index":467,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["decorator/column.js",{"_index":29,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["decorator/entity.js",{"_index":27,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["decorator/relation.js",{"_index":26,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["decorator/view",{"_index":132,"title":{},"body":{"classes/BaseView.html":{}}}],["decorators",{"_index":15,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/HttpErrorDto.html":{},"classes/IDDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"index.html":{},"properties.html":{}}}],["dedicated",{"_index":704,"title":{},"body":{"index.html":{}}}],["deeppartial",{"_index":228,"title":{},"body":{"classes/EntityService.html":{}}}],["default",{"_index":143,"title":{},"body":{"classes/CommonQueryDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defaultnamingstrategy",{"_index":324,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["define",{"_index":670,"title":{},"body":{"index.html":{}}}],["defined",{"_index":18,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/HttpErrorDto.html":{},"classes/IDDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{}}}],["defines",{"_index":592,"title":{},"body":{"index.html":{}}}],["definitions",{"_index":539,"title":{},"body":{"index.html":{},"properties.html":{}}}],["delays",{"_index":651,"title":{},"body":{"index.html":{}}}],["delete",{"_index":156,"title":{},"body":{"classes/DeleteResultDto.html":{},"classes/EntityService.html":{}}}],["delete(id",{"_index":223,"title":{},"body":{"classes/EntityService.html":{}}}],["deleted",{"_index":141,"title":{},"body":{"classes/CommonQueryDto.html":{}}}],["deletedat",{"_index":79,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseView.html":{}}}],["deletedatecolumn",{"_index":96,"title":{},"body":{"classes/BaseEntity.html":{}}}],["deleteresult",{"_index":157,"title":{},"body":{"classes/DeleteResultDto.html":{}}}],["deleteresultdto",{"_index":154,"title":{"classes/DeleteResultDto.html":{}},"body":{"classes/DeleteResultDto.html":{},"coverage.html":{}}}],["demand",{"_index":603,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":440,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["description",{"_index":74,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/HttpErrorDto.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{},"properties.html":{}}}],["determines",{"_index":630,"title":{},"body":{"index.html":{}}}],["developer",{"_index":751,"title":{},"body":{"index.html":{}}}],["development",{"_index":553,"title":{},"body":{"index.html":{}}}],["disrupting",{"_index":685,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":385,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["done",{"_index":696,"title":{},"body":{"index.html":{}}}],["driver",{"_index":501,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dto",{"_index":22,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/HttpErrorDto.html":{},"classes/IDDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["dto.ts",{"_index":137,"title":{},"body":{"classes/CommonQueryDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["dto.ts:14",{"_index":145,"title":{},"body":{"classes/CommonQueryDto.html":{}}}],["duration",{"_index":631,"title":{},"body":{"index.html":{}}}],["during",{"_index":613,"title":{},"body":{"index.html":{}}}],["eager",{"_index":53,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["efficiency",{"_index":565,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":598,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":546,"title":{},"body":{"index.html":{},"properties.html":{}}}],["effort",{"_index":715,"title":{},"body":{"index.html":{}}}],["encrypion",{"_index":695,"title":{},"body":{"index.html":{}}}],["encrypted",{"_index":703,"title":{},"body":{"index.html":{}}}],["encryption",{"_index":700,"title":{},"body":{"index.html":{}}}],["enhance",{"_index":676,"title":{},"body":{"index.html":{}}}],["enhancing",{"_index":564,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":544,"title":{},"body":{"index.html":{},"properties.html":{}}}],["ensuring",{"_index":597,"title":{},"body":{"index.html":{}}}],["entities",{"_index":2,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"miscellaneous/functions.html":{},"index.html":{},"overview.html":{},"properties.html":{}}}],["entity",{"_index":0,"title":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseView.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["entity's",{"_index":493,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entity(uniques",{"_index":485,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entity.service.js",{"_index":193,"title":{},"body":{"classes/EntityQueryService.html":{}}}],["entity.service.ts",{"_index":106,"title":{},"body":{"classes/BaseEntityService.html":{},"coverage.html":{}}}],["entity.service.ts:4",{"_index":110,"title":{},"body":{"classes/BaseEntityService.html":{}}}],["entity.ts",{"_index":401,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["entity/base.js",{"_index":31,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["entityqueryservice",{"_index":160,"title":{"classes/EntityQueryService.html":{}},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"coverage.html":{}}}],["entityqueryservice:17",{"_index":243,"title":{},"body":{"classes/EntityService.html":{}}}],["entityqueryservice:26",{"_index":244,"title":{},"body":{"classes/EntityService.html":{}}}],["entityqueryservice:35",{"_index":247,"title":{},"body":{"classes/EntityService.html":{}}}],["entityqueryservice:41",{"_index":245,"title":{},"body":{"classes/EntityService.html":{}}}],["entityqueryservice:45",{"_index":246,"title":{},"body":{"classes/EntityService.html":{}}}],["entityqueryservice:55",{"_index":242,"title":{},"body":{"classes/EntityService.html":{}}}],["entityservice",{"_index":209,"title":{"classes/EntityService.html":{}},"body":{"classes/EntityService.html":{},"coverage.html":{}}}],["error",{"_index":270,"title":{},"body":{"classes/HttpErrorDto.html":{},"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["error.dto.js",{"_index":301,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["error.dto.ts",{"_index":269,"title":{},"body":{"classes/HttpErrorDto.html":{},"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{}}}],["error.dto.ts:11",{"_index":274,"title":{},"body":{"classes/HttpErrorDto.html":{}}}],["error.dto.ts:14",{"_index":382,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:15",{"_index":380,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:16",{"_index":275,"title":{},"body":{"classes/HttpErrorDto.html":{},"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:17",{"_index":381,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:18",{"_index":379,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:19",{"_index":377,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:20",{"_index":376,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:21",{"_index":375,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:22",{"_index":378,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:23",{"_index":374,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:24",{"_index":373,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:25",{"_index":372,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:36",{"_index":296,"title":{},"body":{"classes/SingleValidationErrorDto.html":{}}}],["error.dto.ts:42",{"_index":295,"title":{},"body":{"classes/SingleValidationErrorDto.html":{}}}],["error.dto.ts:60",{"_index":383,"title":{},"body":{"classes/ValidationErrorDto.html":{}}}],["errors",{"_index":316,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"index.html":{}}}],["establish",{"_index":646,"title":{},"body":{"index.html":{}}}],["establishes",{"_index":617,"title":{},"body":{"index.html":{}}}],["even",{"_index":738,"title":{},"body":{"index.html":{}}}],["example",{"_index":575,"title":{},"body":{"index.html":{}}}],["execution",{"_index":707,"title":{},"body":{"index.html":{}}}],["export",{"_index":32,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/HttpErrorDto.html":{},"classes/IDDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["expression",{"_index":527,"title":{},"body":{"miscellaneous/functions.html":{}}}],["extend",{"_index":537,"title":{},"body":{"index.html":{},"properties.html":{}}}],["extends",{"_index":36,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["false",{"_index":56,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/CommonQueryDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["features",{"_index":737,"title":{},"body":{"index.html":{}}}],["fields",{"_index":494,"title":{},"body":{"miscellaneous/functions.html":{}}}],["file",{"_index":5,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/HttpErrorDto.html":{},"classes/IDDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{},"index.html":{}}}],["find",{"_index":167,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["find(query",{"_index":177,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{}}}],["findone",{"_index":168,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{}}}],["findone(query",{"_index":180,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{}}}],["findonebyid",{"_index":169,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{}}}],["findonebyid(id",{"_index":183,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{}}}],["findonebyidorthrow",{"_index":170,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{}}}],["findonebyidorthrow(id",{"_index":185,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{}}}],["findoneorthrow",{"_index":171,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{}}}],["findoneorthrow(query",{"_index":189,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{}}}],["findoptionswhere",{"_index":191,"title":{},"body":{"classes/EntityQueryService.html":{}}}],["firsttablename",{"_index":339,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["firsttablename}_${secondtablename",{"_index":341,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["fixes",{"_index":732,"title":{},"body":{"index.html":{}}}],["following",{"_index":588,"title":{},"body":{"index.html":{}}}],["format",{"_index":582,"title":{},"body":{"index.html":{}}}],["found",{"_index":201,"title":{},"body":{"classes/EntityQueryService.html":{}}}],["function",{"_index":390,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":456,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funding",{"_index":709,"title":{},"body":{"index.html":{}}}],["general",{"_index":744,"title":{},"body":{"index.html":{}}}],["getting",{"_index":532,"title":{"index.html":{}},"body":{}}],["go",{"_index":729,"title":{},"body":{"index.html":{}}}],["handling",{"_index":702,"title":{},"body":{"index.html":{}}}],["hashing",{"_index":694,"title":{},"body":{"index.html":{}}}],["help",{"_index":723,"title":{},"body":{"index.html":{}}}],["homepage",{"_index":760,"title":{},"body":{"properties.html":{}}}],["http",{"_index":300,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["httperrordto",{"_index":267,"title":{"classes/HttpErrorDto.html":{}},"body":{"classes/HttpErrorDto.html":{},"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{}}}],["https://github.com/rbrightline/puq/tree/main",{"_index":766,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io",{"_index":763,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io/puq/orm",{"_index":761,"title":{},"body":{"properties.html":{}}}],["id",{"_index":76,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/IDDto.html":{},"miscellaneous/functions.html":{}}}],["id.js",{"_index":100,"title":{},"body":{"classes/BaseEntity.html":{}}}],["id.ts",{"_index":117,"title":{},"body":{"classes/BaseIdEntity.html":{},"coverage.html":{}}}],["id.ts:8",{"_index":119,"title":{},"body":{"classes/BaseIdEntity.html":{}}}],["iddto",{"_index":278,"title":{"classes/IDDto.html":{}},"body":{"classes/IDDto.html":{},"coverage.html":{}}}],["identifier",{"_index":386,"title":{},"body":{"coverage.html":{}}}],["idle",{"_index":632,"title":{},"body":{"index.html":{}}}],["idletimeoutmillis",{"_index":626,"title":{},"body":{"index.html":{}}}],["idmodel",{"_index":118,"title":{},"body":{"classes/BaseIdEntity.html":{}}}],["implement",{"_index":587,"title":{},"body":{"index.html":{}}}],["implementations",{"_index":560,"title":{},"body":{"index.html":{}}}],["implements",{"_index":82,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/SingleValidationErrorDto.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["import",{"_index":21,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/HttpErrorDto.html":{},"classes/IDDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["improvements",{"_index":741,"title":{},"body":{"index.html":{}}}],["in([id",{"_index":207,"title":{},"body":{"classes/EntityQueryService.html":{}}}],["inactivity",{"_index":641,"title":{},"body":{"index.html":{}}}],["include",{"_index":140,"title":{},"body":{"classes/CommonQueryDto.html":{}}}],["includes",{"_index":124,"title":{},"body":{"classes/BaseView.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/HttpErrorDto.html":{},"classes/IDDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/HttpErrorDto.html":{},"classes/IDDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["inherited",{"_index":92,"title":{},"body":{"classes/BaseEntity.html":{},"classes/EntityService.html":{}}}],["initial",{"_index":708,"title":{},"body":{"index.html":{}}}],["insert",{"_index":63,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["install",{"_index":574,"title":{},"body":{"index.html":{}}}],["instant",{"_index":728,"title":{},"body":{"index.html":{}}}],["instead",{"_index":690,"title":{},"body":{"index.html":{}}}],["integer",{"_index":44,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/HttpErrorDto.html":{},"classes/IDDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{}}}],["integer'})@primarygeneratedcolumn",{"_index":91,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{}}}],["integrating",{"_index":541,"title":{},"body":{"index.html":{},"properties.html":{}}}],["integration",{"_index":556,"title":{},"body":{"index.html":{}}}],["interfere",{"_index":689,"title":{},"body":{"index.html":{}}}],["intuitive",{"_index":557,"title":{},"body":{"index.html":{}}}],["isarray",{"_index":311,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["isboolean",{"_index":309,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["isint",{"_index":308,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["isnumber",{"_index":307,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["isobject",{"_index":310,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["isstring",{"_index":306,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["it's",{"_index":711,"title":{},"body":{"index.html":{}}}],["items",{"_index":51,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["javascript",{"_index":683,"title":{},"body":{"index.html":{}}}],["join",{"_index":60,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["joincolumnname",{"_index":325,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["joincolumnname(relationname",{"_index":329,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["jointablecolumnname",{"_index":326,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["jointablecolumnname(_tablename",{"_index":331,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["jointableinversecolumnname",{"_index":327,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["jointableinversecolumnname(_tablename",{"_index":334,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["jointablename",{"_index":328,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["jointablename(firsttablename",{"_index":336,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["keep",{"_index":746,"title":{},"body":{"index.html":{}}}],["keeping",{"_index":607,"title":{},"body":{"index.html":{}}}],["key",{"_index":10,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["keys",{"_index":480,"title":{},"body":{"miscellaneous/functions.html":{}}}],["keywords",{"_index":757,"title":{},"body":{"properties.html":{}}}],["latency",{"_index":612,"title":{},"body":{"index.html":{}}}],["latest",{"_index":735,"title":{},"body":{"index.html":{}}}],["layer",{"_index":693,"title":{},"body":{"index.html":{}}}],["level",{"_index":548,"title":{},"body":{"index.html":{},"properties.html":{}}}],["library",{"_index":716,"title":{},"body":{"index.html":{}}}],["license",{"_index":764,"title":{},"body":{"properties.html":{}}}],["limit",{"_index":619,"title":{},"body":{"index.html":{}}}],["limitation",{"_index":580,"title":{},"body":{"index.html":{}}}],["link",{"_index":199,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{}}}],["list",{"_index":315,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["literal",{"_index":772,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["load",{"_index":142,"title":{},"body":{"classes/CommonQueryDto.html":{}}}],["low",{"_index":614,"title":{},"body":{"index.html":{}}}],["maintained",{"_index":606,"title":{},"body":{"index.html":{}}}],["maintaining",{"_index":713,"title":{},"body":{"index.html":{}}}],["maintenance",{"_index":745,"title":{},"body":{"index.html":{}}}],["make",{"_index":510,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["many",{"_index":40,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["manyrelation",{"_index":39,"title":{"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{}}}],["mapped",{"_index":545,"title":{},"body":{"index.html":{},"properties.html":{}}}],["matched",{"_index":152,"title":{},"body":{"classes/CountResultDto.html":{}}}],["matching",{"_index":66,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/HttpErrorDto.html":{},"classes/IDDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":303,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"index.html":{}}}],["max_connections",{"_index":656,"title":{},"body":{"index.html":{}}}],["maximum",{"_index":593,"title":{},"body":{"index.html":{}}}],["maxlength",{"_index":305,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["memory",{"_index":671,"title":{},"body":{"index.html":{}}}],["message",{"_index":272,"title":{},"body":{"classes/HttpErrorDto.html":{}}}],["methods",{"_index":165,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/TableNamingStrategy.html":{}}}],["milliseconds",{"_index":629,"title":{},"body":{"index.html":{}}}],["min",{"_index":302,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"index.html":{}}}],["minimizing",{"_index":638,"title":{},"body":{"index.html":{}}}],["minimum",{"_index":280,"title":{},"body":{"classes/IDDto.html":{},"index.html":{}}}],["minlength",{"_index":304,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["miscellaneous",{"_index":455,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":765,"title":{},"body":{"properties.html":{}}}],["modules",{"_index":753,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":739,"title":{},"body":{"index.html":{}}}],["name",{"_index":112,"title":{},"body":{"classes/BaseEntityService.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/TableNamingStrategy.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["names",{"_index":482,"title":{},"body":{"miscellaneous/functions.html":{}}}],["naming",{"_index":322,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["nestjs/common",{"_index":195,"title":{},"body":{"classes/EntityQueryService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":446,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":563,"title":{},"body":{"index.html":{}}}],["nestjs/typeorm",{"_index":450,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":204,"title":{},"body":{"classes/EntityQueryService.html":{},"coverage.html":{},"index.html":{}}}],["none",{"_index":511,"title":{},"body":{"miscellaneous/functions.html":{}}}],["notfoundexception",{"_index":194,"title":{},"body":{"classes/EntityQueryService.html":{}}}],["null",{"_index":59,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["number",{"_index":45,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/HttpErrorDto.html":{},"classes/IDDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"index.html":{}}}],["numbers",{"_index":677,"title":{},"body":{"index.html":{}}}],["numeric",{"_index":679,"title":{},"body":{"index.html":{}}}],["object",{"_index":48,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"index.html":{}}}],["object.keys(new",{"_index":103,"title":{},"body":{"classes/BaseEntity.html":{},"miscellaneous/variables.html":{}}}],["of(id",{"_index":262,"title":{},"body":{"classes/EntityService.html":{}}}],["ondelete",{"_index":57,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["one",{"_index":38,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["onerelation",{"_index":35,"title":{"entities/OneRelation.html":{},"entities/OneRelation-1.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{}}}],["ongoing",{"_index":721,"title":{},"body":{"index.html":{}}}],["onupdate",{"_index":62,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["open",{"_index":620,"title":{},"body":{"index.html":{}}}],["operation",{"_index":159,"title":{},"body":{"classes/DeleteResultDto.html":{},"classes/UpdateResultDto.html":{},"index.html":{}}}],["operations",{"_index":686,"title":{},"body":{"index.html":{}}}],["operator",{"_index":474,"title":{},"body":{"miscellaneous/functions.html":{}}}],["operator.ts",{"_index":420,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["optimal",{"_index":666,"title":{},"body":{"index.html":{}}}],["optimize",{"_index":585,"title":{},"body":{"index.html":{}}}],["option",{"_index":428,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["optional",{"_index":113,"title":{},"body":{"classes/BaseEntityService.html":{},"classes/CommonQueryDto.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":469,"title":{},"body":{"miscellaneous/functions.html":{}}}],["options.ts",{"_index":425,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["orm",{"_index":759,"title":{},"body":{"properties.html":{}}}],["out",{"_index":743,"title":{},"body":{"index.html":{}}}],["overloading",{"_index":625,"title":{},"body":{"index.html":{}}}],["override",{"_index":340,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["overview",{"_index":754,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":42,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["ownerrelation",{"_index":41,"title":{"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{}}}],["package",{"_index":439,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["paired",{"_index":561,"title":{},"body":{"index.html":{}}}],["param",{"_index":198,"title":{},"body":{"classes/EntityQueryService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["parameters",{"_index":111,"title":{},"body":{"classes/BaseEntityService.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/TableNamingStrategy.html":{},"miscellaneous/functions.html":{}}}],["peak",{"_index":602,"title":{},"body":{"index.html":{}}}],["peer",{"_index":443,"title":{},"body":{"dependencies.html":{}}}],["per",{"_index":673,"title":{},"body":{"index.html":{}}}],["performance",{"_index":586,"title":{},"body":{"index.html":{}}}],["periods",{"_index":616,"title":{},"body":{"index.html":{}}}],["pick",{"_index":497,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pickcolumntype",{"_index":391,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["pickcolumntype(options",{"_index":496,"title":{},"body":{"miscellaneous/functions.html":{}}}],["picks",{"_index":509,"title":{},"body":{"miscellaneous/functions.html":{}}}],["picktransformer",{"_index":395,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["picktransformer(options",{"_index":503,"title":{},"body":{"miscellaneous/functions.html":{}}}],["please",{"_index":718,"title":{},"body":{"index.html":{}}}],["pnpm",{"_index":576,"title":{},"body":{"index.html":{}}}],["pool",{"_index":596,"title":{},"body":{"index.html":{}}}],["poolsize",{"_index":591,"title":{},"body":{"index.html":{}}}],["postgres",{"_index":583,"title":{},"body":{"index.html":{}}}],["postgres.conf",{"_index":655,"title":{},"body":{"index.html":{}}}],["postgresql",{"_index":654,"title":{},"body":{"index.html":{}}}],["powerful",{"_index":740,"title":{},"body":{"index.html":{}}}],["prebuilt",{"_index":524,"title":{},"body":{"miscellaneous/functions.html":{}}}],["precision",{"_index":681,"title":{},"body":{"index.html":{}}}],["preservation",{"_index":680,"title":{},"body":{"index.html":{}}}],["prevent",{"_index":624,"title":{},"body":{"index.html":{}}}],["preventing",{"_index":649,"title":{},"body":{"index.html":{}}}],["primarygeneratedcolumn",{"_index":120,"title":{},"body":{"classes/BaseIdEntity.html":{}}}],["primitive",{"_index":512,"title":{},"body":{"miscellaneous/functions.html":{}}}],["process",{"_index":566,"title":{},"body":{"index.html":{}}}],["project",{"_index":712,"title":{},"body":{"index.html":{}}}],["prolonged",{"_index":650,"title":{},"body":{"index.html":{}}}],["promise",{"_index":176,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{}}}],["properties",{"_index":9,"title":{"properties.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/HttpErrorDto.html":{},"classes/IDDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"properties.html":{}}}],["property",{"_index":23,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/HttpErrorDto.html":{},"classes/IDDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{}}}],["property({type",{"_index":84,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/HttpErrorDto.html":{},"classes/IDDto.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["propertydecorator",{"_index":470,"title":{},"body":{"miscellaneous/functions.html":{}}}],["propertyoptions",{"_index":466,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provided",{"_index":499,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provides",{"_index":75,"title":{},"body":{"classes/BaseEntity.html":{}}}],["providing",{"_index":549,"title":{},"body":{"index.html":{},"properties.html":{}}}],["puq",{"_index":758,"title":{},"body":{"properties.html":{}}}],["puq/is",{"_index":453,"title":{},"body":{"dependencies.html":{}}}],["puq/meta",{"_index":454,"title":{},"body":{"dependencies.html":{}}}],["puq/orm",{"_index":534,"title":{},"body":{"index.html":{}}}],["puq/ormsqlite",{"_index":578,"title":{},"body":{"index.html":{}}}],["puq/property",{"_index":24,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/HttpErrorDto.html":{},"classes/IDDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"dependencies.html":{}}}],["puq/query",{"_index":192,"title":{},"body":{"classes/EntityQueryService.html":{},"dependencies.html":{}}}],["puq/type",{"_index":94,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/SingleValidationErrorDto.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"dependencies.html":{}}}],["query",{"_index":136,"title":{},"body":{"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["query.service.js",{"_index":251,"title":{},"body":{"classes/EntityService.html":{}}}],["query.service.ts",{"_index":162,"title":{},"body":{"classes/EntityQueryService.html":{},"coverage.html":{}}}],["query.service.ts:17",{"_index":179,"title":{},"body":{"classes/EntityQueryService.html":{}}}],["query.service.ts:26",{"_index":182,"title":{},"body":{"classes/EntityQueryService.html":{}}}],["query.service.ts:35",{"_index":190,"title":{},"body":{"classes/EntityQueryService.html":{}}}],["query.service.ts:41",{"_index":184,"title":{},"body":{"classes/EntityQueryService.html":{}}}],["query.service.ts:45",{"_index":187,"title":{},"body":{"classes/EntityQueryService.html":{}}}],["query.service.ts:55",{"_index":174,"title":{},"body":{"classes/EntityQueryService.html":{}}}],["querycount",{"_index":173,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{}}}],["querydeeppartialentity",{"_index":240,"title":{},"body":{"classes/EntityService.html":{}}}],["querymany",{"_index":178,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{}}}],["queryone",{"_index":181,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{}}}],["ram",{"_index":665,"title":{},"body":{"index.html":{}}}],["read",{"_index":163,"title":{},"body":{"classes/EntityQueryService.html":{}}}],["readily",{"_index":609,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":115,"title":{},"body":{"classes/BaseEntityService.html":{}}}],["record",{"_index":475,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reduce",{"_index":611,"title":{},"body":{"index.html":{}}}],["reduction",{"_index":569,"title":{},"body":{"index.html":{}}}],["refrain",{"_index":687,"title":{},"body":{"index.html":{}}}],["related",{"_index":297,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["relation",{"_index":25,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/EntityService.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["relation(options",{"_index":515,"title":{},"body":{"miscellaneous/functions.html":{}}}],["relation(relationname",{"_index":261,"title":{},"body":{"classes/EntityService.html":{}}}],["relation({type",{"_index":344,"title":{},"body":{"entities/TestEntity.html":{},"entities/TestEntity-1.html":{}}}],["relationid",{"_index":257,"title":{},"body":{"classes/EntityService.html":{}}}],["relationname",{"_index":258,"title":{},"body":{"classes/EntityService.html":{},"classes/TableNamingStrategy.html":{}}}],["relationoptions",{"_index":516,"title":{},"body":{"miscellaneous/functions.html":{}}}],["relationparam",{"_index":221,"title":{},"body":{"classes/EntityService.html":{},"miscellaneous/functions.html":{}}}],["relations",{"_index":481,"title":{},"body":{"miscellaneous/functions.html":{}}}],["remains",{"_index":634,"title":{},"body":{"index.html":{}}}],["remove(relationid",{"_index":264,"title":{},"body":{"classes/EntityService.html":{}}}],["removerelation",{"_index":213,"title":{},"body":{"classes/EntityService.html":{}}}],["removerelation(relation",{"_index":225,"title":{},"body":{"classes/EntityService.html":{}}}],["repository",{"_index":109,"title":{},"body":{"classes/BaseEntityService.html":{},"properties.html":{}}}],["required",{"_index":55,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/IDDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["resource",{"_index":599,"title":{},"body":{"index.html":{}}}],["responsiveness",{"_index":648,"title":{},"body":{"index.html":{}}}],["result",{"_index":150,"title":{},"body":{"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/UpdateResultDto.html":{}}}],["result.dto.ts",{"_index":148,"title":{},"body":{"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/UpdateResultDto.html":{},"coverage.html":{}}}],["result.dto.ts:13",{"_index":153,"title":{},"body":{"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/UpdateResultDto.html":{}}}],["results",{"_index":65,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/HttpErrorDto.html":{},"classes/IDDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":196,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/TableNamingStrategy.html":{}}}],["returns",{"_index":175,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/TableNamingStrategy.html":{},"miscellaneous/functions.html":{}}}],["robert",{"_index":768,"title":{},"body":{"properties.html":{}}}],["robert.brightline@gmail.com",{"_index":752,"title":{},"body":{"index.html":{}}}],["running",{"_index":747,"title":{},"body":{"index.html":{}}}],["safe",{"_index":698,"title":{},"body":{"index.html":{}}}],["save",{"_index":214,"title":{},"body":{"classes/EntityService.html":{}}}],["save(entity",{"_index":227,"title":{},"body":{"classes/EntityService.html":{}}}],["savemany",{"_index":215,"title":{},"body":{"classes/EntityService.html":{}}}],["savemany(entities",{"_index":230,"title":{},"body":{"classes/EntityService.html":{}}}],["seamlessly",{"_index":540,"title":{},"body":{"index.html":{},"properties.html":{}}}],["secondtablename",{"_index":337,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["secure",{"_index":726,"title":{},"body":{"index.html":{}}}],["securely",{"_index":749,"title":{},"body":{"index.html":{}}}],["select",{"_index":518,"title":{},"body":{"miscellaneous/functions.html":{}}}],["selectbaseentity",{"_index":522,"title":{},"body":{"miscellaneous/functions.html":{}}}],["selectquerybuilder",{"_index":528,"title":{},"body":{"miscellaneous/functions.html":{}}}],["selecttransformer",{"_index":431,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["server",{"_index":652,"title":{},"body":{"index.html":{}}}],["server's",{"_index":664,"title":{},"body":{"index.html":{}}}],["service",{"_index":164,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{}}}],["set",{"_index":58,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["set(null",{"_index":266,"title":{},"body":{"classes/EntityService.html":{}}}],["set(relationid",{"_index":265,"title":{},"body":{"classes/EntityService.html":{}}}],["setrelation",{"_index":216,"title":{},"body":{"classes/EntityService.html":{}}}],["setrelation(relation",{"_index":232,"title":{},"body":{"classes/EntityService.html":{}}}],["sets",{"_index":644,"title":{},"body":{"index.html":{}}}],["settings",{"_index":590,"title":{},"body":{"index.html":{}}}],["shared_buffers",{"_index":661,"title":{},"body":{"index.html":{}}}],["single",{"_index":290,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["singlevalidationerror",{"_index":292,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["singlevalidationerrordto",{"_index":288,"title":{"classes/SingleValidationErrorDto.html":{}},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{}}}],["smoothly",{"_index":748,"title":{},"body":{"index.html":{}}}],["softdelete",{"_index":217,"title":{},"body":{"classes/EntityService.html":{}}}],["softdelete(id",{"_index":234,"title":{},"body":{"classes/EntityService.html":{}}}],["sort",{"_index":674,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/HttpErrorDto.html":{},"classes/IDDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"index.html":{}}}],["specifies",{"_index":605,"title":{},"body":{"index.html":{}}}],["specify",{"_index":492,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sqlite",{"_index":17,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/ManyRelation.html":{},"entities/OneRelation.html":{},"entities/OwnerRelation.html":{},"entities/TestEntity.html":{},"classes/TestObject.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["sqlite3.ts",{"_index":7,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/ManyRelation.html":{},"entities/OneRelation.html":{},"entities/OwnerRelation.html":{},"entities/TestEntity.html":{},"classes/TestObject.html":{},"coverage.html":{}}}],["sqlite3.ts:14",{"_index":284,"title":{},"body":{"entities/OneRelation.html":{}}}],["sqlite3.ts:19",{"_index":282,"title":{},"body":{"entities/ManyRelation.html":{}}}],["sqlite3.ts:24",{"_index":286,"title":{},"body":{"entities/OwnerRelation.html":{}}}],["sqlite3.ts:29",{"_index":19,"title":{},"body":{"entities/AttributeRelation.html":{}}}],["sqlite3.ts:30",{"_index":20,"title":{},"body":{"entities/AttributeRelation.html":{}}}],["sqlite3.ts:35",{"_index":355,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:36",{"_index":349,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:37",{"_index":351,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:38",{"_index":347,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:39",{"_index":346,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:45",{"_index":352,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:51",{"_index":343,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:52",{"_index":348,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:62",{"_index":353,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:72",{"_index":350,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:83",{"_index":354,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:9",{"_index":368,"title":{},"body":{"classes/TestObject.html":{}}}],["sqlite3.ts:93",{"_index":345,"title":{},"body":{"entities/TestEntity.html":{}}}],["src/.../base.ts",{"_index":774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../column.ts",{"_index":457,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../create",{"_index":458,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../entity.ts",{"_index":459,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../pick",{"_index":460,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../relation.ts",{"_index":461,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../select",{"_index":462,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../view",{"_index":463,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../where",{"_index":464,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/lib/common/pick",{"_index":388,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/decorator/column.ts",{"_index":396,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/decorator/entity.ts",{"_index":397,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/decorator/relation.ts",{"_index":398,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/decorator/view",{"_index":399,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/dto/count",{"_index":147,"title":{},"body":{"classes/CountResultDto.html":{},"coverage.html":{}}}],["src/lib/dto/create",{"_index":405,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/dto/delete",{"_index":155,"title":{},"body":{"classes/DeleteResultDto.html":{},"coverage.html":{}}}],["src/lib/dto/http",{"_index":268,"title":{},"body":{"classes/HttpErrorDto.html":{},"coverage.html":{}}}],["src/lib/dto/id.dto.ts",{"_index":279,"title":{},"body":{"classes/IDDto.html":{},"coverage.html":{}}}],["src/lib/dto/id.dto.ts:6",{"_index":281,"title":{},"body":{"classes/IDDto.html":{}}}],["src/lib/dto/update",{"_index":371,"title":{},"body":{"classes/UpdateResultDto.html":{},"coverage.html":{}}}],["src/lib/dto/validation",{"_index":289,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{}}}],["src/lib/entity/base",{"_index":116,"title":{},"body":{"classes/BaseIdEntity.html":{},"coverage.html":{}}}],["src/lib/entity/base.ts",{"_index":73,"title":{},"body":{"classes/BaseEntity.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/entity/base.ts:12",{"_index":86,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/lib/entity/base.ts:16",{"_index":90,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/lib/entity/base.ts:20",{"_index":88,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/lib/factory/naming",{"_index":318,"title":{},"body":{"classes/TableNamingStrategy.html":{},"coverage.html":{}}}],["src/lib/integration/better",{"_index":6,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/ManyRelation.html":{},"entities/OneRelation.html":{},"entities/OwnerRelation.html":{},"entities/TestEntity.html":{},"classes/TestObject.html":{},"coverage.html":{}}}],["src/lib/integration/postgres.ts",{"_index":68,"title":{},"body":{"entities/AttributeRelation-1.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity-1.html":{},"classes/TestObject-1.html":{},"coverage.html":{}}}],["src/lib/integration/postgres.ts:14",{"_index":285,"title":{},"body":{"entities/OneRelation-1.html":{}}}],["src/lib/integration/postgres.ts:19",{"_index":283,"title":{},"body":{"entities/ManyRelation-1.html":{}}}],["src/lib/integration/postgres.ts:24",{"_index":287,"title":{},"body":{"entities/OwnerRelation-1.html":{}}}],["src/lib/integration/postgres.ts:29",{"_index":70,"title":{},"body":{"entities/AttributeRelation-1.html":{}}}],["src/lib/integration/postgres.ts:30",{"_index":71,"title":{},"body":{"entities/AttributeRelation-1.html":{}}}],["src/lib/integration/postgres.ts:35",{"_index":367,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:36",{"_index":361,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:37",{"_index":363,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:38",{"_index":359,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:39",{"_index":358,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:40",{"_index":364,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:41",{"_index":356,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:42",{"_index":360,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:52",{"_index":365,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:62",{"_index":362,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:73",{"_index":366,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:83",{"_index":357,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:9",{"_index":369,"title":{},"body":{"classes/TestObject-1.html":{}}}],["src/lib/query/common",{"_index":135,"title":{},"body":{"classes/CommonQueryDto.html":{},"coverage.html":{}}}],["src/lib/query/create",{"_index":419,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/query/select",{"_index":430,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/query/where",{"_index":432,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/service/base",{"_index":105,"title":{},"body":{"classes/BaseEntityService.html":{},"coverage.html":{}}}],["src/lib/service/entity",{"_index":161,"title":{},"body":{"classes/EntityQueryService.html":{},"coverage.html":{}}}],["src/lib/service/entity.service.ts",{"_index":210,"title":{},"body":{"classes/EntityService.html":{},"coverage.html":{}}}],["src/lib/service/entity.service.ts:15",{"_index":229,"title":{},"body":{"classes/EntityService.html":{}}}],["src/lib/service/entity.service.ts:19",{"_index":231,"title":{},"body":{"classes/EntityService.html":{}}}],["src/lib/service/entity.service.ts:23",{"_index":241,"title":{},"body":{"classes/EntityService.html":{}}}],["src/lib/service/entity.service.ts:27",{"_index":224,"title":{},"body":{"classes/EntityService.html":{}}}],["src/lib/service/entity.service.ts:31",{"_index":235,"title":{},"body":{"classes/EntityService.html":{}}}],["src/lib/service/entity.service.ts:35",{"_index":222,"title":{},"body":{"classes/EntityService.html":{}}}],["src/lib/service/entity.service.ts:45",{"_index":226,"title":{},"body":{"classes/EntityService.html":{}}}],["src/lib/service/entity.service.ts:55",{"_index":233,"title":{},"body":{"classes/EntityService.html":{}}}],["src/lib/service/entity.service.ts:65",{"_index":238,"title":{},"body":{"classes/EntityService.html":{}}}],["src/lib/view/base.view.ts",{"_index":122,"title":{},"body":{"classes/BaseView.html":{},"coverage.html":{}}}],["src/lib/view/base.view.ts:10",{"_index":128,"title":{},"body":{"classes/BaseView.html":{}}}],["src/lib/view/base.view.ts:7",{"_index":129,"title":{},"body":{"classes/BaseView.html":{}}}],["src/lib/view/base.view.ts:8",{"_index":127,"title":{},"body":{"classes/BaseView.html":{}}}],["src/lib/view/base.view.ts:9",{"_index":130,"title":{},"body":{"classes/BaseView.html":{}}}],["standard",{"_index":538,"title":{},"body":{"index.html":{},"properties.html":{}}}],["started",{"_index":533,"title":{"index.html":{}},"body":{}}],["statements",{"_index":387,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":276,"title":{},"body":{"classes/HttpErrorDto.html":{}}}],["statuscode",{"_index":273,"title":{},"body":{"classes/HttpErrorDto.html":{}}}],["stays",{"_index":724,"title":{},"body":{"index.html":{}}}],["stored",{"_index":678,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":323,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["strategy.ts",{"_index":319,"title":{},"body":{"classes/TableNamingStrategy.html":{},"coverage.html":{}}}],["strategy.ts:13",{"_index":330,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["strategy.ts:17",{"_index":332,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["strategy.ts:21",{"_index":335,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["strategy.ts:6",{"_index":338,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["streamlined",{"_index":554,"title":{},"body":{"index.html":{}}}],["string",{"_index":14,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["structure",{"_index":271,"title":{},"body":{"classes/HttpErrorDto.html":{}}}],["subsequent",{"_index":706,"title":{},"body":{"index.html":{}}}],["such",{"_index":508,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sufficient",{"_index":659,"title":{},"body":{"index.html":{}}}],["summary",{"_index":535,"title":{},"body":{"index.html":{}}}],["support",{"_index":505,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["supporting",{"_index":720,"title":{},"body":{"index.html":{}}}],["swagger",{"_index":552,"title":{},"body":{"index.html":{},"properties.html":{}}}],["swc/helpers",{"_index":441,"title":{},"body":{"dependencies.html":{}}}],["system",{"_index":622,"title":{},"body":{"index.html":{}}}],["t",{"_index":186,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{}}}],["t['id",{"_index":206,"title":{},"body":{"classes/EntityQueryService.html":{}}}],["table",{"_index":321,"title":{},"body":{"classes/TableNamingStrategy.html":{},"coverage.html":{}}}],["tablenamingstrategy",{"_index":317,"title":{"classes/TableNamingStrategy.html":{}},"body":{"classes/TableNamingStrategy.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":438,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":714,"title":{},"body":{"index.html":{}}}],["target",{"_index":49,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["testentity",{"_index":43,"title":{"entities/TestEntity.html":{},"entities/TestEntity-1.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{}}}],["testobject",{"_index":34,"title":{"classes/TestObject.html":{},"classes/TestObject-1.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{}}}],["thank",{"_index":710,"title":{},"body":{"index.html":{}}}],["this.repository",{"_index":259,"title":{},"body":{"classes/EntityService.html":{}}}],["this.repository.count(query",{"_index":208,"title":{},"body":{"classes/EntityQueryService.html":{}}}],["this.repository.delete(id",{"_index":255,"title":{},"body":{"classes/EntityService.html":{}}}],["this.repository.find(query",{"_index":197,"title":{},"body":{"classes/EntityQueryService.html":{}}}],["this.repository.findone(query",{"_index":200,"title":{},"body":{"classes/EntityQueryService.html":{}}}],["this.repository.findoneby",{"_index":205,"title":{},"body":{"classes/EntityQueryService.html":{}}}],["this.repository.save(entities",{"_index":253,"title":{},"body":{"classes/EntityService.html":{}}}],["this.repository.save(entity",{"_index":252,"title":{},"body":{"classes/EntityService.html":{}}}],["this.repository.softdelete(id",{"_index":256,"title":{},"body":{"classes/EntityService.html":{}}}],["this.repository.update(id",{"_index":254,"title":{},"body":{"classes/EntityService.html":{}}}],["through",{"_index":555,"title":{},"body":{"index.html":{}}}],["throw",{"_index":203,"title":{},"body":{"classes/EntityQueryService.html":{}}}],["time",{"_index":645,"title":{},"body":{"index.html":{}}}],["timestamp",{"_index":125,"title":{},"body":{"classes/BaseView.html":{},"miscellaneous/functions.html":{}}}],["toward",{"_index":730,"title":{},"body":{"index.html":{}}}],["traffic",{"_index":615,"title":{},"body":{"index.html":{}}}],["transfer",{"_index":692,"title":{},"body":{"index.html":{}}}],["transform",{"_index":517,"title":{},"body":{"miscellaneous/functions.html":{}}}],["transformations",{"_index":691,"title":{},"body":{"index.html":{}}}],["transformed",{"_index":581,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":448,"title":{},"body":{"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["transformer.ts",{"_index":394,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["transformers",{"_index":688,"title":{},"body":{"index.html":{}}}],["true",{"_index":54,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/CommonQueryDto.html":{},"classes/IDDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"miscellaneous/functions.html":{}}}],["type",{"_index":12,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/HttpErrorDto.html":{},"classes/IDDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["type.ts",{"_index":389,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["typealiases",{"_index":770,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeorm",{"_index":98,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/TableNamingStrategy.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["typeorm/query",{"_index":248,"title":{},"body":{"classes/EntityService.html":{}}}],["typeorom",{"_index":697,"title":{},"body":{"index.html":{}}}],["types",{"_index":507,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["undefined",{"_index":342,"title":{},"body":{"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{}}}],["unique",{"_index":490,"title":{},"body":{"miscellaneous/functions.html":{}}}],["uniques",{"_index":487,"title":{},"body":{"miscellaneous/functions.html":{}}}],["unknown",{"_index":188,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{}}}],["unnecessary",{"_index":639,"title":{},"body":{"index.html":{}}}],["unset",{"_index":407,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["unsetrelation",{"_index":218,"title":{},"body":{"classes/EntityService.html":{}}}],["unsetrelation(relation",{"_index":236,"title":{},"body":{"classes/EntityService.html":{}}}],["unsetrelationparam",{"_index":237,"title":{},"body":{"classes/EntityService.html":{},"miscellaneous/functions.html":{}}}],["up",{"_index":725,"title":{},"body":{"index.html":{}}}],["update",{"_index":219,"title":{},"body":{"classes/EntityService.html":{},"classes/UpdateResultDto.html":{}}}],["update(id",{"_index":239,"title":{},"body":{"classes/EntityService.html":{}}}],["updatedat",{"_index":78,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseView.html":{}}}],["updatedatecolumn",{"_index":97,"title":{},"body":{"classes/BaseEntity.html":{}}}],["updateresult",{"_index":250,"title":{},"body":{"classes/EntityService.html":{},"classes/UpdateResultDto.html":{}}}],["updateresultdto",{"_index":370,"title":{"classes/UpdateResultDto.html":{}},"body":{"classes/UpdateResultDto.html":{},"coverage.html":{}}}],["updates",{"_index":733,"title":{},"body":{"index.html":{}}}],["upper",{"_index":618,"title":{},"body":{"index.html":{}}}],["use",{"_index":699,"title":{},"body":{"index.html":{}}}],["useful",{"_index":717,"title":{},"body":{"index.html":{}}}],["users",{"_index":742,"title":{},"body":{"index.html":{}}}],["using",{"_index":551,"title":{},"body":{"index.html":{},"properties.html":{}}}],["utilization",{"_index":600,"title":{},"body":{"index.html":{}}}],["validated",{"_index":547,"title":{},"body":{"index.html":{},"properties.html":{}}}],["validation",{"_index":291,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["validationconstraints",{"_index":298,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["validationconstraintsdto",{"_index":294,"title":{"classes/ValidationConstraintsDto.html":{}},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{}}}],["validationerrordto",{"_index":314,"title":{"classes/ValidationErrorDto.html":{}},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{}}}],["validationerrorresult",{"_index":299,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["validator",{"_index":562,"title":{},"body":{"index.html":{}}}],["value",{"_index":11,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["valuetransformer",{"_index":514,"title":{},"body":{"miscellaneous/functions.html":{}}}],["variable",{"_index":417,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":773,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":756,"title":{},"body":{"properties.html":{}}}],["versions",{"_index":736,"title":{},"body":{"index.html":{}}}],["view",{"_index":123,"title":{},"body":{"classes/BaseView.html":{},"miscellaneous/functions.html":{}}}],["viewcolumn",{"_index":131,"title":{},"body":{"classes/BaseView.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["viewcolumn(options",{"_index":519,"title":{},"body":{"miscellaneous/functions.html":{}}}],["viewcolumn({type",{"_index":126,"title":{},"body":{"classes/BaseView.html":{}}}],["viewentity",{"_index":402,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["viewentity(expression",{"_index":521,"title":{},"body":{"miscellaneous/functions.html":{}}}],["volume",{"_index":572,"title":{},"body":{"index.html":{}}}],["well",{"_index":727,"title":{},"body":{"index.html":{}}}],["whereoption",{"_index":472,"title":{},"body":{"miscellaneous/functions.html":{}}}],["wherequerytransformer",{"_index":433,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["wherequerytransformer(options",{"_index":531,"title":{},"body":{"miscellaneous/functions.html":{}}}],["whether",{"_index":529,"title":{},"body":{"miscellaneous/functions.html":{}}}],["widely",{"_index":558,"title":{},"body":{"index.html":{}}}],["withdeleted",{"_index":139,"title":{},"body":{"classes/CommonQueryDto.html":{}}}],["within",{"_index":543,"title":{},"body":{"index.html":{},"properties.html":{}}}],["work_mem",{"_index":669,"title":{},"body":{"index.html":{}}}],["write",{"_index":211,"title":{},"body":{"classes/EntityService.html":{}}}],["yes",{"_index":488,"title":{},"body":{"miscellaneous/functions.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"entities/AttributeRelation.html":{"url":"entities/AttributeRelation.html","title":"entity - AttributeRelation","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  AttributeRelation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/better-sqlite3.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                key\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:30\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) key: string;\n  @Column({ databaseType: 'sqlite', type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) string: string;\n  @Column({ databaseType: 'sqlite', type: 'integer' }) integer: number;\n  @Column({ databaseType: 'sqlite', type: 'number' }) number: number;\n  @Column({ databaseType: 'sqlite', type: 'boolean' }) boolean: boolean;\n  @Column({ databaseType: 'sqlite', type: 'bigint' }) bigint: bigint;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'object',\n    target: () => TestObject,\n  })\n  object: TestObject;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'array',\n    items: { type: 'string' },\n  })\n  array: string[];\n  @Column({ databaseType: 'sqlite', type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/AttributeRelation-1.html":{"url":"entities/AttributeRelation-1.html","title":"entity - AttributeRelation-1","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  AttributeRelation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/postgres.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                key\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:30\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ type: 'string' }) key: string;\n  @Column({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ type: 'string' }) string: string;\n  @Column({ type: 'integer' }) integer: number;\n  @Column({ type: 'number' }) number: number;\n  @Column({ type: 'boolean' }) boolean: boolean;\n  @Column({ type: 'bigint' }) bigint: bigint;\n  @Column({ type: 'object', target: () => TestObject }) object: TestObject;\n  @Column({ type: 'array', items: { type: 'string' } }) array: string[];\n  @Column({ type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/entity/base.ts\n        \n\n\n            \n                Description\n            \n            \n                All entities extends this entity. The entity provides id, createdAt, updatedAt, and deletedAt columns\n\n            \n\n            \n                Extends\n            \n            \n                            BaseIdEntity\n            \n\n            \n                Implements\n            \n            \n                        BaseModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'date'})@CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/entity/base.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'date'})@DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/entity/base.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'date'})@UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/entity/base.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'integer'})@PrimaryGeneratedColumn()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseIdEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseIdEntity:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type { BaseModel } from '@puq/type';\nimport { Property } from '@puq/property';\nimport { CreateDateColumn, DeleteDateColumn, UpdateDateColumn } from 'typeorm';\nimport { BaseIdEntity } from './base-id.js';\n\n/**\n * All entities extends this entity. The entity provides id, createdAt, updatedAt, and deletedAt columns\n */\nexport class BaseEntity extends BaseIdEntity implements BaseModel {\n  @Property({ type: 'date' })\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @Property({ type: 'date' })\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @Property({ type: 'date' })\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\nexport const BASE_ENTITY_COLUMNS = Object.keys(new BaseEntity());\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntityService.html":{"url":"classes/BaseEntityService.html","title":"class - BaseEntityService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/service/base-entity.service.ts\n        \n\n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/lib/service/base-entity.service.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type { Repository } from 'typeorm';\nimport type { BaseModel } from '@puq/type';\n\nexport class BaseEntityService {\n  constructor(protected readonly repository: Repository) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseIdEntity.html":{"url":"classes/BaseIdEntity.html","title":"class - BaseIdEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseIdEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/entity/base-id.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IDModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'integer'})@PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/entity/base-id.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type { IDModel } from '@puq/type';\nimport { Property } from '@puq/property';\nimport { PrimaryGeneratedColumn } from 'typeorm';\n\nexport class BaseIdEntity implements IDModel {\n  @Property({ type: 'integer' })\n  @PrimaryGeneratedColumn()\n  id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseView.html":{"url":"classes/BaseView.html","title":"class - BaseView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/view/base.view.ts\n        \n\n\n            \n                Description\n            \n            \n                Base view entity that includes id and timestamp columns\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewColumn({type: 'date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/view/base.view.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewColumn({type: 'date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/view/base.view.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewColumn({type: 'integer'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/view/base.view.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewColumn({type: 'date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/view/base.view.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ViewColumn } from './../decorator/view-column.js';\n\n/**\n * Base view entity that includes `id` and `timestamp` columns\n */\nexport class BaseView {\n  @ViewColumn({ type: 'integer' }) id: number;\n  @ViewColumn({ type: 'date' }) createdAt: Date;\n  @ViewColumn({ type: 'date' }) updatedAt: Date;\n  @ViewColumn({ type: 'date' }) deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommonQueryDto.html":{"url":"classes/CommonQueryDto.html","title":"class - CommonQueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommonQueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/query/common-query-dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Common query dto\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                withDeleted\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        withDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'boolean', description: 'Include deleted items to the load', default: false, acceptString: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/query/common-query-dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\n\n/**\n * Common query dto\n */\n@Dto()\nexport class CommonQueryDto {\n  @Property({\n    type: 'boolean',\n    description: 'Include deleted items to the load',\n    default: false,\n    acceptString: true,\n  })\n  withDeleted?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CountResultDto.html":{"url":"classes/CountResultDto.html","title":"class - CountResultDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CountResultDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dto/count-result.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Count result\n\n            \n\n\n            \n                Implements\n            \n            \n                        CountResult\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                count\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        count\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'integer', description: 'The number of items matched the query'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/count-result.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type { CountResult } from '@puq/type';\nimport { Dto, Property } from '@puq/property';\n\n/**\n * Count result\n */\n@Dto()\nexport class CountResultDto implements CountResult {\n  @Property({\n    type: 'integer',\n    description: 'The number of items matched the query',\n  })\n  count: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteResultDto.html":{"url":"classes/DeleteResultDto.html","title":"class - DeleteResultDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteResultDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dto/delete-result.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Delete result dto\n\n            \n\n\n            \n                Implements\n            \n            \n                        DeleteResult\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                affected\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        affected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'integer', description: 'The number of items affected by the delete operation'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/delete-result.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type { DeleteResult } from '@puq/type';\nimport { Dto, Property } from '@puq/property';\n\n/**\n * Delete result dto\n */\n@Dto()\nexport class DeleteResultDto implements DeleteResult {\n  @Property({\n    type: 'integer',\n    description: 'The number of items affected by the delete operation',\n  })\n  affected: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EntityQueryService.html":{"url":"classes/EntityQueryService.html","title":"class - EntityQueryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EntityQueryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/service/entity-query.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Read service\n\n            \n\n            \n                Extends\n            \n            \n                            BaseEntityService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                count\n                            \n                            \n                                find\n                            \n                            \n                                findOne\n                            \n                            \n                                findOneById\n                            \n                            \n                                    Async\n                                findOneByIdOrThrow\n                            \n                            \n                                    Async\n                                findOneOrThrow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(query: QueryCount)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/entity-query.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        QueryCount\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \nfind(query: QueryMany)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/entity-query.service.ts:17\n                        \n                    \n\n\n            \n                \n                        Query all entities QueryMany[]>\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        QueryMany\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(query: QueryOne)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/entity-query.service.ts:26\n                        \n                    \n\n\n            \n                \n                        Query one entity\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        QueryOne\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    QueryOne\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneById\n                        \n                    \n                \n            \n            \n                \nfindOneById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/entity-query.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneByIdOrThrow\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByIdOrThrow(id: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/entity-query.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneOrThrow\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneOrThrow(query: QueryOne)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/entity-query.service.ts:35\n                        \n                    \n\n\n            \n                \n                        Query one entity\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        QueryOne\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    QueryOne\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type { FindOptionsWhere } from 'typeorm';\nimport { In } from 'typeorm';\nimport type { BaseModel, CountResult } from '@puq/type';\nimport type { QueryCount, QueryMany, QueryOne } from '@puq/query';\nimport { BaseEntityService } from './base-entity.service.js';\nimport { NotFoundException } from '@nestjs/common';\n\n/**\n * Read service\n */\nexport class EntityQueryService extends BaseEntityService {\n  /**\n   * Query all entities QueryMany[]>\n   */\n  find(query: QueryMany) {\n    return this.repository.find(query);\n  }\n\n  /**\n   * Query one entity\n   * @param query {@link QueryOne}\n   * @returns\n   */\n  findOne(query: QueryOne[]>) {\n    return this.repository.findOne(query);\n  }\n\n  /**\n   * Query one entity\n   * @param query {@link QueryOne}\n   * @returns\n   */\n  async findOneOrThrow(query: QueryOne[]>) {\n    const found = await this.repository.findOne(query);\n    if (!found) throw new NotFoundException();\n    return found;\n  }\n\n  findOneById(id: number) {\n    return this.repository.findOneBy({ id } as FindOptionsWhere);\n  }\n\n  async findOneByIdOrThrow(id: T['id']) {\n    const found = await this.repository.findOneBy({\n      id: In([id]),\n    } as FindOptionsWhere);\n\n    if (!found) throw new NotFoundException();\n\n    return found;\n  }\n\n  async count(query: QueryCount[]>): Promise {\n    return { count: await this.repository.count(query) };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EntityService.html":{"url":"classes/EntityService.html","title":"class - EntityService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EntityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/service/entity.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Write service\n\n            \n\n            \n                Extends\n            \n            \n                            EntityQueryService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addRelation\n                            \n                            \n                                delete\n                            \n                            \n                                    Async\n                                removeRelation\n                            \n                            \n                                save\n                            \n                            \n                                saveMany\n                            \n                            \n                                    Async\n                                setRelation\n                            \n                            \n                                softDelete\n                            \n                            \n                                    Async\n                                unsetRelation\n                            \n                            \n                                update\n                            \n                            \n                                    Async\n                                count\n                            \n                            \n                                find\n                            \n                            \n                                findOne\n                            \n                            \n                                findOneById\n                            \n                            \n                                    Async\n                                findOneByIdOrThrow\n                            \n                            \n                                    Async\n                                findOneOrThrow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    addRelation(relation: RelationParam)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/entity.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relation\n                                            \n                                                            RelationParam\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/entity.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeRelation(relation: RelationParam)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/entity.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relation\n                                            \n                                                            RelationParam\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        save\n                        \n                    \n                \n            \n            \n                \nsave(entity: DeepPartial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/entity.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveMany\n                        \n                    \n                \n            \n            \n                \nsaveMany(entities: DeepPartial[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/entity.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        DeepPartial[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    setRelation(relation: RelationParam)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/entity.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relation\n                                            \n                                                            RelationParam\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        softDelete\n                        \n                    \n                \n            \n            \n                \nsoftDelete(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/entity.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        unsetRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    unsetRelation(relation: UnsetRelationParam)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/entity.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relation\n                                            \n                                                            UnsetRelationParam\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, entity: QueryDeepPartialEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/entity.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                            QueryDeepPartialEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(query: QueryCount)\n                \n            \n\n\n                    \n                        \n                            Inherited from         EntityQueryService\n\n                        \n                    \n                    \n                        \n                                Defined in         EntityQueryService:55\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        QueryCount\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \nfind(query: QueryMany)\n                \n            \n\n\n                    \n                        \n                            Inherited from         EntityQueryService\n\n                        \n                    \n                    \n                        \n                                Defined in         EntityQueryService:17\n\n                        \n                    \n\n\n            \n                \n                        Query all entities QueryMany[]>\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        QueryMany\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(query: QueryOne)\n                \n            \n\n\n                    \n                        \n                            Inherited from         EntityQueryService\n\n                        \n                    \n                    \n                        \n                                Defined in         EntityQueryService:26\n\n                        \n                    \n\n\n            \n                \n                        Query one entity\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        QueryOne\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    QueryOne\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneById\n                        \n                    \n                \n            \n            \n                \nfindOneById(id: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         EntityQueryService\n\n                        \n                    \n                    \n                        \n                                Defined in         EntityQueryService:41\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneByIdOrThrow\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByIdOrThrow(id: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         EntityQueryService\n\n                        \n                    \n                    \n                        \n                                Defined in         EntityQueryService:45\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneOrThrow\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneOrThrow(query: QueryOne)\n                \n            \n\n\n                    \n                        \n                            Inherited from         EntityQueryService\n\n                        \n                    \n                    \n                        \n                                Defined in         EntityQueryService:35\n\n                        \n                    \n\n\n            \n                \n                        Query one entity\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        QueryOne\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    QueryOne\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type { QueryDeepPartialEntity } from 'typeorm/query-builder/QueryPartialEntity.js';\nimport type {\n  BaseModel,\n  RelationParam,\n  UnsetRelationParam,\n  UpdateResult,\n} from '@puq/type';\nimport { EntityQueryService } from './entity-query.service.js';\nimport type { DeepPartial } from 'typeorm';\n\n/**\n * Write service\n */\nexport class EntityService extends EntityQueryService {\n  save(entity: DeepPartial): Promise {\n    return this.repository.save(entity);\n  }\n\n  saveMany(entities: DeepPartial[]): Promise {\n    return this.repository.save(entities);\n  }\n\n  update(id: number, entity: QueryDeepPartialEntity) {\n    return this.repository.update(id, entity);\n  }\n\n  delete(id: number) {\n    return this.repository.delete(id);\n  }\n\n  softDelete(id: number) {\n    return this.repository.softDelete(id);\n  }\n\n  async addRelation(relation: RelationParam): Promise {\n    const { id, relationId, relationName } = relation;\n    await this.repository\n      .createQueryBuilder()\n      .relation(relationName)\n      .of(id)\n      .add(relationId);\n    return { affected: 1 };\n  }\n\n  async removeRelation(relation: RelationParam): Promise {\n    const { id, relationId, relationName: relationName } = relation;\n    await this.repository\n      .createQueryBuilder()\n      .relation(relationName)\n      .of(id)\n      .remove(relationId);\n    return { affected: 1 };\n  }\n\n  async setRelation(relation: RelationParam): Promise {\n    const { id, relationId, relationName } = relation;\n    await this.repository\n      .createQueryBuilder()\n      .relation(relationName)\n      .of(id)\n      .set(relationId);\n    return { affected: 1 };\n  }\n\n  async unsetRelation(relation: UnsetRelationParam): Promise {\n    const { id, relationName } = relation;\n    await this.repository\n      .createQueryBuilder()\n      .relation(relationName)\n      .of(id)\n      .set(null);\n    return { affected: 1 };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpErrorDto.html":{"url":"classes/HttpErrorDto.html","title":"class - HttpErrorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpErrorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dto/http-error.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                This is the common error structure\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                message\n                            \n                            \n                                    \n                                statusCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/http-error.dto.ts:11\n                        \n                    \n\n            \n                \n                    error message\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'integer'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/http-error.dto.ts:16\n                        \n                    \n\n            \n                \n                    status code\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\n\n/**\n * This is the common error structure\n */\n@Dto()\nexport class HttpErrorDto {\n  /**\n   * error message\n   */\n  @Property({ type: 'string' }) message: string;\n\n  /**\n   * status code\n   */\n  @Property({ type: 'integer' }) statusCode: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IDDto.html":{"url":"classes/IDDto.html","title":"class - IDDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IDDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dto/id.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'integer', minimum: 1, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/id.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\n\n@Dto()\nexport class IDDto {\n  @Property({ type: 'integer', minimum: 1, required: true })\n  id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ManyRelation.html":{"url":"entities/ManyRelation.html","title":"entity - ManyRelation","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ManyRelation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/better-sqlite3.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                many\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        many\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:19\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) key: string;\n  @Column({ databaseType: 'sqlite', type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) string: string;\n  @Column({ databaseType: 'sqlite', type: 'integer' }) integer: number;\n  @Column({ databaseType: 'sqlite', type: 'number' }) number: number;\n  @Column({ databaseType: 'sqlite', type: 'boolean' }) boolean: boolean;\n  @Column({ databaseType: 'sqlite', type: 'bigint' }) bigint: bigint;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'object',\n    target: () => TestObject,\n  })\n  object: TestObject;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'array',\n    items: { type: 'string' },\n  })\n  array: string[];\n  @Column({ databaseType: 'sqlite', type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ManyRelation-1.html":{"url":"entities/ManyRelation-1.html","title":"entity - ManyRelation-1","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ManyRelation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/postgres.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                many\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        many\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:19\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ type: 'string' }) key: string;\n  @Column({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ type: 'string' }) string: string;\n  @Column({ type: 'integer' }) integer: number;\n  @Column({ type: 'number' }) number: number;\n  @Column({ type: 'boolean' }) boolean: boolean;\n  @Column({ type: 'bigint' }) bigint: bigint;\n  @Column({ type: 'object', target: () => TestObject }) object: TestObject;\n  @Column({ type: 'array', items: { type: 'string' } }) array: string[];\n  @Column({ type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/OneRelation.html":{"url":"entities/OneRelation.html","title":"entity - OneRelation","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  OneRelation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/better-sqlite3.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                one\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        one\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:14\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) key: string;\n  @Column({ databaseType: 'sqlite', type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) string: string;\n  @Column({ databaseType: 'sqlite', type: 'integer' }) integer: number;\n  @Column({ databaseType: 'sqlite', type: 'number' }) number: number;\n  @Column({ databaseType: 'sqlite', type: 'boolean' }) boolean: boolean;\n  @Column({ databaseType: 'sqlite', type: 'bigint' }) bigint: bigint;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'object',\n    target: () => TestObject,\n  })\n  object: TestObject;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'array',\n    items: { type: 'string' },\n  })\n  array: string[];\n  @Column({ databaseType: 'sqlite', type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/OneRelation-1.html":{"url":"entities/OneRelation-1.html","title":"entity - OneRelation-1","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  OneRelation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/postgres.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                one\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        one\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:14\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ type: 'string' }) key: string;\n  @Column({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ type: 'string' }) string: string;\n  @Column({ type: 'integer' }) integer: number;\n  @Column({ type: 'number' }) number: number;\n  @Column({ type: 'boolean' }) boolean: boolean;\n  @Column({ type: 'bigint' }) bigint: bigint;\n  @Column({ type: 'object', target: () => TestObject }) object: TestObject;\n  @Column({ type: 'array', items: { type: 'string' } }) array: string[];\n  @Column({ type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/OwnerRelation.html":{"url":"entities/OwnerRelation.html","title":"entity - OwnerRelation","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  OwnerRelation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/better-sqlite3.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                owner\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:24\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) key: string;\n  @Column({ databaseType: 'sqlite', type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) string: string;\n  @Column({ databaseType: 'sqlite', type: 'integer' }) integer: number;\n  @Column({ databaseType: 'sqlite', type: 'number' }) number: number;\n  @Column({ databaseType: 'sqlite', type: 'boolean' }) boolean: boolean;\n  @Column({ databaseType: 'sqlite', type: 'bigint' }) bigint: bigint;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'object',\n    target: () => TestObject,\n  })\n  object: TestObject;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'array',\n    items: { type: 'string' },\n  })\n  array: string[];\n  @Column({ databaseType: 'sqlite', type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/OwnerRelation-1.html":{"url":"entities/OwnerRelation-1.html","title":"entity - OwnerRelation-1","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  OwnerRelation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/postgres.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                owner\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:24\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ type: 'string' }) key: string;\n  @Column({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ type: 'string' }) string: string;\n  @Column({ type: 'integer' }) integer: number;\n  @Column({ type: 'number' }) number: number;\n  @Column({ type: 'boolean' }) boolean: boolean;\n  @Column({ type: 'bigint' }) bigint: bigint;\n  @Column({ type: 'object', target: () => TestObject }) object: TestObject;\n  @Column({ type: 'array', items: { type: 'string' } }) array: string[];\n  @Column({ type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SingleValidationErrorDto.html":{"url":"classes/SingleValidationErrorDto.html","title":"class - SingleValidationErrorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SingleValidationErrorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dto/validation-error.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Single validation error dto\n\n            \n\n\n            \n                Implements\n            \n            \n                        SingleValidationError\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                constraints\n                            \n                            \n                                    \n                                    Optional\n                                property\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        constraints\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ValidationConstraintsDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'object', target: () => ValidationConstraintsDto})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:42\n                        \n                    \n\n            \n                \n                    The error constraints ValidationConstraintsDto\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        property\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:36\n                        \n                    \n\n            \n                \n                    The related property of the error\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type {\n  SingleValidationError,\n  ValidationConstraints,\n  ValidationErrorResult,\n} from '@puq/type';\nimport { Dto, Property } from '@puq/property';\nimport { HttpErrorDto } from './http-error.dto.js';\n\n/**\n * Validation error constraints dto\n */\n@Dto()\nexport class ValidationConstraintsDto implements ValidationConstraints {\n  @Property({ type: 'string' }) min?: string;\n  @Property({ type: 'string' }) max?: string;\n  @Property({ type: 'string' }) minLength?: string;\n  @Property({ type: 'string' }) maxLength?: string;\n  @Property({ type: 'string' }) isString?: string;\n  @Property({ type: 'string' }) isNumber?: string;\n  @Property({ type: 'string' }) isInt?: string;\n  @Property({ type: 'string' }) isBoolean?: string;\n  @Property({ type: 'string' }) isObject?: string;\n  @Property({ type: 'string' }) isArray?: string;\n  @Property({ type: 'string' }) arrayMinSize?: string;\n  @Property({ type: 'string' }) arrayMaxSize?: string;\n}\n\n/**\n * Single validation error dto\n */\n@Dto()\nexport class SingleValidationErrorDto implements SingleValidationError {\n  /**\n   * The related property of the error\n   */\n  @Property({ type: 'string' }) property?: string;\n\n  /**\n   * The error constraints {@link ValidationConstraintsDto}\n   */\n  @Property({ type: 'object', target: () => ValidationConstraintsDto })\n  constraints?: ValidationConstraintsDto;\n}\n\n/**\n * Validation error dto\n */\n@Dto()\nexport class ValidationErrorDto\n  extends HttpErrorDto\n  implements ValidationErrorResult\n{\n  /**\n   * List of validation errors {@link SingleValidationErrorDto}\n   */\n  @Property({\n    type: 'array',\n    items: { type: 'object', target: () => SingleValidationErrorDto },\n  })\n  errors?: SingleValidationErrorDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TableNamingStrategy.html":{"url":"classes/TableNamingStrategy.html","title":"class - TableNamingStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TableNamingStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/factory/naming-strategy.ts\n        \n\n\n            \n                Description\n            \n            \n                Database table and column naming strategy\n\n            \n\n            \n                Extends\n            \n            \n                        DefaultNamingStrategy\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                joinColumnName\n                            \n                            \n                                    \n                                joinTableColumnName\n                            \n                            \n                                    \n                                joinTableInverseColumnName\n                            \n                            \n                                    \n                                joinTableName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        joinColumnName\n                        \n                    \n                \n            \n            \n                \n                        \n                    joinColumnName(relationName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/factory/naming-strategy.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relationName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        joinTableColumnName\n                        \n                    \n                \n            \n            \n                \n                        \n                    joinTableColumnName(_tableName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/factory/naming-strategy.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _tableName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        joinTableInverseColumnName\n                        \n                    \n                \n            \n            \n                \n                        \n                    joinTableInverseColumnName(_tableName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/factory/naming-strategy.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _tableName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        joinTableName\n                        \n                    \n                \n            \n            \n                \n                        \n                    joinTableName(firstTableName: string, secondTableName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/factory/naming-strategy.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                firstTableName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                secondTableName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DefaultNamingStrategy } from 'typeorm';\n/**\n * Database table and column naming strategy\n */\nexport class TableNamingStrategy extends DefaultNamingStrategy {\n  override joinTableName(\n    firstTableName: string,\n    secondTableName: string,\n  ): string {\n    return `${firstTableName}_${secondTableName}`;\n  }\n\n  override joinColumnName(relationName: string): string {\n    return relationName;\n  }\n\n  override joinTableColumnName(_tableName: string): string {\n    return _tableName;\n  }\n\n  override joinTableInverseColumnName(_tableName: string): string {\n    return _tableName;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/TestEntity.html":{"url":"entities/TestEntity.html","title":"entity - TestEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  TestEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/better-sqlite3.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                array\n                            \n                            \n                                    \n                                attributes\n                            \n                            \n                                    \n                                bigint\n                            \n                            \n                                    \n                                boolean\n                            \n                            \n                                    \n                                date\n                            \n                            \n                                    \n                                integer\n                            \n                            \n                                    \n                                many\n                            \n                            \n                                    \n                                number\n                            \n                            \n                                    \n                                object\n                            \n                            \n                                    \n                                one\n                            \n                            \n                                    \n                                owner\n                            \n                            \n                                    \n                                string\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        array\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'array', items: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AttributeRelation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Relation({type: 'many-to-many', target: () => AttributeRelation, eager: true, required: false, cascade: undefined, join: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        bigint\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'bigint'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        boolean\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        integer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'integer'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        many\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ManyRelation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Relation({type: 'many-to-many', target: () => ManyRelation, eager: true, required: false, onDelete: 'SET NULL', join: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        object\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TestObject\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'object', target: () => TestObject})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        one\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OneRelation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Relation({type: 'many-to-one', target: () => OneRelation, eager: true, required: false, onDelete: 'SET NULL', join: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OwnerRelation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Relation({type: 'many-to-one', target: () => OwnerRelation, eager: true, required: false, onDelete: 'CASCADE', onUpdate: 'CASCADE', join: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        string\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:35\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) key: string;\n  @Column({ databaseType: 'sqlite', type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) string: string;\n  @Column({ databaseType: 'sqlite', type: 'integer' }) integer: number;\n  @Column({ databaseType: 'sqlite', type: 'number' }) number: number;\n  @Column({ databaseType: 'sqlite', type: 'boolean' }) boolean: boolean;\n  @Column({ databaseType: 'sqlite', type: 'bigint' }) bigint: bigint;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'object',\n    target: () => TestObject,\n  })\n  object: TestObject;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'array',\n    items: { type: 'string' },\n  })\n  array: string[];\n  @Column({ databaseType: 'sqlite', type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/TestEntity-1.html":{"url":"entities/TestEntity-1.html","title":"entity - TestEntity-1","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  TestEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/postgres.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                array\n                            \n                            \n                                    \n                                attributes\n                            \n                            \n                                    \n                                bigint\n                            \n                            \n                                    \n                                boolean\n                            \n                            \n                                    \n                                date\n                            \n                            \n                                    \n                                integer\n                            \n                            \n                                    \n                                many\n                            \n                            \n                                    \n                                number\n                            \n                            \n                                    \n                                object\n                            \n                            \n                                    \n                                one\n                            \n                            \n                                    \n                                owner\n                            \n                            \n                                    \n                                string\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        array\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'array', items: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AttributeRelation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Relation({type: 'many-to-many', target: () => AttributeRelation, eager: true, required: false, cascade: undefined, join: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        bigint\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        boolean\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        integer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'integer'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        many\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ManyRelation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Relation({type: 'many-to-many', target: () => ManyRelation, eager: true, required: false, onDelete: 'SET NULL', join: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        object\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TestObject\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'object', target: () => TestObject})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        one\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OneRelation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Relation({type: 'many-to-one', target: () => OneRelation, eager: true, required: false, onDelete: 'SET NULL', join: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OwnerRelation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Relation({type: 'many-to-one', target: () => OwnerRelation, eager: true, required: false, onDelete: 'CASCADE', onUpdate: 'CASCADE', join: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        string\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:35\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ type: 'string' }) key: string;\n  @Column({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ type: 'string' }) string: string;\n  @Column({ type: 'integer' }) integer: number;\n  @Column({ type: 'number' }) number: number;\n  @Column({ type: 'boolean' }) boolean: boolean;\n  @Column({ type: 'bigint' }) bigint: bigint;\n  @Column({ type: 'object', target: () => TestObject }) object: TestObject;\n  @Column({ type: 'array', items: { type: 'string' } }) array: string[];\n  @Column({ type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestObject.html":{"url":"classes/TestObject.html","title":"class - TestObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/better-sqlite3.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) key: string;\n  @Column({ databaseType: 'sqlite', type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) string: string;\n  @Column({ databaseType: 'sqlite', type: 'integer' }) integer: number;\n  @Column({ databaseType: 'sqlite', type: 'number' }) number: number;\n  @Column({ databaseType: 'sqlite', type: 'boolean' }) boolean: boolean;\n  @Column({ databaseType: 'sqlite', type: 'bigint' }) bigint: bigint;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'object',\n    target: () => TestObject,\n  })\n  object: TestObject;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'array',\n    items: { type: 'string' },\n  })\n  array: string[];\n  @Column({ databaseType: 'sqlite', type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestObject-1.html":{"url":"classes/TestObject-1.html","title":"class - TestObject-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/postgres.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ type: 'string' }) key: string;\n  @Column({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ type: 'string' }) string: string;\n  @Column({ type: 'integer' }) integer: number;\n  @Column({ type: 'number' }) number: number;\n  @Column({ type: 'boolean' }) boolean: boolean;\n  @Column({ type: 'bigint' }) bigint: bigint;\n  @Column({ type: 'object', target: () => TestObject }) object: TestObject;\n  @Column({ type: 'array', items: { type: 'string' } }) array: string[];\n  @Column({ type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateResultDto.html":{"url":"classes/UpdateResultDto.html","title":"class - UpdateResultDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateResultDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dto/update-result.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Update result\n\n            \n\n\n            \n                Implements\n            \n            \n                        UpdateResult\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                affected\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        affected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'integer', description: 'The number of items affected by the update operation'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/update-result.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type { UpdateResult } from '@puq/type';\nimport { Dto, Property } from '@puq/property';\n\n/**\n * Update result\n */\n@Dto()\nexport class UpdateResultDto implements UpdateResult {\n  @Property({\n    type: 'integer',\n    description: 'The number of items affected by the update operation',\n  })\n  affected: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationConstraintsDto.html":{"url":"classes/ValidationConstraintsDto.html","title":"class - ValidationConstraintsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationConstraintsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dto/validation-error.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Validation error constraints dto\n\n            \n\n\n            \n                Implements\n            \n            \n                        ValidationConstraints\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                arrayMaxSize\n                            \n                            \n                                    \n                                    Optional\n                                arrayMinSize\n                            \n                            \n                                    \n                                    Optional\n                                isArray\n                            \n                            \n                                    \n                                    Optional\n                                isBoolean\n                            \n                            \n                                    \n                                    Optional\n                                isInt\n                            \n                            \n                                    \n                                    Optional\n                                isNumber\n                            \n                            \n                                    \n                                    Optional\n                                isObject\n                            \n                            \n                                    \n                                    Optional\n                                isString\n                            \n                            \n                                    \n                                    Optional\n                                max\n                            \n                            \n                                    \n                                    Optional\n                                maxLength\n                            \n                            \n                                    \n                                    Optional\n                                min\n                            \n                            \n                                    \n                                    Optional\n                                minLength\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        arrayMaxSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        arrayMinSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isBoolean\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isInt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isObject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isString\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        max\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        maxLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        min\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        minLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type {\n  SingleValidationError,\n  ValidationConstraints,\n  ValidationErrorResult,\n} from '@puq/type';\nimport { Dto, Property } from '@puq/property';\nimport { HttpErrorDto } from './http-error.dto.js';\n\n/**\n * Validation error constraints dto\n */\n@Dto()\nexport class ValidationConstraintsDto implements ValidationConstraints {\n  @Property({ type: 'string' }) min?: string;\n  @Property({ type: 'string' }) max?: string;\n  @Property({ type: 'string' }) minLength?: string;\n  @Property({ type: 'string' }) maxLength?: string;\n  @Property({ type: 'string' }) isString?: string;\n  @Property({ type: 'string' }) isNumber?: string;\n  @Property({ type: 'string' }) isInt?: string;\n  @Property({ type: 'string' }) isBoolean?: string;\n  @Property({ type: 'string' }) isObject?: string;\n  @Property({ type: 'string' }) isArray?: string;\n  @Property({ type: 'string' }) arrayMinSize?: string;\n  @Property({ type: 'string' }) arrayMaxSize?: string;\n}\n\n/**\n * Single validation error dto\n */\n@Dto()\nexport class SingleValidationErrorDto implements SingleValidationError {\n  /**\n   * The related property of the error\n   */\n  @Property({ type: 'string' }) property?: string;\n\n  /**\n   * The error constraints {@link ValidationConstraintsDto}\n   */\n  @Property({ type: 'object', target: () => ValidationConstraintsDto })\n  constraints?: ValidationConstraintsDto;\n}\n\n/**\n * Validation error dto\n */\n@Dto()\nexport class ValidationErrorDto\n  extends HttpErrorDto\n  implements ValidationErrorResult\n{\n  /**\n   * List of validation errors {@link SingleValidationErrorDto}\n   */\n  @Property({\n    type: 'array',\n    items: { type: 'object', target: () => SingleValidationErrorDto },\n  })\n  errors?: SingleValidationErrorDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationErrorDto.html":{"url":"classes/ValidationErrorDto.html","title":"class - ValidationErrorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationErrorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dto/validation-error.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Validation error dto\n\n            \n\n\n            \n                Implements\n            \n            \n                        ValidationErrorResult\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                errors\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        errors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SingleValidationErrorDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'array', items: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:60\n                        \n                    \n\n            \n                \n                    List of validation errors SingleValidationErrorDto\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type {\n  SingleValidationError,\n  ValidationConstraints,\n  ValidationErrorResult,\n} from '@puq/type';\nimport { Dto, Property } from '@puq/property';\nimport { HttpErrorDto } from './http-error.dto.js';\n\n/**\n * Validation error constraints dto\n */\n@Dto()\nexport class ValidationConstraintsDto implements ValidationConstraints {\n  @Property({ type: 'string' }) min?: string;\n  @Property({ type: 'string' }) max?: string;\n  @Property({ type: 'string' }) minLength?: string;\n  @Property({ type: 'string' }) maxLength?: string;\n  @Property({ type: 'string' }) isString?: string;\n  @Property({ type: 'string' }) isNumber?: string;\n  @Property({ type: 'string' }) isInt?: string;\n  @Property({ type: 'string' }) isBoolean?: string;\n  @Property({ type: 'string' }) isObject?: string;\n  @Property({ type: 'string' }) isArray?: string;\n  @Property({ type: 'string' }) arrayMinSize?: string;\n  @Property({ type: 'string' }) arrayMaxSize?: string;\n}\n\n/**\n * Single validation error dto\n */\n@Dto()\nexport class SingleValidationErrorDto implements SingleValidationError {\n  /**\n   * The related property of the error\n   */\n  @Property({ type: 'string' }) property?: string;\n\n  /**\n   * The error constraints {@link ValidationConstraintsDto}\n   */\n  @Property({ type: 'object', target: () => ValidationConstraintsDto })\n  constraints?: ValidationConstraintsDto;\n}\n\n/**\n * Validation error dto\n */\n@Dto()\nexport class ValidationErrorDto\n  extends HttpErrorDto\n  implements ValidationErrorResult\n{\n  /**\n   * List of validation errors {@link SingleValidationErrorDto}\n   */\n  @Property({\n    type: 'array',\n    items: { type: 'object', target: () => SingleValidationErrorDto },\n  })\n  errors?: SingleValidationErrorDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/lib/common/pick-column-type.ts\n            \n            function\n            pickColumnType\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/common/pick-transformer.ts\n            \n            function\n            pickTransformer\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/decorator/column.ts\n            \n            function\n            Column\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/decorator/entity.ts\n            \n            function\n            Entity\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/decorator/relation.ts\n            \n            function\n            Relation\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/decorator/view-column.ts\n            \n            function\n            ViewColumn\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/decorator/view-entity.ts\n            \n            function\n            ViewEntity\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/dto/count-result.dto.ts\n            \n            class\n            CountResultDto\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                        src/lib/dto/create-relation-param-dto.ts\n            \n            function\n            CreateRelationParamDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/dto/create-unset-relation-param-dto.ts\n            \n            function\n            CreateUnsetRelationParamDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/dto/delete-result.dto.ts\n            \n            class\n            DeleteResultDto\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/lib/dto/http-error.dto.ts\n            \n            class\n            HttpErrorDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/lib/dto/id.dto.ts\n            \n            class\n            IDDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/dto/update-result.dto.ts\n            \n            class\n            UpdateResultDto\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/lib/dto/validation-error.dto.ts\n            \n            class\n            SingleValidationErrorDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/lib/dto/validation-error.dto.ts\n            \n            class\n            ValidationConstraintsDto\n            \n                7 %\n                (1/13)\n            \n        \n        \n            \n                \n                src/lib/dto/validation-error.dto.ts\n            \n            class\n            ValidationErrorDto\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/lib/entity/base-id.ts\n            \n            class\n            BaseIdEntity\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/entity/base.ts\n            \n            class\n            BaseEntity\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                        src/lib/entity/base.ts\n            \n            variable\n            BASE_ENTITY_COLUMNS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/factory/naming-strategy.ts\n            \n            class\n            TableNamingStrategy\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/lib/integration/better-sqlite3.ts\n            \n            entity\n            AttributeRelation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/better-sqlite3.ts\n            \n            entity\n            ManyRelation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/better-sqlite3.ts\n            \n            entity\n            OneRelation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/better-sqlite3.ts\n            \n            entity\n            OwnerRelation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/better-sqlite3.ts\n            \n            entity\n            TestEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/better-sqlite3.ts\n            \n            class\n            TestObject\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/integration/postgres.ts\n            \n            entity\n            AttributeRelation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/postgres.ts\n            \n            entity\n            ManyRelation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/postgres.ts\n            \n            entity\n            OneRelation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/postgres.ts\n            \n            entity\n            OwnerRelation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/postgres.ts\n            \n            entity\n            TestEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/postgres.ts\n            \n            class\n            TestObject\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/query/common-query-dto.ts\n            \n            class\n            CommonQueryDto\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                        src/lib/query/create-find-operator.ts\n            \n            function\n            createFindOperator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/query/create-query-count-dto.ts\n            \n            function\n            CreateQueryCountDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/query/create-query-many-dto.ts\n            \n            function\n            CreateQueryManyDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/query/create-query-one-dto.ts\n            \n            function\n            CreateQueryOneDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/query/create-query-options.ts\n            \n            type alias\n            CreateQueryOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/query/create-where-option-dto.ts\n            \n            function\n            CreateWhereOptionDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/query/select-transformer.ts\n            \n            function\n            SelectTransformer\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/query/where-query-transformer.ts\n            \n            function\n            WhereQueryTransformer\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/service/base-entity.service.ts\n            \n            class\n            BaseEntityService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/service/entity-query.service.ts\n            \n            class\n            EntityQueryService\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                src/lib/service/entity.service.ts\n            \n            class\n            EntityService\n            \n                25 %\n                (4/16)\n            \n        \n        \n            \n                \n                src/lib/view/base.view.ts\n            \n            class\n            BaseView\n            \n                20 %\n                (1/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @swc/helpers : ~0.5.15\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @puq/type : ^0.5.50\n        \n            @nestjs/common : ^11.0.11\n        \n            @nestjs/config : ^4.0.0\n        \n            class-transformer : ^0.5.1\n        \n            @nestjs/typeorm : ^11.0.0\n        \n            typeorm : ^0.3.20\n        \n            @puq/is : ^0.5.50\n        \n            @puq/property : ^0.5.50\n        \n            @puq/meta : ^0.5.50\n        \n            @puq/query : ^0.5.50\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Column   (src/.../column.ts)\n                        \n                        \n                            createFindOperator   (src/.../create-find-operator.ts)\n                        \n                        \n                            CreateQueryCountDto   (src/.../create-query-count-dto.ts)\n                        \n                        \n                            CreateQueryManyDto   (src/.../create-query-many-dto.ts)\n                        \n                        \n                            CreateQueryOneDto   (src/.../create-query-one-dto.ts)\n                        \n                        \n                            CreateRelationParamDto   (src/.../create-relation-param-dto.ts)\n                        \n                        \n                            CreateUnsetRelationParamDto   (src/.../create-unset-relation-param-dto.ts)\n                        \n                        \n                            CreateWhereOptionDto   (src/.../create-where-option-dto.ts)\n                        \n                        \n                            Entity   (src/.../entity.ts)\n                        \n                        \n                            pickColumnType   (src/.../pick-column-type.ts)\n                        \n                        \n                            pickTransformer   (src/.../pick-transformer.ts)\n                        \n                        \n                            Relation   (src/.../relation.ts)\n                        \n                        \n                            SelectTransformer   (src/.../select-transformer.ts)\n                        \n                        \n                            ViewColumn   (src/.../view-column.ts)\n                        \n                        \n                            ViewEntity   (src/.../view-entity.ts)\n                        \n                        \n                            WhereQueryTransformer   (src/.../where-query-transformer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/decorator/column.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Column\n                        \n                    \n                \n            \n            \n                \nColumn(options: PropertyOptions)\n                \n            \n\n\n\n\n            \n                \n                        Typeorm Column decorator with validation and documentation capabilities.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        PropertyOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    property options PropertyOptions\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     PropertyDecorator\n\n                        \n                            \n                                property decorator {@link PropertyDecorator}\n\n                            \n                \n            \n        \n    \n    src/lib/query/create-find-operator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createFindOperator\n                        \n                    \n                \n            \n            \n                \ncreateFindOperator(query: WhereOption)\n                \n            \n\n\n\n\n            \n                \n                        Create a typeorm find operator from WhereOption\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        WhereOption\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nWhereOption\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Record>\n\n                        \n                            \n                                \nTypeorm find operator\n\n\n                            \n                \n            \n        \n    \n    src/lib/query/create-query-count-dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CreateQueryCountDto\n                        \n                    \n                \n            \n            \n                \nCreateQueryCountDto(options: CreateQueryOptions)\n                \n            \n\n\n\n\n            \n                \n                        Create a query count dto\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            CreateQueryOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nCreateQueryOptions\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Type\n\n                        \n                            \n                                \nquery dto\n\n\n                            \n                \n            \n        \n    \n    src/lib/query/create-query-many-dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CreateQueryManyDto\n                        \n                    \n                \n            \n            \n                \nCreateQueryManyDto(options: CreateQueryOptions)\n                \n            \n\n\n\n\n            \n                \n                        Create query dto to query many entities\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            CreateQueryOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nCreateQueryOptions\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Type>\n\n                        \n                            \n                                \nquery dto\n\n\n                            \n                \n            \n        \n    \n    src/lib/query/create-query-one-dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CreateQueryOneDto\n                        \n                    \n                \n            \n            \n                \nCreateQueryOneDto(options: CreateQueryOptions)\n                \n            \n\n\n\n\n            \n                \n                        Create query dto to query a single entity\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            CreateQueryOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nCreateQueryOptions\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Type>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/dto/create-relation-param-dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CreateRelationParamDto\n                        \n                    \n                \n            \n            \n                \nCreateRelationParamDto(relations: Keys)\n                \n            \n\n\n\n\n            \n                \n                        Create DTO for RelationParam\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                relations\n                                            \n                                                        Keys\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    relation names of the entity\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Type\n\n                        \n                            \n                                Class {@link Type}\n\n                            \n                \n            \n        \n    \n    src/lib/dto/create-unset-relation-param-dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CreateUnsetRelationParamDto\n                        \n                    \n                \n            \n            \n                \nCreateUnsetRelationParamDto(relations: Keys)\n                \n            \n\n\n\n\n            \n                \n                        Create DTO for UnsetRelationParam\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                relations\n                                            \n                                                        Keys\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    relation names of the entity\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Type\n\n                        \n                            \n                                Class {@link Type}\n\n                            \n                \n            \n        \n    \n    src/lib/query/create-where-option-dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CreateWhereOptionDto\n                        \n                    \n                \n            \n            \n                \nCreateWhereOptionDto(options: CreateQueryOptions)\n                \n            \n\n\n\n\n            \n                \n                        Create where option dto\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            CreateQueryOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nCreateQueryOptions\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Type>\n\n                        \n                            \n                                \nwhere option dto\n\n\n                            \n                \n            \n        \n    \n    src/lib/decorator/entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Entity\n                        \n                    \n                \n            \n            \n                \nEntity(uniques?)\n                \n            \n\n\n\n\n            \n                \n                        Typeorm entity decorator with transformer capability\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                uniques\n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    Composite unique constraint must be set on entity classes and must specify entity's fields to be unique\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ClassDecorator\n\n                        \n                            \n                                \n{@link ClassDecorator}\n\n\n                            \n                \n            \n        \n    \n    src/lib/common/pick-column-type.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        pickColumnType\n                        \n                    \n                \n            \n            \n                \npickColumnType(options: PropertyOptions)\n                \n            \n\n\n\n\n            \n                \n                        Pick column type based on provided data type and database driver\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        PropertyOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ColumnType\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/common/pick-transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        pickTransformer\n                        \n                    \n                \n            \n            \n                \npickTransformer(options: PropertyOptions)\n                \n            \n\n\n\n\n            \n                \n                        Some databases do not support a certain data types such as sqlite does not support array type.\nThis function picks the transformer to make none-primitive data types compatible with the provided database driver\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        PropertyOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    property options PropertyOptions\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValueTransformer | undefined\n\n                        \n                            \n                                the {@link ValueTransformer}\n\n                            \n                \n            \n        \n    \n    src/lib/decorator/relation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Relation\n                        \n                    \n                \n            \n            \n                \nRelation(options: RelationOptions)\n                \n            \n\n\n\n\n            \n                \n                        Relation decorator\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            RelationOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    relation options RelationOptions\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     PropertyDecorator\n\n                        \n                            \n                                \n{@link PropertyDecorator}\n\n\n                            \n                \n            \n        \n    \n    src/lib/query/select-transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SelectTransformer\n                        \n                    \n                \n            \n            \n                \nSelectTransformer()\n                \n            \n\n\n\n\n            \n                \n                        Transform the select query param into string array\n\n\n                        \n                            Returns :     PropertyDecorator\n\n                        \n                \n            \n        \n    \n    src/lib/decorator/view-column.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ViewColumn\n                        \n                    \n                \n            \n            \n                \nViewColumn(options: PropertyOptions)\n                \n            \n\n\n\n\n            \n                \n                        TypeORM ___ViewColumn decorator with documentation capability\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        PropertyOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    property options PropertyOptions\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     PropertyDecorator\n\n                        \n                            \n                                \n{@link PropertyDecorator}\n\n\n                            \n                \n            \n        \n    \n    src/lib/decorator/view-entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ViewEntity\n                        \n                    \n                \n            \n            \n                \nViewEntity(expression, selectBaseEntity)\n                \n            \n\n\n\n\n            \n                \n                        TypeORM ___ViewEntity decorator with prebuilt query builder that coverts id and timestamp columns.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expression\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    SelectQueryBuilder query builder\n\n                                            \n                                        \n                                        \n                                                selectBaseEntity\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                            \n                                                    defined whether the fields of BaseEntity class are added or not to the view\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ClassDecorator\n\n                        \n                            \n                                class decorator {@link ClassDecorator}\n\n                            \n                \n            \n        \n    \n    src/lib/query/where-query-transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        WhereQueryTransformer\n                        \n                    \n                \n            \n            \n                \nWhereQueryTransformer(options: CreateQueryOptions)\n                \n            \n\n\n\n\n            \n                \n                        Where query transformer\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            CreateQueryOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     PropertyDecorator\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n@puq/orm\nSummary\nThe custom TypeORM decorators extend standard entity definitions by seamlessly integrating validation and API documentation within a single decorator. These decorators ensure that database entities are not only mapped efficiently but also validated at the DTO level while providing clear API documentation using Swagger.\nDatabase entity development is streamlined through the integration of intuitive and widely adopted implementations within decorators. These decorators are paired with class-validator, class-transformer, and @nestjs/swagger, enhancing efficiency in the development process. This approach achieves a minimum reduction of 60% in both code volume and associated errors.\nInstall\nExample :  pnpm add @puq/ormSQLite\n\nSQLite does not support array or object data types. To accommodate this limitation, data must be transformed into a string format.\n\nPostgres Datasource\nTo optimize datasource performance, implement the following configuration settings:\n\npoolSize: Set to 50. This defines the maximum number of connections allowed in the pool, ensuring efficient resource utilization while accommodating peak demand.\nmin: Set to 10. This specifies the minimum number of connections maintained in the pool, keeping a baseline of readily available connections to reduce latency during low-traffic periods.\nmax: Set to 50. This establishes the upper limit of open connections, balancing system performance with resource availability to prevent overloading.\nidleTimeoutMillis: Configure to 30,000 milliseconds. This determines the duration an idle connection remains open before being closed, minimizing unnecessary resource consumption during periods of inactivity.\nconnectionTimeoutMillis: Configure to 2,000 milliseconds. This sets the maximum time allowed to establish a connection, enhancing application responsiveness by preventing prolonged delays.\n\nPostgres Server\nAdjust the PostgreSQL server configuration file (postgres.conf) with the following settings:\n\nmax_connections: Set to 200 to accommodate both application and administrative connections, ensuring sufficient capacity.\nshared_buffers: Allocate 25-40% of the server's RAM for optimal performance, configured to 4GB.\nwork_mem: Define the memory allocation per query or sort operation, set to 16MB to enhance query efficiency.\n\nNumbers\n\nThe number data type is stored as a string (numeric) to ensure the preservation of precision.\nThe number value is not converted to a JavaScript number to avoid disrupting query operations.\n\nTypeorm Column Transformer\n\nRefrain from using TypeORM column transformers, as they may interfere with query operations. Instead, implement transformations within the data transfer layer.\n\nHashing and encrypion\n\nHashing should be done in database layer. Typeorom column transformer is safe to use\nEncryption is done in controller layer\nFor handling encrypted data, implement a dedicated data transfer object (DTO) class and apply it subsequent to the execution of the initial DTO class within the controller\n\nFunding\nThank you for using @puq/orm It's an open-source project, and maintaining it takes time and effort. If you find this library useful, please consider supporting its ongoing development. Your contributions help ensure that the project stays up-to-date, secure, and well-maintained.\nInstant Funding\nYour funding will go toward\n\nBug fixes and updates to ensure compatibility with the latest versions of dependencies.\nNew features that will make the library even more powerful.\nDocumentation improvements to help users get the most out of [Your Library Name].\nGeneral maintenance to keep the library running smoothly and securely.\n\nContact to the developer: [robert.brightline@gmail.com]\nSupport the developer\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    10 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    18 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.5.50\n        \n            Description : The custom TypeORM decorators extend standard entity definitions by seamlessly integrating validation and API documentation within a single decorator. These decorators ensure that database entities are not only mapped efficiently but also validated at the DTO level while providing clear API documentation using Swagger.\n        \n            Keywords : puq, orm\n        \n            Homepage : https://rbrightline.github.io/puq/orm\n        \n            Bugs : https://rbrightline.github.io\n        \n            License : MIT\n        \n            Repository : https://github.com/rbrightline/puq/tree/main\n        \n            Author : Robert Brightline\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CreateQueryOptions   (src/.../create-query-options.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/query/create-query-options.ts\n    \n    \n        \n            \n                \n                    \n                    CreateQueryOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BASE_ENTITY_COLUMNS   (src/.../base.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/entity/base.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BASE_ENTITY_COLUMNS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.keys(new BaseEntity())\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
