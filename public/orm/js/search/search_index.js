var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/entities/AttributeRelation.html",[0,0.241,1,0.924]],["body/entities/AttributeRelation.html",[0,0.39,1,1.35,2,0.665,3,0.244,4,0.215,5,0.186,6,2.254,7,1.314,8,0.159,9,0.446,10,1.533,11,1.35,12,0.33,13,0.029,14,1.31,15,0.446,16,2.284,17,2.911,18,0.313,19,2.639,20,2.639,21,0.489,22,0.544,23,0.544,24,0.374,25,1.434,26,0.893,27,0.893,28,1.587,29,0.893,30,1.016,31,0.716,32,0.51,33,0.366,34,1.229,35,1.229,36,1.056,37,3.39,38,1.161,39,1.229,40,1.583,41,1.229,42,1.3,43,0.716,44,0.83,45,0.772,46,1.424,47,1.533,48,0.897,49,1.434,50,0.897,51,0.527,52,1.042,53,1.683,54,1.705,55,1.683,56,1.564,57,1.533,58,1.122,59,1.3,60,1.683,61,1.533,62,0.893,63,0.893,64,0.893,65,0.016,66,0.016]],["title/entities/AttributeRelation-1.html",[0,0.203,1,0.779,67,1.429]],["body/entities/AttributeRelation-1.html",[0,0.397,1,1.385,2,0.703,3,0.258,4,0.227,5,0.197,8,0.168,9,0.464,10,1.581,11,1.385,12,0.33,13,0.029,14,1.318,15,0.464,18,0.325,21,0.5,22,0.566,23,0.566,24,0.395,25,1.466,26,0.944,27,0.944,28,1.602,29,0.944,30,1.035,31,0.757,32,0.52,33,0.373,34,1.268,35,1.268,36,1.079,38,1.192,39,1.268,40,1.607,41,1.268,42,1.353,43,0.757,44,0.864,45,0.792,46,1.469,47,1.581,48,0.934,49,1.466,50,0.934,51,0.557,52,1.085,53,1.727,54,1.73,55,1.727,56,1.605,57,1.581,58,1.168,59,1.353,60,1.727,61,1.581,62,0.944,63,0.944,64,0.944,65,0.017,66,0.017,68,1.388,69,2.377,70,2.789,71,2.789]],["title/classes/BaseEntity.html",[30,0.627,33,0.226]],["body/classes/BaseEntity.html",[0,0.403,2,1.205,3,0.335,4,0.295,5,0.256,8,0.218,9,0.555,12,0.316,13,0.029,15,0.662,18,0.464,21,0.528,23,0.807,24,0.512,30,0.987,32,0.443,33,0.24,36,1.139,45,0.561,52,1.732,65,0.02,66,0.02,72,0.723,73,2.661,74,1.319,75,4.782,76,3.092,77,4.982,78,4.982,79,4.982,80,4.02,81,3.746,82,2.194,83,5.357,84,1.929,85,3.618,86,3.618,87,3.618,88,3.618,89,3.618,90,3.618,91,3.041,92,3.041,93,3.618,94,1.422,95,4.782,96,4.782,97,4.782,98,1.534,99,3.618,100,3.618,101,3.041,102,2.661,103,3.041]],["title/classes/BaseEntityService.html",[33,0.226,104,2.238]],["body/classes/BaseEntityService.html",[3,0.435,4,0.383,5,0.332,12,0.303,13,0.029,18,0.383,21,0.522,30,0.866,31,1.276,32,0.435,33,0.312,65,0.024,66,0.024,72,0.939,98,1.994,104,3.707,105,3.951,106,4.7,107,4.7,108,5.269,109,4.7,110,2.795,111,2.55,112,1.994,113,5.641,114,4.7,115,4.7]],["title/classes/BaseIdEntity.html",[33,0.226,81,2.238]],["body/classes/BaseIdEntity.html",[3,0.418,4,0.368,5,0.319,8,0.272,9,0.639,12,0.298,13,0.029,15,0.524,18,0.368,21,0.55,23,0.78,24,0.64,32,0.418,33,0.3,44,0.977,45,0.854,65,0.023,66,0.023,72,0.902,76,3.223,81,3.619,82,2.527,84,1.529,91,3.797,94,1.775,98,1.916,116,4.629,117,3.797,118,5.94,119,4.516,120,5.506]],["title/classes/BaseView.html",[33,0.226,121,2.505]],["body/classes/BaseView.html",[3,0.382,4,0.336,5,0.292,8,0.249,9,0.604,12,0.325,13,0.029,15,0.696,18,0.488,21,0.382,32,0.382,33,0.274,44,1.126,45,0.808,52,1.807,65,0.022,66,0.022,72,0.824,76,3.094,77,4.794,78,4.794,79,4.794,121,3.829,122,3.468,123,5.989,124,4.125,125,4.125,126,4.125,127,4.125,128,4.543,129,4.125,130,4.125]],["title/classes/CommonQueryDto.html",[33,0.226,131,2.505]],["body/classes/CommonQueryDto.html",[3,0.398,4,0.35,5,0.304,8,0.259,9,0.62,12,0.268,13,0.028,15,0.499,18,0.35,21,0.398,22,0.861,23,0.757,24,0.609,32,0.398,33,0.285,46,1.912,51,1.068,54,1.561,56,1.68,65,0.023,66,0.023,72,0.859,74,2.119,84,1.456,112,2.266,131,3.93,132,4.491,133,2.79,134,2.826,135,4.491,136,5.812,137,5.343,138,5.343,139,5.343,140,3.93,141,5.343,142,4.3]],["title/classes/CountResultDto.html",[33,0.226,143,2.505]],["body/classes/CountResultDto.html",[3,0.402,4,0.354,5,0.307,8,0.262,9,0.625,12,0.293,13,0.029,15,0.505,18,0.354,21,0.498,22,0.762,23,0.762,24,0.615,32,0.402,33,0.289,44,1.163,45,0.947,51,1.075,65,0.023,66,0.023,72,0.868,74,2.129,82,2.468,84,1.471,94,1.708,133,2.468,143,3.957,144,4.521,145,2.857,146,3.402,147,3.957,148,4.909,149,5.378,150,3.198]],["title/classes/DeleteResultDto.html",[33,0.226,151,2.505]],["body/classes/DeleteResultDto.html",[3,0.398,4,0.35,5,0.304,8,0.259,9,0.62,12,0.292,13,0.029,15,0.499,18,0.35,21,0.495,22,0.861,23,0.757,24,0.609,32,0.398,33,0.285,44,1.155,45,0.943,51,1.068,65,0.023,66,0.023,72,0.859,74,2.119,82,2.452,84,1.456,94,1.69,145,2.826,147,3.93,150,3.164,151,3.93,152,4.491,153,5.111,154,5.812,155,4.599,156,3.93]],["title/classes/EntityReadService.html",[33,0.226,157,2.238]],["body/classes/EntityReadService.html",[0,0.322,2,1.149,3,0.312,4,0.274,5,0.238,8,0.203,12,0.311,13,0.029,18,0.451,21,0.536,30,0.621,31,0.915,32,0.312,33,0.224,36,0.911,38,1.065,45,0.802,65,0.019,66,0.019,72,0.673,74,1.228,76,2.474,94,1.324,98,1.429,104,3.397,110,3.294,111,3.005,112,2.349,133,2.847,146,2.804,148,2.832,157,2.997,158,2.832,159,4.56,160,3.833,161,3.355,162,4.345,163,2.712,164,3.833,165,3.833,166,3.833,167,4.656,168,3.369,169,3.804,170,3.833,171,3.833,172,4.074,173,3.369,174,3.833,175,4.257,176,3.369,177,3.833,178,3.369,179,4.56,180,2.832,181,3.369,182,4.074,183,3.369,184,2.479,185,3.369,186,3.369,187,3.369,188,2.832,189,3.369]],["title/classes/EntityWriteService.html",[33,0.226,190,2.505]],["body/classes/EntityWriteService.html",[0,0.371,2,0.874,3,0.213,4,0.187,5,0.163,8,0.139,12,0.314,13,0.029,18,0.496,21,0.431,25,1.521,30,0.424,31,0.625,32,0.213,33,0.153,36,0.693,38,0.537,45,0.921,65,0.015,66,0.015,67,2.316,72,0.46,74,0.839,76,3.041,92,3.91,94,0.904,101,3.91,110,3.619,111,3.302,112,2.581,133,2.29,146,1.882,153,2.917,155,3.422,157,3.579,160,2.917,161,2.553,162,5.166,163,2.063,164,2.917,165,2.917,166,1.934,167,2.917,169,4,170,5.116,171,1.934,172,2.553,174,1.934,175,2.553,177,1.934,182,4.22,188,3.91,190,2.553,191,1.934,192,3.47,193,3.47,194,3.47,195,3.47,196,3.47,197,3.47,198,3.47,199,3.47,200,2.917,201,3.47,202,4.914,203,2.301,204,3.47,205,2.301,206,3.47,207,2.301,208,3.47,209,5.246,210,2.301,211,3.47,212,2.301,213,3.47,214,2.301,215,3.47,216,2.301,217,3.47,218,3.91,219,2.301,220,3.47,221,4.651,222,2.301,223,2.301,224,2.301,225,2.301,226,2.301,227,2.301,228,2.301,229,1.934,230,2.301,231,2.301,232,2.301,233,2.301,234,2.301,235,2.301,236,4.177,237,4.651,238,2.301,239,2.301,240,2.301,241,2.301]],["title/classes/HttpErrorDto.html",[33,0.226,242,1.847]],["body/classes/HttpErrorDto.html",[3,0.388,4,0.341,5,0.296,8,0.252,9,0.61,12,0.302,13,0.029,14,1.203,15,0.61,18,0.428,21,0.388,22,0.744,23,0.813,24,0.593,32,0.388,33,0.278,44,1.137,45,0.816,65,0.022,66,0.022,72,0.837,74,1.527,84,1.779,135,4.418,242,2.852,243,4.828,244,2.491,245,6.023,246,5.256,247,6.204,248,5.743,249,3.521,250,3.521,251,5.256,252,4.418]],["title/entities/ManyRelation.html",[0,0.241,39,0.924]],["body/entities/ManyRelation.html",[0,0.393,1,1.245,2,0.68,3,0.25,4,0.22,5,0.191,6,1.944,7,1.344,8,0.163,9,0.453,10,0.914,11,1.06,12,0.329,13,0.029,14,1.304,15,0.314,16,1.606,17,2.902,18,0.22,21,0.494,22,0.553,23,0.553,24,0.382,25,1.448,26,0.914,27,0.914,28,1.593,29,0.914,30,1.024,31,0.733,32,0.515,33,0.369,34,1.245,35,1.245,36,1.066,37,3.404,38,1.174,39,1.364,40,1.648,41,1.245,42,1.322,43,0.733,44,0.844,45,0.78,46,1.443,47,1.553,48,0.912,49,1.448,50,0.912,51,0.54,52,1.06,53,1.702,54,1.715,55,1.702,56,1.581,57,1.553,58,1.141,59,1.322,60,1.702,61,1.553,62,0.914,63,0.914,64,0.914,65,0.017,66,0.017,253,2.7]],["title/entities/ManyRelation-1.html",[0,0.203,39,0.779,67,1.429]],["body/entities/ManyRelation-1.html",[0,0.4,1,1.282,2,0.716,3,0.263,4,0.231,5,0.201,8,0.171,9,0.471,10,0.962,11,1.1,12,0.33,13,0.029,14,1.312,15,0.33,18,0.231,21,0.504,22,0.574,23,0.574,24,0.403,25,1.477,26,0.962,27,0.962,28,1.607,29,0.962,30,1.042,31,0.772,32,0.524,33,0.375,34,1.282,35,1.282,36,1.087,38,1.202,39,1.397,40,1.667,41,1.282,42,1.372,43,0.772,44,0.876,45,0.799,46,1.485,47,1.598,48,0.946,49,1.477,50,0.946,51,0.568,52,1.1,53,1.742,54,1.739,55,1.742,56,1.619,57,1.598,58,1.184,59,1.372,60,1.742,61,1.598,62,0.962,63,0.962,64,0.962,65,0.017,66,0.017,68,1.415,69,1.69,254,2.842]],["title/entities/OneRelation.html",[0,0.241,35,0.924]],["body/entities/OneRelation.html",[0,0.393,1,1.245,2,0.68,3,0.25,4,0.22,5,0.191,6,1.944,7,1.344,8,0.163,9,0.453,10,0.914,11,1.06,12,0.329,13,0.029,14,1.304,15,0.314,16,1.606,17,2.902,18,0.22,21,0.494,22,0.553,23,0.553,24,0.382,25,1.448,26,0.914,27,0.914,28,1.593,29,0.914,30,1.024,31,0.733,32,0.515,33,0.369,34,1.245,35,1.364,36,1.066,37,3.404,38,1.298,39,1.245,40,1.593,41,1.245,42,1.322,43,0.733,44,0.844,45,0.78,46,1.443,47,1.553,48,0.912,49,1.448,50,0.912,51,0.54,52,1.06,53,1.702,54,1.715,55,1.702,56,1.581,57,1.553,58,1.141,59,1.322,60,1.702,61,1.553,62,0.914,63,0.914,64,0.914,65,0.017,66,0.017,255,2.7]],["title/entities/OneRelation-1.html",[0,0.203,35,0.779,67,1.429]],["body/entities/OneRelation-1.html",[0,0.4,1,1.282,2,0.716,3,0.263,4,0.231,5,0.201,8,0.171,9,0.471,10,0.962,11,1.1,12,0.33,13,0.029,14,1.312,15,0.33,18,0.231,21,0.504,22,0.574,23,0.574,24,0.403,25,1.477,26,0.962,27,0.962,28,1.607,29,0.962,30,1.042,31,0.772,32,0.524,33,0.375,34,1.282,35,1.397,36,1.087,38,1.321,39,1.282,40,1.615,41,1.282,42,1.372,43,0.772,44,0.876,45,0.799,46,1.485,47,1.598,48,0.946,49,1.477,50,0.946,51,0.568,52,1.1,53,1.742,54,1.739,55,1.742,56,1.619,57,1.598,58,1.184,59,1.372,60,1.742,61,1.598,62,0.962,63,0.962,64,0.962,65,0.017,66,0.017,68,1.415,69,1.69,256,2.842]],["title/entities/OwnerRelation.html",[0,0.241,41,0.924]],["body/entities/OwnerRelation.html",[0,0.393,1,1.245,2,0.68,3,0.25,4,0.22,5,0.191,6,1.944,7,1.344,8,0.163,9,0.453,10,0.914,11,1.06,12,0.329,13,0.029,14,1.304,15,0.314,16,1.606,17,2.902,18,0.22,21,0.494,22,0.553,23,0.553,24,0.382,25,1.448,26,0.914,27,0.914,28,1.593,29,0.914,30,1.024,31,0.733,32,0.515,33,0.369,34,1.245,35,1.245,36,1.066,37,3.404,38,1.174,39,1.245,40,1.593,41,1.364,42,1.702,43,0.733,44,0.844,45,0.78,46,1.443,47,1.553,48,0.912,49,1.448,50,0.912,51,0.54,52,1.06,53,1.702,54,1.715,55,1.702,56,1.581,57,1.553,58,1.141,59,1.322,60,1.702,61,1.553,62,0.914,63,0.914,64,0.914,65,0.017,66,0.017,257,2.7]],["title/entities/OwnerRelation-1.html",[0,0.203,41,0.779,67,1.429]],["body/entities/OwnerRelation-1.html",[0,0.4,1,1.282,2,0.716,3,0.263,4,0.231,5,0.201,8,0.171,9,0.471,10,0.962,11,1.1,12,0.33,13,0.029,14,1.312,15,0.33,18,0.231,21,0.504,22,0.574,23,0.574,24,0.403,25,1.477,26,0.962,27,0.962,28,1.607,29,0.962,30,1.042,31,0.772,32,0.524,33,0.375,34,1.282,35,1.282,36,1.087,38,1.202,39,1.282,40,1.615,41,1.397,42,1.742,43,0.772,44,0.876,45,0.799,46,1.485,47,1.598,48,0.946,49,1.477,50,0.946,51,0.568,52,1.1,53,1.742,54,1.739,55,1.742,56,1.619,57,1.598,58,1.184,59,1.372,60,1.742,61,1.598,62,0.962,63,0.962,64,0.962,65,0.017,66,0.017,68,1.415,69,1.69,258,2.842]],["title/classes/SingleValidationErrorDto.html",[33,0.226,259,2.024]],["body/classes/SingleValidationErrorDto.html",[3,0.301,4,0.265,5,0.23,8,0.196,9,0.517,12,0.334,13,0.029,14,1.353,15,0.517,18,0.363,21,0.47,22,0.773,23,0.941,24,0.461,32,0.47,33,0.337,36,0.65,48,1.186,49,1.378,50,0.76,51,0.65,65,0.019,66,0.019,72,0.65,82,2.505,84,1.508,94,1.279,112,2.316,242,2.416,244,1.935,259,3.246,260,3.337,261,3.735,262,3.735,263,3.4,264,3.254,265,3.254,266,3.276,267,3.276,268,2.394,269,2.394,270,2.139,271,2.139,272,2.394,273,2.394,274,2.394,275,2.394,276,2.394,277,2.394,278,2.394,279,2.394,280,2.394,281,2.394,282,1.935,283,2.139]],["title/classes/TableNamingStrategy.html",[33,0.226,284,2.505]],["body/classes/TableNamingStrategy.html",[3,0.333,4,0.293,5,0.254,8,0.217,12,0.285,13,0.029,14,1.353,18,0.463,21,0.333,28,1.199,32,0.333,33,0.239,36,0.951,65,0.02,66,0.02,72,0.718,74,1.31,98,1.524,110,3.38,111,3.084,112,2.411,161,3.503,169,3.736,182,4.182,284,3.503,285,4.971,286,3.021,287,4.761,288,4.002,289,4.761,290,4.761,291,5.339,292,4.761,293,4.761,294,4.761,295,5.339,296,4.761,297,3.594,298,4.761,299,4.761,300,3.594,301,5.684,302,4.761,303,3.594,304,3.594,305,5.339,306,3.594,307,4.761,308,5.684,309,3.594]],["title/entities/TestEntity.html",[0,0.241,43,0.924]],["body/entities/TestEntity.html",[0,0.352,1,1.275,2,0.507,3,0.186,4,0.164,5,0.142,6,2.944,7,1.002,8,0.121,9,0.364,10,0.681,11,0.85,12,0.332,13,0.029,14,1.276,15,0.677,16,3.194,17,2.891,18,0.475,21,0.435,22,0.443,23,0.443,24,0.285,25,1.275,26,0.681,27,0.681,28,1.507,29,0.681,30,0.916,31,0.546,32,0.461,33,0.33,34,1.275,35,1.275,36,0.939,37,3.208,38,1.254,39,1.275,40,1.655,41,1.275,42,1.468,43,0.85,44,1.016,45,0.856,46,1.634,47,1.684,48,1.097,49,1.531,50,1.097,51,0.626,52,1.275,53,1.818,54,1.782,55,1.818,56,1.689,57,1.684,58,1.267,59,1.468,60,1.818,61,1.684,62,1.06,63,0.681,64,1.301,65,0.013,66,0.013,310,2.058,311,2.012,312,3.645,313,2.012,314,2.012,315,2.012,316,2.012,317,2.012,318,2.012,319,2.012,320,2.012,321,2.012,322,2.012,323,2.012]],["title/entities/TestEntity-1.html",[0,0.203,43,0.779,67,1.429]],["body/entities/TestEntity-1.html",[0,0.362,1,1.317,2,0.544,3,0.2,4,0.176,5,0.153,8,0.13,9,0.384,10,0.731,11,0.898,12,0.329,13,0.029,14,1.288,15,0.689,18,0.483,21,0.449,22,0.468,23,0.468,24,0.306,25,1.317,26,0.731,27,0.731,28,1.529,29,0.731,30,0.943,31,0.586,32,0.474,33,0.34,34,1.317,35,1.317,36,0.97,38,1.284,39,1.317,40,1.677,41,1.317,42,1.524,43,0.898,44,1.049,45,0.874,46,1.676,47,1.733,48,1.134,49,1.561,50,1.134,51,0.661,52,1.317,53,1.861,54,1.805,55,1.861,56,1.729,57,1.733,58,1.316,59,1.524,60,1.861,61,1.733,62,1.119,63,0.731,64,1.36,65,0.014,66,0.014,68,1.075,69,3.268,310,2.173,312,3.785,324,2.16,325,2.16,326,2.16,327,2.16,328,2.16,329,2.16,330,2.16,331,2.16,332,2.16,333,2.16,334,2.16,335,2.16]],["title/classes/TestObject.html",[33,0.226,34,0.924]],["body/classes/TestObject.html",[0,0.393,1,1.248,3,0.251,4,0.221,5,0.191,6,1.949,7,1.349,8,0.163,9,0.455,10,0.917,11,1.367,12,0.328,13,0.029,14,1.305,15,0.315,17,2.881,18,0.221,21,0.494,22,0.554,23,0.554,24,0.384,25,1.449,26,0.917,27,0.917,28,1.594,29,0.917,30,1.025,31,0.735,32,0.515,33,0.369,34,1.367,35,1.248,36,1.067,37,3.406,38,1.176,39,1.248,40,1.595,41,1.248,42,1.325,43,0.735,44,0.846,45,0.781,46,1.446,47,1.556,48,0.914,49,1.449,50,0.914,51,0.541,52,1.063,53,1.704,54,1.717,55,1.704,56,1.584,57,1.556,58,1.144,59,1.325,60,1.704,61,1.556,62,0.917,63,0.917,64,0.917,65,0.017,66,0.017,72,0.541,84,0.917,336,2.709]],["title/classes/TestObject-1.html",[33,0.191,34,0.779,67,1.429]],["body/classes/TestObject-1.html",[0,0.4,1,1.282,3,0.263,4,0.231,5,0.201,8,0.171,9,0.471,10,0.962,11,1.397,12,0.33,13,0.029,14,1.312,15,0.33,18,0.231,21,0.504,22,0.574,23,0.574,24,0.403,25,1.477,26,0.962,27,0.962,28,1.607,29,0.962,30,1.042,31,0.772,32,0.524,33,0.375,34,1.397,35,1.282,36,1.087,38,1.202,39,1.282,40,1.615,41,1.282,42,1.372,43,0.772,44,0.876,45,0.799,46,1.485,47,1.598,48,0.946,49,1.477,50,0.946,51,0.568,52,1.1,53,1.742,54,1.739,55,1.742,56,1.619,57,1.598,58,1.184,59,1.372,60,1.742,61,1.598,62,0.962,63,0.962,64,0.962,65,0.017,66,0.017,68,1.415,72,0.568,84,0.962,337,2.842]],["title/classes/UpdateResultDto.html",[33,0.226,338,2.505]],["body/classes/UpdateResultDto.html",[3,0.4,4,0.352,5,0.306,8,0.261,9,0.622,12,0.293,13,0.029,15,0.502,18,0.352,21,0.496,22,0.759,23,0.759,24,0.612,32,0.4,33,0.287,44,1.159,45,0.945,51,1.071,65,0.023,66,0.023,72,0.864,74,2.124,82,2.46,84,1.464,94,1.699,145,2.842,147,3.943,150,3.18,155,4.606,156,3.943,200,5.12,229,4.898,338,3.943,339,4.506]],["title/classes/ValidationConstraintsDto.html",[33,0.226,263,2.024]],["body/classes/ValidationConstraintsDto.html",[3,0.237,4,0.208,5,0.181,8,0.154,9,0.436,12,0.334,13,0.029,14,1.361,15,0.714,18,0.501,21,0.411,22,0.694,23,0.905,24,0.362,32,0.411,33,0.295,36,0.511,48,0.876,49,1.018,50,0.597,51,0.511,65,0.016,66,0.016,72,0.511,82,2.247,84,2.082,94,1.004,112,2.787,242,2.035,244,1.519,249,2.148,250,2.148,259,2.643,260,4.082,261,2.76,262,1.88,263,2.912,266,3.27,267,2.76,268,1.88,269,1.88,270,2.921,271,2.921,272,3.27,273,3.27,274,3.27,275,3.27,276,3.27,277,3.27,278,3.27,279,3.27,280,3.27,281,3.27,282,1.519,283,1.679,340,2.555,341,2.555,342,2.555,343,2.555,344,2.555,345,2.555,346,2.555,347,2.555,348,2.555,349,2.555]],["title/classes/ValidationErrorDto.html",[33,0.226,282,2.024]],["body/classes/ValidationErrorDto.html",[3,0.311,4,0.274,5,0.238,8,0.203,9,0.529,12,0.334,13,0.029,14,1.352,15,0.39,18,0.274,21,0.478,22,0.784,23,0.938,24,0.476,32,0.478,33,0.343,36,0.672,48,1.064,49,1.236,50,1.064,51,0.91,65,0.019,66,0.019,72,0.672,82,2.539,84,1.138,94,1.321,112,1.931,242,2.47,244,1.999,259,3.291,260,2.993,261,3.35,262,2.473,263,3.07,266,3.35,267,3.798,268,2.473,269,2.473,270,2.21,271,2.21,272,2.473,273,2.473,274,2.473,275,2.473,276,2.473,277,2.473,278,2.473,279,2.473,280,2.473,281,2.473,282,2.708,283,3.394,310,2.21,350,3.362]],["title/coverage.html",[351,3.86]],["body/coverage.html",[0,0.426,1,0.986,5,0.173,6,2.673,7,2.673,12,0.257,13,0.029,25,1.176,28,0.915,30,0.451,33,0.421,34,0.986,35,0.986,38,0.849,39,0.986,40,0.986,41,0.986,43,0.986,65,0.015,66,0.015,68,2.673,73,2.673,81,1.608,102,1.8,104,1.608,105,2.057,116,2.057,117,2.057,121,1.8,122,2.057,128,1.8,131,1.8,132,2.057,133,2.676,134,3.901,143,1.8,144,2.057,145,2.848,146,1.971,151,1.8,152,2.057,157,1.608,158,2.057,163,1.455,184,2.673,190,1.8,191,2.057,242,1.328,243,2.057,244,2.852,259,1.455,260,2.848,263,1.455,282,1.455,284,1.8,285,2.057,286,2.057,288,2.057,338,1.8,339,2.057,351,2.057,352,1.608,353,2.447,354,2.447,355,3.054,356,2.057,357,5.304,358,2.057,359,6.349,360,6.31,361,3.528,362,2.057,363,2.057,364,2.057,365,2.057,366,3.054,367,2.057,368,2.057,369,2.057,370,4.031,371,4.796,372,3.054,373,2.057,374,2.057,375,2.057,376,2.447,377,6.519,378,2.447,379,2.447,380,5.124,381,3.633,382,3.633,383,2.447,384,6.266,385,4.2,386,2.057,387,2.057,388,2.057,389,4.796,390,1.8,391,2.057,392,1.8,393,2.057,394,1.8,395,2.057,396,2.057,397,2.057,398,2.057,399,2.673,400,2.057,401,2.057,402,2.057,403,2.447,404,2.447,405,2.447,406,2.447,407,2.057,408,2.447]],["title/dependencies.html",[409,2.413,410,3.001]],["body/dependencies.html",[13,0.028,24,0.709,33,0.332,65,0.025,66,0.025,98,2.123,180,4.208,410,4.307,411,5.005,412,5.005,413,4.922,414,5.005,415,3.682,416,5.005,417,5.005]],["title/miscellaneous/functions.html",[418,1.557,419,3.43]],["body/miscellaneous/functions.html",[0,0.382,8,0.124,11,0.559,12,0.322,13,0.028,14,0.637,17,0.944,18,0.168,22,0.711,23,0.451,25,1.54,28,1.265,30,0.379,33,0.291,38,0.744,40,0.865,48,0.481,50,0.744,54,0.601,58,0.601,65,0.014,66,0.014,72,0.411,74,2.166,76,1.117,80,3.69,98,2.014,110,3.61,111,3.293,112,2.575,128,2.344,133,2.758,134,3.855,140,1.514,146,2.115,163,1.895,169,4.025,172,1.514,175,1.514,184,3.493,202,1.73,218,1.73,310,1.353,352,2.094,355,2.678,356,2.678,357,1.73,358,2.678,361,3.694,362,2.678,363,1.73,364,1.73,365,1.73,366,2.678,367,2.678,368,2.678,369,2.678,372,2.678,373,2.678,374,2.678,375,2.678,385,3.493,386,2.678,387,2.678,388,2.678,390,2.868,391,2.678,392,2.868,393,2.678,394,2.868,395,2.678,396,2.678,397,1.73,398,3.277,399,1.514,400,2.678,415,2.344,418,1.117,419,1.73,420,2.058,421,4.402,422,2.058,423,3.186,424,2.058,425,2.058,426,3.186,427,1.73,428,2.058,429,5.777,430,3.852,431,1.514,432,2.058,433,5.866,434,3.186,435,5.411,436,5.411,437,2.058,438,4.748,439,5.237,440,2.058,441,2.058,442,2.058,443,2.058,444,2.058,445,2.058,446,5.411,447,3.186,448,3.186,449,2.058,450,2.058,451,2.058,452,2.058,453,3.186,454,2.058,455,2.058,456,2.058,457,3.186,458,2.058,459,2.058,460,2.058,461,3.186,462,4.389,463,2.058,464,2.058,465,2.058,466,3.186,467,3.277,468,2.344,469,3.186,470,2.058,471,2.058,472,2.058,473,1.73,474,2.058,475,2.678,476,2.058,477,2.058,478,2.058,479,1.73,480,2.058,481,2.058,482,2.058,483,3.186,484,2.058,485,3.899,486,2.058,487,2.058,488,2.058,489,2.058,490,2.058,491,3.186,492,2.058,493,2.058,494,3.186,495,2.058,496,2.058,497,2.058,498,2.058,499,2.058,500,2.058,501,2.058,502,2.058,503,2.058]],["title/index.html",[8,0.173,504,2.87,505,2.87]],["body/index.html",[0,0.255,2,0.612,4,0.198,5,0.172,11,0.659,12,0.122,13,0.018,14,0.722,15,0.555,17,1.114,22,0.611,28,1.087,33,0.317,45,0.793,48,0.844,50,0.567,52,0.659,58,1.493,65,0.015,66,0.015,98,1.83,111,1.318,133,2.192,156,1.787,163,1.444,252,2.042,270,1.596,271,1.596,283,1.596,352,2.836,370,3.037,402,2.042,407,2.042,410,1.787,415,3.174,430,1.787,431,1.787,467,4.5,468,3.174,473,3.037,475,2.042,479,2.042,506,3.613,507,2.429,508,2.042,509,2.042,510,2.042,511,2.042,512,2.042,513,2.042,514,3.037,515,4.017,516,2.042,517,4.017,518,2.042,519,2.042,520,2.042,521,2.042,522,2.042,523,2.042,524,3.627,525,2.042,526,4.314,527,2.429,528,2.429,529,2.429,530,2.429,531,2.429,532,2.429,533,2.429,534,2.429,535,2.429,536,2.429,537,3.613,538,3.613,539,2.429,540,2.429,541,2.429,542,3.613,543,2.429,544,3.613,545,2.429,546,2.429,547,2.429,548,2.429,549,2.429,550,2.429,551,2.429,552,3.613,553,2.429,554,2.429,555,2.429,556,3.613,557,3.613,558,2.429,559,4.314,560,4.314,561,3.613,562,3.613,563,3.613,564,2.429,565,2.429,566,3.613,567,5.107,568,3.613,569,3.613,570,3.613,571,2.429,572,4.314,573,2.429,574,2.429,575,2.429,576,2.429,577,2.042,578,2.429,579,3.613,580,2.429,581,2.429,582,2.429,583,2.429,584,2.429,585,2.429,586,3.613,587,2.429,588,2.429,589,3.613,590,2.429,591,2.429,592,2.429,593,4.314,594,2.429,595,2.429,596,2.429,597,2.429,598,2.429,599,2.429,600,3.613,601,2.429,602,3.613,603,2.429,604,2.429,605,2.429,606,3.613,607,2.429,608,2.429,609,2.429,610,2.429,611,2.429,612,2.429,613,2.429,614,2.429,615,2.429,616,2.429,617,2.429,618,3.613,619,2.429,620,3.613,621,2.429,622,2.429,623,2.429,624,2.429,625,3.613,626,2.429,627,2.429,628,2.429,629,2.429,630,2.429,631,2.429,632,2.429,633,2.429,634,2.429,635,2.429,636,2.429,637,2.429,638,2.429,639,2.429,640,2.429,641,2.429,642,2.429,643,2.429,644,2.429,645,2.429,646,2.429,647,2.429,648,2.429,649,2.429,650,2.429,651,2.429,652,2.429,653,2.429,654,2.429,655,2.429,656,2.429,657,2.429,658,2.429,659,2.429,660,3.613,661,2.429,662,2.429,663,2.429,664,2.429,665,2.429,666,3.613,667,4.314,668,3.613,669,2.429,670,3.613,671,2.429,672,2.429,673,2.429,674,2.429,675,3.613,676,2.429,677,2.429,678,2.429,679,2.429,680,2.429,681,2.429,682,2.429,683,4.314,684,2.429,685,2.429,686,3.613,687,2.429,688,2.429,689,2.429,690,4.778,691,2.429,692,2.429,693,2.429,694,2.429,695,2.429,696,2.429,697,3.613,698,2.429,699,2.429,700,2.429,701,2.429,702,2.429,703,2.429,704,2.429,705,2.429,706,2.429,707,2.429,708,2.429,709,2.429,710,2.429,711,2.429,712,2.429,713,2.429,714,2.429,715,2.429,716,2.429,717,2.429,718,2.429,719,2.429,720,2.429,721,2.429,722,2.429,723,2.429,724,2.429,725,3.613,726,2.429]],["title/modules.html",[727,3.86]],["body/modules.html",[13,0.026,65,0.026,66,0.026,727,4.456]],["title/overview.html",[728,3.86]],["body/overview.html",[2,1.318,13,0.025,65,0.025,66,0.025,72,1.045,577,4.398,728,4.398,729,5.232]],["title/properties.html",[9,0.474,409,2.413]],["body/properties.html",[0,0.317,2,1.131,9,0.522,13,0.028,15,0.637,22,0.636,65,0.023,66,0.023,74,1.637,98,1.905,108,3.775,352,3.607,413,3.775,430,3.304,431,3.304,468,3.304,508,3.775,509,3.775,510,3.775,511,3.775,512,3.775,513,3.775,514,4.613,515,3.775,516,3.775,517,3.775,518,3.775,519,3.775,520,3.775,521,3.775,522,3.775,523,3.775,524,3.775,525,3.775,730,4.491,731,4.491,732,4.491,733,4.491,734,4.491,735,4.491,736,4.491,737,4.491,738,4.491,739,4.491,740,4.491,741,4.491,742,4.491,743,4.491]],["title/miscellaneous/typealiases.html",[418,1.557,744,4.08]],["body/miscellaneous/typealiases.html",[8,0.277,12,0.312,13,0.024,38,1.299,40,1.51,65,0.024,66,0.024,133,3.033,134,4.255,146,3.018,361,4.093,385,4.402,390,4.093,392,4.093,394,4.093,399,3.379,401,4.676,418,2.492,421,5.031,427,3.861,745,4.593,746,5.984]],["title/miscellaneous/variables.html",[418,1.557,747,3.43]],["body/miscellaneous/variables.html",[8,0.308,11,1.389,13,0.027,30,0.942,65,0.025,66,0.025,73,3.764,102,4.362,103,4.301,140,3.764,418,2.776,747,4.301,748,5.116]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":377,"title":{},"body":{"coverage.html":{}}}],["0.3.20",{"_index":417,"title":{},"body":{"dependencies.html":{}}}],["0.4.11",{"_index":413,"title":{},"body":{"dependencies.html":{},"properties.html":{}}}],["0.5.1",{"_index":416,"title":{},"body":{"dependencies.html":{}}}],["0.5.15",{"_index":412,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":384,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":379,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":380,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":378,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":406,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":67,"title":{"entities/AttributeRelation-1.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity-1.html":{},"classes/TestObject-1.html":{}},"body":{"classes/EntityWriteService.html":{}}}],["1/1",{"_index":360,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":371,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":382,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":577,"title":{},"body":{"index.html":{},"overview.html":{}}}],["100",{"_index":359,"title":{},"body":{"coverage.html":{}}}],["16mb",{"_index":649,"title":{},"body":{"index.html":{}}}],["17",{"_index":729,"title":{},"body":{"overview.html":{}}}],["2,000",{"_index":616,"title":{},"body":{"index.html":{}}}],["20",{"_index":381,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":630,"title":{},"body":{"index.html":{}}}],["21",{"_index":404,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":636,"title":{},"body":{"index.html":{}}}],["3/14",{"_index":405,"title":{},"body":{"coverage.html":{}}}],["3/3",{"_index":376,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":403,"title":{},"body":{"coverage.html":{}}}],["30,000",{"_index":601,"title":{},"body":{"index.html":{}}}],["40",{"_index":637,"title":{},"body":{"index.html":{}}}],["4gb",{"_index":642,"title":{},"body":{"index.html":{}}}],["50",{"_index":370,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["60",{"_index":402,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["___viewcolumn",{"_index":489,"title":{},"body":{"miscellaneous/functions.html":{}}}],["___viewentity",{"_index":492,"title":{},"body":{"miscellaneous/functions.html":{}}}],["_tablename",{"_index":301,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["acceptstring",{"_index":141,"title":{},"body":{"classes/CommonQueryDto.html":{}}}],["accommodate",{"_index":552,"title":{},"body":{"index.html":{}}}],["accommodating",{"_index":574,"title":{},"body":{"index.html":{}}}],["achieves",{"_index":541,"title":{},"body":{"index.html":{}}}],["add",{"_index":550,"title":{},"body":{"index.html":{}}}],["added",{"_index":500,"title":{},"body":{"miscellaneous/functions.html":{}}}],["addrelation",{"_index":193,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["addrelation(relation",{"_index":201,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["adjust",{"_index":626,"title":{},"body":{"index.html":{}}}],["administrative",{"_index":631,"title":{},"body":{"index.html":{}}}],["adopted",{"_index":532,"title":{},"body":{"index.html":{}}}],["affected",{"_index":155,"title":{},"body":{"classes/DeleteResultDto.html":{},"classes/EntityWriteService.html":{},"classes/UpdateResultDto.html":{}}}],["alias",{"_index":389,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":745,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allocate",{"_index":635,"title":{},"body":{"index.html":{}}}],["allocation",{"_index":646,"title":{},"body":{"index.html":{}}}],["allowed",{"_index":568,"title":{},"body":{"index.html":{}}}],["api",{"_index":514,"title":{},"body":{"index.html":{},"properties.html":{}}}],["application",{"_index":620,"title":{},"body":{"index.html":{}}}],["apply",{"_index":679,"title":{},"body":{"index.html":{}}}],["approach",{"_index":540,"title":{},"body":{"index.html":{}}}],["array",{"_index":50,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["arraymaxsize",{"_index":281,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["arrayminsize",{"_index":280,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["associated",{"_index":546,"title":{},"body":{"index.html":{}}}],["async",{"_index":162,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["attributerelation",{"_index":1,"title":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{}}}],["attributes",{"_index":64,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["author",{"_index":741,"title":{},"body":{"properties.html":{}}}],["availability",{"_index":596,"title":{},"body":{"index.html":{}}}],["available",{"_index":583,"title":{},"body":{"index.html":{}}}],["avoid",{"_index":658,"title":{},"body":{"index.html":{}}}],["await",{"_index":188,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["balancing",{"_index":594,"title":{},"body":{"index.html":{}}}],["base",{"_index":99,"title":{},"body":{"classes/BaseEntity.html":{}}}],["base.js",{"_index":181,"title":{},"body":{"classes/EntityReadService.html":{}}}],["base_entity_columns",{"_index":102,"title":{},"body":{"classes/BaseEntity.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["based",{"_index":465,"title":{},"body":{"miscellaneous/functions.html":{}}}],["baseentity",{"_index":30,"title":{"classes/BaseEntity.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["baseentityservice",{"_index":104,"title":{"classes/BaseEntityService.html":{}},"body":{"classes/BaseEntityService.html":{},"classes/EntityReadService.html":{},"coverage.html":{}}}],["baseidentity",{"_index":81,"title":{"classes/BaseIdEntity.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"coverage.html":{}}}],["baseidentity:8",{"_index":93,"title":{},"body":{"classes/BaseEntity.html":{}}}],["baseline",{"_index":581,"title":{},"body":{"index.html":{}}}],["basemodel",{"_index":83,"title":{},"body":{"classes/BaseEntity.html":{}}}],["baseview",{"_index":121,"title":{"classes/BaseView.html":{}},"body":{"classes/BaseView.html":{},"coverage.html":{}}}],["before",{"_index":608,"title":{},"body":{"index.html":{}}}],["being",{"_index":609,"title":{},"body":{"index.html":{}}}],["bigint",{"_index":47,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["boolean",{"_index":46,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/CommonQueryDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["both",{"_index":544,"title":{},"body":{"index.html":{}}}],["brightline",{"_index":743,"title":{},"body":{"properties.html":{}}}],["bug",{"_index":705,"title":{},"body":{"index.html":{}}}],["bugs",{"_index":736,"title":{},"body":{"properties.html":{}}}],["builder",{"_index":494,"title":{},"body":{"miscellaneous/functions.html":{}}}],["builder/querypartialentity.js",{"_index":228,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["capabilities",{"_index":432,"title":{},"body":{"miscellaneous/functions.html":{}}}],["capability",{"_index":453,"title":{},"body":{"miscellaneous/functions.html":{}}}],["capacity",{"_index":633,"title":{},"body":{"index.html":{}}}],["cascade",{"_index":61,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["certain",{"_index":474,"title":{},"body":{"miscellaneous/functions.html":{}}}],["class",{"_index":33,"title":{"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/HttpErrorDto.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["classdecorator",{"_index":462,"title":{},"body":{"miscellaneous/functions.html":{}}}],["classes",{"_index":72,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/HttpErrorDto.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["clear",{"_index":523,"title":{},"body":{"index.html":{},"properties.html":{}}}],["closed",{"_index":610,"title":{},"body":{"index.html":{}}}],["code",{"_index":252,"title":{},"body":{"classes/HttpErrorDto.html":{},"index.html":{}}}],["column",{"_index":28,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["column(options",{"_index":428,"title":{},"body":{"miscellaneous/functions.html":{}}}],["column({databasetype",{"_index":16,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/ManyRelation.html":{},"entities/OneRelation.html":{},"entities/OwnerRelation.html":{},"entities/TestEntity.html":{}}}],["column({type",{"_index":69,"title":{},"body":{"entities/AttributeRelation-1.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity-1.html":{}}}],["column.js",{"_index":130,"title":{},"body":{"classes/BaseView.html":{}}}],["column.ts",{"_index":367,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["columns",{"_index":80,"title":{},"body":{"classes/BaseEntity.html":{},"miscellaneous/functions.html":{}}}],["columntype",{"_index":470,"title":{},"body":{"miscellaneous/functions.html":{}}}],["common",{"_index":135,"title":{},"body":{"classes/CommonQueryDto.html":{},"classes/HttpErrorDto.html":{}}}],["commonquerydto",{"_index":131,"title":{"classes/CommonQueryDto.html":{}},"body":{"classes/CommonQueryDto.html":{},"coverage.html":{}}}],["compatibility",{"_index":708,"title":{},"body":{"index.html":{}}}],["compatible",{"_index":482,"title":{},"body":{"miscellaneous/functions.html":{}}}],["composite",{"_index":456,"title":{},"body":{"miscellaneous/functions.html":{}}}],["configuration",{"_index":562,"title":{},"body":{"index.html":{}}}],["configure",{"_index":600,"title":{},"body":{"index.html":{}}}],["configured",{"_index":641,"title":{},"body":{"index.html":{}}}],["connection",{"_index":606,"title":{},"body":{"index.html":{}}}],["connections",{"_index":567,"title":{},"body":{"index.html":{}}}],["connectiontimeoutmillis",{"_index":615,"title":{},"body":{"index.html":{}}}],["consider",{"_index":693,"title":{},"body":{"index.html":{}}}],["const",{"_index":101,"title":{},"body":{"classes/BaseEntity.html":{},"classes/EntityWriteService.html":{}}}],["constraint",{"_index":458,"title":{},"body":{"miscellaneous/functions.html":{}}}],["constraints",{"_index":262,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["constructor",{"_index":106,"title":{},"body":{"classes/BaseEntityService.html":{}}}],["constructor(protected",{"_index":114,"title":{},"body":{"classes/BaseEntityService.html":{}}}],["constructor(repo",{"_index":107,"title":{},"body":{"classes/BaseEntityService.html":{}}}],["consumption",{"_index":613,"title":{},"body":{"index.html":{}}}],["contact",{"_index":724,"title":{},"body":{"index.html":{}}}],["contributions",{"_index":696,"title":{},"body":{"index.html":{}}}],["controller",{"_index":675,"title":{},"body":{"index.html":{}}}],["converted",{"_index":656,"title":{},"body":{"index.html":{}}}],["count",{"_index":146,"title":{},"body":{"classes/CountResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["count(query",{"_index":166,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["countresult",{"_index":148,"title":{},"body":{"classes/CountResultDto.html":{},"classes/EntityReadService.html":{}}}],["countresultdto",{"_index":143,"title":{"classes/CountResultDto.html":{}},"body":{"classes/CountResultDto.html":{},"coverage.html":{}}}],["coverage",{"_index":351,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["coverts",{"_index":495,"title":{},"body":{"miscellaneous/functions.html":{}}}],["create",{"_index":439,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createdat",{"_index":77,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseView.html":{}}}],["createdatecolumn",{"_index":95,"title":{},"body":{"classes/BaseEntity.html":{}}}],["createfindoperator",{"_index":387,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createfindoperator(query",{"_index":437,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createquerycountdto",{"_index":388,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createquerycountdto(options",{"_index":442,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createquerycountdtooptions",{"_index":390,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["createquerymanydto",{"_index":391,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createquerymanydto(options",{"_index":443,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createqueryonedto",{"_index":393,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createqueryonedto(options",{"_index":444,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createrelationparamdto",{"_index":373,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createrelationparamdto(relations",{"_index":445,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createunsetrelationparamdto",{"_index":375,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createunsetrelationparamdto(relations",{"_index":449,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createwhereoptiondto",{"_index":396,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createwhereoptiondto(columns",{"_index":450,"title":{},"body":{"miscellaneous/functions.html":{}}}],["custom",{"_index":508,"title":{},"body":{"index.html":{},"properties.html":{}}}],["data",{"_index":467,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["databaes",{"_index":287,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["database",{"_index":468,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["databases",{"_index":472,"title":{},"body":{"miscellaneous/functions.html":{}}}],["databasetype",{"_index":37,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/ManyRelation.html":{},"entities/OneRelation.html":{},"entities/OwnerRelation.html":{},"entities/TestEntity.html":{},"classes/TestObject.html":{}}}],["datasource",{"_index":557,"title":{},"body":{"index.html":{}}}],["date",{"_index":52,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseView.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"index.html":{}}}],["date'})@createdatecolumn",{"_index":85,"title":{},"body":{"classes/BaseEntity.html":{}}}],["date'})@deletedatecolumn",{"_index":87,"title":{},"body":{"classes/BaseEntity.html":{}}}],["date'})@updatedatecolumn",{"_index":89,"title":{},"body":{"classes/BaseEntity.html":{}}}],["decorator",{"_index":430,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["decorator/column.js",{"_index":29,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["decorator/entity.js",{"_index":27,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["decorator/relation.js",{"_index":26,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["decorator/view",{"_index":129,"title":{},"body":{"classes/BaseView.html":{}}}],["decorators",{"_index":15,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"index.html":{},"properties.html":{}}}],["dedicated",{"_index":678,"title":{},"body":{"index.html":{}}}],["default",{"_index":140,"title":{},"body":{"classes/CommonQueryDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defaultnamingstrategy",{"_index":291,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["define",{"_index":644,"title":{},"body":{"index.html":{}}}],["defined",{"_index":18,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{}}}],["defines",{"_index":565,"title":{},"body":{"index.html":{}}}],["definitions",{"_index":511,"title":{},"body":{"index.html":{},"properties.html":{}}}],["delays",{"_index":624,"title":{},"body":{"index.html":{}}}],["delete",{"_index":153,"title":{},"body":{"classes/DeleteResultDto.html":{},"classes/EntityWriteService.html":{}}}],["delete(id",{"_index":204,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["deleted",{"_index":138,"title":{},"body":{"classes/CommonQueryDto.html":{}}}],["deletedat",{"_index":79,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseView.html":{}}}],["deletedatecolumn",{"_index":96,"title":{},"body":{"classes/BaseEntity.html":{}}}],["deleteresult",{"_index":154,"title":{},"body":{"classes/DeleteResultDto.html":{}}}],["deleteresultdto",{"_index":151,"title":{"classes/DeleteResultDto.html":{}},"body":{"classes/DeleteResultDto.html":{},"coverage.html":{}}}],["demand",{"_index":576,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":410,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["description",{"_index":74,"title":{},"body":{"classes/BaseEntity.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/HttpErrorDto.html":{},"classes/TableNamingStrategy.html":{},"classes/UpdateResultDto.html":{},"miscellaneous/functions.html":{},"properties.html":{}}}],["determines",{"_index":603,"title":{},"body":{"index.html":{}}}],["developer",{"_index":725,"title":{},"body":{"index.html":{}}}],["development",{"_index":526,"title":{},"body":{"index.html":{}}}],["disrupting",{"_index":659,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":352,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["done",{"_index":670,"title":{},"body":{"index.html":{}}}],["driver",{"_index":469,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dto",{"_index":22,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["dto.ts",{"_index":134,"title":{},"body":{"classes/CommonQueryDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["dto.ts:14",{"_index":142,"title":{},"body":{"classes/CommonQueryDto.html":{}}}],["duration",{"_index":604,"title":{},"body":{"index.html":{}}}],["during",{"_index":586,"title":{},"body":{"index.html":{}}}],["eager",{"_index":53,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["efficiency",{"_index":538,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":571,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":519,"title":{},"body":{"index.html":{},"properties.html":{}}}],["effort",{"_index":689,"title":{},"body":{"index.html":{}}}],["encrypion",{"_index":669,"title":{},"body":{"index.html":{}}}],["encrypted",{"_index":677,"title":{},"body":{"index.html":{}}}],["encryption",{"_index":674,"title":{},"body":{"index.html":{}}}],["enhance",{"_index":650,"title":{},"body":{"index.html":{}}}],["enhancing",{"_index":537,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":517,"title":{},"body":{"index.html":{},"properties.html":{}}}],["ensuring",{"_index":570,"title":{},"body":{"index.html":{}}}],["entities",{"_index":2,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"index.html":{},"overview.html":{},"properties.html":{}}}],["entity",{"_index":0,"title":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["entity's",{"_index":460,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entity(uniques",{"_index":452,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entity.ts",{"_index":368,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["entity/base.js",{"_index":31,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntityService.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["entityreadservice",{"_index":157,"title":{"classes/EntityReadService.html":{}},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"coverage.html":{}}}],["entityreadservice:16",{"_index":224,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["entityreadservice:25",{"_index":225,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["entityreadservice:29",{"_index":226,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["entityreadservice:33",{"_index":223,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["entitywriteservice",{"_index":190,"title":{"classes/EntityWriteService.html":{}},"body":{"classes/EntityWriteService.html":{},"coverage.html":{}}}],["error",{"_index":245,"title":{},"body":{"classes/HttpErrorDto.html":{}}}],["error.dto.js",{"_index":269,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["error.dto.ts",{"_index":244,"title":{},"body":{"classes/HttpErrorDto.html":{},"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{}}}],["error.dto.ts:11",{"_index":249,"title":{},"body":{"classes/HttpErrorDto.html":{},"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:12",{"_index":347,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:13",{"_index":349,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:14",{"_index":348,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:15",{"_index":346,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:16",{"_index":250,"title":{},"body":{"classes/HttpErrorDto.html":{},"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:17",{"_index":344,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:18",{"_index":343,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:19",{"_index":345,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:20",{"_index":342,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:21",{"_index":341,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:22",{"_index":340,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:27",{"_index":265,"title":{},"body":{"classes/SingleValidationErrorDto.html":{}}}],["error.dto.ts:29",{"_index":264,"title":{},"body":{"classes/SingleValidationErrorDto.html":{}}}],["error.dto.ts:41",{"_index":350,"title":{},"body":{"classes/ValidationErrorDto.html":{}}}],["errors",{"_index":283,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"index.html":{}}}],["establish",{"_index":619,"title":{},"body":{"index.html":{}}}],["establishes",{"_index":590,"title":{},"body":{"index.html":{}}}],["even",{"_index":712,"title":{},"body":{"index.html":{}}}],["example",{"_index":548,"title":{},"body":{"index.html":{}}}],["execution",{"_index":681,"title":{},"body":{"index.html":{}}}],["export",{"_index":32,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["expression",{"_index":497,"title":{},"body":{"miscellaneous/functions.html":{}}}],["extend",{"_index":509,"title":{},"body":{"index.html":{},"properties.html":{}}}],["extends",{"_index":36,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["false",{"_index":56,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/CommonQueryDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["features",{"_index":711,"title":{},"body":{"index.html":{}}}],["fields",{"_index":461,"title":{},"body":{"miscellaneous/functions.html":{}}}],["file",{"_index":5,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{},"index.html":{}}}],["find",{"_index":163,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["find(query",{"_index":171,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["findone",{"_index":164,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["findone(query",{"_index":174,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["findonebyid",{"_index":165,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["findonebyid(id",{"_index":177,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["findoperator",{"_index":440,"title":{},"body":{"miscellaneous/functions.html":{}}}],["findoptionswhere",{"_index":179,"title":{},"body":{"classes/EntityReadService.html":{}}}],["firsttablename",{"_index":307,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["firsttablename}_${secondtablename",{"_index":309,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["fixes",{"_index":706,"title":{},"body":{"index.html":{}}}],["following",{"_index":561,"title":{},"body":{"index.html":{}}}],["format",{"_index":555,"title":{},"body":{"index.html":{}}}],["function",{"_index":357,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":419,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funding",{"_index":683,"title":{},"body":{"index.html":{}}}],["general",{"_index":718,"title":{},"body":{"index.html":{}}}],["getting",{"_index":504,"title":{"index.html":{}},"body":{}}],["go",{"_index":703,"title":{},"body":{"index.html":{}}}],["handling",{"_index":676,"title":{},"body":{"index.html":{}}}],["hashing",{"_index":668,"title":{},"body":{"index.html":{}}}],["help",{"_index":697,"title":{},"body":{"index.html":{}}}],["homepage",{"_index":734,"title":{},"body":{"properties.html":{}}}],["http",{"_index":268,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["httperrordto",{"_index":242,"title":{"classes/HttpErrorDto.html":{}},"body":{"classes/HttpErrorDto.html":{},"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{}}}],["https://github.com/rbrightline/puq/tree/main",{"_index":740,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io",{"_index":737,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io/puq/orm",{"_index":735,"title":{},"body":{"properties.html":{}}}],["id",{"_index":76,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"miscellaneous/functions.html":{}}}],["id.js",{"_index":100,"title":{},"body":{"classes/BaseEntity.html":{}}}],["id.ts",{"_index":117,"title":{},"body":{"classes/BaseIdEntity.html":{},"coverage.html":{}}}],["id.ts:8",{"_index":119,"title":{},"body":{"classes/BaseIdEntity.html":{}}}],["identifier",{"_index":353,"title":{},"body":{"coverage.html":{}}}],["idle",{"_index":605,"title":{},"body":{"index.html":{}}}],["idletimeoutmillis",{"_index":599,"title":{},"body":{"index.html":{}}}],["idmodel",{"_index":118,"title":{},"body":{"classes/BaseIdEntity.html":{}}}],["implement",{"_index":560,"title":{},"body":{"index.html":{}}}],["implementations",{"_index":533,"title":{},"body":{"index.html":{}}}],["implements",{"_index":82,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/SingleValidationErrorDto.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["import",{"_index":21,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["improvements",{"_index":715,"title":{},"body":{"index.html":{}}}],["inactivity",{"_index":614,"title":{},"body":{"index.html":{}}}],["include",{"_index":137,"title":{},"body":{"classes/CommonQueryDto.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["inherited",{"_index":92,"title":{},"body":{"classes/BaseEntity.html":{},"classes/EntityWriteService.html":{}}}],["initial",{"_index":682,"title":{},"body":{"index.html":{}}}],["insert",{"_index":63,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["install",{"_index":547,"title":{},"body":{"index.html":{}}}],["instant",{"_index":702,"title":{},"body":{"index.html":{}}}],["instead",{"_index":664,"title":{},"body":{"index.html":{}}}],["integer",{"_index":44,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{}}}],["integer'})@primarygeneratedcolumn",{"_index":91,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{}}}],["integrating",{"_index":513,"title":{},"body":{"index.html":{},"properties.html":{}}}],["integration",{"_index":529,"title":{},"body":{"index.html":{}}}],["interfere",{"_index":663,"title":{},"body":{"index.html":{}}}],["intuitive",{"_index":530,"title":{},"body":{"index.html":{}}}],["isarray",{"_index":279,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["isboolean",{"_index":277,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["isint",{"_index":276,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["isnumber",{"_index":275,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["isobject",{"_index":278,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["isstring",{"_index":274,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["it's",{"_index":685,"title":{},"body":{"index.html":{}}}],["items",{"_index":51,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["javascript",{"_index":657,"title":{},"body":{"index.html":{}}}],["join",{"_index":60,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["joincolumnname",{"_index":292,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["joincolumnname(relationname",{"_index":296,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["jointablecolumnname",{"_index":293,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["jointablecolumnname(_tablename",{"_index":299,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["jointableinversecolumnname",{"_index":294,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["jointableinversecolumnname(_tablename",{"_index":302,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["jointablename",{"_index":295,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["jointablename(firsttablename",{"_index":304,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["keep",{"_index":720,"title":{},"body":{"index.html":{}}}],["keeping",{"_index":580,"title":{},"body":{"index.html":{}}}],["key",{"_index":10,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["keys",{"_index":446,"title":{},"body":{"miscellaneous/functions.html":{}}}],["keywords",{"_index":731,"title":{},"body":{"properties.html":{}}}],["latency",{"_index":585,"title":{},"body":{"index.html":{}}}],["latest",{"_index":709,"title":{},"body":{"index.html":{}}}],["layer",{"_index":667,"title":{},"body":{"index.html":{}}}],["level",{"_index":521,"title":{},"body":{"index.html":{},"properties.html":{}}}],["library",{"_index":690,"title":{},"body":{"index.html":{}}}],["license",{"_index":738,"title":{},"body":{"properties.html":{}}}],["limit",{"_index":592,"title":{},"body":{"index.html":{}}}],["limitation",{"_index":553,"title":{},"body":{"index.html":{}}}],["link",{"_index":436,"title":{},"body":{"miscellaneous/functions.html":{}}}],["linkk",{"_index":185,"title":{},"body":{"classes/EntityReadService.html":{}}}],["literal",{"_index":746,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["load",{"_index":139,"title":{},"body":{"classes/CommonQueryDto.html":{}}}],["low",{"_index":587,"title":{},"body":{"index.html":{}}}],["mached",{"_index":149,"title":{},"body":{"classes/CountResultDto.html":{}}}],["maintained",{"_index":579,"title":{},"body":{"index.html":{}}}],["maintaining",{"_index":687,"title":{},"body":{"index.html":{}}}],["maintenance",{"_index":719,"title":{},"body":{"index.html":{}}}],["make",{"_index":479,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["many",{"_index":40,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["manyrelation",{"_index":39,"title":{"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{}}}],["mapped",{"_index":518,"title":{},"body":{"index.html":{},"properties.html":{}}}],["matching",{"_index":66,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":271,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"index.html":{}}}],["max_connections",{"_index":629,"title":{},"body":{"index.html":{}}}],["maximum",{"_index":566,"title":{},"body":{"index.html":{}}}],["maxlength",{"_index":273,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["memory",{"_index":645,"title":{},"body":{"index.html":{}}}],["message",{"_index":247,"title":{},"body":{"classes/HttpErrorDto.html":{}}}],["methods",{"_index":161,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{}}}],["milliseconds",{"_index":602,"title":{},"body":{"index.html":{}}}],["min",{"_index":270,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"index.html":{}}}],["minimizing",{"_index":611,"title":{},"body":{"index.html":{}}}],["minimum",{"_index":542,"title":{},"body":{"index.html":{}}}],["minlength",{"_index":272,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["miscellaneous",{"_index":418,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":739,"title":{},"body":{"properties.html":{}}}],["modules",{"_index":727,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":713,"title":{},"body":{"index.html":{}}}],["name",{"_index":111,"title":{},"body":{"classes/BaseEntityService.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["names",{"_index":448,"title":{},"body":{"miscellaneous/functions.html":{}}}],["naming",{"_index":289,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["nestjs/swagger",{"_index":536,"title":{},"body":{"index.html":{}}}],["new",{"_index":407,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["none",{"_index":480,"title":{},"body":{"miscellaneous/functions.html":{}}}],["null",{"_index":59,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["number",{"_index":45,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"index.html":{}}}],["numbers",{"_index":651,"title":{},"body":{"index.html":{}}}],["numeric",{"_index":653,"title":{},"body":{"index.html":{}}}],["object",{"_index":48,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["object.keys(new",{"_index":103,"title":{},"body":{"classes/BaseEntity.html":{},"miscellaneous/variables.html":{}}}],["ondelete",{"_index":57,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["one",{"_index":38,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["onerelation",{"_index":35,"title":{"entities/OneRelation.html":{},"entities/OneRelation-1.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{}}}],["ongoing",{"_index":695,"title":{},"body":{"index.html":{}}}],["onupdate",{"_index":62,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["open",{"_index":593,"title":{},"body":{"index.html":{}}}],["operation",{"_index":156,"title":{},"body":{"classes/DeleteResultDto.html":{},"classes/UpdateResultDto.html":{},"index.html":{}}}],["operations",{"_index":660,"title":{},"body":{"index.html":{}}}],["operator.ts",{"_index":386,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["optimal",{"_index":640,"title":{},"body":{"index.html":{}}}],["optimize",{"_index":558,"title":{},"body":{"index.html":{}}}],["option",{"_index":395,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["optional",{"_index":112,"title":{},"body":{"classes/BaseEntityService.html":{},"classes/CommonQueryDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":433,"title":{},"body":{"miscellaneous/functions.html":{}}}],["orm",{"_index":733,"title":{},"body":{"properties.html":{}}}],["out",{"_index":717,"title":{},"body":{"index.html":{}}}],["overloading",{"_index":598,"title":{},"body":{"index.html":{}}}],["override",{"_index":308,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["overview",{"_index":728,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":42,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["ownerrelation",{"_index":41,"title":{"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{}}}],["package",{"_index":409,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["paired",{"_index":534,"title":{},"body":{"index.html":{}}}],["param",{"_index":184,"title":{},"body":{"classes/EntityReadService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["parameters",{"_index":110,"title":{},"body":{"classes/BaseEntityService.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{},"miscellaneous/functions.html":{}}}],["parse",{"_index":503,"title":{},"body":{"miscellaneous/functions.html":{}}}],["peak",{"_index":575,"title":{},"body":{"index.html":{}}}],["peer",{"_index":414,"title":{},"body":{"dependencies.html":{}}}],["per",{"_index":647,"title":{},"body":{"index.html":{}}}],["performance",{"_index":559,"title":{},"body":{"index.html":{}}}],["periods",{"_index":589,"title":{},"body":{"index.html":{}}}],["pick",{"_index":464,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pickcolumntype",{"_index":358,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["pickcolumntype(options",{"_index":463,"title":{},"body":{"miscellaneous/functions.html":{}}}],["picks",{"_index":478,"title":{},"body":{"miscellaneous/functions.html":{}}}],["picktransformer",{"_index":362,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["picktransformer(options",{"_index":471,"title":{},"body":{"miscellaneous/functions.html":{}}}],["please",{"_index":692,"title":{},"body":{"index.html":{}}}],["pnpm",{"_index":549,"title":{},"body":{"index.html":{}}}],["pool",{"_index":569,"title":{},"body":{"index.html":{}}}],["poolsize",{"_index":564,"title":{},"body":{"index.html":{}}}],["postgres",{"_index":556,"title":{},"body":{"index.html":{}}}],["postgres.conf",{"_index":628,"title":{},"body":{"index.html":{}}}],["postgresql",{"_index":627,"title":{},"body":{"index.html":{}}}],["powerful",{"_index":714,"title":{},"body":{"index.html":{}}}],["prebuilt",{"_index":493,"title":{},"body":{"miscellaneous/functions.html":{}}}],["precision",{"_index":655,"title":{},"body":{"index.html":{}}}],["preservation",{"_index":654,"title":{},"body":{"index.html":{}}}],["prevent",{"_index":597,"title":{},"body":{"index.html":{}}}],["preventing",{"_index":622,"title":{},"body":{"index.html":{}}}],["primarygeneratedcolumn",{"_index":120,"title":{},"body":{"classes/BaseIdEntity.html":{}}}],["primitive",{"_index":481,"title":{},"body":{"miscellaneous/functions.html":{}}}],["process",{"_index":539,"title":{},"body":{"index.html":{}}}],["proeprty",{"_index":434,"title":{},"body":{"miscellaneous/functions.html":{}}}],["project",{"_index":686,"title":{},"body":{"index.html":{}}}],["prolonged",{"_index":623,"title":{},"body":{"index.html":{}}}],["promise",{"_index":170,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["properties",{"_index":9,"title":{"properties.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"properties.html":{}}}],["property",{"_index":23,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{}}}],["property({type",{"_index":84,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/HttpErrorDto.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["propertydecorator",{"_index":435,"title":{},"body":{"miscellaneous/functions.html":{}}}],["propertyoptions",{"_index":429,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provided",{"_index":466,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provides",{"_index":75,"title":{},"body":{"classes/BaseEntity.html":{}}}],["providing",{"_index":522,"title":{},"body":{"index.html":{},"properties.html":{}}}],["puq",{"_index":732,"title":{},"body":{"properties.html":{}}}],["puq/orm",{"_index":506,"title":{},"body":{"index.html":{}}}],["puq/ormsqlite",{"_index":551,"title":{},"body":{"index.html":{}}}],["puq/property",{"_index":24,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"dependencies.html":{}}}],["puq/query",{"_index":180,"title":{},"body":{"classes/EntityReadService.html":{},"dependencies.html":{}}}],["puq/type",{"_index":94,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/SingleValidationErrorDto.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["queriable",{"_index":451,"title":{},"body":{"miscellaneous/functions.html":{}}}],["query",{"_index":133,"title":{},"body":{"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["querycount",{"_index":167,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["querydeeppartialentity",{"_index":221,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["querymany",{"_index":172,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"miscellaneous/functions.html":{}}}],["querymanydtooptions",{"_index":392,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["queryone",{"_index":175,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"miscellaneous/functions.html":{}}}],["queryonedtooptions",{"_index":394,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["ram",{"_index":639,"title":{},"body":{"index.html":{}}}],["read",{"_index":159,"title":{},"body":{"classes/EntityReadService.html":{}}}],["read.js",{"_index":230,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["readily",{"_index":582,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":115,"title":{},"body":{"classes/BaseEntityService.html":{}}}],["record",{"_index":441,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reduce",{"_index":584,"title":{},"body":{"index.html":{}}}],["reduction",{"_index":543,"title":{},"body":{"index.html":{}}}],["refrain",{"_index":661,"title":{},"body":{"index.html":{}}}],["relation",{"_index":25,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/EntityWriteService.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["relation(options",{"_index":484,"title":{},"body":{"miscellaneous/functions.html":{}}}],["relation({type",{"_index":312,"title":{},"body":{"entities/TestEntity.html":{},"entities/TestEntity-1.html":{}}}],["relationname",{"_index":298,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["relationoptions",{"_index":485,"title":{},"body":{"miscellaneous/functions.html":{}}}],["relationparam",{"_index":202,"title":{},"body":{"classes/EntityWriteService.html":{},"miscellaneous/functions.html":{}}}],["relations",{"_index":447,"title":{},"body":{"miscellaneous/functions.html":{}}}],["remains",{"_index":607,"title":{},"body":{"index.html":{}}}],["removerelation",{"_index":194,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["removerelation(relation",{"_index":206,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["repo",{"_index":113,"title":{},"body":{"classes/BaseEntityService.html":{}}}],["repository",{"_index":108,"title":{},"body":{"classes/BaseEntityService.html":{},"properties.html":{}}}],["required",{"_index":55,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["resource",{"_index":572,"title":{},"body":{"index.html":{}}}],["responsiveness",{"_index":621,"title":{},"body":{"index.html":{}}}],["result",{"_index":147,"title":{},"body":{"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/UpdateResultDto.html":{}}}],["result.dto.ts",{"_index":145,"title":{},"body":{"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/UpdateResultDto.html":{},"coverage.html":{}}}],["result.dto.ts:13",{"_index":150,"title":{},"body":{"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/UpdateResultDto.html":{}}}],["results",{"_index":65,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":182,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{}}}],["returns",{"_index":169,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{},"miscellaneous/functions.html":{}}}],["rid",{"_index":236,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["rn",{"_index":237,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["robert",{"_index":742,"title":{},"body":{"properties.html":{}}}],["robert.brightline@gmail.com",{"_index":726,"title":{},"body":{"index.html":{}}}],["running",{"_index":721,"title":{},"body":{"index.html":{}}}],["safe",{"_index":672,"title":{},"body":{"index.html":{}}}],["save",{"_index":195,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["save(entity",{"_index":208,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["savemany",{"_index":196,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["savemany(entities",{"_index":211,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["seamlessly",{"_index":512,"title":{},"body":{"index.html":{},"properties.html":{}}}],["secondtablename",{"_index":305,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["secure",{"_index":700,"title":{},"body":{"index.html":{}}}],["securely",{"_index":723,"title":{},"body":{"index.html":{}}}],["select",{"_index":487,"title":{},"body":{"miscellaneous/functions.html":{}}}],["selectbaseentity",{"_index":491,"title":{},"body":{"miscellaneous/functions.html":{}}}],["selectquerybuilder",{"_index":498,"title":{},"body":{"miscellaneous/functions.html":{}}}],["selecttransformer",{"_index":398,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["server",{"_index":625,"title":{},"body":{"index.html":{}}}],["server's",{"_index":638,"title":{},"body":{"index.html":{}}}],["service",{"_index":160,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["set",{"_index":58,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["setrelation",{"_index":197,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["setrelation(relation",{"_index":213,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["sets",{"_index":617,"title":{},"body":{"index.html":{}}}],["settings",{"_index":563,"title":{},"body":{"index.html":{}}}],["shared_buffers",{"_index":634,"title":{},"body":{"index.html":{}}}],["single",{"_index":516,"title":{},"body":{"index.html":{},"properties.html":{}}}],["singlevalidationerror",{"_index":261,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["singlevalidationerrordto",{"_index":259,"title":{"classes/SingleValidationErrorDto.html":{}},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{}}}],["smoothly",{"_index":722,"title":{},"body":{"index.html":{}}}],["softdelete",{"_index":198,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["softdelete(id",{"_index":215,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["sort",{"_index":648,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"index.html":{}}}],["specifies",{"_index":578,"title":{},"body":{"index.html":{}}}],["specify",{"_index":459,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sqlite",{"_index":17,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/ManyRelation.html":{},"entities/OneRelation.html":{},"entities/OwnerRelation.html":{},"entities/TestEntity.html":{},"classes/TestObject.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["sqlite3.ts",{"_index":7,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/ManyRelation.html":{},"entities/OneRelation.html":{},"entities/OwnerRelation.html":{},"entities/TestEntity.html":{},"classes/TestObject.html":{},"coverage.html":{}}}],["sqlite3.ts:14",{"_index":255,"title":{},"body":{"entities/OneRelation.html":{}}}],["sqlite3.ts:19",{"_index":253,"title":{},"body":{"entities/ManyRelation.html":{}}}],["sqlite3.ts:24",{"_index":257,"title":{},"body":{"entities/OwnerRelation.html":{}}}],["sqlite3.ts:29",{"_index":19,"title":{},"body":{"entities/AttributeRelation.html":{}}}],["sqlite3.ts:30",{"_index":20,"title":{},"body":{"entities/AttributeRelation.html":{}}}],["sqlite3.ts:35",{"_index":323,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:36",{"_index":317,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:37",{"_index":319,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:38",{"_index":315,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:39",{"_index":314,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:45",{"_index":320,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:51",{"_index":311,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:52",{"_index":316,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:62",{"_index":321,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:72",{"_index":318,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:83",{"_index":322,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:9",{"_index":336,"title":{},"body":{"classes/TestObject.html":{}}}],["sqlite3.ts:93",{"_index":313,"title":{},"body":{"entities/TestEntity.html":{}}}],["src/.../base.ts",{"_index":748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../column.ts",{"_index":420,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../create",{"_index":421,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../entity.ts",{"_index":422,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../pick",{"_index":423,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../relation.ts",{"_index":424,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../select",{"_index":425,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../view",{"_index":426,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../where",{"_index":427,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/common/pick",{"_index":355,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/decorator/column.ts",{"_index":363,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/decorator/entity.ts",{"_index":364,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/decorator/relation.ts",{"_index":365,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/decorator/view",{"_index":366,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/dto/count",{"_index":144,"title":{},"body":{"classes/CountResultDto.html":{},"coverage.html":{}}}],["src/lib/dto/create",{"_index":372,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/dto/delete",{"_index":152,"title":{},"body":{"classes/DeleteResultDto.html":{},"coverage.html":{}}}],["src/lib/dto/http",{"_index":243,"title":{},"body":{"classes/HttpErrorDto.html":{},"coverage.html":{}}}],["src/lib/dto/update",{"_index":339,"title":{},"body":{"classes/UpdateResultDto.html":{},"coverage.html":{}}}],["src/lib/dto/validation",{"_index":260,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{}}}],["src/lib/entity/base",{"_index":116,"title":{},"body":{"classes/BaseIdEntity.html":{},"coverage.html":{}}}],["src/lib/entity/base.ts",{"_index":73,"title":{},"body":{"classes/BaseEntity.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/entity/base.ts:12",{"_index":86,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/lib/entity/base.ts:16",{"_index":90,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/lib/entity/base.ts:20",{"_index":88,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/lib/factory/naming",{"_index":285,"title":{},"body":{"classes/TableNamingStrategy.html":{},"coverage.html":{}}}],["src/lib/integration/better",{"_index":6,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/ManyRelation.html":{},"entities/OneRelation.html":{},"entities/OwnerRelation.html":{},"entities/TestEntity.html":{},"classes/TestObject.html":{},"coverage.html":{}}}],["src/lib/integration/postgres.ts",{"_index":68,"title":{},"body":{"entities/AttributeRelation-1.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity-1.html":{},"classes/TestObject-1.html":{},"coverage.html":{}}}],["src/lib/integration/postgres.ts:14",{"_index":256,"title":{},"body":{"entities/OneRelation-1.html":{}}}],["src/lib/integration/postgres.ts:19",{"_index":254,"title":{},"body":{"entities/ManyRelation-1.html":{}}}],["src/lib/integration/postgres.ts:24",{"_index":258,"title":{},"body":{"entities/OwnerRelation-1.html":{}}}],["src/lib/integration/postgres.ts:29",{"_index":70,"title":{},"body":{"entities/AttributeRelation-1.html":{}}}],["src/lib/integration/postgres.ts:30",{"_index":71,"title":{},"body":{"entities/AttributeRelation-1.html":{}}}],["src/lib/integration/postgres.ts:35",{"_index":335,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:36",{"_index":329,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:37",{"_index":331,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:38",{"_index":327,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:39",{"_index":326,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:40",{"_index":332,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:41",{"_index":324,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:42",{"_index":328,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:52",{"_index":333,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:62",{"_index":330,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:73",{"_index":334,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:83",{"_index":325,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:9",{"_index":337,"title":{},"body":{"classes/TestObject-1.html":{}}}],["src/lib/query/common",{"_index":132,"title":{},"body":{"classes/CommonQueryDto.html":{},"coverage.html":{}}}],["src/lib/query/create",{"_index":385,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/query/select",{"_index":397,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/query/where",{"_index":399,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/service/base.ts",{"_index":105,"title":{},"body":{"classes/BaseEntityService.html":{},"coverage.html":{}}}],["src/lib/service/base.ts:4",{"_index":109,"title":{},"body":{"classes/BaseEntityService.html":{}}}],["src/lib/service/read.ts",{"_index":158,"title":{},"body":{"classes/EntityReadService.html":{},"coverage.html":{}}}],["src/lib/service/read.ts:16",{"_index":173,"title":{},"body":{"classes/EntityReadService.html":{}}}],["src/lib/service/read.ts:25",{"_index":176,"title":{},"body":{"classes/EntityReadService.html":{}}}],["src/lib/service/read.ts:29",{"_index":178,"title":{},"body":{"classes/EntityReadService.html":{}}}],["src/lib/service/read.ts:33",{"_index":168,"title":{},"body":{"classes/EntityReadService.html":{}}}],["src/lib/service/write.ts",{"_index":191,"title":{},"body":{"classes/EntityWriteService.html":{},"coverage.html":{}}}],["src/lib/service/write.ts:16",{"_index":210,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["src/lib/service/write.ts:20",{"_index":212,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["src/lib/service/write.ts:24",{"_index":222,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["src/lib/service/write.ts:28",{"_index":205,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["src/lib/service/write.ts:32",{"_index":216,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["src/lib/service/write.ts:36",{"_index":203,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["src/lib/service/write.ts:42",{"_index":207,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["src/lib/service/write.ts:48",{"_index":214,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["src/lib/service/write.ts:54",{"_index":219,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["src/lib/view/base.view.ts",{"_index":122,"title":{},"body":{"classes/BaseView.html":{},"coverage.html":{}}}],["src/lib/view/base.view.ts:4",{"_index":126,"title":{},"body":{"classes/BaseView.html":{}}}],["src/lib/view/base.view.ts:5",{"_index":124,"title":{},"body":{"classes/BaseView.html":{}}}],["src/lib/view/base.view.ts:6",{"_index":127,"title":{},"body":{"classes/BaseView.html":{}}}],["src/lib/view/base.view.ts:7",{"_index":125,"title":{},"body":{"classes/BaseView.html":{}}}],["standard",{"_index":510,"title":{},"body":{"index.html":{},"properties.html":{}}}],["started",{"_index":505,"title":{"index.html":{}},"body":{}}],["statements",{"_index":354,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":251,"title":{},"body":{"classes/HttpErrorDto.html":{}}}],["statuscode",{"_index":248,"title":{},"body":{"classes/HttpErrorDto.html":{}}}],["stays",{"_index":698,"title":{},"body":{"index.html":{}}}],["stored",{"_index":652,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":290,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["strategy.ts",{"_index":286,"title":{},"body":{"classes/TableNamingStrategy.html":{},"coverage.html":{}}}],["strategy.ts:13",{"_index":297,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["strategy.ts:17",{"_index":300,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["strategy.ts:21",{"_index":303,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["strategy.ts:6",{"_index":306,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["streamlined",{"_index":527,"title":{},"body":{"index.html":{}}}],["string",{"_index":14,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["structure",{"_index":246,"title":{},"body":{"classes/HttpErrorDto.html":{}}}],["subsequent",{"_index":680,"title":{},"body":{"index.html":{}}}],["such",{"_index":476,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sufficient",{"_index":632,"title":{},"body":{"index.html":{}}}],["summary",{"_index":507,"title":{},"body":{"index.html":{}}}],["suppor",{"_index":477,"title":{},"body":{"miscellaneous/functions.html":{}}}],["support",{"_index":473,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["supporting",{"_index":694,"title":{},"body":{"index.html":{}}}],["swagger",{"_index":525,"title":{},"body":{"index.html":{},"properties.html":{}}}],["swc/helpers",{"_index":411,"title":{},"body":{"dependencies.html":{}}}],["system",{"_index":595,"title":{},"body":{"index.html":{}}}],["t",{"_index":209,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["table",{"_index":288,"title":{},"body":{"classes/TableNamingStrategy.html":{},"coverage.html":{}}}],["tablenamingstrategy",{"_index":284,"title":{"classes/TableNamingStrategy.html":{}},"body":{"classes/TableNamingStrategy.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":408,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":688,"title":{},"body":{"index.html":{}}}],["target",{"_index":49,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["testentity",{"_index":43,"title":{"entities/TestEntity.html":{},"entities/TestEntity-1.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{}}}],["testobject",{"_index":34,"title":{"classes/TestObject.html":{},"classes/TestObject-1.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{}}}],["thank",{"_index":684,"title":{},"body":{"index.html":{}}}],["this.repo.count(query",{"_index":189,"title":{},"body":{"classes/EntityReadService.html":{}}}],["this.repo.createquerybuilder().relation(rn).of(id).add(rid",{"_index":238,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["this.repo.createquerybuilder().relation(rn).of(id).remove(rid",{"_index":239,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["this.repo.createquerybuilder().relation(rn).of(id).set(null",{"_index":241,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["this.repo.createquerybuilder().relation(rn).of(id).set(rid",{"_index":240,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["this.repo.delete(id",{"_index":234,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["this.repo.find(query",{"_index":183,"title":{},"body":{"classes/EntityReadService.html":{}}}],["this.repo.findone(query",{"_index":186,"title":{},"body":{"classes/EntityReadService.html":{}}}],["this.repo.findoneby",{"_index":187,"title":{},"body":{"classes/EntityReadService.html":{}}}],["this.repo.save(entities",{"_index":232,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["this.repo.save(entity",{"_index":231,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["this.repo.softdelete(id",{"_index":235,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["this.repo.update(id",{"_index":233,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["through",{"_index":528,"title":{},"body":{"index.html":{}}}],["time",{"_index":618,"title":{},"body":{"index.html":{}}}],["timestamp",{"_index":496,"title":{},"body":{"miscellaneous/functions.html":{}}}],["toward",{"_index":704,"title":{},"body":{"index.html":{}}}],["traffic",{"_index":588,"title":{},"body":{"index.html":{}}}],["transfer",{"_index":666,"title":{},"body":{"index.html":{}}}],["transform",{"_index":486,"title":{},"body":{"miscellaneous/functions.html":{}}}],["transformations",{"_index":665,"title":{},"body":{"index.html":{}}}],["transformed",{"_index":554,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":415,"title":{},"body":{"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["transformer.ts",{"_index":361,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["transformers",{"_index":662,"title":{},"body":{"index.html":{}}}],["true",{"_index":54,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/CommonQueryDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"miscellaneous/functions.html":{}}}],["type",{"_index":12,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["type.ts",{"_index":356,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["typealiases",{"_index":744,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeorm",{"_index":98,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/EntityReadService.html":{},"classes/TableNamingStrategy.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["typeorm/query",{"_index":227,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["typeorom",{"_index":671,"title":{},"body":{"index.html":{}}}],["types",{"_index":475,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["undefined",{"_index":310,"title":{},"body":{"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{}}}],["unique",{"_index":457,"title":{},"body":{"miscellaneous/functions.html":{}}}],["uniques",{"_index":454,"title":{},"body":{"miscellaneous/functions.html":{}}}],["unnecessary",{"_index":612,"title":{},"body":{"index.html":{}}}],["unset",{"_index":374,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["unsetrelation",{"_index":199,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["unsetrelation(relation",{"_index":217,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["unsetrelationparam",{"_index":218,"title":{},"body":{"classes/EntityWriteService.html":{},"miscellaneous/functions.html":{}}}],["up",{"_index":699,"title":{},"body":{"index.html":{}}}],["update",{"_index":200,"title":{},"body":{"classes/EntityWriteService.html":{},"classes/UpdateResultDto.html":{}}}],["update(id",{"_index":220,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["updatedat",{"_index":78,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseView.html":{}}}],["updatedatecolumn",{"_index":97,"title":{},"body":{"classes/BaseEntity.html":{}}}],["updateresult",{"_index":229,"title":{},"body":{"classes/EntityWriteService.html":{},"classes/UpdateResultDto.html":{}}}],["updateresultdto",{"_index":338,"title":{"classes/UpdateResultDto.html":{}},"body":{"classes/UpdateResultDto.html":{},"coverage.html":{}}}],["updates",{"_index":707,"title":{},"body":{"index.html":{}}}],["upper",{"_index":591,"title":{},"body":{"index.html":{}}}],["use",{"_index":673,"title":{},"body":{"index.html":{}}}],["useful",{"_index":691,"title":{},"body":{"index.html":{}}}],["users",{"_index":716,"title":{},"body":{"index.html":{}}}],["using",{"_index":524,"title":{},"body":{"index.html":{},"properties.html":{}}}],["utilization",{"_index":573,"title":{},"body":{"index.html":{}}}],["validated",{"_index":520,"title":{},"body":{"index.html":{},"properties.html":{}}}],["validation",{"_index":431,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["validationconstraints",{"_index":266,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["validationconstraintsdto",{"_index":263,"title":{"classes/ValidationConstraintsDto.html":{}},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{}}}],["validationerrordto",{"_index":282,"title":{"classes/ValidationErrorDto.html":{}},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{}}}],["validationerrorresult",{"_index":267,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["validator",{"_index":535,"title":{},"body":{"index.html":{}}}],["value",{"_index":11,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["valuetransformer",{"_index":483,"title":{},"body":{"miscellaneous/functions.html":{}}}],["variable",{"_index":383,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":747,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":730,"title":{},"body":{"properties.html":{}}}],["versions",{"_index":710,"title":{},"body":{"index.html":{}}}],["view",{"_index":501,"title":{},"body":{"miscellaneous/functions.html":{}}}],["viewcolumn",{"_index":128,"title":{},"body":{"classes/BaseView.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["viewcolumn(options",{"_index":488,"title":{},"body":{"miscellaneous/functions.html":{}}}],["viewcolumn({type",{"_index":123,"title":{},"body":{"classes/BaseView.html":{}}}],["viewentity",{"_index":369,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["viewentity(expression",{"_index":490,"title":{},"body":{"miscellaneous/functions.html":{}}}],["volume",{"_index":545,"title":{},"body":{"index.html":{}}}],["well",{"_index":701,"title":{},"body":{"index.html":{}}}],["whereoption",{"_index":438,"title":{},"body":{"miscellaneous/functions.html":{}}}],["wherequerytransformer",{"_index":400,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["wherequerytransformer(columns",{"_index":502,"title":{},"body":{"miscellaneous/functions.html":{}}}],["wherequerytransformeroptions",{"_index":401,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["whether",{"_index":499,"title":{},"body":{"miscellaneous/functions.html":{}}}],["widely",{"_index":531,"title":{},"body":{"index.html":{}}}],["withdeleted",{"_index":136,"title":{},"body":{"classes/CommonQueryDto.html":{}}}],["within",{"_index":515,"title":{},"body":{"index.html":{},"properties.html":{}}}],["work_mem",{"_index":643,"title":{},"body":{"index.html":{}}}],["write",{"_index":192,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["yes",{"_index":455,"title":{},"body":{"miscellaneous/functions.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"entities/AttributeRelation.html":{"url":"entities/AttributeRelation.html","title":"entity - AttributeRelation","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  AttributeRelation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/better-sqlite3.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                key\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:30\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) key: string;\n  @Column({ databaseType: 'sqlite', type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) string: string;\n  @Column({ databaseType: 'sqlite', type: 'integer' }) integer: number;\n  @Column({ databaseType: 'sqlite', type: 'number' }) number: number;\n  @Column({ databaseType: 'sqlite', type: 'boolean' }) boolean: boolean;\n  @Column({ databaseType: 'sqlite', type: 'bigint' }) bigint: bigint;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'object',\n    target: () => TestObject,\n  })\n  object: TestObject;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'array',\n    items: { type: 'string' },\n  })\n  array: string[];\n  @Column({ databaseType: 'sqlite', type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/AttributeRelation-1.html":{"url":"entities/AttributeRelation-1.html","title":"entity - AttributeRelation-1","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  AttributeRelation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/postgres.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                key\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:30\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ type: 'string' }) key: string;\n  @Column({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ type: 'string' }) string: string;\n  @Column({ type: 'integer' }) integer: number;\n  @Column({ type: 'number' }) number: number;\n  @Column({ type: 'boolean' }) boolean: boolean;\n  @Column({ type: 'bigint' }) bigint: bigint;\n  @Column({ type: 'object', target: () => TestObject }) object: TestObject;\n  @Column({ type: 'array', items: { type: 'string' } }) array: string[];\n  @Column({ type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/entity/base.ts\n        \n\n\n            \n                Description\n            \n            \n                All entities extends this entity. The entity provides id, createdAt, updatedAt, and deletedAt columns\n\n            \n\n            \n                Extends\n            \n            \n                            BaseIdEntity\n            \n\n            \n                Implements\n            \n            \n                        BaseModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'date'})@CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/entity/base.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'date'})@DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/entity/base.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'date'})@UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/entity/base.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'integer'})@PrimaryGeneratedColumn()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseIdEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseIdEntity:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type { BaseModel } from '@puq/type';\nimport { Property } from '@puq/property';\nimport { CreateDateColumn, DeleteDateColumn, UpdateDateColumn } from 'typeorm';\nimport { BaseIdEntity } from './base-id.js';\n\n/**\n * All entities extends this entity. The entity provides id, createdAt, updatedAt, and deletedAt columns\n */\nexport class BaseEntity extends BaseIdEntity implements BaseModel {\n  @Property({ type: 'date' })\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @Property({ type: 'date' })\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @Property({ type: 'date' })\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\nexport const BASE_ENTITY_COLUMNS = Object.keys(new BaseEntity());\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntityService.html":{"url":"classes/BaseEntityService.html","title":"class - BaseEntityService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/service/base.ts\n        \n\n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/lib/service/base.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repo\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type { Repository } from 'typeorm';\nimport type { BaseEntity } from '../entity/base.js';\n\nexport class BaseEntityService {\n  constructor(protected readonly repo: Repository) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseIdEntity.html":{"url":"classes/BaseIdEntity.html","title":"class - BaseIdEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseIdEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/entity/base-id.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IDModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'integer'})@PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/entity/base-id.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type { IDModel } from '@puq/type';\nimport { Property } from '@puq/property';\nimport { PrimaryGeneratedColumn } from 'typeorm';\n\nexport class BaseIdEntity implements IDModel {\n  @Property({ type: 'integer' })\n  @PrimaryGeneratedColumn()\n  id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseView.html":{"url":"classes/BaseView.html","title":"class - BaseView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/view/base.view.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewColumn({type: 'date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/view/base.view.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewColumn({type: 'date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/view/base.view.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewColumn({type: 'integer'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/view/base.view.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewColumn({type: 'date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/view/base.view.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ViewColumn } from './../decorator/view-column.js';\n\nexport class BaseView {\n  @ViewColumn({ type: 'integer' }) id: number;\n  @ViewColumn({ type: 'date' }) createdAt: Date;\n  @ViewColumn({ type: 'date' }) updatedAt: Date;\n  @ViewColumn({ type: 'date' }) deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommonQueryDto.html":{"url":"classes/CommonQueryDto.html","title":"class - CommonQueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommonQueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/query/common-query-dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Common query dto\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                withDeleted\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        withDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'boolean', description: 'Include deleted items to the load', default: false, acceptString: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/query/common-query-dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\n\n/**\n * Common query dto\n */\n@Dto()\nexport class CommonQueryDto {\n  @Property({\n    type: 'boolean',\n    description: 'Include deleted items to the load',\n    default: false,\n    acceptString: true,\n  })\n  withDeleted?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CountResultDto.html":{"url":"classes/CountResultDto.html","title":"class - CountResultDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CountResultDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dto/count-result.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Count result\n\n            \n\n\n            \n                Implements\n            \n            \n                        CountResult\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                count\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        count\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'integer', description: 'The number of items mached the query'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/count-result.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type { CountResult } from '@puq/type';\nimport { Dto, Property } from '@puq/property';\n\n/**\n * Count result\n */\n@Dto()\nexport class CountResultDto implements CountResult {\n  @Property({\n    type: 'integer',\n    description: 'The number of items mached the query',\n  })\n  count: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteResultDto.html":{"url":"classes/DeleteResultDto.html","title":"class - DeleteResultDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteResultDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dto/delete-result.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Delete result dto\n\n            \n\n\n            \n                Implements\n            \n            \n                        DeleteResult\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                affected\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        affected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'integer', description: 'The number of items affected by the delete operation'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/delete-result.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type { DeleteResult } from '@puq/type';\nimport { Dto, Property } from '@puq/property';\n\n/**\n * Delete result dto\n */\n@Dto()\nexport class DeleteResultDto implements DeleteResult {\n  @Property({\n    type: 'integer',\n    description: 'The number of items affected by the delete operation',\n  })\n  affected: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EntityReadService.html":{"url":"classes/EntityReadService.html","title":"class - EntityReadService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EntityReadService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/service/read.ts\n        \n\n\n            \n                Description\n            \n            \n                Read service\n\n            \n\n            \n                Extends\n            \n            \n                            BaseEntityService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                count\n                            \n                            \n                                find\n                            \n                            \n                                findOne\n                            \n                            \n                                findOneById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(query: QueryCount)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/read.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        QueryCount\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \nfind(query: QueryMany)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/read.ts:16\n                        \n                    \n\n\n            \n                \n                        Query all entities\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        QueryMany\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(query: QueryOne)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/read.ts:25\n                        \n                    \n\n\n            \n                \n                        Query one entity\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        QueryOne\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneById\n                        \n                    \n                \n            \n            \n                \nfindOneById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/read.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type { FindOptionsWhere } from 'typeorm';\nimport type { CountResult } from '@puq/type';\nimport type { QueryCount, QueryMany, QueryOne } from '@puq/query';\nimport type { BaseEntity } from '../entity/base.js';\nimport { BaseEntityService } from './base.js';\n\n/**\n * Read service\n */\nexport class EntityReadService extends BaseEntityService {\n  /**\n   * Query all entities\n   */\n  find(query: QueryMany[]>) {\n    return this.repo.find(query);\n  }\n\n  /**\n   * Query one entity\n   * @param query {@linkk QueryOne}\n   * @returns\n   */\n  findOne(query: QueryOne[]>) {\n    return this.repo.findOne(query);\n  }\n\n  findOneById(id: number) {\n    return this.repo.findOneBy({ id } as FindOptionsWhere);\n  }\n\n  async count(query: QueryCount[]>): Promise {\n    return { count: await this.repo.count(query) };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EntityWriteService.html":{"url":"classes/EntityWriteService.html","title":"class - EntityWriteService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EntityWriteService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/service/write.ts\n        \n\n\n            \n                Description\n            \n            \n                Write service\n\n            \n\n            \n                Extends\n            \n            \n                            EntityReadService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addRelation\n                            \n                            \n                                delete\n                            \n                            \n                                    Async\n                                removeRelation\n                            \n                            \n                                save\n                            \n                            \n                                saveMany\n                            \n                            \n                                    Async\n                                setRelation\n                            \n                            \n                                softDelete\n                            \n                            \n                                    Async\n                                unsetRelation\n                            \n                            \n                                update\n                            \n                            \n                                    Async\n                                count\n                            \n                            \n                                find\n                            \n                            \n                                findOne\n                            \n                            \n                                findOneById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    addRelation(relation: RelationParam)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/write.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relation\n                                            \n                                                            RelationParam\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/write.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeRelation(relation: RelationParam)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/write.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relation\n                                            \n                                                            RelationParam\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        save\n                        \n                    \n                \n            \n            \n                \nsave(entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/write.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveMany\n                        \n                    \n                \n            \n            \n                \nsaveMany(entities: T[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/write.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        T[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    setRelation(relation: RelationParam)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/write.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relation\n                                            \n                                                            RelationParam\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        softDelete\n                        \n                    \n                \n            \n            \n                \nsoftDelete(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/write.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        unsetRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    unsetRelation(relation: UnsetRelationParam)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/write.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relation\n                                            \n                                                            UnsetRelationParam\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, entity: QueryDeepPartialEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/write.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                            QueryDeepPartialEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(query: QueryCount)\n                \n            \n\n\n                    \n                        \n                            Inherited from         EntityReadService\n\n                        \n                    \n                    \n                        \n                                Defined in         EntityReadService:33\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        QueryCount\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \nfind(query: QueryMany)\n                \n            \n\n\n                    \n                        \n                            Inherited from         EntityReadService\n\n                        \n                    \n                    \n                        \n                                Defined in         EntityReadService:16\n\n                        \n                    \n\n\n            \n                \n                        Query all entities\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        QueryMany\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(query: QueryOne)\n                \n            \n\n\n                    \n                        \n                            Inherited from         EntityReadService\n\n                        \n                    \n                    \n                        \n                                Defined in         EntityReadService:25\n\n                        \n                    \n\n\n            \n                \n                        Query one entity\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        QueryOne\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneById\n                        \n                    \n                \n            \n            \n                \nfindOneById(id: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         EntityReadService\n\n                        \n                    \n                    \n                        \n                                Defined in         EntityReadService:29\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type { BaseEntity } from '../entity/base.js';\nimport type { QueryDeepPartialEntity } from 'typeorm/query-builder/QueryPartialEntity.js';\nimport type {\n  RelationParam,\n  UnsetRelationParam,\n  UpdateResult,\n} from '@puq/type';\nimport { EntityReadService } from './read.js';\n\n/**\n * Write service\n */\nexport class EntityWriteService extends EntityReadService {\n  save(entity: T): Promise {\n    return this.repo.save(entity);\n  }\n\n  saveMany(entities: T[]): Promise {\n    return this.repo.save(entities);\n  }\n\n  update(id: number, entity: QueryDeepPartialEntity) {\n    return this.repo.update(id, entity);\n  }\n\n  delete(id: number) {\n    return this.repo.delete(id);\n  }\n\n  softDelete(id: number) {\n    return this.repo.softDelete(id);\n  }\n\n  async addRelation(relation: RelationParam): Promise {\n    const { id, rid, rn } = relation;\n    await this.repo.createQueryBuilder().relation(rn).of(id).add(rid);\n    return { affected: 1 };\n  }\n\n  async removeRelation(relation: RelationParam): Promise {\n    const { id, rid, rn } = relation;\n    await this.repo.createQueryBuilder().relation(rn).of(id).remove(rid);\n    return { affected: 1 };\n  }\n\n  async setRelation(relation: RelationParam): Promise {\n    const { id, rid, rn } = relation;\n    await this.repo.createQueryBuilder().relation(rn).of(id).set(rid);\n    return { affected: 1 };\n  }\n\n  async unsetRelation(relation: UnsetRelationParam): Promise {\n    const { id, rn } = relation;\n    await this.repo.createQueryBuilder().relation(rn).of(id).set(null);\n    return { affected: 1 };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpErrorDto.html":{"url":"classes/HttpErrorDto.html","title":"class - HttpErrorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpErrorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dto/http-error.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                This is the common error structure\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                message\n                            \n                            \n                                    \n                                statusCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/http-error.dto.ts:11\n                        \n                    \n\n            \n                \n                    error message\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'integer'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/http-error.dto.ts:16\n                        \n                    \n\n            \n                \n                    status code\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\n\n/**\n * This is the common error structure\n */\n@Dto()\nexport class HttpErrorDto {\n  /**\n   * error message\n   */\n  @Property({ type: 'string' }) message: string;\n\n  /**\n   * status code\n   */\n  @Property({ type: 'integer' }) statusCode: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ManyRelation.html":{"url":"entities/ManyRelation.html","title":"entity - ManyRelation","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ManyRelation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/better-sqlite3.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                many\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        many\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:19\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) key: string;\n  @Column({ databaseType: 'sqlite', type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) string: string;\n  @Column({ databaseType: 'sqlite', type: 'integer' }) integer: number;\n  @Column({ databaseType: 'sqlite', type: 'number' }) number: number;\n  @Column({ databaseType: 'sqlite', type: 'boolean' }) boolean: boolean;\n  @Column({ databaseType: 'sqlite', type: 'bigint' }) bigint: bigint;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'object',\n    target: () => TestObject,\n  })\n  object: TestObject;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'array',\n    items: { type: 'string' },\n  })\n  array: string[];\n  @Column({ databaseType: 'sqlite', type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ManyRelation-1.html":{"url":"entities/ManyRelation-1.html","title":"entity - ManyRelation-1","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ManyRelation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/postgres.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                many\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        many\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:19\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ type: 'string' }) key: string;\n  @Column({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ type: 'string' }) string: string;\n  @Column({ type: 'integer' }) integer: number;\n  @Column({ type: 'number' }) number: number;\n  @Column({ type: 'boolean' }) boolean: boolean;\n  @Column({ type: 'bigint' }) bigint: bigint;\n  @Column({ type: 'object', target: () => TestObject }) object: TestObject;\n  @Column({ type: 'array', items: { type: 'string' } }) array: string[];\n  @Column({ type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/OneRelation.html":{"url":"entities/OneRelation.html","title":"entity - OneRelation","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  OneRelation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/better-sqlite3.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                one\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        one\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:14\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) key: string;\n  @Column({ databaseType: 'sqlite', type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) string: string;\n  @Column({ databaseType: 'sqlite', type: 'integer' }) integer: number;\n  @Column({ databaseType: 'sqlite', type: 'number' }) number: number;\n  @Column({ databaseType: 'sqlite', type: 'boolean' }) boolean: boolean;\n  @Column({ databaseType: 'sqlite', type: 'bigint' }) bigint: bigint;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'object',\n    target: () => TestObject,\n  })\n  object: TestObject;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'array',\n    items: { type: 'string' },\n  })\n  array: string[];\n  @Column({ databaseType: 'sqlite', type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/OneRelation-1.html":{"url":"entities/OneRelation-1.html","title":"entity - OneRelation-1","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  OneRelation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/postgres.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                one\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        one\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:14\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ type: 'string' }) key: string;\n  @Column({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ type: 'string' }) string: string;\n  @Column({ type: 'integer' }) integer: number;\n  @Column({ type: 'number' }) number: number;\n  @Column({ type: 'boolean' }) boolean: boolean;\n  @Column({ type: 'bigint' }) bigint: bigint;\n  @Column({ type: 'object', target: () => TestObject }) object: TestObject;\n  @Column({ type: 'array', items: { type: 'string' } }) array: string[];\n  @Column({ type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/OwnerRelation.html":{"url":"entities/OwnerRelation.html","title":"entity - OwnerRelation","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  OwnerRelation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/better-sqlite3.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                owner\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:24\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) key: string;\n  @Column({ databaseType: 'sqlite', type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) string: string;\n  @Column({ databaseType: 'sqlite', type: 'integer' }) integer: number;\n  @Column({ databaseType: 'sqlite', type: 'number' }) number: number;\n  @Column({ databaseType: 'sqlite', type: 'boolean' }) boolean: boolean;\n  @Column({ databaseType: 'sqlite', type: 'bigint' }) bigint: bigint;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'object',\n    target: () => TestObject,\n  })\n  object: TestObject;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'array',\n    items: { type: 'string' },\n  })\n  array: string[];\n  @Column({ databaseType: 'sqlite', type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/OwnerRelation-1.html":{"url":"entities/OwnerRelation-1.html","title":"entity - OwnerRelation-1","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  OwnerRelation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/postgres.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                owner\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:24\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ type: 'string' }) key: string;\n  @Column({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ type: 'string' }) string: string;\n  @Column({ type: 'integer' }) integer: number;\n  @Column({ type: 'number' }) number: number;\n  @Column({ type: 'boolean' }) boolean: boolean;\n  @Column({ type: 'bigint' }) bigint: bigint;\n  @Column({ type: 'object', target: () => TestObject }) object: TestObject;\n  @Column({ type: 'array', items: { type: 'string' } }) array: string[];\n  @Column({ type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SingleValidationErrorDto.html":{"url":"classes/SingleValidationErrorDto.html","title":"class - SingleValidationErrorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SingleValidationErrorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dto/validation-error.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        SingleValidationError\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                constraints\n                            \n                            \n                                    \n                                    Optional\n                                property\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        constraints\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ValidationConstraintsDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'object', target: () => ValidationConstraintsDto})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        property\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type {\n  SingleValidationError,\n  ValidationConstraints,\n  ValidationErrorResult,\n} from '@puq/type';\nimport { Dto, Property } from '@puq/property';\nimport { HttpErrorDto } from './http-error.dto.js';\n\n@Dto()\nexport class ValidationConstraintsDto implements ValidationConstraints {\n  @Property({ type: 'string' }) min?: string;\n  @Property({ type: 'string' }) max?: string;\n  @Property({ type: 'string' }) minLength?: string;\n  @Property({ type: 'string' }) maxLength?: string;\n  @Property({ type: 'string' }) isString?: string;\n  @Property({ type: 'string' }) isNumber?: string;\n  @Property({ type: 'string' }) isInt?: string;\n  @Property({ type: 'string' }) isBoolean?: string;\n  @Property({ type: 'string' }) isObject?: string;\n  @Property({ type: 'string' }) isArray?: string;\n  @Property({ type: 'string' }) arrayMinSize?: string;\n  @Property({ type: 'string' }) arrayMaxSize?: string;\n}\n\n@Dto()\nexport class SingleValidationErrorDto implements SingleValidationError {\n  @Property({ type: 'string' }) property?: string;\n  @Property({ type: 'object', target: () => ValidationConstraintsDto })\n  constraints?: ValidationConstraintsDto;\n}\n\n@Dto()\nexport class ValidationErrorDto\n  extends HttpErrorDto\n  implements ValidationErrorResult\n{\n  @Property({\n    type: 'array',\n    items: { type: 'object', target: () => SingleValidationErrorDto },\n  })\n  errors?: SingleValidationErrorDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TableNamingStrategy.html":{"url":"classes/TableNamingStrategy.html","title":"class - TableNamingStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TableNamingStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/factory/naming-strategy.ts\n        \n\n\n            \n                Description\n            \n            \n                Databaes table and column naming strategy\n\n            \n\n            \n                Extends\n            \n            \n                        DefaultNamingStrategy\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                joinColumnName\n                            \n                            \n                                    \n                                joinTableColumnName\n                            \n                            \n                                    \n                                joinTableInverseColumnName\n                            \n                            \n                                    \n                                joinTableName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        joinColumnName\n                        \n                    \n                \n            \n            \n                \n                        \n                    joinColumnName(relationName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/factory/naming-strategy.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relationName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        joinTableColumnName\n                        \n                    \n                \n            \n            \n                \n                        \n                    joinTableColumnName(_tableName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/factory/naming-strategy.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _tableName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        joinTableInverseColumnName\n                        \n                    \n                \n            \n            \n                \n                        \n                    joinTableInverseColumnName(_tableName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/factory/naming-strategy.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _tableName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        joinTableName\n                        \n                    \n                \n            \n            \n                \n                        \n                    joinTableName(firstTableName: string, secondTableName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/factory/naming-strategy.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                firstTableName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                secondTableName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DefaultNamingStrategy } from 'typeorm';\n/**\n * Databaes table and column naming strategy\n */\nexport class TableNamingStrategy extends DefaultNamingStrategy {\n  override joinTableName(\n    firstTableName: string,\n    secondTableName: string\n  ): string {\n    return `${firstTableName}_${secondTableName}`;\n  }\n\n  override joinColumnName(relationName: string): string {\n    return relationName;\n  }\n\n  override joinTableColumnName(_tableName: string): string {\n    return _tableName;\n  }\n\n  override joinTableInverseColumnName(_tableName: string): string {\n    return _tableName;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/TestEntity.html":{"url":"entities/TestEntity.html","title":"entity - TestEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  TestEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/better-sqlite3.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                array\n                            \n                            \n                                    \n                                attributes\n                            \n                            \n                                    \n                                bigint\n                            \n                            \n                                    \n                                boolean\n                            \n                            \n                                    \n                                date\n                            \n                            \n                                    \n                                integer\n                            \n                            \n                                    \n                                many\n                            \n                            \n                                    \n                                number\n                            \n                            \n                                    \n                                object\n                            \n                            \n                                    \n                                one\n                            \n                            \n                                    \n                                owner\n                            \n                            \n                                    \n                                string\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        array\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'array', items: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AttributeRelation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Relation({type: 'many-to-many', target: () => AttributeRelation, eager: true, required: false, cascade: undefined, join: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        bigint\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'bigint'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        boolean\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        integer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'integer'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        many\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ManyRelation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Relation({type: 'many-to-many', target: () => ManyRelation, eager: true, required: false, onDelete: 'SET NULL', join: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        object\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TestObject\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'object', target: () => TestObject})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        one\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OneRelation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Relation({type: 'many-to-one', target: () => OneRelation, eager: true, required: false, onDelete: 'SET NULL', join: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OwnerRelation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Relation({type: 'many-to-one', target: () => OwnerRelation, eager: true, required: false, onDelete: 'CASCADE', onUpdate: 'CASCADE', join: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        string\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:35\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) key: string;\n  @Column({ databaseType: 'sqlite', type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) string: string;\n  @Column({ databaseType: 'sqlite', type: 'integer' }) integer: number;\n  @Column({ databaseType: 'sqlite', type: 'number' }) number: number;\n  @Column({ databaseType: 'sqlite', type: 'boolean' }) boolean: boolean;\n  @Column({ databaseType: 'sqlite', type: 'bigint' }) bigint: bigint;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'object',\n    target: () => TestObject,\n  })\n  object: TestObject;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'array',\n    items: { type: 'string' },\n  })\n  array: string[];\n  @Column({ databaseType: 'sqlite', type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/TestEntity-1.html":{"url":"entities/TestEntity-1.html","title":"entity - TestEntity-1","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  TestEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/postgres.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                array\n                            \n                            \n                                    \n                                attributes\n                            \n                            \n                                    \n                                bigint\n                            \n                            \n                                    \n                                boolean\n                            \n                            \n                                    \n                                date\n                            \n                            \n                                    \n                                integer\n                            \n                            \n                                    \n                                many\n                            \n                            \n                                    \n                                number\n                            \n                            \n                                    \n                                object\n                            \n                            \n                                    \n                                one\n                            \n                            \n                                    \n                                owner\n                            \n                            \n                                    \n                                string\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        array\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'array', items: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AttributeRelation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Relation({type: 'many-to-many', target: () => AttributeRelation, eager: true, required: false, cascade: undefined, join: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        bigint\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        boolean\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        integer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'integer'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        many\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ManyRelation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Relation({type: 'many-to-many', target: () => ManyRelation, eager: true, required: false, onDelete: 'SET NULL', join: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        object\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TestObject\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'object', target: () => TestObject})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        one\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OneRelation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Relation({type: 'many-to-one', target: () => OneRelation, eager: true, required: false, onDelete: 'SET NULL', join: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OwnerRelation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Relation({type: 'many-to-one', target: () => OwnerRelation, eager: true, required: false, onDelete: 'CASCADE', onUpdate: 'CASCADE', join: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        string\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:35\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ type: 'string' }) key: string;\n  @Column({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ type: 'string' }) string: string;\n  @Column({ type: 'integer' }) integer: number;\n  @Column({ type: 'number' }) number: number;\n  @Column({ type: 'boolean' }) boolean: boolean;\n  @Column({ type: 'bigint' }) bigint: bigint;\n  @Column({ type: 'object', target: () => TestObject }) object: TestObject;\n  @Column({ type: 'array', items: { type: 'string' } }) array: string[];\n  @Column({ type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestObject.html":{"url":"classes/TestObject.html","title":"class - TestObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/better-sqlite3.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) key: string;\n  @Column({ databaseType: 'sqlite', type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) string: string;\n  @Column({ databaseType: 'sqlite', type: 'integer' }) integer: number;\n  @Column({ databaseType: 'sqlite', type: 'number' }) number: number;\n  @Column({ databaseType: 'sqlite', type: 'boolean' }) boolean: boolean;\n  @Column({ databaseType: 'sqlite', type: 'bigint' }) bigint: bigint;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'object',\n    target: () => TestObject,\n  })\n  object: TestObject;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'array',\n    items: { type: 'string' },\n  })\n  array: string[];\n  @Column({ databaseType: 'sqlite', type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestObject-1.html":{"url":"classes/TestObject-1.html","title":"class - TestObject-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/postgres.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ type: 'string' }) key: string;\n  @Column({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ type: 'string' }) string: string;\n  @Column({ type: 'integer' }) integer: number;\n  @Column({ type: 'number' }) number: number;\n  @Column({ type: 'boolean' }) boolean: boolean;\n  @Column({ type: 'bigint' }) bigint: bigint;\n  @Column({ type: 'object', target: () => TestObject }) object: TestObject;\n  @Column({ type: 'array', items: { type: 'string' } }) array: string[];\n  @Column({ type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateResultDto.html":{"url":"classes/UpdateResultDto.html","title":"class - UpdateResultDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateResultDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dto/update-result.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Update result\n\n            \n\n\n            \n                Implements\n            \n            \n                        UpdateResult\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                affected\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        affected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'integer', description: 'The number of items affected by the update operation'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/update-result.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type { UpdateResult } from '@puq/type';\nimport { Dto, Property } from '@puq/property';\n\n/**\n * Update result\n */\n@Dto()\nexport class UpdateResultDto implements UpdateResult {\n  @Property({\n    type: 'integer',\n    description: 'The number of items affected by the update operation',\n  })\n  affected: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationConstraintsDto.html":{"url":"classes/ValidationConstraintsDto.html","title":"class - ValidationConstraintsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationConstraintsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dto/validation-error.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ValidationConstraints\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                arrayMaxSize\n                            \n                            \n                                    \n                                    Optional\n                                arrayMinSize\n                            \n                            \n                                    \n                                    Optional\n                                isArray\n                            \n                            \n                                    \n                                    Optional\n                                isBoolean\n                            \n                            \n                                    \n                                    Optional\n                                isInt\n                            \n                            \n                                    \n                                    Optional\n                                isNumber\n                            \n                            \n                                    \n                                    Optional\n                                isObject\n                            \n                            \n                                    \n                                    Optional\n                                isString\n                            \n                            \n                                    \n                                    Optional\n                                max\n                            \n                            \n                                    \n                                    Optional\n                                maxLength\n                            \n                            \n                                    \n                                    Optional\n                                min\n                            \n                            \n                                    \n                                    Optional\n                                minLength\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        arrayMaxSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        arrayMinSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isBoolean\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isInt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isObject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isString\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        max\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        maxLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        min\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        minLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type {\n  SingleValidationError,\n  ValidationConstraints,\n  ValidationErrorResult,\n} from '@puq/type';\nimport { Dto, Property } from '@puq/property';\nimport { HttpErrorDto } from './http-error.dto.js';\n\n@Dto()\nexport class ValidationConstraintsDto implements ValidationConstraints {\n  @Property({ type: 'string' }) min?: string;\n  @Property({ type: 'string' }) max?: string;\n  @Property({ type: 'string' }) minLength?: string;\n  @Property({ type: 'string' }) maxLength?: string;\n  @Property({ type: 'string' }) isString?: string;\n  @Property({ type: 'string' }) isNumber?: string;\n  @Property({ type: 'string' }) isInt?: string;\n  @Property({ type: 'string' }) isBoolean?: string;\n  @Property({ type: 'string' }) isObject?: string;\n  @Property({ type: 'string' }) isArray?: string;\n  @Property({ type: 'string' }) arrayMinSize?: string;\n  @Property({ type: 'string' }) arrayMaxSize?: string;\n}\n\n@Dto()\nexport class SingleValidationErrorDto implements SingleValidationError {\n  @Property({ type: 'string' }) property?: string;\n  @Property({ type: 'object', target: () => ValidationConstraintsDto })\n  constraints?: ValidationConstraintsDto;\n}\n\n@Dto()\nexport class ValidationErrorDto\n  extends HttpErrorDto\n  implements ValidationErrorResult\n{\n  @Property({\n    type: 'array',\n    items: { type: 'object', target: () => SingleValidationErrorDto },\n  })\n  errors?: SingleValidationErrorDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationErrorDto.html":{"url":"classes/ValidationErrorDto.html","title":"class - ValidationErrorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationErrorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dto/validation-error.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ValidationErrorResult\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                errors\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        errors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SingleValidationErrorDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'array', items: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type {\n  SingleValidationError,\n  ValidationConstraints,\n  ValidationErrorResult,\n} from '@puq/type';\nimport { Dto, Property } from '@puq/property';\nimport { HttpErrorDto } from './http-error.dto.js';\n\n@Dto()\nexport class ValidationConstraintsDto implements ValidationConstraints {\n  @Property({ type: 'string' }) min?: string;\n  @Property({ type: 'string' }) max?: string;\n  @Property({ type: 'string' }) minLength?: string;\n  @Property({ type: 'string' }) maxLength?: string;\n  @Property({ type: 'string' }) isString?: string;\n  @Property({ type: 'string' }) isNumber?: string;\n  @Property({ type: 'string' }) isInt?: string;\n  @Property({ type: 'string' }) isBoolean?: string;\n  @Property({ type: 'string' }) isObject?: string;\n  @Property({ type: 'string' }) isArray?: string;\n  @Property({ type: 'string' }) arrayMinSize?: string;\n  @Property({ type: 'string' }) arrayMaxSize?: string;\n}\n\n@Dto()\nexport class SingleValidationErrorDto implements SingleValidationError {\n  @Property({ type: 'string' }) property?: string;\n  @Property({ type: 'object', target: () => ValidationConstraintsDto })\n  constraints?: ValidationConstraintsDto;\n}\n\n@Dto()\nexport class ValidationErrorDto\n  extends HttpErrorDto\n  implements ValidationErrorResult\n{\n  @Property({\n    type: 'array',\n    items: { type: 'object', target: () => SingleValidationErrorDto },\n  })\n  errors?: SingleValidationErrorDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/lib/common/pick-column-type.ts\n            \n            function\n            pickColumnType\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/common/pick-transformer.ts\n            \n            function\n            pickTransformer\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/decorator/column.ts\n            \n            function\n            Column\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/decorator/entity.ts\n            \n            function\n            Entity\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/decorator/relation.ts\n            \n            function\n            Relation\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/decorator/view-column.ts\n            \n            function\n            ViewColumn\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/decorator/view-entity.ts\n            \n            function\n            ViewEntity\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/dto/count-result.dto.ts\n            \n            class\n            CountResultDto\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                        src/lib/dto/create-relation-param-dto.ts\n            \n            function\n            CreateRelationParamDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/dto/create-unset-relation-param-dto.ts\n            \n            function\n            CreateUnsetRelationParamDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/dto/delete-result.dto.ts\n            \n            class\n            DeleteResultDto\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/lib/dto/http-error.dto.ts\n            \n            class\n            HttpErrorDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/lib/dto/update-result.dto.ts\n            \n            class\n            UpdateResultDto\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/lib/dto/validation-error.dto.ts\n            \n            class\n            SingleValidationErrorDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/dto/validation-error.dto.ts\n            \n            class\n            ValidationConstraintsDto\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/lib/dto/validation-error.dto.ts\n            \n            class\n            ValidationErrorDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/entity/base-id.ts\n            \n            class\n            BaseIdEntity\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/entity/base.ts\n            \n            class\n            BaseEntity\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                        src/lib/entity/base.ts\n            \n            variable\n            BASE_ENTITY_COLUMNS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/factory/naming-strategy.ts\n            \n            class\n            TableNamingStrategy\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/lib/integration/better-sqlite3.ts\n            \n            entity\n            AttributeRelation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/better-sqlite3.ts\n            \n            entity\n            ManyRelation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/better-sqlite3.ts\n            \n            entity\n            OneRelation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/better-sqlite3.ts\n            \n            entity\n            OwnerRelation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/better-sqlite3.ts\n            \n            entity\n            TestEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/better-sqlite3.ts\n            \n            class\n            TestObject\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/integration/postgres.ts\n            \n            entity\n            AttributeRelation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/postgres.ts\n            \n            entity\n            ManyRelation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/postgres.ts\n            \n            entity\n            OneRelation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/postgres.ts\n            \n            entity\n            OwnerRelation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/postgres.ts\n            \n            entity\n            TestEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/postgres.ts\n            \n            class\n            TestObject\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/query/common-query-dto.ts\n            \n            class\n            CommonQueryDto\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                        src/lib/query/create-find-operator.ts\n            \n            function\n            createFindOperator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/query/create-query-count-dto.ts\n            \n            function\n            CreateQueryCountDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/query/create-query-count-dto.ts\n            \n            type alias\n            CreateQueryCountDtoOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/query/create-query-many-dto.ts\n            \n            function\n            CreateQueryManyDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/query/create-query-many-dto.ts\n            \n            type alias\n            QueryManyDtoOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/query/create-query-one-dto.ts\n            \n            function\n            CreateQueryOneDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/query/create-query-one-dto.ts\n            \n            type alias\n            QueryOneDtoOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/query/create-where-option-dto.ts\n            \n            function\n            CreateWhereOptionDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/query/select-transformer.ts\n            \n            function\n            SelectTransformer\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/query/where-query-transformer.ts\n            \n            function\n            WhereQueryTransformer\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/query/where-query-transformer.ts\n            \n            type alias\n            WhereQueryTransformerOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/service/base.ts\n            \n            class\n            BaseEntityService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/service/read.ts\n            \n            class\n            EntityReadService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/lib/service/write.ts\n            \n            class\n            EntityWriteService\n            \n                21 %\n                (3/14)\n            \n        \n        \n            \n                \n                src/lib/view/base.view.ts\n            \n            class\n            BaseView\n            \n                0 %\n                (0/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @swc/helpers : ~0.5.15\n        \n            @puq/query : ^0.4.11\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            class-transformer : ^0.5.1\n        \n            typeorm : ^0.3.20\n        \n            @puq/property : ^0.4.11\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Column   (src/.../column.ts)\n                        \n                        \n                            createFindOperator   (src/.../create-find-operator.ts)\n                        \n                        \n                            CreateQueryCountDto   (src/.../create-query-count-dto.ts)\n                        \n                        \n                            CreateQueryManyDto   (src/.../create-query-many-dto.ts)\n                        \n                        \n                            CreateQueryOneDto   (src/.../create-query-one-dto.ts)\n                        \n                        \n                            CreateRelationParamDto   (src/.../create-relation-param-dto.ts)\n                        \n                        \n                            CreateUnsetRelationParamDto   (src/.../create-unset-relation-param-dto.ts)\n                        \n                        \n                            CreateWhereOptionDto   (src/.../create-where-option-dto.ts)\n                        \n                        \n                            Entity   (src/.../entity.ts)\n                        \n                        \n                            pickColumnType   (src/.../pick-column-type.ts)\n                        \n                        \n                            pickTransformer   (src/.../pick-transformer.ts)\n                        \n                        \n                            Relation   (src/.../relation.ts)\n                        \n                        \n                            SelectTransformer   (src/.../select-transformer.ts)\n                        \n                        \n                            ViewColumn   (src/.../view-column.ts)\n                        \n                        \n                            ViewEntity   (src/.../view-entity.ts)\n                        \n                        \n                            WhereQueryTransformer   (src/.../where-query-transformer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/decorator/column.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Column\n                        \n                    \n                \n            \n            \n                \nColumn(options: PropertyOptions)\n                \n            \n\n\n\n\n            \n                \n                        Typeorm Column decorator with validation and documentation capabilities.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        PropertyOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    proeprty options PropertyOptions\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     PropertyDecorator\n\n                        \n                            \n                                proeprty decorator {@link PropertyDecorator}\n\n                            \n                \n            \n        \n    \n    src/lib/query/create-find-operator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createFindOperator\n                        \n                    \n                \n            \n            \n                \ncreateFindOperator(query: WhereOption)\n                \n            \n\n\n\n\n            \n                \n                        Create FindOperator from WhereOption\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        WhereOption\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    WhereOption\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Record>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/query/create-query-count-dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CreateQueryCountDto\n                        \n                    \n                \n            \n            \n                \nCreateQueryCountDto(options: CreateQueryCountDtoOptions)\n                \n            \n\n\n\n\n            \n                \n                        Create a count query dto for the entity\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            CreateQueryCountDtoOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    CreateQueryCountDtoOptions\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Type\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/query/create-query-many-dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CreateQueryManyDto\n                        \n                    \n                \n            \n            \n                \nCreateQueryManyDto(options: QueryManyDtoOptions)\n                \n            \n\n\n\n\n            \n                \n                        Create QueryMany dto\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            QueryManyDtoOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    QueryManyDtoOptions\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Type>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/query/create-query-one-dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CreateQueryOneDto\n                        \n                    \n                \n            \n            \n                \nCreateQueryOneDto(options: QueryOneDtoOptions)\n                \n            \n\n\n\n\n            \n                \n                        Create QueryOne dto\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            QueryOneDtoOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    QueryOneDtoOptions\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Type>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/dto/create-relation-param-dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CreateRelationParamDto\n                        \n                    \n                \n            \n            \n                \nCreateRelationParamDto(relations: Keys)\n                \n            \n\n\n\n\n            \n                \n                        Create DTO for RelationParam\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                relations\n                                            \n                                                        Keys\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    relation names of the entity\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Type\n\n                        \n                            \n                                Class {@link Type}\n\n                            \n                \n            \n        \n    \n    src/lib/dto/create-unset-relation-param-dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CreateUnsetRelationParamDto\n                        \n                    \n                \n            \n            \n                \nCreateUnsetRelationParamDto(relations: Keys)\n                \n            \n\n\n\n\n            \n                \n                        Create DTO for UnsetRelationParam\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                relations\n                                            \n                                                        Keys\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    relation names of the entity\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Type\n\n                        \n                            \n                                Class {@link Type}\n\n                            \n                \n            \n        \n    \n    src/lib/query/create-where-option-dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CreateWhereOptionDto\n                        \n                    \n                \n            \n            \n                \nCreateWhereOptionDto(columns: Keys)\n                \n            \n\n\n\n\n            \n                \n                        Create WhereOption dto for the entity\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                columns\n                                            \n                                                        Keys\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    queriable columns\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Type>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/decorator/entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Entity\n                        \n                    \n                \n            \n            \n                \nEntity(uniques?)\n                \n            \n\n\n\n\n            \n                \n                        Typeorm entity decorator with transformer capability\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                uniques\n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    Composite unique constraint must be set on entity classes and must specify entity's fields to be unique\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ClassDecorator\n\n                        \n                            \n                                \n{@link ClassDecorator}\n\n\n                            \n                \n            \n        \n    \n    src/lib/common/pick-column-type.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        pickColumnType\n                        \n                    \n                \n            \n            \n                \npickColumnType(options: PropertyOptions)\n                \n            \n\n\n\n\n            \n                \n                        Pick column type based on provided data type and database driver\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        PropertyOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ColumnType\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/common/pick-transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        pickTransformer\n                        \n                    \n                \n            \n            \n                \npickTransformer(options: PropertyOptions)\n                \n            \n\n\n\n\n            \n                \n                        Some databases does not support a certain data types such as sqlite does not suppor array type.\nThis function picks the transformer to make none-primitive data types compatible with the provided database driver\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        PropertyOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    property options PropertyOptions\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValueTransformer | undefined\n\n                        \n                            \n                                the {@link ValueTransformer}\n\n                            \n                \n            \n        \n    \n    src/lib/decorator/relation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Relation\n                        \n                    \n                \n            \n            \n                \nRelation(options: RelationOptions)\n                \n            \n\n\n\n\n            \n                \n                        Relation decorator\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            RelationOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    relation options RelationOptions\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     PropertyDecorator\n\n                        \n                            \n                                \n{@link PropertyDecorator}\n\n\n                            \n                \n            \n        \n    \n    src/lib/query/select-transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SelectTransformer\n                        \n                    \n                \n            \n            \n                \nSelectTransformer()\n                \n            \n\n\n\n\n            \n                \n                        Transform the select query param into string array\n\n\n                        \n                            Returns :     PropertyDecorator\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/decorator/view-column.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ViewColumn\n                        \n                    \n                \n            \n            \n                \nViewColumn(options: PropertyOptions)\n                \n            \n\n\n\n\n            \n                \n                        TypeORM ___ViewColumn decorator with documentation capability\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        PropertyOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    property options PropertyOptions\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     PropertyDecorator\n\n                        \n                            \n                                \n{@link PropertyDecorator}\n\n\n                            \n                \n            \n        \n    \n    src/lib/decorator/view-entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ViewEntity\n                        \n                    \n                \n            \n            \n                \nViewEntity(expression, selectBaseEntity)\n                \n            \n\n\n\n\n            \n                \n                        TypeORM ___ViewEntity decorator with prebuilt query builder that coverts id and timestamp columns.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expression\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    SelectQueryBuilder query builder\n\n                                            \n                                        \n                                        \n                                                selectBaseEntity\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                            \n                                                    defined whether the fields of BaseEntity class are added or not to the view\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ClassDecorator\n\n                        \n                            \n                                class decorator {@link ClassDecorator}\n\n                            \n                \n            \n        \n    \n    src/lib/query/where-query-transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        WhereQueryTransformer\n                        \n                    \n                \n            \n            \n                \nWhereQueryTransformer(columns: Keys)\n                \n            \n\n\n\n\n            \n                \n                        Parse where-query string into typeorm where object.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                columns\n                                            \n                                                        Keys\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     PropertyDecorator\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n@puq/orm\nSummary\nThe custom TypeORM decorators extend standard entity definitions by seamlessly integrating validation and API documentation within a single decorator. These decorators ensure that database entities are not only mapped efficiently but also validated at the DTO level while providing clear API documentation using Swagger.\nDatabase entity development is streamlined through the integration of intuitive and widely adopted implementations within decorators. These decorators are paired with class-validator, class-transformer, and @nestjs/swagger, enhancing efficiency in the development process. This approach achieves a minimum reduction of 60% in both code volume and associated errors.\nInstall\nExample :  pnpm add @puq/ormSQLite\n\nSQLite does not support array or object data types. To accommodate this limitation, data must be transformed into a string format.\n\nPostgres Datasource\nTo optimize datasource performance, implement the following configuration settings:\n\npoolSize: Set to 50. This defines the maximum number of connections allowed in the pool, ensuring efficient resource utilization while accommodating peak demand.\nmin: Set to 10. This specifies the minimum number of connections maintained in the pool, keeping a baseline of readily available connections to reduce latency during low-traffic periods.\nmax: Set to 50. This establishes the upper limit of open connections, balancing system performance with resource availability to prevent overloading.\nidleTimeoutMillis: Configure to 30,000 milliseconds. This determines the duration an idle connection remains open before being closed, minimizing unnecessary resource consumption during periods of inactivity.\nconnectionTimeoutMillis: Configure to 2,000 milliseconds. This sets the maximum time allowed to establish a connection, enhancing application responsiveness by preventing prolonged delays.\n\nPostgres Server\nAdjust the PostgreSQL server configuration file (postgres.conf) with the following settings:\n\nmax_connections: Set to 200 to accommodate both application and administrative connections, ensuring sufficient capacity.\nshared_buffers: Allocate 25-40% of the server's RAM for optimal performance, configured to 4GB.\nwork_mem: Define the memory allocation per query or sort operation, set to 16MB to enhance query efficiency.\n\nNumbers\n\nThe number data type is stored as a string (numeric) to ensure the preservation of precision.\nThe number value is not converted to a JavaScript number to avoid disrupting query operations.\n\nTypeorm Column Transformer\n\nRefrain from using TypeORM column transformers, as they may interfere with query operations. Instead, implement transformations within the data transfer layer.\n\nHashing and encrypion\n\nHashing should be done in database layer. Typeorom column transformer is safe to use\nEncryption is done in controller layer\nFor handling encrypted data, implement a dedicated data transfer object (DTO) class and apply it subsequent to the execution of the initial DTO class within the controller\n\nFunding\nThank you for using @puq/orm It's an open-source project, and maintaining it takes time and effort. If you find this library useful, please consider supporting its ongoing development. Your contributions help ensure that the project stays up-to-date, secure, and well-maintained.\nInstant Funding\nYour funding will go toward\n\nBug fixes and updates to ensure compatibility with the latest versions of dependencies.\nNew features that will make the library even more powerful.\nDocumentation improvements to help users get the most out of [Your Library Name].\nGeneral maintenance to keep the library running smoothly and securely.\n\nContact to the developer: [robert.brightline@gmail.com]\nSupport the developer\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    10 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    17 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.4.11\n        \n            Description : The custom TypeORM decorators extend standard entity definitions by seamlessly integrating validation and API documentation within a single decorator. These decorators ensure that database entities are not only mapped efficiently but also validated at the DTO level while providing clear API documentation using Swagger.\n        \n            Keywords : puq, orm\n        \n            Homepage : https://rbrightline.github.io/puq/orm\n        \n            Bugs : https://rbrightline.github.io\n        \n            License : MIT\n        \n            Repository : https://github.com/rbrightline/puq/tree/main\n        \n            Author : Robert Brightline\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CreateQueryCountDtoOptions   (src/.../create-query-count-dto.ts)\n                        \n                        \n                            QueryManyDtoOptions   (src/.../create-query-many-dto.ts)\n                        \n                        \n                            QueryOneDtoOptions   (src/.../create-query-one-dto.ts)\n                        \n                        \n                            WhereQueryTransformerOptions   (src/.../where-query-transformer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/query/create-query-count-dto.ts\n    \n    \n        \n            \n                \n                    \n                    CreateQueryCountDtoOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/lib/query/create-query-many-dto.ts\n    \n    \n        \n            \n                \n                    \n                    QueryManyDtoOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/lib/query/create-query-one-dto.ts\n    \n    \n        \n            \n                \n                    \n                    QueryOneDtoOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/lib/query/where-query-transformer.ts\n    \n    \n        \n            \n                \n                    \n                    WhereQueryTransformerOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BASE_ENTITY_COLUMNS   (src/.../base.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/entity/base.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BASE_ENTITY_COLUMNS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.keys(new BaseEntity())\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
