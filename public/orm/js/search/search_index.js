var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/BaseEntity.html",[0,0.113,1,1.047]],["body/classes/BaseEntity.html",[0,0.1,1,1.496,2,0.523,3,0.704,4,0.609,5,0.523,6,1.647,7,0.609,8,2.305,9,1.972,10,1.856,11,3.425,12,3.03,13,4.503,14,4.503,15,4.503,16,2.749,17,1.972,18,3.95,19,0.444,20,1.297,21,0.742,22,0.053,23,3.987,24,1.62,25,3.435,26,2.448,27,1.23,28,2.448,29,2.448,30,2.448,31,1.297,32,2.448,33,2.448,34,2.448,35,2.448,36,1.135,37,3.615,38,1.062,39,0.927,40,3.425,41,3.425,42,3.425,43,3.425,44,0.809,45,0.984,46,1.41,47,1.965,48,1.647,49,1.965,50,0.033,51,0.033]],["title/classes/BaseEntityService.html",[0,0.113,52,1.593]],["body/classes/BaseEntityService.html",[0,0.144,1,1.337,2,0.754,3,1.015,4,0.878,5,0.754,21,0.536,22,0.052,27,1.015,36,1.253,44,1.166,45,1.015,50,0.043,51,0.043,52,2.511,53,2.834,54,3.531,55,3.531,56,3.966,57,3.531,58,1.76,59,1.532,60,1.532,61,4.36,62,2.376,63,3.531,64,3.531]],["title/classes/CommonQueryDto.html",[0,0.113,65,1.861]],["body/classes/CommonQueryDto.html",[0,0.125,2,0.656,3,0.882,4,0.764,5,0.656,7,1.103,19,0.557,20,1.511,21,0.605,22,0.052,24,1.162,25,2.464,27,0.882,36,0.882,37,3.203,38,1.332,45,0.882,50,0.039,51,0.039,60,1.731,65,2.685,66,3.203,67,1.55,68,1.767,69,3.99,70,3.158,71,4.433,72,4.693,73,3.99,74,3.99,75,2.298,76,3.99,77,3.203,78,3.99,79,3.99,80,3.99,81,3.069]],["title/classes/CountResultDto.html",[0,0.113,82,1.861]],["body/classes/CountResultDto.html",[0,0.163,2,0.661,3,0.889,4,0.769,5,0.661,7,1.107,17,2.309,19,0.561,20,1.518,21,0.608,22,0.053,24,1.171,27,0.889,31,1.782,36,1.279,38,1.342,39,1.171,45,0.889,46,2.309,50,0.039,51,0.039,67,1.325,75,2.309,82,2.698,83,2.483,84,2.116,85,2.698,86,3.572,87,2.081,88,4.01,89,3.093,90,2.698,91,2.698,92,1.342]],["title/classes/DeleteResultDto.html",[0,0.113,93,1.861]],["body/classes/DeleteResultDto.html",[0,0.162,2,0.656,3,0.882,4,0.764,5,0.656,7,1.103,17,2.298,19,0.557,20,1.511,21,0.605,22,0.053,24,1.162,27,0.882,31,1.777,36,1.274,38,1.332,39,1.162,45,0.882,46,2.298,50,0.039,51,0.039,75,2.298,85,2.685,87,2.065,90,2.685,91,2.685,92,1.332,93,2.685,94,2.464,95,3.768,96,4.433,97,3.274,98,2.685,99,3.069]],["title/classes/EntityReadService.html",[0,0.113,100,1.593]],["body/classes/EntityReadService.html",[0,0.09,1,0.84,2,0.474,3,0.637,4,0.552,5,0.474,7,0.552,8,2.148,9,1.838,10,1.385,12,2.148,19,0.402,21,0.621,22,0.054,27,1.176,31,1.416,36,1.246,39,0.84,44,0.732,45,0.637,50,0.031,51,0.031,52,2.154,58,2.039,59,1.776,60,1.776,62,1.492,67,1.574,84,1.623,86,1.78,100,1.838,101,1.78,102,3.192,103,2.563,104,2.148,105,3.003,106,1.591,107,2.563,108,2.563,109,2.563,110,3.285,111,2.217,112,2.497,113,2.563,114,2.563,115,2.754,116,2.217,117,2.563,118,2.918,119,2.217,120,1.591,121,2.563,122,2.217,123,3.192,124,1.78,125,2.217,126,2.754,127,2.217,128,1.78,129,2.217,130,2.217,131,2.217,132,1.78,133,2.217]],["title/classes/EntityWriteService.html",[0,0.113,134,1.861]],["body/classes/EntityWriteService.html",[0,0.056,1,0.518,2,0.292,3,0.393,4,0.34,5,0.292,7,0.34,8,1.484,9,1.27,10,1.618,12,2.747,19,0.248,21,0.695,22,0.054,27,1.317,31,1.675,36,0.914,39,0.518,45,0.393,47,2.553,50,0.022,51,0.022,58,2.284,59,1.988,60,1.988,62,0.92,67,1.152,84,0.957,95,1.77,97,2.139,100,2.259,103,1.77,104,1.484,105,3.73,106,1.099,107,1.77,108,1.77,109,1.097,110,1.77,112,2.638,113,3.678,114,1.097,115,1.484,117,1.097,118,1.484,120,0.681,121,1.097,126,2.836,132,2.553,134,1.484,135,1.097,136,2.205,137,2.205,138,2.205,139,2.205,140,2.205,141,2.205,142,2.205,143,2.205,144,1.77,145,2.205,146,3.474,147,1.367,148,2.351,149,2.205,150,1.367,151,2.205,152,1.367,153,2.205,154,3.729,155,1.367,156,2.205,157,1.367,158,2.205,159,1.367,160,2.205,161,1.367,162,2.205,163,2.553,164,1.367,165,2.205,166,3.18,167,1.367,168,3.18,169,1.367,170,1.367,171,1.367,172,1.367,173,1.367,174,1.367,175,1.097,176,1.367,177,1.367,178,1.367,179,1.367,180,1.367,181,1.367,182,2.771,183,3.18,184,1.367,185,3.18,186,1.367,187,1.367,188,1.367]],["title/classes/TableNamingStrategy.html",[0,0.113,189,1.861]],["body/classes/TableNamingStrategy.html",[0,0.085,2,0.444,3,0.597,4,0.517,5,0.444,7,0.517,9,1.754,19,0.377,21,0.602,22,0.053,27,1.141,36,0.597,44,0.687,45,0.597,50,0.03,51,0.03,58,1.979,59,1.723,60,1.723,104,2.05,112,2.286,126,2.671,189,2.05,190,3.393,191,1.669,192,3.046,193,2.445,194,1.754,195,3.046,196,3.046,197,3.605,198,3.605,199,3.605,200,3.605,201,3.605,202,2.079,203,3.689,204,3.605,205,2.079,206,3.605,207,2.079,208,4.417,209,4.417,210,2.079,211,4.417,212,2.445,213,2.079,214,2.079,215,2.079,216,3.605,217,3.605,218,3.605,219,2.079,220,3.046,221,3.97,222,2.079]],["title/classes/UpdateResultDto.html",[0,0.113,223,1.861]],["body/classes/UpdateResultDto.html",[0,0.162,2,0.656,3,0.882,4,0.764,5,0.656,7,1.103,17,2.298,19,0.557,20,1.511,21,0.605,22,0.053,24,1.162,27,0.882,31,1.777,36,1.274,38,1.332,39,1.162,45,0.882,46,2.298,50,0.039,51,0.039,75,2.298,85,2.685,87,2.065,90,2.685,91,2.685,92,1.332,97,3.274,98,2.685,144,3.768,175,3.559,223,2.685,224,2.464,225,3.069]],["title/coverage.html",[226,2.99]],["body/coverage.html",[0,0.191,1,0.744,5,0.42,6,1.967,10,0.853,21,0.657,22,0.052,48,1.323,50,0.029,51,0.029,52,1.132,53,1.578,65,1.323,66,1.578,67,1.555,68,2.652,82,1.323,83,1.578,84,1.268,93,1.323,94,1.578,100,1.132,101,1.578,106,0.98,120,1.457,134,1.323,135,1.578,148,1.132,189,1.323,190,1.578,191,1.578,193,1.578,194,1.132,223,1.323,224,1.578,226,1.578,227,1.578,228,1.966,229,1.966,230,2.802,231,4.028,232,5.018,233,5.018,234,1.578,235,1.578,236,1.578,237,1.967,238,4.483,239,4.329,240,4.13,241,1.323,242,3.102,243,3.864,244,2.347,245,1.578,246,1.578,247,2.923,248,2.923,249,1.966,250,3.099,251,1.578,252,1.578,253,1.578,254,1.323,255,1.967,256,1.578,257,1.323,258,1.578,259,1.323,260,1.578,261,1.578,262,1.578,263,2.348,264,1.578,265,1.967,266,1.578,267,1.578,268,1.966,269,1.578,270,1.966,271,1.966,272,1.966,273,1.578,274,1.966]],["title/dependencies.html",[275,1.875,276,2.229]],["body/dependencies.html",[0,0.175,22,0.053,38,1.499,39,1.308,44,1.141,50,0.042,51,0.042,92,1.499,124,2.773,276,2.894,277,3.76,278,3.454,279,2.773,280,3.454,281,3.454,282,3.454,283,3.454,284,2.773,285,3.454,286,3.454,287,3.454,288,3.454,289,3.454,290,3.454,291,4.301,292,3.454,293,3.454,294,3.454,295,3.454]],["title/miscellaneous/functions.html",[296,1.013,297,2.66]],["body/miscellaneous/functions.html",[0,0.059,2,0.311,7,1.071,10,1.868,16,2.321,19,0.264,21,0.768,22,0.051,44,1.089,50,0.023,51,0.023,58,2.32,59,2.02,60,2.02,67,1.515,68,2.406,70,2.582,84,1.255,92,1.007,106,1.156,112,2.748,115,0.98,118,0.98,120,1.156,128,1.169,146,1.169,148,2.318,163,1.169,194,1.899,203,1.561,212,1.169,230,1.169,231,1.169,234,1.863,235,1.863,236,1.169,237,0.98,241,1.946,244,1.169,245,1.863,246,1.863,250,2.423,251,1.863,252,1.863,253,1.863,254,1.946,255,1.561,256,1.863,257,1.946,258,1.863,259,1.946,260,1.863,261,1.863,262,1.169,263,2.219,264,2.321,265,0.98,266,1.863,296,0.632,297,1.169,298,2.892,299,2.891,300,2.321,301,1.457,302,1.457,303,1.169,304,1.457,305,3.837,306,1.863,307,1.457,308,1.457,309,2.32,310,3.456,311,3.298,312,1.457,313,2.32,314,2.321,315,2.32,316,1.457,317,1.863,318,2.32,319,1.457,320,1.457,321,1.457,322,1.457,323,1.457,324,1.457,325,3.601,326,4.024,327,1.457,328,1.457,329,1.457,330,1.457,331,1.457,332,1.457,333,4.178,334,2.32,335,2.32,336,1.457,337,1.457,338,1.457,339,1.457,340,1.457,341,1.457,342,2.32,343,1.457,344,1.169,345,1.457,346,1.457,347,1.457,348,1.457,349,1.457,350,2.32,351,2.32,352,1.457,353,1.457,354,1.169,355,1.457,356,1.457,357,1.169]],["title/index.html",[19,0.424,358,1.875,359,1.875]],["body/index.html",[0,0.138,4,0.382,5,0.328,10,0.666,21,0.233,22,0.029,23,1.232,24,0.916,31,1.399,44,0.799,50,0.024,51,0.024,59,0.666,67,1.122,70,1.627,92,1.299,98,1.033,106,0.765,194,1.723,203,1.627,227,1.232,242,1.942,269,1.232,273,1.232,276,1.033,279,1.232,284,1.232,314,3.151,317,1.942,344,2.966,354,1.232,357,1.942,360,2.419,361,1.535,362,2.993,363,1.535,364,1.535,365,1.535,366,1.535,367,1.535,368,1.535,369,1.535,370,2.993,371,1.535,372,2.419,373,2.419,374,1.535,375,1.535,376,1.535,377,2.419,378,1.535,379,2.419,380,1.535,381,1.535,382,1.535,383,1.535,384,1.535,385,1.535,386,1.535,387,1.535,388,1.535,389,1.535,390,2.419,391,1.535,392,2.419,393,1.535,394,1.535,395,1.535,396,2.419,397,2.419,398,1.535,399,2.993,400,2.993,401,2.419,402,2.419,403,2.419,404,1.535,405,1.535,406,2.419,407,3.694,408,2.419,409,2.419,410,2.419,411,1.535,412,2.993,413,1.535,414,1.535,415,1.535,416,1.535,417,1.535,418,1.535,419,1.535,420,2.419,421,1.535,422,1.535,423,1.535,424,1.535,425,1.535,426,1.535,427,2.419,428,1.535,429,1.535,430,2.419,431,1.535,432,1.535,433,1.535,434,1.535,435,2.993,436,1.535,437,1.535,438,1.535,439,1.535,440,1.535,441,1.535,442,2.419,443,1.535,444,2.419,445,1.535,446,1.535,447,1.535,448,2.419,449,1.535,450,1.535,451,1.535,452,1.535,453,1.535,454,1.535,455,1.535,456,1.535,457,1.535,458,1.535,459,1.535,460,2.419,461,1.535,462,2.419,463,1.535,464,1.535,465,1.535,466,1.535,467,2.419,468,1.535,469,1.535,470,1.535,471,1.535,472,1.535,473,1.535,474,1.535,475,1.535,476,1.535,477,1.535,478,1.535,479,1.535,480,1.535,481,1.535,482,1.535,483,1.535,484,1.535,485,1.535,486,1.535,487,1.535,488,1.535,489,1.535,490,1.535,491,1.535,492,1.535,493,1.535,494,1.535,495,1.535,496,2.993,497,1.535,498,1.535,499,1.232,500,1.535,501,1.535,502,1.535,503,1.535,504,2.419,505,1.535,506,2.419,507,1.535,508,1.535,509,1.535,510,1.535,511,2.419,512,2.993,513,2.419,514,1.535,515,2.419,516,1.535,517,1.535,518,1.535,519,1.535,520,2.419,521,1.535,522,1.535,523,1.535,524,1.535,525,1.535,526,1.535,527,1.535,528,2.993,529,1.535,530,1.535,531,2.419,532,1.535,533,1.535,534,1.535,535,3.396,536,1.535,537,1.535,538,1.535,539,1.535,540,1.535,541,1.535,542,2.419,543,1.535,544,1.535,545,1.535,546,1.535,547,1.535,548,1.535,549,1.535,550,1.535,551,1.535,552,1.535,553,1.535,554,1.535,555,1.535,556,1.535,557,1.535,558,1.535,559,1.535,560,1.535,561,1.535,562,1.535,563,1.535,564,1.535,565,1.535,566,1.535,567,1.535,568,1.535,569,1.535,570,1.535,571,2.419,572,1.535]],["title/modules.html",[573,2.99]],["body/modules.html",[22,0.047,50,0.047,51,0.047,573,3.389]],["title/overview.html",[574,2.99]],["body/overview.html",[2,0.892,22,0.047,50,0.047,51,0.047,574,3.353,575,4.177]],["title/properties.html",[20,1.255,275,1.875]],["body/properties.html",[7,0.906,20,1.38,22,0.053,24,1.38,44,1.204,50,0.043,51,0.043,56,2.925,277,2.925,576,3.643,577,3.643,578,3.643,579,3.643,580,3.643,581,3.643,582,3.643,583,3.643,584,3.643,585,3.643,586,3.643,587,3.643,588,3.643,589,3.643,590,3.643,591,3.643,592,3.643]],["title/todo.html",[358,1.875,359,1.875,593,2.335]],["body/todo.html",[22,0.047,50,0.047,51,0.047,594,4.221]],["title/miscellaneous/typealiases.html",[296,1.013,595,3.313]],["body/miscellaneous/typealiases.html",[19,0.596,21,0.73,22,0.041,50,0.041,51,0.041,67,1.724,68,2.923,84,1.808,120,2.077,148,1.891,237,2.21,241,2.804,250,3.08,254,2.804,255,2.804,257,2.804,259,2.804,263,2.804,265,2.21,267,3.345,296,1.425,299,3.674,300,2.636,303,2.636,306,2.636,310,2.636,596,3.284,597,4.577]],["title/miscellaneous/variables.html",[296,1.013,598,2.66]],["body/miscellaneous/variables.html",[1,1.511,6,2.684,19,0.724,22,0.049,48,3.158,49,3.203,50,0.046,51,0.046,77,3.203,296,1.731,499,3.203,598,3.203,599,3.989]]],"invertedIndex":[["",{"_index":22,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{},"classes/UpdateResultDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":238,"title":{},"body":{"coverage.html":{}}}],["0.0.20",{"_index":277,"title":{},"body":{"dependencies.html":{},"properties.html":{}}}],["0.14.1",{"_index":285,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":288,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":289,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":283,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":239,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":268,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":185,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["1/1",{"_index":233,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":243,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":248,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":418,"title":{},"body":{"index.html":{}}}],["100",{"_index":232,"title":{},"body":{"coverage.html":{}}}],["11.0.10",{"_index":282,"title":{},"body":{"dependencies.html":{}}}],["11.0.3",{"_index":280,"title":{},"body":{"dependencies.html":{}}}],["11.8.1",{"_index":292,"title":{},"body":{"dependencies.html":{}}}],["16mb",{"_index":491,"title":{},"body":{"index.html":{}}}],["2,000",{"_index":458,"title":{},"body":{"index.html":{}}}],["20",{"_index":247,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":472,"title":{},"body":{"index.html":{}}}],["21",{"_index":271,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":478,"title":{},"body":{"index.html":{}}}],["3/14",{"_index":272,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":270,"title":{},"body":{"coverage.html":{}}}],["30,000",{"_index":443,"title":{},"body":{"index.html":{}}}],["40",{"_index":479,"title":{},"body":{"index.html":{}}}],["4gb",{"_index":484,"title":{},"body":{"index.html":{}}}],["5.1.7",{"_index":293,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":242,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["60",{"_index":269,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["8.13.3",{"_index":295,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":575,"title":{},"body":{"overview.html":{}}}],["_columnname",{"_index":209,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["_firstpropertyname",{"_index":217,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["_propertyname",{"_index":208,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["_referencedcolumnname",{"_index":204,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["_secondpropertyname",{"_index":218,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["_tablename",{"_index":211,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["acceptstring",{"_index":79,"title":{},"body":{"classes/CommonQueryDto.html":{}}}],["accommodate",{"_index":392,"title":{},"body":{"index.html":{}}}],["accommodating",{"_index":414,"title":{},"body":{"index.html":{}}}],["achieves",{"_index":376,"title":{},"body":{"index.html":{}}}],["add",{"_index":387,"title":{},"body":{"index.html":{}}}],["addrelation",{"_index":137,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["addrelation(relation",{"_index":145,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["adjust",{"_index":468,"title":{},"body":{"index.html":{}}}],["administrative",{"_index":473,"title":{},"body":{"index.html":{}}}],["adopted",{"_index":368,"title":{},"body":{"index.html":{}}}],["affected",{"_index":97,"title":{},"body":{"classes/DeleteResultDto.html":{},"classes/EntityWriteService.html":{},"classes/UpdateResultDto.html":{}}}],["alias",{"_index":240,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":596,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allocate",{"_index":477,"title":{},"body":{"index.html":{}}}],["allocation",{"_index":488,"title":{},"body":{"index.html":{}}}],["allowed",{"_index":408,"title":{},"body":{"index.html":{}}}],["apiproperty",{"_index":90,"title":{},"body":{"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/UpdateResultDto.html":{}}}],["apiproperty({type",{"_index":87,"title":{},"body":{"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/UpdateResultDto.html":{}}}],["application",{"_index":462,"title":{},"body":{"index.html":{}}}],["apply",{"_index":524,"title":{},"body":{"index.html":{}}}],["approach",{"_index":375,"title":{},"body":{"index.html":{}}}],["array",{"_index":354,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["associated",{"_index":382,"title":{},"body":{"index.html":{}}}],["async",{"_index":105,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["author",{"_index":590,"title":{},"body":{"properties.html":{}}}],["availability",{"_index":438,"title":{},"body":{"index.html":{}}}],["available",{"_index":424,"title":{},"body":{"index.html":{}}}],["avoid",{"_index":502,"title":{},"body":{"index.html":{}}}],["await",{"_index":132,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["balancing",{"_index":436,"title":{},"body":{"index.html":{}}}],["base.js",{"_index":125,"title":{},"body":{"classes/EntityReadService.html":{}}}],["base_entity_columns",{"_index":48,"title":{},"body":{"classes/BaseEntity.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["based",{"_index":315,"title":{},"body":{"miscellaneous/functions.html":{}}}],["baseentity",{"_index":1,"title":{"classes/BaseEntity.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["baseentityservice",{"_index":52,"title":{"classes/BaseEntityService.html":{}},"body":{"classes/BaseEntityService.html":{},"classes/EntityReadService.html":{},"coverage.html":{}}}],["baseline",{"_index":422,"title":{},"body":{"index.html":{}}}],["basemodel",{"_index":18,"title":{},"body":{"classes/BaseEntity.html":{}}}],["before",{"_index":450,"title":{},"body":{"index.html":{}}}],["being",{"_index":451,"title":{},"body":{"index.html":{}}}],["better",{"_index":290,"title":{},"body":{"dependencies.html":{}}}],["boolean",{"_index":72,"title":{},"body":{"classes/CommonQueryDto.html":{}}}],["both",{"_index":379,"title":{},"body":{"index.html":{}}}],["brightline",{"_index":592,"title":{},"body":{"properties.html":{}}}],["bug",{"_index":550,"title":{},"body":{"index.html":{}}}],["bugs",{"_index":585,"title":{},"body":{"properties.html":{}}}],["builder/querypartialentity.js",{"_index":174,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["capabilities",{"_index":579,"title":{},"body":{"properties.html":{}}}],["capability",{"_index":309,"title":{},"body":{"miscellaneous/functions.html":{}}}],["capacity",{"_index":475,"title":{},"body":{"index.html":{}}}],["class",{"_index":0,"title":{"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{},"classes/UpdateResultDto.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{},"classes/UpdateResultDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["classdecorator",{"_index":348,"title":{},"body":{"miscellaneous/functions.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{},"classes/UpdateResultDto.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["closed",{"_index":452,"title":{},"body":{"index.html":{}}}],["code",{"_index":380,"title":{},"body":{"index.html":{}}}],["column",{"_index":194,"title":{},"body":{"classes/TableNamingStrategy.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["column(options",{"_index":304,"title":{},"body":{"miscellaneous/functions.html":{}}}],["columns",{"_index":16,"title":{},"body":{"classes/BaseEntity.html":{},"miscellaneous/functions.html":{}}}],["columntype",{"_index":319,"title":{},"body":{"miscellaneous/functions.html":{}}}],["common",{"_index":69,"title":{},"body":{"classes/CommonQueryDto.html":{}}}],["commonly",{"_index":577,"title":{},"body":{"properties.html":{}}}],["commonquerydto",{"_index":65,"title":{"classes/CommonQueryDto.html":{}},"body":{"classes/CommonQueryDto.html":{},"coverage.html":{}}}],["compatibility",{"_index":553,"title":{},"body":{"index.html":{}}}],["composite",{"_index":341,"title":{},"body":{"miscellaneous/functions.html":{}}}],["configuration",{"_index":402,"title":{},"body":{"index.html":{}}}],["configure",{"_index":442,"title":{},"body":{"index.html":{}}}],["configured",{"_index":483,"title":{},"body":{"index.html":{}}}],["connection",{"_index":448,"title":{},"body":{"index.html":{}}}],["connections",{"_index":407,"title":{},"body":{"index.html":{}}}],["connectiontimeoutmillis",{"_index":457,"title":{},"body":{"index.html":{}}}],["consider",{"_index":538,"title":{},"body":{"index.html":{}}}],["const",{"_index":47,"title":{},"body":{"classes/BaseEntity.html":{},"classes/EntityWriteService.html":{}}}],["constraint",{"_index":343,"title":{},"body":{"miscellaneous/functions.html":{}}}],["constructor",{"_index":54,"title":{},"body":{"classes/BaseEntityService.html":{}}}],["constructor(protected",{"_index":63,"title":{},"body":{"classes/BaseEntityService.html":{}}}],["constructor(repo",{"_index":55,"title":{},"body":{"classes/BaseEntityService.html":{}}}],["consumption",{"_index":455,"title":{},"body":{"index.html":{}}}],["contact",{"_index":570,"title":{},"body":{"index.html":{}}}],["contributions",{"_index":541,"title":{},"body":{"index.html":{}}}],["controller",{"_index":520,"title":{},"body":{"index.html":{}}}],["converted",{"_index":500,"title":{},"body":{"index.html":{}}}],["count",{"_index":84,"title":{},"body":{"classes/CountResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["count(query",{"_index":109,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["countresult",{"_index":86,"title":{},"body":{"classes/CountResultDto.html":{},"classes/EntityReadService.html":{}}}],["countresultdto",{"_index":82,"title":{"classes/CountResultDto.html":{}},"body":{"classes/CountResultDto.html":{},"coverage.html":{}}}],["coverage",{"_index":226,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":326,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createdat",{"_index":13,"title":{},"body":{"classes/BaseEntity.html":{}}}],["createdatecolumn",{"_index":40,"title":{},"body":{"classes/BaseEntity.html":{}}}],["createfindoperator",{"_index":252,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createfindoperator(query",{"_index":324,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createquerycountdto",{"_index":253,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createquerycountdto(options",{"_index":329,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createquerycountdtooptions",{"_index":254,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["createquerymanydto",{"_index":256,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createquerymanydto(options",{"_index":330,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createqueryonedto",{"_index":258,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createqueryonedto(options",{"_index":331,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createrelationparamdto",{"_index":245,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createrelationparamdto(relations",{"_index":332,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createunsetrelationparamdto",{"_index":246,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createunsetrelationparamdto(relations",{"_index":336,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createwhereoptiondto",{"_index":261,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createwhereoptiondto(columns",{"_index":337,"title":{},"body":{"miscellaneous/functions.html":{}}}],["data",{"_index":314,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["databaes",{"_index":192,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["database",{"_index":317,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["datasource",{"_index":397,"title":{},"body":{"index.html":{}}}],["date",{"_index":23,"title":{},"body":{"classes/BaseEntity.html":{},"index.html":{}}}],["date'})@createdatecolumn",{"_index":26,"title":{},"body":{"classes/BaseEntity.html":{}}}],["date'})@deletedatecolumn",{"_index":29,"title":{},"body":{"classes/BaseEntity.html":{}}}],["date'})@updatedatecolumn",{"_index":34,"title":{},"body":{"classes/BaseEntity.html":{}}}],["decorator",{"_index":306,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["decorators",{"_index":24,"title":{},"body":{"classes/BaseEntity.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/UpdateResultDto.html":{},"index.html":{},"properties.html":{}}}],["dedicated",{"_index":523,"title":{},"body":{"index.html":{}}}],["default",{"_index":77,"title":{},"body":{"classes/CommonQueryDto.html":{},"miscellaneous/variables.html":{}}}],["defaultnamingstrategy",{"_index":197,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["define",{"_index":486,"title":{},"body":{"index.html":{}}}],["defined",{"_index":27,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{},"classes/UpdateResultDto.html":{}}}],["defines",{"_index":405,"title":{},"body":{"index.html":{}}}],["delays",{"_index":466,"title":{},"body":{"index.html":{}}}],["delete",{"_index":95,"title":{},"body":{"classes/DeleteResultDto.html":{},"classes/EntityWriteService.html":{}}}],["delete(id",{"_index":149,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["deleted",{"_index":74,"title":{},"body":{"classes/CommonQueryDto.html":{}}}],["deletedat",{"_index":15,"title":{},"body":{"classes/BaseEntity.html":{}}}],["deletedatecolumn",{"_index":41,"title":{},"body":{"classes/BaseEntity.html":{}}}],["deleteresult",{"_index":96,"title":{},"body":{"classes/DeleteResultDto.html":{}}}],["deleteresultdto",{"_index":93,"title":{"classes/DeleteResultDto.html":{}},"body":{"classes/DeleteResultDto.html":{},"coverage.html":{}}}],["demand",{"_index":416,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":276,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["description",{"_index":7,"title":{},"body":{"classes/BaseEntity.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{},"classes/UpdateResultDto.html":{},"miscellaneous/functions.html":{},"properties.html":{}}}],["determines",{"_index":445,"title":{},"body":{"index.html":{}}}],["developer",{"_index":571,"title":{},"body":{"index.html":{}}}],["development",{"_index":362,"title":{},"body":{"index.html":{}}}],["disrupting",{"_index":503,"title":{},"body":{"index.html":{}}}],["documentaion",{"_index":308,"title":{},"body":{"miscellaneous/functions.html":{}}}],["documentation",{"_index":227,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["done",{"_index":515,"title":{},"body":{"index.html":{}}}],["driver",{"_index":318,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dto",{"_index":70,"title":{},"body":{"classes/CommonQueryDto.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["dto.ts",{"_index":68,"title":{},"body":{"classes/CommonQueryDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["dto.ts:14",{"_index":81,"title":{},"body":{"classes/CommonQueryDto.html":{}}}],["duration",{"_index":446,"title":{},"body":{"index.html":{}}}],["during",{"_index":427,"title":{},"body":{"index.html":{}}}],["efficiency",{"_index":373,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":411,"title":{},"body":{"index.html":{}}}],["effort",{"_index":534,"title":{},"body":{"index.html":{}}}],["encrypion",{"_index":514,"title":{},"body":{"index.html":{}}}],["encrypted",{"_index":522,"title":{},"body":{"index.html":{}}}],["encryption",{"_index":519,"title":{},"body":{"index.html":{}}}],["enhance",{"_index":492,"title":{},"body":{"index.html":{}}}],["enhancing",{"_index":372,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":496,"title":{},"body":{"index.html":{}}}],["ensuring",{"_index":410,"title":{},"body":{"index.html":{}}}],["entities",{"_index":8,"title":{},"body":{"classes/BaseEntity.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["entity",{"_index":10,"title":{},"body":{"classes/BaseEntity.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["entity's",{"_index":346,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entity(uniques",{"_index":339,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entity/base.js",{"_index":62,"title":{},"body":{"classes/BaseEntityService.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["entityreadservice",{"_index":100,"title":{"classes/EntityReadService.html":{}},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"coverage.html":{}}}],["entityreadservice:16",{"_index":170,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["entityreadservice:25",{"_index":171,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["entityreadservice:29",{"_index":172,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["entityreadservice:33",{"_index":169,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["entitywriteservice",{"_index":134,"title":{"classes/EntityWriteService.html":{}},"body":{"classes/EntityWriteService.html":{},"coverage.html":{}}}],["errors",{"_index":383,"title":{},"body":{"index.html":{}}}],["establish",{"_index":461,"title":{},"body":{"index.html":{}}}],["establishes",{"_index":432,"title":{},"body":{"index.html":{}}}],["even",{"_index":558,"title":{},"body":{"index.html":{}}}],["example",{"_index":385,"title":{},"body":{"index.html":{}}}],["exclude",{"_index":91,"title":{},"body":{"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/UpdateResultDto.html":{}}}],["execution",{"_index":526,"title":{},"body":{"index.html":{}}}],["export",{"_index":45,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{},"classes/UpdateResultDto.html":{}}}],["extends",{"_index":9,"title":{},"body":{"classes/BaseEntity.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{}}}],["false",{"_index":78,"title":{},"body":{"classes/CommonQueryDto.html":{}}}],["features",{"_index":556,"title":{},"body":{"index.html":{}}}],["fields",{"_index":347,"title":{},"body":{"miscellaneous/functions.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{},"classes/UpdateResultDto.html":{},"coverage.html":{},"index.html":{}}}],["find",{"_index":106,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["find(query",{"_index":114,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["findone",{"_index":107,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["findone(query",{"_index":117,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["findonebyid",{"_index":108,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["findonebyid(id",{"_index":121,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["findoperator",{"_index":327,"title":{},"body":{"miscellaneous/functions.html":{}}}],["findoptionswhere",{"_index":123,"title":{},"body":{"classes/EntityReadService.html":{}}}],["firsttablename",{"_index":220,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["firsttablename}_${secondtablename",{"_index":222,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["fixes",{"_index":551,"title":{},"body":{"index.html":{}}}],["following",{"_index":401,"title":{},"body":{"index.html":{}}}],["format",{"_index":395,"title":{},"body":{"index.html":{}}}],["function",{"_index":231,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":297,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funding",{"_index":528,"title":{},"body":{"index.html":{}}}],["general",{"_index":564,"title":{},"body":{"index.html":{}}}],["getting",{"_index":358,"title":{"index.html":{},"todo.html":{}},"body":{}}],["given",{"_index":321,"title":{},"body":{"miscellaneous/functions.html":{}}}],["go",{"_index":548,"title":{},"body":{"index.html":{}}}],["handling",{"_index":521,"title":{},"body":{"index.html":{}}}],["hashing",{"_index":513,"title":{},"body":{"index.html":{}}}],["help",{"_index":542,"title":{},"body":{"index.html":{}}}],["homepage",{"_index":583,"title":{},"body":{"properties.html":{}}}],["https://github.com/rbrightline/puq/tree/main",{"_index":589,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io",{"_index":586,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io/puq/orm",{"_index":584,"title":{},"body":{"properties.html":{}}}],["id",{"_index":12,"title":{},"body":{"classes/BaseEntity.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["identifier",{"_index":228,"title":{},"body":{"coverage.html":{}}}],["idle",{"_index":447,"title":{},"body":{"index.html":{}}}],["idletimeoutmillis",{"_index":441,"title":{},"body":{"index.html":{}}}],["implement",{"_index":400,"title":{},"body":{"index.html":{}}}],["implementations",{"_index":369,"title":{},"body":{"index.html":{}}}],["implements",{"_index":17,"title":{},"body":{"classes/BaseEntity.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/UpdateResultDto.html":{}}}],["import",{"_index":36,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{},"classes/UpdateResultDto.html":{}}}],["improvements",{"_index":561,"title":{},"body":{"index.html":{}}}],["inactivity",{"_index":456,"title":{},"body":{"index.html":{}}}],["include",{"_index":73,"title":{},"body":{"classes/CommonQueryDto.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"classes/BaseEntity.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{},"classes/UpdateResultDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{},"classes/UpdateResultDto.html":{}}}],["inherited",{"_index":168,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["initial",{"_index":527,"title":{},"body":{"index.html":{}}}],["install",{"_index":384,"title":{},"body":{"index.html":{}}}],["instant",{"_index":547,"title":{},"body":{"index.html":{}}}],["instead",{"_index":509,"title":{},"body":{"index.html":{}}}],["integer",{"_index":46,"title":{},"body":{"classes/BaseEntity.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/UpdateResultDto.html":{}}}],["integer'})@primarygeneratedcolumn",{"_index":32,"title":{},"body":{"classes/BaseEntity.html":{}}}],["integration",{"_index":365,"title":{},"body":{"index.html":{}}}],["interfere",{"_index":508,"title":{},"body":{"index.html":{}}}],["intuitive",{"_index":366,"title":{},"body":{"index.html":{}}}],["it's",{"_index":530,"title":{},"body":{"index.html":{}}}],["items",{"_index":75,"title":{},"body":{"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/UpdateResultDto.html":{}}}],["javascript",{"_index":501,"title":{},"body":{"index.html":{}}}],["joincolumnname",{"_index":198,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["joincolumnname(relationname",{"_index":202,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["jointablecolumnname",{"_index":199,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["jointablecolumnname(_tablename",{"_index":207,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["jointableinversecolumnname",{"_index":200,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["jointableinversecolumnname(_tablename",{"_index":213,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["jointablename",{"_index":201,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["jointablename(firsttablename",{"_index":215,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["keep",{"_index":566,"title":{},"body":{"index.html":{}}}],["keeping",{"_index":421,"title":{},"body":{"index.html":{}}}],["keys",{"_index":333,"title":{},"body":{"miscellaneous/functions.html":{}}}],["keywords",{"_index":580,"title":{},"body":{"properties.html":{}}}],["latency",{"_index":426,"title":{},"body":{"index.html":{}}}],["latest",{"_index":554,"title":{},"body":{"index.html":{}}}],["layer",{"_index":512,"title":{},"body":{"index.html":{}}}],["library",{"_index":535,"title":{},"body":{"index.html":{}}}],["license",{"_index":587,"title":{},"body":{"properties.html":{}}}],["limit",{"_index":434,"title":{},"body":{"index.html":{}}}],["limitation",{"_index":393,"title":{},"body":{"index.html":{}}}],["linkk",{"_index":129,"title":{},"body":{"classes/EntityReadService.html":{}}}],["literal",{"_index":597,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["load",{"_index":76,"title":{},"body":{"classes/CommonQueryDto.html":{}}}],["low",{"_index":428,"title":{},"body":{"index.html":{}}}],["mached",{"_index":88,"title":{},"body":{"classes/CountResultDto.html":{}}}],["maintained",{"_index":420,"title":{},"body":{"index.html":{}}}],["maintaining",{"_index":532,"title":{},"body":{"index.html":{}}}],["maintenance",{"_index":565,"title":{},"body":{"index.html":{}}}],["make",{"_index":557,"title":{},"body":{"index.html":{}}}],["many",{"_index":255,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["matching",{"_index":51,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{},"classes/UpdateResultDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":431,"title":{},"body":{"index.html":{}}}],["max_connections",{"_index":471,"title":{},"body":{"index.html":{}}}],["maximum",{"_index":406,"title":{},"body":{"index.html":{}}}],["memory",{"_index":487,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":287,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":104,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{}}}],["milliseconds",{"_index":444,"title":{},"body":{"index.html":{}}}],["min",{"_index":417,"title":{},"body":{"index.html":{}}}],["minimizing",{"_index":453,"title":{},"body":{"index.html":{}}}],["minimum",{"_index":377,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":296,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":588,"title":{},"body":{"properties.html":{}}}],["modules",{"_index":573,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":559,"title":{},"body":{"index.html":{}}}],["name",{"_index":59,"title":{},"body":{"classes/BaseEntityService.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["names",{"_index":335,"title":{},"body":{"miscellaneous/functions.html":{}}}],["naming",{"_index":195,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["nestjs/common",{"_index":281,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":279,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["new",{"_index":273,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["number",{"_index":31,"title":{},"body":{"classes/BaseEntity.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/UpdateResultDto.html":{},"index.html":{}}}],["numbers",{"_index":493,"title":{},"body":{"index.html":{}}}],["numeric",{"_index":495,"title":{},"body":{"index.html":{}}}],["object",{"_index":357,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["object.keys(new",{"_index":49,"title":{},"body":{"classes/BaseEntity.html":{},"miscellaneous/variables.html":{}}}],["one",{"_index":120,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["ongoing",{"_index":540,"title":{},"body":{"index.html":{}}}],["open",{"_index":435,"title":{},"body":{"index.html":{}}}],["operation",{"_index":98,"title":{},"body":{"classes/DeleteResultDto.html":{},"classes/UpdateResultDto.html":{},"index.html":{}}}],["operations",{"_index":504,"title":{},"body":{"index.html":{}}}],["operator.ts",{"_index":251,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["optimal",{"_index":482,"title":{},"body":{"index.html":{}}}],["optimize",{"_index":398,"title":{},"body":{"index.html":{}}}],["option",{"_index":260,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["optional",{"_index":60,"title":{},"body":{"classes/BaseEntityService.html":{},"classes/CommonQueryDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":310,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["orm",{"_index":582,"title":{},"body":{"properties.html":{}}}],["out",{"_index":563,"title":{},"body":{"index.html":{}}}],["overloading",{"_index":440,"title":{},"body":{"index.html":{}}}],["override",{"_index":221,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["overview",{"_index":574,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":275,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["paired",{"_index":371,"title":{},"body":{"index.html":{}}}],["param",{"_index":128,"title":{},"body":{"classes/EntityReadService.html":{},"miscellaneous/functions.html":{}}}],["parameters",{"_index":58,"title":{},"body":{"classes/BaseEntityService.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{},"miscellaneous/functions.html":{}}}],["parse",{"_index":356,"title":{},"body":{"miscellaneous/functions.html":{}}}],["peak",{"_index":415,"title":{},"body":{"index.html":{}}}],["peer",{"_index":278,"title":{},"body":{"dependencies.html":{}}}],["per",{"_index":489,"title":{},"body":{"index.html":{}}}],["performance",{"_index":399,"title":{},"body":{"index.html":{}}}],["periods",{"_index":430,"title":{},"body":{"index.html":{}}}],["pg",{"_index":294,"title":{},"body":{"dependencies.html":{}}}],["pick",{"_index":313,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pickdatatype",{"_index":234,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["pickdatatype(options",{"_index":312,"title":{},"body":{"miscellaneous/functions.html":{}}}],["picktransformer",{"_index":235,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["picktransformer(options",{"_index":320,"title":{},"body":{"miscellaneous/functions.html":{}}}],["please",{"_index":537,"title":{},"body":{"index.html":{}}}],["pnpm",{"_index":386,"title":{},"body":{"index.html":{}}}],["pool",{"_index":409,"title":{},"body":{"index.html":{}}}],["poolsize",{"_index":404,"title":{},"body":{"index.html":{}}}],["postgres",{"_index":396,"title":{},"body":{"index.html":{}}}],["postgres.conf",{"_index":470,"title":{},"body":{"index.html":{}}}],["postgresql",{"_index":469,"title":{},"body":{"index.html":{}}}],["powerful",{"_index":560,"title":{},"body":{"index.html":{}}}],["precision",{"_index":498,"title":{},"body":{"index.html":{}}}],["preservation",{"_index":497,"title":{},"body":{"index.html":{}}}],["prevent",{"_index":439,"title":{},"body":{"index.html":{}}}],["preventing",{"_index":464,"title":{},"body":{"index.html":{}}}],["primarygeneratedcolumn",{"_index":42,"title":{},"body":{"classes/BaseEntity.html":{}}}],["process",{"_index":374,"title":{},"body":{"index.html":{}}}],["project",{"_index":531,"title":{},"body":{"index.html":{}}}],["prolonged",{"_index":465,"title":{},"body":{"index.html":{}}}],["promise",{"_index":113,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["properties",{"_index":20,"title":{"properties.html":{}},"body":{"classes/BaseEntity.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/UpdateResultDto.html":{},"properties.html":{}}}],["property",{"_index":37,"title":{},"body":{"classes/BaseEntity.html":{},"classes/CommonQueryDto.html":{}}}],["property({type",{"_index":25,"title":{},"body":{"classes/BaseEntity.html":{},"classes/CommonQueryDto.html":{}}}],["propertydecorator",{"_index":311,"title":{},"body":{"miscellaneous/functions.html":{}}}],["propertyoptions",{"_index":305,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provided",{"_index":316,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provides",{"_index":11,"title":{},"body":{"classes/BaseEntity.html":{}}}],["puq",{"_index":581,"title":{},"body":{"properties.html":{}}}],["puq/orm",{"_index":360,"title":{},"body":{"index.html":{}}}],["puq/ormsqlite",{"_index":388,"title":{},"body":{"index.html":{}}}],["puq/property",{"_index":38,"title":{},"body":{"classes/BaseEntity.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/UpdateResultDto.html":{},"dependencies.html":{}}}],["puq/query",{"_index":124,"title":{},"body":{"classes/EntityReadService.html":{},"dependencies.html":{}}}],["puq/type",{"_index":39,"title":{},"body":{"classes/BaseEntity.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/UpdateResultDto.html":{},"dependencies.html":{}}}],["queriable",{"_index":338,"title":{},"body":{"miscellaneous/functions.html":{}}}],["query",{"_index":67,"title":{},"body":{"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["querycount",{"_index":110,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["querydeeppartialentity",{"_index":166,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["querymany",{"_index":115,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"miscellaneous/functions.html":{}}}],["querymanydtooptions",{"_index":257,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["queryone",{"_index":118,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"miscellaneous/functions.html":{}}}],["queryonedtooptions",{"_index":259,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["ram",{"_index":481,"title":{},"body":{"index.html":{}}}],["read",{"_index":102,"title":{},"body":{"classes/EntityReadService.html":{}}}],["read.js",{"_index":176,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["readily",{"_index":423,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":64,"title":{},"body":{"classes/BaseEntityService.html":{}}}],["record",{"_index":328,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reduce",{"_index":425,"title":{},"body":{"index.html":{}}}],["reduction",{"_index":378,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":286,"title":{},"body":{"dependencies.html":{}}}],["refrain",{"_index":505,"title":{},"body":{"index.html":{}}}],["relation",{"_index":148,"title":{},"body":{"classes/EntityWriteService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["relation(type",{"_index":349,"title":{},"body":{"miscellaneous/functions.html":{}}}],["relationname",{"_index":206,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["relationoptions",{"_index":241,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["relationparam",{"_index":146,"title":{},"body":{"classes/EntityWriteService.html":{},"miscellaneous/functions.html":{}}}],["relations",{"_index":334,"title":{},"body":{"miscellaneous/functions.html":{}}}],["relationtype",{"_index":350,"title":{},"body":{"miscellaneous/functions.html":{}}}],["remains",{"_index":449,"title":{},"body":{"index.html":{}}}],["removerelation",{"_index":138,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["removerelation(relation",{"_index":151,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["repo",{"_index":61,"title":{},"body":{"classes/BaseEntityService.html":{}}}],["repository",{"_index":56,"title":{},"body":{"classes/BaseEntityService.html":{},"properties.html":{}}}],["required",{"_index":578,"title":{},"body":{"properties.html":{}}}],["resource",{"_index":412,"title":{},"body":{"index.html":{}}}],["responsiveness",{"_index":463,"title":{},"body":{"index.html":{}}}],["result",{"_index":85,"title":{},"body":{"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/UpdateResultDto.html":{}}}],["results",{"_index":50,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{},"classes/UpdateResultDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":126,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{}}}],["returns",{"_index":112,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{},"miscellaneous/functions.html":{}}}],["rid",{"_index":182,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["rn",{"_index":183,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["robert",{"_index":591,"title":{},"body":{"properties.html":{}}}],["robert.brightline@gmail.com",{"_index":572,"title":{},"body":{"index.html":{}}}],["running",{"_index":567,"title":{},"body":{"index.html":{}}}],["safe",{"_index":517,"title":{},"body":{"index.html":{}}}],["save",{"_index":139,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["save(entity",{"_index":153,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["savemany",{"_index":140,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["savemany(entities",{"_index":156,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["secondtablename",{"_index":216,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["secure",{"_index":545,"title":{},"body":{"index.html":{}}}],["securely",{"_index":569,"title":{},"body":{"index.html":{}}}],["select",{"_index":353,"title":{},"body":{"miscellaneous/functions.html":{}}}],["selecttransformer",{"_index":264,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["server",{"_index":467,"title":{},"body":{"index.html":{}}}],["server's",{"_index":480,"title":{},"body":{"index.html":{}}}],["service",{"_index":103,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["set",{"_index":344,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["setrelation",{"_index":141,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["setrelation(relation",{"_index":158,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["sets",{"_index":459,"title":{},"body":{"index.html":{}}}],["settings",{"_index":403,"title":{},"body":{"index.html":{}}}],["shared_buffers",{"_index":476,"title":{},"body":{"index.html":{}}}],["smoothly",{"_index":568,"title":{},"body":{"index.html":{}}}],["softdelete",{"_index":142,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["softdelete(id",{"_index":160,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["sort",{"_index":490,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{},"classes/UpdateResultDto.html":{},"index.html":{}}}],["specifies",{"_index":419,"title":{},"body":{"index.html":{}}}],["specify",{"_index":345,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sqlite",{"_index":389,"title":{},"body":{"index.html":{}}}],["sqlite3",{"_index":291,"title":{},"body":{"dependencies.html":{}}}],["src/.../base.ts",{"_index":599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../column.ts",{"_index":298,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../create",{"_index":299,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../entity.ts",{"_index":301,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../relation.ts",{"_index":300,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../select",{"_index":302,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../where",{"_index":303,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/decorator/column.ts",{"_index":230,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/decorator/entity.ts",{"_index":236,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/decorator/relation.ts",{"_index":237,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/dto/count.ts",{"_index":83,"title":{},"body":{"classes/CountResultDto.html":{},"coverage.html":{}}}],["src/lib/dto/count.ts:14",{"_index":89,"title":{},"body":{"classes/CountResultDto.html":{}}}],["src/lib/dto/delete.ts",{"_index":94,"title":{},"body":{"classes/DeleteResultDto.html":{},"coverage.html":{}}}],["src/lib/dto/delete.ts:13",{"_index":99,"title":{},"body":{"classes/DeleteResultDto.html":{}}}],["src/lib/dto/relation.ts",{"_index":244,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/dto/update.ts",{"_index":224,"title":{},"body":{"classes/UpdateResultDto.html":{},"coverage.html":{}}}],["src/lib/dto/update.ts:14",{"_index":225,"title":{},"body":{"classes/UpdateResultDto.html":{}}}],["src/lib/entity/base.ts",{"_index":6,"title":{},"body":{"classes/BaseEntity.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/entity/base.ts:16",{"_index":33,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/lib/entity/base.ts:20",{"_index":28,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/lib/entity/base.ts:24",{"_index":35,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/lib/entity/base.ts:28",{"_index":30,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/lib/factory/naming",{"_index":190,"title":{},"body":{"classes/TableNamingStrategy.html":{},"coverage.html":{}}}],["src/lib/query/common",{"_index":66,"title":{},"body":{"classes/CommonQueryDto.html":{},"coverage.html":{}}}],["src/lib/query/create",{"_index":250,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/query/select",{"_index":262,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/query/where",{"_index":265,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/service/base.ts",{"_index":53,"title":{},"body":{"classes/BaseEntityService.html":{},"coverage.html":{}}}],["src/lib/service/base.ts:4",{"_index":57,"title":{},"body":{"classes/BaseEntityService.html":{}}}],["src/lib/service/read.ts",{"_index":101,"title":{},"body":{"classes/EntityReadService.html":{},"coverage.html":{}}}],["src/lib/service/read.ts:16",{"_index":116,"title":{},"body":{"classes/EntityReadService.html":{}}}],["src/lib/service/read.ts:25",{"_index":119,"title":{},"body":{"classes/EntityReadService.html":{}}}],["src/lib/service/read.ts:29",{"_index":122,"title":{},"body":{"classes/EntityReadService.html":{}}}],["src/lib/service/read.ts:33",{"_index":111,"title":{},"body":{"classes/EntityReadService.html":{}}}],["src/lib/service/write.ts",{"_index":135,"title":{},"body":{"classes/EntityWriteService.html":{},"coverage.html":{}}}],["src/lib/service/write.ts:12",{"_index":155,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["src/lib/service/write.ts:16",{"_index":157,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["src/lib/service/write.ts:20",{"_index":167,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["src/lib/service/write.ts:24",{"_index":150,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["src/lib/service/write.ts:28",{"_index":161,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["src/lib/service/write.ts:32",{"_index":147,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["src/lib/service/write.ts:38",{"_index":152,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["src/lib/service/write.ts:44",{"_index":159,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["src/lib/service/write.ts:50",{"_index":164,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["started",{"_index":359,"title":{"index.html":{},"todo.html":{}},"body":{}}],["statements",{"_index":229,"title":{},"body":{"coverage.html":{}}}],["stays",{"_index":543,"title":{},"body":{"index.html":{}}}],["stored",{"_index":494,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":196,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["strategy.ts",{"_index":191,"title":{},"body":{"classes/TableNamingStrategy.html":{},"coverage.html":{}}}],["strategy.ts:15",{"_index":205,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["strategy.ts:22",{"_index":210,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["strategy.ts:30",{"_index":214,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["strategy.ts:6",{"_index":219,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["streamlined",{"_index":363,"title":{},"body":{"index.html":{}}}],["string",{"_index":203,"title":{},"body":{"classes/TableNamingStrategy.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["subsequent",{"_index":525,"title":{},"body":{"index.html":{}}}],["sufficient",{"_index":474,"title":{},"body":{"index.html":{}}}],["summary",{"_index":361,"title":{},"body":{"index.html":{}}}],["support",{"_index":390,"title":{},"body":{"index.html":{}}}],["supporting",{"_index":539,"title":{},"body":{"index.html":{}}}],["system",{"_index":437,"title":{},"body":{"index.html":{}}}],["t",{"_index":154,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["table",{"_index":193,"title":{},"body":{"classes/TableNamingStrategy.html":{},"coverage.html":{}}}],["tablenamingstrategy",{"_index":189,"title":{"classes/TableNamingStrategy.html":{}},"body":{"classes/TableNamingStrategy.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":274,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":533,"title":{},"body":{"index.html":{}}}],["target",{"_index":351,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tasks",{"_index":594,"title":{},"body":{"todo.html":{}}}],["thank",{"_index":529,"title":{},"body":{"index.html":{}}}],["this.repo.count(query",{"_index":133,"title":{},"body":{"classes/EntityReadService.html":{}}}],["this.repo.createquerybuilder().relation(rn).of(id).add(rid",{"_index":184,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["this.repo.createquerybuilder().relation(rn).of(id).remove(rid",{"_index":186,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["this.repo.createquerybuilder().relation(rn).of(id).set(null",{"_index":188,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["this.repo.createquerybuilder().relation(rn).of(id).set(rid",{"_index":187,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["this.repo.delete(id",{"_index":180,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["this.repo.find(query",{"_index":127,"title":{},"body":{"classes/EntityReadService.html":{}}}],["this.repo.findone(query",{"_index":130,"title":{},"body":{"classes/EntityReadService.html":{}}}],["this.repo.findoneby",{"_index":131,"title":{},"body":{"classes/EntityReadService.html":{}}}],["this.repo.save(entities",{"_index":178,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["this.repo.save(entity",{"_index":177,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["this.repo.softdelete(id",{"_index":181,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["this.repo.update(id",{"_index":179,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["through",{"_index":364,"title":{},"body":{"index.html":{}}}],["time",{"_index":460,"title":{},"body":{"index.html":{}}}],["todo",{"_index":593,"title":{"todo.html":{}},"body":{}}],["toward",{"_index":549,"title":{},"body":{"index.html":{}}}],["traffic",{"_index":429,"title":{},"body":{"index.html":{}}}],["transfer",{"_index":511,"title":{},"body":{"index.html":{}}}],["transform",{"_index":352,"title":{},"body":{"miscellaneous/functions.html":{}}}],["transformations",{"_index":510,"title":{},"body":{"index.html":{}}}],["transformed",{"_index":394,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":92,"title":{},"body":{"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/UpdateResultDto.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["transformer.ts",{"_index":263,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["transformers",{"_index":507,"title":{},"body":{"index.html":{}}}],["true",{"_index":80,"title":{},"body":{"classes/CommonQueryDto.html":{}}}],["type",{"_index":21,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{},"classes/UpdateResultDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":595,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeorm",{"_index":44,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/EntityReadService.html":{},"classes/TableNamingStrategy.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["typeorm/query",{"_index":173,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["typeorom",{"_index":516,"title":{},"body":{"index.html":{}}}],["types",{"_index":391,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":323,"title":{},"body":{"miscellaneous/functions.html":{}}}],["unique",{"_index":342,"title":{},"body":{"miscellaneous/functions.html":{}}}],["uniques",{"_index":340,"title":{},"body":{"miscellaneous/functions.html":{}}}],["unnecessary",{"_index":454,"title":{},"body":{"index.html":{}}}],["unsetrelation",{"_index":143,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["unsetrelation(relation",{"_index":162,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["unsetrelationparam",{"_index":163,"title":{},"body":{"classes/EntityWriteService.html":{},"miscellaneous/functions.html":{}}}],["up",{"_index":544,"title":{},"body":{"index.html":{}}}],["update",{"_index":144,"title":{},"body":{"classes/EntityWriteService.html":{},"classes/UpdateResultDto.html":{}}}],["update(id",{"_index":165,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["updatedat",{"_index":14,"title":{},"body":{"classes/BaseEntity.html":{}}}],["updatedatecolumn",{"_index":43,"title":{},"body":{"classes/BaseEntity.html":{}}}],["updateresult",{"_index":175,"title":{},"body":{"classes/EntityWriteService.html":{},"classes/UpdateResultDto.html":{}}}],["updateresultdto",{"_index":223,"title":{"classes/UpdateResultDto.html":{}},"body":{"classes/UpdateResultDto.html":{},"coverage.html":{}}}],["updates",{"_index":552,"title":{},"body":{"index.html":{}}}],["upper",{"_index":433,"title":{},"body":{"index.html":{}}}],["use",{"_index":518,"title":{},"body":{"index.html":{}}}],["useful",{"_index":536,"title":{},"body":{"index.html":{}}}],["users",{"_index":562,"title":{},"body":{"index.html":{}}}],["using",{"_index":506,"title":{},"body":{"index.html":{}}}],["utilization",{"_index":413,"title":{},"body":{"index.html":{}}}],["validation",{"_index":307,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validator",{"_index":284,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["value",{"_index":499,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["valuetransformer",{"_index":322,"title":{},"body":{"miscellaneous/functions.html":{}}}],["variable",{"_index":249,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":598,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":576,"title":{},"body":{"properties.html":{}}}],["versions",{"_index":555,"title":{},"body":{"index.html":{}}}],["volume",{"_index":381,"title":{},"body":{"index.html":{}}}],["well",{"_index":546,"title":{},"body":{"index.html":{}}}],["whereoption",{"_index":325,"title":{},"body":{"miscellaneous/functions.html":{}}}],["wherequerytransformer",{"_index":266,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["wherequerytransformer(columns",{"_index":355,"title":{},"body":{"miscellaneous/functions.html":{}}}],["wherequerytransformeroptions",{"_index":267,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["widely",{"_index":367,"title":{},"body":{"index.html":{}}}],["withdeleted",{"_index":71,"title":{},"body":{"classes/CommonQueryDto.html":{}}}],["within",{"_index":370,"title":{},"body":{"index.html":{}}}],["work_mem",{"_index":485,"title":{},"body":{"index.html":{}}}],["write",{"_index":136,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["yes",{"_index":212,"title":{},"body":{"classes/TableNamingStrategy.html":{},"miscellaneous/functions.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/entity/base.ts\n        \n\n\n            \n                Description\n            \n            \n                All entities extends this entity. The entity provides id, createdAt, updatedAt, and deletedAt columns\n\n            \n\n\n            \n                Implements\n            \n            \n                        BaseModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'date'})@CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/entity/base.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'date'})@DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/entity/base.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'integer'})@PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/entity/base.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'date'})@UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/entity/base.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Property } from '@puq/property';\nimport { BaseModel } from '@puq/type';\nimport {\n  CreateDateColumn,\n  DeleteDateColumn,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\n/**\n * All entities extends this entity. The entity provides id, createdAt, updatedAt, and deletedAt columns\n */\nexport class BaseEntity implements BaseModel {\n  @Property({ type: 'integer' })\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Property({ type: 'date' })\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @Property({ type: 'date' })\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @Property({ type: 'date' })\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\nexport const BASE_ENTITY_COLUMNS = Object.keys(new BaseEntity());\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntityService.html":{"url":"classes/BaseEntityService.html","title":"class - BaseEntityService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/service/base.ts\n        \n\n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/lib/service/base.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repo\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Repository } from 'typeorm';\nimport { BaseEntity } from '../entity/base.js';\n\nexport class BaseEntityService {\n  constructor(protected readonly repo: Repository) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommonQueryDto.html":{"url":"classes/CommonQueryDto.html","title":"class - CommonQueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommonQueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/query/common-query-dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Common query dto\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                withDeleted\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        withDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'boolean', description: 'Include deleted items to the load', default: false, acceptString: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/query/common-query-dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\n\n/**\n * Common query dto\n */\n@Dto()\nexport class CommonQueryDto {\n  @Property({\n    type: 'boolean',\n    description: 'Include deleted items to the load',\n    default: false,\n    acceptString: true,\n  })\n  withDeleted?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CountResultDto.html":{"url":"classes/CountResultDto.html","title":"class - CountResultDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CountResultDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dto/count.ts\n        \n\n\n            \n                Description\n            \n            \n                Count result\n\n            \n\n\n            \n                Implements\n            \n            \n                        CountResult\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                count\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        count\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', description: 'The number of items mached the query'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/count.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@puq/property';\nimport { CountResult } from '@puq/type';\nimport { Exclude } from 'class-transformer';\n\n/**\n * Count result\n */\n@Exclude()\nexport class CountResultDto implements CountResult {\n  @ApiProperty({\n    type: 'integer',\n    description: 'The number of items mached the query',\n  })\n  count: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteResultDto.html":{"url":"classes/DeleteResultDto.html","title":"class - DeleteResultDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteResultDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dto/delete.ts\n        \n\n\n            \n                Description\n            \n            \n                Delete result\n\n            \n\n\n            \n                Implements\n            \n            \n                        DeleteResult\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                affected\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        affected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', description: 'The number of items affected by the delete operation'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/delete.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@puq/property';\nimport { DeleteResult } from '@puq/type';\nimport { Exclude } from 'class-transformer';\n/**\n * Delete result\n */\n@Exclude()\nexport class DeleteResultDto implements DeleteResult {\n  @ApiProperty({\n    type: 'integer',\n    description: 'The number of items affected by the delete operation',\n  })\n  affected: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EntityReadService.html":{"url":"classes/EntityReadService.html","title":"class - EntityReadService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EntityReadService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/service/read.ts\n        \n\n\n            \n                Description\n            \n            \n                Read service\n\n            \n\n            \n                Extends\n            \n            \n                            BaseEntityService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                count\n                            \n                            \n                                find\n                            \n                            \n                                findOne\n                            \n                            \n                                findOneById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(query: QueryCount)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/read.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        QueryCount\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \nfind(query: QueryMany)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/read.ts:16\n                        \n                    \n\n\n            \n                \n                        Query all entities\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        QueryMany\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(query: QueryOne)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/read.ts:25\n                        \n                    \n\n\n            \n                \n                        Query one entity\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        QueryOne\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneById\n                        \n                    \n                \n            \n            \n                \nfindOneById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/read.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FindOptionsWhere } from 'typeorm';\nimport { BaseEntity } from '../entity/base.js';\nimport { QueryCount, QueryMany, QueryOne } from '@puq/query';\nimport { CountResult } from '@puq/type';\nimport { BaseEntityService } from './base.js';\n\n/**\n * Read service\n */\nexport class EntityReadService extends BaseEntityService {\n  /**\n   * Query all entities\n   */\n  find(query: QueryMany[]>) {\n    return this.repo.find(query);\n  }\n\n  /**\n   * Query one entity\n   * @param query {@linkk QueryOne}\n   * @returns\n   */\n  findOne(query: QueryOne[]>) {\n    return this.repo.findOne(query);\n  }\n\n  findOneById(id: number) {\n    return this.repo.findOneBy({ id } as FindOptionsWhere);\n  }\n\n  async count(query: QueryCount[]>): Promise {\n    return { count: await this.repo.count(query) };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EntityWriteService.html":{"url":"classes/EntityWriteService.html","title":"class - EntityWriteService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EntityWriteService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/service/write.ts\n        \n\n\n            \n                Description\n            \n            \n                Write service\n\n            \n\n            \n                Extends\n            \n            \n                            EntityReadService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addRelation\n                            \n                            \n                                delete\n                            \n                            \n                                    Async\n                                removeRelation\n                            \n                            \n                                save\n                            \n                            \n                                saveMany\n                            \n                            \n                                    Async\n                                setRelation\n                            \n                            \n                                softDelete\n                            \n                            \n                                    Async\n                                unsetRelation\n                            \n                            \n                                update\n                            \n                            \n                                    Async\n                                count\n                            \n                            \n                                find\n                            \n                            \n                                findOne\n                            \n                            \n                                findOneById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    addRelation(relation: RelationParam)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/write.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relation\n                                            \n                                                            RelationParam\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/write.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeRelation(relation: RelationParam)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/write.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relation\n                                            \n                                                            RelationParam\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        save\n                        \n                    \n                \n            \n            \n                \nsave(entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/write.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveMany\n                        \n                    \n                \n            \n            \n                \nsaveMany(entities: T[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/write.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        T[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    setRelation(relation: RelationParam)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/write.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relation\n                                            \n                                                            RelationParam\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        softDelete\n                        \n                    \n                \n            \n            \n                \nsoftDelete(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/write.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        unsetRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    unsetRelation(relation: UnsetRelationParam)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/write.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relation\n                                            \n                                                            UnsetRelationParam\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, entity: QueryDeepPartialEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/write.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                            QueryDeepPartialEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(query: QueryCount)\n                \n            \n\n\n                    \n                        \n                            Inherited from         EntityReadService\n\n                        \n                    \n                    \n                        \n                                Defined in         EntityReadService:33\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        QueryCount\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \nfind(query: QueryMany)\n                \n            \n\n\n                    \n                        \n                            Inherited from         EntityReadService\n\n                        \n                    \n                    \n                        \n                                Defined in         EntityReadService:16\n\n                        \n                    \n\n\n            \n                \n                        Query all entities\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        QueryMany\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(query: QueryOne)\n                \n            \n\n\n                    \n                        \n                            Inherited from         EntityReadService\n\n                        \n                    \n                    \n                        \n                                Defined in         EntityReadService:25\n\n                        \n                    \n\n\n            \n                \n                        Query one entity\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        QueryOne\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneById\n                        \n                    \n                \n            \n            \n                \nfindOneById(id: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         EntityReadService\n\n                        \n                    \n                    \n                        \n                                Defined in         EntityReadService:29\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BaseEntity } from '../entity/base.js';\nimport { QueryDeepPartialEntity } from 'typeorm/query-builder/QueryPartialEntity.js';\nimport { RelationParam, UnsetRelationParam, UpdateResult } from '@puq/type';\nimport { EntityReadService } from './read.js';\n\n/**\n * Write service\n */\nexport class EntityWriteService extends EntityReadService {\n  save(entity: T): Promise {\n    return this.repo.save(entity);\n  }\n\n  saveMany(entities: T[]): Promise {\n    return this.repo.save(entities);\n  }\n\n  update(id: number, entity: QueryDeepPartialEntity) {\n    return this.repo.update(id, entity);\n  }\n\n  delete(id: number) {\n    return this.repo.delete(id);\n  }\n\n  softDelete(id: number) {\n    return this.repo.softDelete(id);\n  }\n\n  async addRelation(relation: RelationParam): Promise {\n    const { id, rid, rn } = relation;\n    await this.repo.createQueryBuilder().relation(rn).of(id).add(rid);\n    return { affected: 1 };\n  }\n\n  async removeRelation(relation: RelationParam): Promise {\n    const { id, rid, rn } = relation;\n    await this.repo.createQueryBuilder().relation(rn).of(id).remove(rid);\n    return { affected: 1 };\n  }\n\n  async setRelation(relation: RelationParam): Promise {\n    const { id, rid, rn } = relation;\n    await this.repo.createQueryBuilder().relation(rn).of(id).set(rid);\n    return { affected: 1 };\n  }\n\n  async unsetRelation(relation: UnsetRelationParam): Promise {\n    const { id, rn } = relation;\n    await this.repo.createQueryBuilder().relation(rn).of(id).set(null);\n    return { affected: 1 };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TableNamingStrategy.html":{"url":"classes/TableNamingStrategy.html","title":"class - TableNamingStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TableNamingStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/factory/naming-strategy.ts\n        \n\n\n            \n                Description\n            \n            \n                Databaes table and column naming strategy\n\n            \n\n            \n                Extends\n            \n            \n                        DefaultNamingStrategy\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                joinColumnName\n                            \n                            \n                                    \n                                joinTableColumnName\n                            \n                            \n                                    \n                                joinTableInverseColumnName\n                            \n                            \n                                    \n                                joinTableName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        joinColumnName\n                        \n                    \n                \n            \n            \n                \n                        \n                    joinColumnName(relationName: string, _referencedColumnName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/factory/naming-strategy.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relationName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                _referencedColumnName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        joinTableColumnName\n                        \n                    \n                \n            \n            \n                \n                        \n                    joinTableColumnName(_tableName: string, _propertyName: string, _columnName?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/factory/naming-strategy.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _tableName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                _propertyName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                _columnName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        joinTableInverseColumnName\n                        \n                    \n                \n            \n            \n                \n                        \n                    joinTableInverseColumnName(_tableName: string, _propertyName: string, _columnName?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/factory/naming-strategy.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _tableName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                _propertyName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                _columnName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        joinTableName\n                        \n                    \n                \n            \n            \n                \n                        \n                    joinTableName(firstTableName: string, secondTableName: string, _firstPropertyName: string, _secondPropertyName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/factory/naming-strategy.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                firstTableName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                secondTableName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                _firstPropertyName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                _secondPropertyName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DefaultNamingStrategy } from 'typeorm';\n/**\n * Databaes table and column naming strategy\n */\nexport class TableNamingStrategy extends DefaultNamingStrategy {\n  override joinTableName(\n    firstTableName: string,\n    secondTableName: string,\n    _firstPropertyName: string,\n    _secondPropertyName: string\n  ): string {\n    return `${firstTableName}_${secondTableName}`;\n  }\n\n  override joinColumnName(\n    relationName: string,\n    _referencedColumnName: string\n  ): string {\n    return relationName;\n  }\n\n  override joinTableColumnName(\n    _tableName: string,\n    _propertyName: string,\n    _columnName?: string\n  ): string {\n    return _tableName;\n  }\n\n  override joinTableInverseColumnName(\n    _tableName: string,\n    _propertyName: string,\n    _columnName?: string\n  ): string {\n    return _tableName;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateResultDto.html":{"url":"classes/UpdateResultDto.html","title":"class - UpdateResultDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateResultDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dto/update.ts\n        \n\n\n            \n                Description\n            \n            \n                Update result\n\n            \n\n\n            \n                Implements\n            \n            \n                        UpdateResult\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                affected\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        affected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', description: 'The number of items affected by the update operation'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/update.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@puq/property';\nimport { UpdateResult } from '@puq/type';\nimport { Exclude } from 'class-transformer';\n\n/**\n * Update result\n */\n@Exclude()\nexport class UpdateResultDto implements UpdateResult {\n  @ApiProperty({\n    type: 'integer',\n    description: 'The number of items affected by the update operation',\n  })\n  affected: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/lib/decorator/column.ts\n            \n            function\n            Column\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/decorator/column.ts\n            \n            function\n            pickDataType\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/decorator/column.ts\n            \n            function\n            pickTransformer\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/decorator/entity.ts\n            \n            function\n            Entity\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/decorator/relation.ts\n            \n            function\n            Relation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/decorator/relation.ts\n            \n            type alias\n            RelationOptions\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/dto/count.ts\n            \n            class\n            CountResultDto\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/lib/dto/delete.ts\n            \n            class\n            DeleteResultDto\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                        src/lib/dto/relation.ts\n            \n            function\n            CreateRelationParamDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/dto/relation.ts\n            \n            function\n            CreateUnsetRelationParamDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/dto/update.ts\n            \n            class\n            UpdateResultDto\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/lib/entity/base.ts\n            \n            class\n            BaseEntity\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                        src/lib/entity/base.ts\n            \n            variable\n            BASE_ENTITY_COLUMNS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/factory/naming-strategy.ts\n            \n            class\n            TableNamingStrategy\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/lib/query/common-query-dto.ts\n            \n            class\n            CommonQueryDto\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                        src/lib/query/create-find-operator.ts\n            \n            function\n            createFindOperator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/query/create-query-count-dto.ts\n            \n            function\n            CreateQueryCountDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/query/create-query-count-dto.ts\n            \n            type alias\n            CreateQueryCountDtoOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/query/create-query-many-dto.ts\n            \n            function\n            CreateQueryManyDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/query/create-query-many-dto.ts\n            \n            type alias\n            QueryManyDtoOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/query/create-query-one-dto.ts\n            \n            function\n            CreateQueryOneDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/query/create-query-one-dto.ts\n            \n            type alias\n            QueryOneDtoOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/query/create-where-option-dto.ts\n            \n            function\n            CreateWhereOptionDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/query/select-transformer.ts\n            \n            function\n            SelectTransformer\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/query/where-query-transformer.ts\n            \n            function\n            WhereQueryTransformer\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/query/where-query-transformer.ts\n            \n            type alias\n            WhereQueryTransformerOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/service/base.ts\n            \n            class\n            BaseEntityService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/service/read.ts\n            \n            class\n            EntityReadService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/lib/service/write.ts\n            \n            class\n            EntityWriteService\n            \n                21 %\n                (3/14)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @puq/property : ^0.0.20\n        \n            @puq/query : ^0.0.20\n        \n            @puq/type : ^0.0.20\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @nestjs/swagger : ^11.0.3\n        \n            @nestjs/common : ^11.0.10\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            reflect-metadata : ^0.2.2\n        \n            typeorm : ^0.3.20\n        \n            better-sqlite3 : ^11.8.1\n        \n            sqlite3 : ^5.1.7\n        \n            pg : ^8.13.3\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Column   (src/.../column.ts)\n                        \n                        \n                            createFindOperator   (src/.../create-find-operator.ts)\n                        \n                        \n                            CreateQueryCountDto   (src/.../create-query-count-dto.ts)\n                        \n                        \n                            CreateQueryManyDto   (src/.../create-query-many-dto.ts)\n                        \n                        \n                            CreateQueryOneDto   (src/.../create-query-one-dto.ts)\n                        \n                        \n                            CreateRelationParamDto   (src/.../relation.ts)\n                        \n                        \n                            CreateUnsetRelationParamDto   (src/.../relation.ts)\n                        \n                        \n                            CreateWhereOptionDto   (src/.../create-where-option-dto.ts)\n                        \n                        \n                            Entity   (src/.../entity.ts)\n                        \n                        \n                            pickDataType   (src/.../column.ts)\n                        \n                        \n                            pickTransformer   (src/.../column.ts)\n                        \n                        \n                            Relation   (src/.../relation.ts)\n                        \n                        \n                            SelectTransformer   (src/.../select-transformer.ts)\n                        \n                        \n                            WhereQueryTransformer   (src/.../where-query-transformer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/decorator/column.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Column\n                        \n                    \n                \n            \n            \n                \nColumn(options: PropertyOptions)\n                \n            \n\n\n\n\n            \n                \n                        Typeorm Column decorator with validation and documentaion capability\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        PropertyOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     PropertyDecorator\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pickDataType\n                        \n                    \n                \n            \n            \n                \npickDataType(options: PropertyOptions)\n                \n            \n\n\n\n\n            \n                \n                        Pick column data type based on provided data type and database driver\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        PropertyOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ColumnType\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pickTransformer\n                        \n                    \n                \n            \n            \n                \npickTransformer(options: PropertyOptions)\n                \n            \n\n\n\n\n            \n                \n                        Pick transformer based on the given data type and database driver\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        PropertyOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValueTransformer | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/query/create-find-operator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createFindOperator\n                        \n                    \n                \n            \n            \n                \ncreateFindOperator(query: WhereOption)\n                \n            \n\n\n\n\n            \n                \n                        Create FindOperator from WhereOption\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        WhereOption\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    WhereOption\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Record>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/query/create-query-count-dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CreateQueryCountDto\n                        \n                    \n                \n            \n            \n                \nCreateQueryCountDto(options: CreateQueryCountDtoOptions)\n                \n            \n\n\n\n\n            \n                \n                        Create a count query dto for the entity\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            CreateQueryCountDtoOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    CreateQueryCountDtoOptions\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Type\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/query/create-query-many-dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CreateQueryManyDto\n                        \n                    \n                \n            \n            \n                \nCreateQueryManyDto(options: QueryManyDtoOptions)\n                \n            \n\n\n\n\n            \n                \n                        Create QueryMany dto\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            QueryManyDtoOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    QueryManyDtoOptions\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Type>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/query/create-query-one-dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CreateQueryOneDto\n                        \n                    \n                \n            \n            \n                \nCreateQueryOneDto(options: QueryOneDtoOptions)\n                \n            \n\n\n\n\n            \n                \n                        Create QueryOne dto\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            QueryOneDtoOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    QueryOneDtoOptions\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Type>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/dto/relation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CreateRelationParamDto\n                        \n                    \n                \n            \n            \n                \nCreateRelationParamDto(relations: Keys)\n                \n            \n\n\n\n\n            \n                \n                        Create RelationParam dto for the entity\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                relations\n                                            \n                                                        Keys\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    relation names\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Type\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CreateUnsetRelationParamDto\n                        \n                    \n                \n            \n            \n                \nCreateUnsetRelationParamDto(relations: Keys)\n                \n            \n\n\n\n\n            \n                \n                        Create UnsetRelationParam dto for the entity\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                relations\n                                            \n                                                        Keys\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    relation names\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Type\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/query/create-where-option-dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CreateWhereOptionDto\n                        \n                    \n                \n            \n            \n                \nCreateWhereOptionDto(columns: Keys)\n                \n            \n\n\n\n\n            \n                \n                        Create WhereOption dto for the entity\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                columns\n                                            \n                                                        Keys\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    queriable columns\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Type>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/decorator/entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Entity\n                        \n                    \n                \n            \n            \n                \nEntity(uniques?)\n                \n            \n\n\n\n\n            \n                \n                        Typeorm entity decorator with transformer capability\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                uniques\n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    Composite unique constraint must be set on entity classes and must specify entity's fields to be unique\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ClassDecorator\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/decorator/relation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Relation\n                        \n                    \n                \n            \n            \n                \nRelation(type: RelationType, target, options: RelationOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                type\n                                            \n                                                            RelationType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Relation type\n\n                                            \n                                        \n                                        \n                                                target\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Function that returns the relation entity class\n\n                                            \n                                        \n                                        \n                                                options\n                                            \n                                                            RelationOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    RelationOptions typeorm relation options\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     PropertyDecorator\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/query/select-transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SelectTransformer\n                        \n                    \n                \n            \n            \n                \nSelectTransformer()\n                \n            \n\n\n\n\n            \n                \n                        Transform the select query param into string array\n\n\n                        \n                            Returns :     PropertyDecorator\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/query/where-query-transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        WhereQueryTransformer\n                        \n                    \n                \n            \n            \n                \nWhereQueryTransformer(columns: Keys)\n                \n            \n\n\n\n\n            \n                \n                        Parse where-query string into typeorm where object.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                columns\n                                            \n                                                        Keys\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     PropertyDecorator\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n@puq/orm\nSummary\nDatabase entity development is streamlined through the integration of intuitive and widely adopted implementations within decorators. These decorators are paired with class-validator, class-transformer, and @nestjs/swagger, enhancing efficiency in the development process. This approach achieves a minimum reduction of 60% in both code volume and associated errors.\nInstall\nExample :  pnpm add @puq/ormSQLite\n\nSQLite does not support array or object data types. To accommodate this limitation, data must be transformed into a string format.\n\nPostgres Datasource\nTo optimize datasource performance, implement the following configuration settings:\n\npoolSize: Set to 50. This defines the maximum number of connections allowed in the pool, ensuring efficient resource utilization while accommodating peak demand.\nmin: Set to 10. This specifies the minimum number of connections maintained in the pool, keeping a baseline of readily available connections to reduce latency during low-traffic periods.\nmax: Set to 50. This establishes the upper limit of open connections, balancing system performance with resource availability to prevent overloading.\nidleTimeoutMillis: Configure to 30,000 milliseconds. This determines the duration an idle connection remains open before being closed, minimizing unnecessary resource consumption during periods of inactivity.\nconnectionTimeoutMillis: Configure to 2,000 milliseconds. This sets the maximum time allowed to establish a connection, enhancing application responsiveness by preventing prolonged delays.\n\nPostgres Server\nAdjust the PostgreSQL server configuration file (postgres.conf) with the following settings:\n\nmax_connections: Set to 200 to accommodate both application and administrative connections, ensuring sufficient capacity.\nshared_buffers: Allocate 25-40% of the server's RAM for optimal performance, configured to 4GB.\nwork_mem: Define the memory allocation per query or sort operation, set to 16MB to enhance query efficiency.\n\nNumbers\n\nThe number data type is stored as a string (numeric) to ensure the preservation of precision.\nThe number value is not converted to a JavaScript number to avoid disrupting query operations.\n\nTypeorm Column Transformer\n\nRefrain from using TypeORM column transformers, as they may interfere with query operations. Instead, implement transformations within the data transfer layer.\n\nHashing and encrypion\n\nHashing should be done in database layer. Typeorom column transformer is safe to use\nEncryption is done in controller layer\nFor handling encrypted data, implement a dedicated data transfer object (DTO) class and apply it subsequent to the execution of the initial DTO class within the controller\n\nFunding\nThank you for using @puq/orm It's an open-source project, and maintaining it takes time and effort. If you find this library useful, please consider supporting its ongoing development. Your contributions help ensure that the project stays up-to-date, secure, and well-maintained.\nInstant Funding\nYour funding will go toward\n\nBug fixes and updates to ensure compatibility with the latest versions of dependencies.\nNew features that will make the library even more powerful.\nDocumentation improvements to help users get the most out of [Your Library Name].\nGeneral maintenance to keep the library running smoothly and securely.\n\nContact to the developer: [robert.brightline@gmail.com]\nSupport the developer\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.20\n        \n            Description : TypeORM decorators with commonly required capabilities\n        \n            Keywords : puq, orm\n        \n            Homepage : https://rbrightline.github.io/puq/orm\n        \n            Bugs : https://rbrightline.github.io\n        \n            License : MIT\n        \n            Repository : https://github.com/rbrightline/puq/tree/main\n        \n            Author : Robert Brightline\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTASKS\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CreateQueryCountDtoOptions   (src/.../create-query-count-dto.ts)\n                        \n                        \n                            QueryManyDtoOptions   (src/.../create-query-many-dto.ts)\n                        \n                        \n                            QueryOneDtoOptions   (src/.../create-query-one-dto.ts)\n                        \n                        \n                            RelationOptions   (src/.../relation.ts)\n                        \n                        \n                            WhereQueryTransformerOptions   (src/.../where-query-transformer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/query/create-query-count-dto.ts\n    \n    \n        \n            \n                \n                    \n                    CreateQueryCountDtoOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/lib/query/create-query-many-dto.ts\n    \n    \n        \n            \n                \n                    \n                    QueryManyDtoOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/lib/query/create-query-one-dto.ts\n    \n    \n        \n            \n                \n                    \n                    QueryOneDtoOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/lib/decorator/relation.ts\n    \n    \n        \n            \n                \n                    \n                    RelationOptions\n                \n            \n            \n                \n                    Relation decorator options\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/lib/query/where-query-transformer.ts\n    \n    \n        \n            \n                \n                    \n                    WhereQueryTransformerOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BASE_ENTITY_COLUMNS   (src/.../base.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/entity/base.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BASE_ENTITY_COLUMNS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.keys(new BaseEntity())\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
