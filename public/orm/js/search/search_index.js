var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/entities/AttributeRelation.html",[0,0.242,1,0.928]],["body/entities/AttributeRelation.html",[0,0.39,1,1.351,2,0.666,3,0.275,4,0.245,5,0.215,6,2.256,7,1.316,8,0.187,9,0.494,10,1.534,11,1.351,12,0.396,13,0.029,14,1.417,15,0.494,16,2.286,17,2.912,18,0.356,19,2.642,20,2.642,21,0.472,22,0.597,23,0.597,24,0.41,25,1.587,26,1.435,27,0.831,28,1.016,29,0.895,30,0.575,31,0.32,32,1.23,33,1.23,34,1.332,35,3.391,36,1.162,37,1.23,38,1.584,39,1.23,40,1.301,41,0.717,42,0.898,43,0.843,44,1.425,45,1.534,46,0.898,47,1.435,48,0.898,49,0.528,50,1.043,51,1.685,52,1.705,53,1.685,54,1.565,55,1.534,56,1.123,57,1.301,58,1.685,59,1.534,60,0.895,61,0.895,62,0.895,63,0.016,64,0.016]],["title/entities/AttributeRelation-1.html",[0,0.204,1,0.783,65,1.437]],["body/entities/AttributeRelation-1.html",[0,0.398,1,1.387,2,0.705,3,0.291,4,0.259,5,0.228,8,0.198,9,0.515,10,1.584,11,1.387,12,0.396,13,0.029,14,1.426,15,0.515,18,0.371,21,0.487,22,0.621,23,0.621,24,0.434,25,1.602,26,1.468,27,0.88,28,1.036,29,0.947,30,0.586,31,0.326,32,1.27,33,1.27,34,1.362,36,1.193,37,1.27,38,1.608,39,1.27,40,1.356,41,0.759,42,0.935,43,0.865,44,1.472,45,1.584,46,0.935,47,1.468,48,0.935,49,0.559,50,1.087,51,1.73,52,1.732,53,1.73,54,1.607,55,1.584,56,1.17,57,1.356,58,1.73,59,1.584,60,0.947,61,0.947,62,0.947,63,0.017,64,0.017,66,1.392,67,2.382,68,2.797,69,2.797]],["title/classes/BaseEntity.html",[28,0.63,31,0.198]],["body/classes/BaseEntity.html",[0,0.402,2,1.2,3,0.375,4,0.333,5,0.293,8,0.254,9,0.613,12,0.374,13,0.029,15,0.731,18,0.526,21,0.592,23,0.883,24,0.558,28,0.984,30,0.496,31,0.209,34,1.433,43,0.609,50,1.73,63,0.02,64,0.02,70,0.778,71,2.647,72,1.414,73,4.765,74,3.086,75,4.973,76,4.973,77,4.973,78,4.006,79,3.738,80,2.373,81,5.343,82,2.073,83,3.598,84,3.598,85,3.598,86,3.598,87,3.598,88,3.598,89,3.025,90,3.025,91,3.598,92,1.414,93,4.765,94,4.765,95,4.765,96,1.526,97,3.598,98,3.598,99,3.025,100,2.647,101,3.025]],["title/classes/BaseEntityService.html",[31,0.198,102,2.247]],["body/classes/BaseEntityService.html",[3,0.491,4,0.436,5,0.384,12,0.284,13,0.029,18,0.436,21,0.588,28,0.868,30,0.491,31,0.273,63,0.024,64,0.024,70,1.019,96,1.999,102,3.714,103,3.962,104,4.713,105,4.713,106,5.274,107,4.713,108,2.803,109,2.557,110,1.999,111,5.65,112,3.467,113,4.713,114,4.713]],["title/classes/BaseIdEntity.html",[31,0.198,79,2.247]],["body/classes/BaseIdEntity.html",[3,0.482,4,0.429,5,0.377,8,0.327,9,0.719,12,0.337,13,0.029,15,0.596,18,0.429,21,0.582,23,0.867,24,0.719,30,0.482,31,0.269,42,1.082,43,0.947,63,0.024,64,0.024,70,1.001,74,3.258,79,3.674,82,1.688,89,3.893,96,1.964,115,4.699,116,3.893,117,4.631,118,5.59]],["title/classes/BaseView.html",[31,0.198,119,2.516]],["body/classes/BaseView.html",[3,0.428,4,0.381,5,0.335,8,0.291,9,0.668,12,0.39,13,0.029,15,0.769,18,0.554,21,0.428,27,1.294,30,0.428,31,0.239,42,1.214,43,0.88,50,1.807,63,0.022,64,0.022,70,0.889,74,3.09,75,4.788,76,4.788,77,4.788,119,3.822,120,3.457,121,5.983,122,4.113,123,4.113,124,4.113,125,4.113,126,4.539]],["title/classes/CommonQueryDto.html",[31,0.198,127,2.516]],["body/classes/CommonQueryDto.html",[3,0.446,4,0.396,5,0.348,8,0.302,9,0.685,12,0.321,13,0.028,15,0.55,18,0.396,21,0.446,22,0.942,23,0.827,24,0.664,30,0.446,31,0.248,44,1.909,49,1.064,52,1.557,54,1.675,63,0.023,64,0.023,70,0.925,72,2.279,82,1.56,110,2.259,127,3.919,128,4.478,129,2.785,130,2.813,131,5.327,132,5.8,133,5.327,134,5.327,135,5.327,136,3.919,137,5.327,138,4.28]],["title/classes/CountResultDto.html",[31,0.198,139,2.516]],["body/classes/CountResultDto.html",[3,0.452,4,0.402,5,0.353,8,0.307,9,0.691,12,0.324,13,0.029,15,0.558,18,0.402,21,0.559,22,0.834,23,0.834,24,0.673,30,0.452,31,0.252,42,1.255,43,1.033,49,1.073,63,0.023,64,0.023,70,0.938,72,2.293,80,2.675,82,1.582,92,1.705,129,2.465,139,3.952,140,4.516,141,2.852,142,3.401,143,3.952,144,4.905,145,5.372,146,3.192]],["title/classes/DeleteResultDto.html",[31,0.198,147,2.516]],["body/classes/DeleteResultDto.html",[3,0.447,4,0.397,5,0.349,8,0.303,9,0.686,12,0.322,13,0.029,15,0.552,18,0.397,21,0.556,22,0.943,23,0.828,24,0.666,30,0.447,31,0.249,42,1.246,43,1.029,49,1.066,63,0.023,64,0.023,70,0.928,72,2.282,80,2.657,82,1.564,92,1.686,141,2.821,143,3.925,146,3.157,147,3.925,148,4.485,149,5.107,150,5.807,151,4.597,152,3.925]],["title/classes/EntityReadService.html",[31,0.198,153,2.247]],["body/classes/EntityReadService.html",[0,0.322,2,1.149,3,0.351,4,0.312,5,0.274,8,0.238,12,0.334,13,0.029,18,0.513,21,0.603,28,0.62,30,0.351,31,0.195,34,1.149,36,1.065,43,0.875,63,0.019,64,0.019,70,0.728,72,1.324,74,2.474,92,1.324,96,1.429,102,3.397,108,3.293,109,3.005,110,2.349,112,2.478,129,2.847,142,2.804,144,2.832,153,2.997,154,2.832,155,4.559,156,3.833,157,3.354,158,4.344,159,2.711,160,3.833,161,3.833,162,3.833,163,4.655,164,3.368,165,3.803,166,3.833,167,3.833,168,4.074,169,3.368,170,3.833,171,4.257,172,3.368,173,3.833,174,3.368,175,4.559,176,2.832,177,3.368,178,4.074,179,3.368,180,2.478,181,3.368,182,3.368,183,3.368,184,2.832,185,3.368]],["title/classes/EntityWriteService.html",[31,0.198,186,2.516]],["body/classes/EntityWriteService.html",[0,0.37,2,0.868,3,0.237,4,0.211,5,0.186,8,0.161,12,0.366,13,0.029,18,0.562,21,0.482,26,1.517,28,0.42,30,0.237,31,0.132,34,0.868,36,0.533,43,1.003,63,0.015,64,0.015,65,2.305,70,0.493,72,0.896,74,3.033,90,3.892,92,0.896,99,3.892,108,3.612,109,3.296,110,2.576,112,1.678,129,2.281,142,1.87,149,2.897,151,3.406,153,3.568,156,2.897,157,2.535,158,5.157,159,2.049,160,2.897,161,2.897,162,1.917,163,2.897,165,3.992,166,5.106,167,1.917,168,2.535,170,1.917,171,2.535,173,1.917,178,4.209,184,3.892,186,2.535,187,1.917,188,3.446,189,3.446,190,3.446,191,3.446,192,3.446,193,3.446,194,3.446,195,3.446,196,2.897,197,3.446,198,4.902,199,2.28,200,3.446,201,2.28,202,3.446,203,2.28,204,3.446,205,5.229,206,2.28,207,3.446,208,2.28,209,3.446,210,2.28,211,3.446,212,2.28,213,3.446,214,3.892,215,2.28,216,3.446,217,4.63,218,2.28,219,2.28,220,2.28,221,2.28,222,2.28,223,2.28,224,2.28,225,1.917,226,2.28,227,2.28,228,2.28,229,2.28,230,2.28,231,2.28,232,4.154,233,4.63,234,2.28,235,2.28,236,2.28,237,2.28]],["title/entities/ManyRelation.html",[0,0.242,37,0.928]],["body/entities/ManyRelation.html",[0,0.393,1,1.247,2,0.682,3,0.282,4,0.25,5,0.22,6,1.947,7,1.347,8,0.191,9,0.503,10,0.916,11,1.062,12,0.395,13,0.029,14,1.412,15,0.348,16,1.609,17,2.903,18,0.25,21,0.478,22,0.607,23,0.607,24,0.42,25,1.594,26,1.449,27,0.851,28,1.025,29,0.916,30,0.579,31,0.323,32,1.247,33,1.247,34,1.345,35,3.405,36,1.175,37,1.366,38,1.649,39,1.247,40,1.324,41,0.734,42,0.913,43,0.852,44,1.445,45,1.555,46,0.913,47,1.449,48,0.913,49,0.541,50,1.062,51,1.703,52,1.716,53,1.703,54,1.583,55,1.555,56,1.143,57,1.324,58,1.703,59,1.555,60,0.916,61,0.916,62,0.916,63,0.017,64,0.017,238,2.706]],["title/entities/ManyRelation-1.html",[0,0.204,37,0.783,65,1.437]],["body/entities/ManyRelation-1.html",[0,0.4,1,1.284,2,0.719,3,0.297,4,0.264,5,0.232,8,0.202,9,0.522,10,0.966,11,1.102,12,0.396,13,0.029,14,1.42,15,0.367,18,0.264,21,0.493,22,0.63,23,0.63,24,0.443,25,1.608,26,1.479,27,0.897,28,1.043,29,0.966,30,0.59,31,0.328,32,1.284,33,1.284,34,1.372,36,1.204,37,1.399,38,1.668,39,1.284,40,1.375,41,0.774,42,0.949,43,0.873,44,1.488,45,1.601,46,0.949,47,1.479,48,0.949,49,0.57,50,1.102,51,1.745,52,1.741,53,1.745,54,1.621,55,1.601,56,1.187,57,1.375,58,1.745,59,1.601,60,0.966,61,0.966,62,0.966,63,0.017,64,0.017,66,1.42,67,1.696,239,2.852]],["title/entities/OneRelation.html",[0,0.242,33,0.928]],["body/entities/OneRelation.html",[0,0.393,1,1.247,2,0.682,3,0.282,4,0.25,5,0.22,6,1.947,7,1.347,8,0.191,9,0.503,10,0.916,11,1.062,12,0.395,13,0.029,14,1.412,15,0.348,16,1.609,17,2.903,18,0.25,21,0.478,22,0.607,23,0.607,24,0.42,25,1.594,26,1.449,27,0.851,28,1.025,29,0.916,30,0.579,31,0.323,32,1.247,33,1.366,34,1.345,35,3.405,36,1.299,37,1.247,38,1.594,39,1.247,40,1.324,41,0.734,42,0.913,43,0.852,44,1.445,45,1.555,46,0.913,47,1.449,48,0.913,49,0.541,50,1.062,51,1.703,52,1.716,53,1.703,54,1.583,55,1.555,56,1.143,57,1.324,58,1.703,59,1.555,60,0.916,61,0.916,62,0.916,63,0.017,64,0.017,240,2.706]],["title/entities/OneRelation-1.html",[0,0.204,33,0.783,65,1.437]],["body/entities/OneRelation-1.html",[0,0.4,1,1.284,2,0.719,3,0.297,4,0.264,5,0.232,8,0.202,9,0.522,10,0.966,11,1.102,12,0.396,13,0.029,14,1.42,15,0.367,18,0.264,21,0.493,22,0.63,23,0.63,24,0.443,25,1.608,26,1.479,27,0.897,28,1.043,29,0.966,30,0.59,31,0.328,32,1.284,33,1.399,34,1.372,36,1.323,37,1.284,38,1.617,39,1.284,40,1.375,41,0.774,42,0.949,43,0.873,44,1.488,45,1.601,46,0.949,47,1.479,48,0.949,49,0.57,50,1.102,51,1.745,52,1.741,53,1.745,54,1.621,55,1.601,56,1.187,57,1.375,58,1.745,59,1.601,60,0.966,61,0.966,62,0.966,63,0.017,64,0.017,66,1.42,67,1.696,241,2.852]],["title/entities/OwnerRelation.html",[0,0.242,39,0.928]],["body/entities/OwnerRelation.html",[0,0.393,1,1.247,2,0.682,3,0.282,4,0.25,5,0.22,6,1.947,7,1.347,8,0.191,9,0.503,10,0.916,11,1.062,12,0.395,13,0.029,14,1.412,15,0.348,16,1.609,17,2.903,18,0.25,21,0.478,22,0.607,23,0.607,24,0.42,25,1.594,26,1.449,27,0.851,28,1.025,29,0.916,30,0.579,31,0.323,32,1.247,33,1.247,34,1.345,35,3.405,36,1.175,37,1.247,38,1.594,39,1.366,40,1.703,41,0.734,42,0.913,43,0.852,44,1.445,45,1.555,46,0.913,47,1.449,48,0.913,49,0.541,50,1.062,51,1.703,52,1.716,53,1.703,54,1.583,55,1.555,56,1.143,57,1.324,58,1.703,59,1.555,60,0.916,61,0.916,62,0.916,63,0.017,64,0.017,242,2.706]],["title/entities/OwnerRelation-1.html",[0,0.204,39,0.783,65,1.437]],["body/entities/OwnerRelation-1.html",[0,0.4,1,1.284,2,0.719,3,0.297,4,0.264,5,0.232,8,0.202,9,0.522,10,0.966,11,1.102,12,0.396,13,0.029,14,1.42,15,0.367,18,0.264,21,0.493,22,0.63,23,0.63,24,0.443,25,1.608,26,1.479,27,0.897,28,1.043,29,0.966,30,0.59,31,0.328,32,1.284,33,1.284,34,1.372,36,1.204,37,1.284,38,1.617,39,1.399,40,1.745,41,0.774,42,0.949,43,0.873,44,1.488,45,1.601,46,0.949,47,1.479,48,0.949,49,0.57,50,1.102,51,1.745,52,1.741,53,1.745,54,1.621,55,1.601,56,1.187,57,1.375,58,1.745,59,1.601,60,0.966,61,0.966,62,0.966,63,0.017,64,0.017,66,1.42,67,1.696,243,2.852]],["title/classes/SingleValidationErrorDto.html",[31,0.198,244,2.033]],["body/classes/SingleValidationErrorDto.html",[3,0.342,4,0.304,5,0.267,8,0.232,9,0.576,12,0.4,13,0.029,14,1.465,15,0.576,18,0.415,21,0.467,22,0.85,23,1.032,24,0.51,30,0.531,31,0.296,46,1.192,47,1.385,48,0.767,49,0.656,63,0.019,64,0.019,70,0.71,80,2.729,82,1.634,92,1.291,110,2.325,244,3.259,245,3.353,246,2.159,247,3.753,248,3.753,249,3.411,250,3.284,251,3.284,252,3.297,253,3.297,254,2.159,255,2.159,256,2.416,257,2.416,258,2.416,259,2.416,260,2.416,261,2.416,262,2.416,263,2.416,264,2.416,265,2.416,266,1.953,267,2.159]],["title/classes/TableNamingStrategy.html",[31,0.198,268,2.516]],["body/classes/TableNamingStrategy.html",[3,0.334,4,0.297,5,0.261,8,0.226,12,0.327,13,0.029,14,1.484,18,0.502,21,0.334,25,1.11,30,0.334,31,0.186,34,1.11,63,0.019,64,0.019,70,0.693,72,1.259,96,1.359,108,3.225,109,2.943,110,2.301,157,3.242,165,3.565,178,3.99,268,3.242,269,4.78,270,2.694,271,4.407,272,3.704,273,4.407,274,4.407,275,5.036,276,5.036,277,5.036,278,5.036,279,5.036,280,3.205,281,5.036,282,3.205,283,5.036,284,3.205,285,5.876,286,5.876,287,3.205,288,5.876,289,3.704,290,3.205,291,3.205,292,3.205,293,5.036,294,5.036,295,5.036,296,3.205,297,4.407,298,5.424,299,3.205]],["title/entities/TestEntity.html",[0,0.242,41,0.928]],["body/entities/TestEntity.html",[0,0.351,1,1.273,2,0.505,3,0.209,4,0.185,5,0.163,6,2.941,7,0.997,8,0.142,9,0.401,10,0.678,11,0.847,12,0.399,13,0.029,14,1.38,15,0.75,16,3.189,17,2.889,18,0.539,21,0.399,22,0.484,23,0.484,24,0.311,25,1.506,26,1.273,27,0.63,28,0.915,29,0.678,30,0.517,31,0.288,32,1.273,33,1.273,34,1.181,35,3.205,36,1.253,37,1.273,38,1.654,39,1.273,40,1.465,41,0.847,42,1.095,43,0.933,44,1.631,45,1.681,46,1.095,47,1.529,48,1.095,49,0.623,50,1.273,51,1.815,52,1.78,53,1.815,54,1.687,55,1.681,56,1.264,57,1.465,58,1.815,59,1.681,60,1.056,61,0.678,62,1.297,63,0.013,64,0.013,300,2.051,301,2.003,302,3.637,303,2.003,304,2.003,305,2.003,306,2.003,307,2.003,308,2.003,309,2.003,310,2.003,311,2.003,312,2.003,313,2.003]],["title/entities/TestEntity-1.html",[0,0.204,41,0.783,65,1.437]],["body/entities/TestEntity-1.html",[0,0.361,1,1.316,2,0.542,3,0.224,4,0.199,5,0.175,8,0.152,9,0.424,10,0.729,11,0.895,12,0.395,13,0.029,14,1.393,15,0.762,18,0.549,21,0.418,22,0.512,23,0.512,24,0.334,25,1.528,26,1.316,27,0.677,28,0.942,29,0.729,30,0.532,31,0.297,32,1.316,33,1.316,34,1.221,36,1.282,37,1.316,38,1.676,39,1.316,40,1.522,41,0.895,42,1.132,43,0.953,44,1.674,45,1.731,46,1.132,47,1.559,48,1.132,49,0.659,50,1.316,51,1.859,52,1.804,53,1.859,54,1.727,55,1.731,56,1.314,57,1.522,58,1.859,59,1.731,60,1.117,61,0.729,62,1.358,63,0.014,64,0.014,66,1.072,67,3.265,300,2.168,302,3.779,314,2.153,315,2.153,316,2.153,317,2.153,318,2.153,319,2.153,320,2.153,321,2.153,322,2.153,323,2.153,324,2.153,325,2.153]],["title/classes/TestObject.html",[31,0.198,32,0.928]],["body/classes/TestObject.html",[0,0.394,1,1.249,3,0.283,4,0.251,5,0.221,6,1.952,7,1.352,8,0.192,9,0.504,10,0.919,11,1.368,12,0.394,13,0.029,14,1.412,15,0.349,17,2.882,18,0.251,21,0.479,22,0.608,23,0.608,24,0.421,25,1.595,26,1.451,27,0.854,28,1.026,29,0.919,30,0.58,31,0.323,32,1.368,33,1.249,34,1.346,35,3.407,36,1.177,37,1.249,38,1.596,39,1.249,40,1.327,41,0.737,42,0.916,43,0.853,44,1.447,45,1.558,46,0.916,47,1.451,48,0.916,49,0.543,50,1.064,51,1.706,52,1.718,53,1.706,54,1.585,55,1.558,56,1.146,57,1.327,58,1.706,59,1.558,60,0.919,61,0.919,62,0.919,63,0.017,64,0.017,70,0.587,82,0.99,326,2.715]],["title/classes/TestObject-1.html",[31,0.167,32,0.783,65,1.437]],["body/classes/TestObject-1.html",[0,0.4,1,1.284,3,0.297,4,0.264,5,0.232,8,0.202,9,0.522,10,0.966,11,1.399,12,0.396,13,0.029,14,1.42,15,0.367,18,0.264,21,0.493,22,0.63,23,0.63,24,0.443,25,1.608,26,1.479,27,0.897,28,1.043,29,0.966,30,0.59,31,0.328,32,1.399,33,1.284,34,1.372,36,1.204,37,1.284,38,1.617,39,1.284,40,1.375,41,0.774,42,0.949,43,0.873,44,1.488,45,1.601,46,0.949,47,1.479,48,0.949,49,0.57,50,1.102,51,1.745,52,1.741,53,1.745,54,1.621,55,1.601,56,1.187,57,1.375,58,1.745,59,1.601,60,0.966,61,0.966,62,0.966,63,0.017,64,0.017,66,1.42,70,0.617,82,1.04,327,2.852]],["title/classes/UpdateResultDto.html",[31,0.198,328,2.516]],["body/classes/UpdateResultDto.html",[3,0.449,4,0.399,5,0.351,8,0.305,9,0.689,12,0.323,13,0.029,15,0.555,18,0.399,21,0.557,22,0.831,23,0.831,24,0.67,30,0.449,31,0.25,42,1.251,43,1.031,49,1.07,63,0.023,64,0.023,70,0.933,72,2.287,80,2.666,82,1.573,92,1.695,141,2.836,143,3.939,146,3.174,151,4.604,152,3.939,196,5.117,225,4.893,328,3.939,329,4.501]],["title/classes/ValidationConstraintsDto.html",[31,0.198,249,2.033]],["body/classes/ValidationConstraintsDto.html",[3,0.267,4,0.237,5,0.209,8,0.181,9,0.483,12,0.4,13,0.029,14,1.473,15,0.791,18,0.57,21,0.391,22,0.761,23,0.992,24,0.397,30,0.463,31,0.258,46,0.878,47,1.02,48,0.598,49,0.512,63,0.016,64,0.016,70,0.554,80,2.441,82,2.243,92,1.006,110,2.788,244,2.647,245,4.084,246,1.683,247,2.764,248,1.884,249,2.916,252,3.274,253,2.764,254,2.925,255,2.925,256,3.274,257,3.274,258,3.274,259,3.274,260,3.274,261,3.274,262,3.274,263,3.274,264,3.274,265,3.274,266,1.523,267,1.683,330,2.561,331,2.561,332,2.561,333,2.561,334,2.561,335,2.561,336,2.561,337,2.561,338,2.561,339,2.561,340,2.561,341,2.561]],["title/classes/ValidationErrorDto.html",[31,0.198,266,2.033]],["body/classes/ValidationErrorDto.html",[3,0.354,4,0.314,5,0.277,8,0.24,9,0.59,12,0.4,13,0.029,14,1.464,15,0.437,18,0.314,21,0.477,22,0.862,23,1.029,24,0.527,30,0.54,31,0.301,46,1.071,47,1.245,48,1.071,49,0.916,63,0.019,64,0.019,70,0.735,80,2.767,82,1.239,92,1.335,110,1.945,244,3.305,245,3.014,246,2.233,247,3.373,248,2.499,249,3.087,252,3.373,253,3.819,254,2.233,255,2.233,256,2.499,257,2.499,258,2.499,259,2.499,260,2.499,261,2.499,262,2.499,263,2.499,264,2.499,265,2.499,266,2.727,267,3.412,300,2.233,342,3.397]],["title/coverage.html",[343,3.872]],["body/coverage.html",[0,0.425,1,0.985,5,0.199,6,2.671,7,2.671,12,0.309,13,0.029,25,0.914,26,1.175,28,0.45,31,0.366,32,0.985,33,0.985,36,0.847,37,0.985,38,0.985,39,0.985,41,0.985,63,0.015,64,0.015,66,2.671,71,2.669,79,1.605,100,1.797,102,1.605,103,2.053,115,2.053,116,2.053,119,1.797,120,2.053,126,1.797,127,1.797,128,2.053,129,2.675,130,3.899,139,1.797,140,2.053,141,2.845,142,1.969,147,1.797,148,2.053,153,1.605,154,2.053,159,1.452,180,2.669,186,1.797,187,2.053,244,1.452,245,2.845,246,2.845,249,1.452,266,1.452,268,1.797,269,2.053,270,2.053,272,2.053,328,1.797,329,2.053,343,2.053,344,1.605,345,2.442,346,2.442,347,3.05,348,2.053,349,5.303,350,2.053,351,6.308,352,6.308,353,3.525,354,2.053,355,2.053,356,2.053,357,2.053,358,3.05,359,2.053,360,2.053,361,2.053,362,4.028,363,4.791,364,3.05,365,2.053,366,2.053,367,2.053,368,6.517,369,2.442,370,2.442,371,5.12,372,3.628,373,3.628,374,2.442,375,6.264,376,4.198,377,2.053,378,2.053,379,2.053,380,4.791,381,1.797,382,2.053,383,1.797,384,2.053,385,1.797,386,2.053,387,2.053,388,2.053,389,2.053,390,2.669,391,2.053,392,2.053,393,2.053,394,2.442,395,2.442,396,2.442,397,2.442,398,2.053,399,2.442]],["title/dependencies.html",[400,2.426,401,3.013]],["body/dependencies.html",[13,0.029,24,0.736,31,0.329,63,0.024,64,0.024,92,1.863,96,2.011,176,3.986,401,4.172,402,4.742,403,5.284,404,4.742,405,4.742,406,4.742,407,3.986,408,4.742,409,3.488,410,4.742,411,3.986,412,4.742,413,4.742,414,4.742,415,4.742,416,4.742]],["title/miscellaneous/functions.html",[417,1.566,418,3.443]],["body/miscellaneous/functions.html",[0,0.381,8,0.143,11,0.551,12,0.385,13,0.028,14,0.681,17,0.931,18,0.188,22,0.775,23,0.489,25,1.258,26,1.534,28,0.374,31,0.253,36,0.736,38,0.855,46,0.474,48,0.736,52,0.593,56,0.593,63,0.013,64,0.013,70,0.439,72,2.328,74,1.101,78,3.662,96,2.001,108,3.599,109,3.284,110,2.567,126,2.318,129,2.75,130,3.842,136,1.493,142,2.096,159,1.874,165,4.014,168,1.493,171,1.493,180,3.47,198,1.706,214,1.706,289,1.706,300,1.334,344,2.071,347,2.649,348,2.649,349,1.706,350,2.649,353,3.673,354,2.649,355,1.706,356,1.706,357,1.706,358,2.649,359,2.649,360,2.649,361,2.649,364,2.649,365,2.649,366,2.649,367,2.649,376,3.47,377,2.649,378,2.649,379,2.649,381,2.842,382,2.649,383,2.842,384,2.649,385,2.842,386,2.649,387,2.649,388,1.706,389,3.248,390,1.493,391,2.649,409,2.318,417,1.101,418,1.706,419,2.029,420,4.379,421,2.029,422,3.151,423,2.029,424,2.029,425,3.151,426,1.706,427,2.029,428,5.756,429,3.832,430,1.493,431,2.029,432,5.846,433,3.151,434,5.385,435,5.385,436,2.029,437,4.717,438,5.21,439,2.029,440,2.029,441,2.029,442,2.029,443,2.029,444,2.029,445,5.385,446,3.151,447,3.151,448,2.029,449,2.029,450,2.029,451,2.029,452,3.151,453,2.029,454,2.029,455,3.151,456,2.029,457,2.029,458,2.029,459,3.151,460,4.356,461,2.029,462,2.029,463,2.029,464,3.151,465,3.248,466,2.318,467,3.151,468,2.029,469,2.029,470,2.029,471,1.706,472,2.029,473,2.649,474,2.029,475,2.029,476,2.029,477,1.706,478,2.029,479,2.029,480,2.029,481,3.151,482,2.029,483,3.864,484,2.029,485,2.029,486,2.029,487,2.029,488,2.029,489,3.151,490,2.029,491,2.029,492,3.151,493,2.029,494,2.029,495,2.029,496,2.029,497,2.029,498,2.029,499,2.029,500,2.029,501,2.029]],["title/index.html",[8,0.204,502,2.426,503,2.426]],["body/index.html",[0,0.253,2,0.604,4,0.222,5,0.195,11,0.651,12,0.145,13,0.018,14,0.774,15,0.611,17,1.1,22,0.664,25,1.079,31,0.275,43,0.86,46,0.836,48,0.56,50,0.651,56,1.485,63,0.015,64,0.015,96,1.816,109,1.301,129,2.179,152,1.764,159,1.426,254,1.576,255,1.576,267,1.576,344,2.814,362,3.009,393,2.016,398,2.016,401,1.764,407,2.016,409,3.15,411,2.016,429,1.764,430,1.764,465,4.479,466,3.15,471,3.009,473,2.016,477,2.016,504,3.579,505,2.398,506,2.016,507,2.016,508,2.016,509,2.016,510,2.016,511,2.016,512,3.009,513,3.992,514,2.016,515,3.992,516,2.016,517,2.016,518,2.016,519,2.016,520,2.016,521,2.016,522,3.6,523,2.016,524,4.282,525,2.398,526,2.398,527,2.398,528,2.398,529,2.398,530,2.398,531,2.398,532,2.398,533,3.579,534,3.579,535,2.398,536,2.398,537,2.398,538,3.579,539,2.398,540,3.579,541,2.398,542,2.398,543,2.398,544,2.398,545,2.398,546,2.398,547,2.398,548,2.398,549,3.579,550,2.398,551,2.398,552,2.398,553,3.579,554,3.579,555,2.398,556,4.282,557,4.282,558,3.579,559,3.579,560,3.579,561,2.398,562,2.398,563,3.579,564,5.08,565,3.579,566,3.579,567,3.579,568,2.398,569,4.282,570,2.398,571,2.398,572,2.398,573,2.398,574,2.016,575,2.398,576,3.579,577,2.398,578,2.398,579,2.398,580,2.398,581,2.398,582,2.398,583,3.579,584,2.398,585,2.398,586,3.579,587,2.398,588,2.398,589,2.398,590,4.282,591,2.398,592,2.398,593,2.398,594,2.398,595,2.398,596,2.398,597,3.579,598,2.398,599,3.579,600,2.398,601,2.398,602,2.398,603,3.579,604,2.398,605,2.398,606,2.398,607,2.398,608,2.398,609,2.398,610,2.398,611,2.398,612,2.398,613,2.398,614,2.398,615,3.579,616,2.398,617,3.579,618,2.398,619,2.398,620,2.398,621,2.398,622,3.579,623,2.398,624,2.398,625,2.398,626,2.398,627,2.398,628,2.398,629,2.398,630,2.398,631,2.398,632,2.398,633,2.398,634,2.398,635,2.398,636,2.398,637,2.398,638,2.398,639,2.398,640,2.398,641,2.398,642,2.398,643,2.398,644,2.398,645,2.398,646,2.398,647,2.398,648,2.398,649,2.398,650,2.398,651,2.398,652,2.398,653,2.398,654,2.398,655,2.398,656,2.398,657,3.579,658,2.398,659,2.398,660,2.398,661,2.398,662,2.398,663,3.579,664,4.282,665,3.579,666,2.398,667,3.579,668,2.398,669,2.398,670,2.398,671,2.398,672,3.579,673,2.398,674,2.398,675,2.398,676,2.398,677,2.398,678,2.398,679,2.398,680,4.282,681,2.398,682,2.398,683,3.579,684,2.398,685,2.398,686,2.398,687,4.748,688,2.398,689,2.398,690,2.398,691,2.398,692,2.398,693,2.398,694,3.579,695,2.398,696,2.398,697,2.398,698,2.398,699,2.398,700,2.398,701,2.398,702,2.398,703,2.398,704,2.398,705,2.398,706,2.398,707,2.398,708,2.398,709,2.398,710,2.398,711,2.398,712,2.398,713,2.398,714,2.398,715,2.398,716,2.398,717,2.398,718,2.398,719,2.398,720,2.398,721,2.398,722,3.579,723,2.398]],["title/modules.html",[724,3.872]],["body/modules.html",[13,0.026,63,0.026,64,0.026,724,4.453]],["title/overview.html",[725,3.872]],["body/overview.html",[2,1.317,13,0.025,63,0.025,64,0.025,70,1.13,574,4.394,725,4.394,726,5.227]],["title/properties.html",[9,0.527,400,2.426]],["body/properties.html",[0,0.316,2,1.127,9,0.575,13,0.028,15,0.704,22,0.694,63,0.023,64,0.023,72,1.758,96,1.897,106,3.761,344,3.598,403,3.761,429,3.291,430,3.291,466,3.291,506,3.761,507,3.761,508,3.761,509,3.761,510,3.761,511,3.761,512,4.602,513,3.761,514,3.761,515,3.761,516,3.761,517,3.761,518,3.761,519,3.761,520,3.761,521,3.761,522,3.761,523,3.761,727,4.473,728,4.473,729,4.473,730,4.473,731,4.473,732,4.473,733,4.473,734,4.473,735,4.473,736,4.473,737,4.473,738,4.473,739,4.473,740,4.473]],["title/todo.html",[502,2.426,503,2.426,741,2.886]],["body/todo.html",[13,0.026,63,0.026,64,0.026,742,5.297]],["title/miscellaneous/typealiases.html",[417,1.566,743,4.096]],["body/miscellaneous/typealiases.html",[8,0.323,12,0.374,13,0.024,36,1.297,38,1.507,63,0.024,64,0.024,129,3.031,130,4.252,142,3.012,353,4.084,376,4.396,381,4.084,383,4.084,385,4.084,390,3.367,392,4.666,417,2.483,420,5.023,426,3.848,744,4.577,745,5.975]],["title/miscellaneous/variables.html",[417,1.566,746,3.443]],["body/miscellaneous/variables.html",[8,0.361,11,1.387,13,0.027,28,0.941,63,0.025,64,0.025,71,3.759,100,4.359,101,4.295,136,3.759,417,2.772,746,4.295,747,5.109]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":368,"title":{},"body":{"coverage.html":{}}}],["0.14.1",{"_index":412,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":415,"title":{},"body":{"dependencies.html":{}}}],["0.3.1",{"_index":403,"title":{},"body":{"dependencies.html":{},"properties.html":{}}}],["0.3.20",{"_index":416,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":410,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":375,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":370,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":371,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":369,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":397,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":65,"title":{"entities/AttributeRelation-1.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity-1.html":{},"classes/TestObject-1.html":{}},"body":{"classes/EntityWriteService.html":{}}}],["1/1",{"_index":352,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":363,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":373,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":574,"title":{},"body":{"index.html":{},"overview.html":{}}}],["100",{"_index":351,"title":{},"body":{"coverage.html":{}}}],["11.0.10",{"_index":406,"title":{},"body":{"dependencies.html":{}}}],["11.0.3",{"_index":408,"title":{},"body":{"dependencies.html":{}}}],["16",{"_index":726,"title":{},"body":{"overview.html":{}}}],["16mb",{"_index":646,"title":{},"body":{"index.html":{}}}],["2,000",{"_index":613,"title":{},"body":{"index.html":{}}}],["20",{"_index":372,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":627,"title":{},"body":{"index.html":{}}}],["21",{"_index":395,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":633,"title":{},"body":{"index.html":{}}}],["3/14",{"_index":396,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":394,"title":{},"body":{"coverage.html":{}}}],["30,000",{"_index":598,"title":{},"body":{"index.html":{}}}],["40",{"_index":634,"title":{},"body":{"index.html":{}}}],["4gb",{"_index":639,"title":{},"body":{"index.html":{}}}],["50",{"_index":362,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["60",{"_index":393,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["___viewcolumn",{"_index":487,"title":{},"body":{"miscellaneous/functions.html":{}}}],["___viewentity",{"_index":490,"title":{},"body":{"miscellaneous/functions.html":{}}}],["_columnname",{"_index":286,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["_firstpropertyname",{"_index":294,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["_propertyname",{"_index":285,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["_referencedcolumnname",{"_index":281,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["_secondpropertyname",{"_index":295,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["_tablename",{"_index":288,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["acceptstring",{"_index":137,"title":{},"body":{"classes/CommonQueryDto.html":{}}}],["accommodate",{"_index":549,"title":{},"body":{"index.html":{}}}],["accommodating",{"_index":571,"title":{},"body":{"index.html":{}}}],["achieves",{"_index":537,"title":{},"body":{"index.html":{}}}],["add",{"_index":547,"title":{},"body":{"index.html":{}}}],["added",{"_index":498,"title":{},"body":{"miscellaneous/functions.html":{}}}],["addrelation",{"_index":189,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["addrelation(relation",{"_index":197,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["adjust",{"_index":623,"title":{},"body":{"index.html":{}}}],["administrative",{"_index":628,"title":{},"body":{"index.html":{}}}],["adopted",{"_index":530,"title":{},"body":{"index.html":{}}}],["affected",{"_index":151,"title":{},"body":{"classes/DeleteResultDto.html":{},"classes/EntityWriteService.html":{},"classes/UpdateResultDto.html":{}}}],["alias",{"_index":380,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":744,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allocate",{"_index":632,"title":{},"body":{"index.html":{}}}],["allocation",{"_index":643,"title":{},"body":{"index.html":{}}}],["allowed",{"_index":565,"title":{},"body":{"index.html":{}}}],["api",{"_index":512,"title":{},"body":{"index.html":{},"properties.html":{}}}],["application",{"_index":617,"title":{},"body":{"index.html":{}}}],["apply",{"_index":676,"title":{},"body":{"index.html":{}}}],["approach",{"_index":536,"title":{},"body":{"index.html":{}}}],["array",{"_index":48,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["arraymaxsize",{"_index":265,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["arrayminsize",{"_index":264,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["associated",{"_index":543,"title":{},"body":{"index.html":{}}}],["async",{"_index":158,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["attributerelation",{"_index":1,"title":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{}}}],["attributes",{"_index":62,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["author",{"_index":738,"title":{},"body":{"properties.html":{}}}],["availability",{"_index":593,"title":{},"body":{"index.html":{}}}],["available",{"_index":580,"title":{},"body":{"index.html":{}}}],["avoid",{"_index":655,"title":{},"body":{"index.html":{}}}],["await",{"_index":184,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["balancing",{"_index":591,"title":{},"body":{"index.html":{}}}],["base",{"_index":97,"title":{},"body":{"classes/BaseEntity.html":{}}}],["base.js",{"_index":177,"title":{},"body":{"classes/EntityReadService.html":{}}}],["base_entity_columns",{"_index":100,"title":{},"body":{"classes/BaseEntity.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["based",{"_index":463,"title":{},"body":{"miscellaneous/functions.html":{}}}],["baseentity",{"_index":28,"title":{"classes/BaseEntity.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["baseentityservice",{"_index":102,"title":{"classes/BaseEntityService.html":{}},"body":{"classes/BaseEntityService.html":{},"classes/EntityReadService.html":{},"coverage.html":{}}}],["baseidentity",{"_index":79,"title":{"classes/BaseIdEntity.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"coverage.html":{}}}],["baseidentity:7",{"_index":91,"title":{},"body":{"classes/BaseEntity.html":{}}}],["baseline",{"_index":578,"title":{},"body":{"index.html":{}}}],["basemodel",{"_index":81,"title":{},"body":{"classes/BaseEntity.html":{}}}],["baseview",{"_index":119,"title":{"classes/BaseView.html":{}},"body":{"classes/BaseView.html":{},"coverage.html":{}}}],["before",{"_index":605,"title":{},"body":{"index.html":{}}}],["being",{"_index":606,"title":{},"body":{"index.html":{}}}],["bigint",{"_index":45,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["boolean",{"_index":44,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/CommonQueryDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["both",{"_index":540,"title":{},"body":{"index.html":{}}}],["brightline",{"_index":740,"title":{},"body":{"properties.html":{}}}],["bug",{"_index":702,"title":{},"body":{"index.html":{}}}],["bugs",{"_index":733,"title":{},"body":{"properties.html":{}}}],["builder",{"_index":492,"title":{},"body":{"miscellaneous/functions.html":{}}}],["builder/querypartialentity.js",{"_index":224,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["capabilities",{"_index":431,"title":{},"body":{"miscellaneous/functions.html":{}}}],["capability",{"_index":452,"title":{},"body":{"miscellaneous/functions.html":{}}}],["capacity",{"_index":630,"title":{},"body":{"index.html":{}}}],["cascade",{"_index":59,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["certain",{"_index":472,"title":{},"body":{"miscellaneous/functions.html":{}}}],["class",{"_index":31,"title":{"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["classdecorator",{"_index":460,"title":{},"body":{"miscellaneous/functions.html":{}}}],["classes",{"_index":70,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["clear",{"_index":521,"title":{},"body":{"index.html":{},"properties.html":{}}}],["closed",{"_index":607,"title":{},"body":{"index.html":{}}}],["code",{"_index":541,"title":{},"body":{"index.html":{}}}],["column",{"_index":25,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["column(options",{"_index":427,"title":{},"body":{"miscellaneous/functions.html":{}}}],["column({databasetype",{"_index":16,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/ManyRelation.html":{},"entities/OneRelation.html":{},"entities/OwnerRelation.html":{},"entities/TestEntity.html":{}}}],["column({type",{"_index":67,"title":{},"body":{"entities/AttributeRelation-1.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity-1.html":{}}}],["column.ts",{"_index":359,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["columns",{"_index":78,"title":{},"body":{"classes/BaseEntity.html":{},"miscellaneous/functions.html":{}}}],["columntype",{"_index":468,"title":{},"body":{"miscellaneous/functions.html":{}}}],["common",{"_index":131,"title":{},"body":{"classes/CommonQueryDto.html":{}}}],["commonquerydto",{"_index":127,"title":{"classes/CommonQueryDto.html":{}},"body":{"classes/CommonQueryDto.html":{},"coverage.html":{}}}],["compatibility",{"_index":705,"title":{},"body":{"index.html":{}}}],["compatible",{"_index":480,"title":{},"body":{"miscellaneous/functions.html":{}}}],["composite",{"_index":454,"title":{},"body":{"miscellaneous/functions.html":{}}}],["configuration",{"_index":559,"title":{},"body":{"index.html":{}}}],["configure",{"_index":597,"title":{},"body":{"index.html":{}}}],["configured",{"_index":638,"title":{},"body":{"index.html":{}}}],["connection",{"_index":603,"title":{},"body":{"index.html":{}}}],["connections",{"_index":564,"title":{},"body":{"index.html":{}}}],["connectiontimeoutmillis",{"_index":612,"title":{},"body":{"index.html":{}}}],["consider",{"_index":690,"title":{},"body":{"index.html":{}}}],["const",{"_index":99,"title":{},"body":{"classes/BaseEntity.html":{},"classes/EntityWriteService.html":{}}}],["constraint",{"_index":456,"title":{},"body":{"miscellaneous/functions.html":{}}}],["constraints",{"_index":248,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["constructor",{"_index":104,"title":{},"body":{"classes/BaseEntityService.html":{}}}],["constructor(protected",{"_index":113,"title":{},"body":{"classes/BaseEntityService.html":{}}}],["constructor(repo",{"_index":105,"title":{},"body":{"classes/BaseEntityService.html":{}}}],["consumption",{"_index":610,"title":{},"body":{"index.html":{}}}],["contact",{"_index":721,"title":{},"body":{"index.html":{}}}],["contributions",{"_index":693,"title":{},"body":{"index.html":{}}}],["controller",{"_index":672,"title":{},"body":{"index.html":{}}}],["converted",{"_index":653,"title":{},"body":{"index.html":{}}}],["count",{"_index":142,"title":{},"body":{"classes/CountResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["count(query",{"_index":162,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["countresult",{"_index":144,"title":{},"body":{"classes/CountResultDto.html":{},"classes/EntityReadService.html":{}}}],["countresultdto",{"_index":139,"title":{"classes/CountResultDto.html":{}},"body":{"classes/CountResultDto.html":{},"coverage.html":{}}}],["coverage",{"_index":343,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["coverts",{"_index":493,"title":{},"body":{"miscellaneous/functions.html":{}}}],["create",{"_index":438,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createdat",{"_index":75,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseView.html":{}}}],["createdatecolumn",{"_index":93,"title":{},"body":{"classes/BaseEntity.html":{}}}],["createfindoperator",{"_index":378,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createfindoperator(query",{"_index":436,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createquerycountdto",{"_index":379,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createquerycountdto(options",{"_index":441,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createquerycountdtooptions",{"_index":381,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["createquerymanydto",{"_index":382,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createquerymanydto(options",{"_index":442,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createqueryonedto",{"_index":384,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createqueryonedto(options",{"_index":443,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createrelationparamdto",{"_index":365,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createrelationparamdto(relations",{"_index":444,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createunsetrelationparamdto",{"_index":367,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createunsetrelationparamdto(relations",{"_index":448,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createwhereoptiondto",{"_index":387,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createwhereoptiondto(columns",{"_index":449,"title":{},"body":{"miscellaneous/functions.html":{}}}],["custom",{"_index":506,"title":{},"body":{"index.html":{},"properties.html":{}}}],["data",{"_index":465,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["databaes",{"_index":271,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["database",{"_index":466,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["databases",{"_index":470,"title":{},"body":{"miscellaneous/functions.html":{}}}],["databasetype",{"_index":35,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/ManyRelation.html":{},"entities/OneRelation.html":{},"entities/OwnerRelation.html":{},"entities/TestEntity.html":{},"classes/TestObject.html":{}}}],["datasource",{"_index":554,"title":{},"body":{"index.html":{}}}],["date",{"_index":50,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseView.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"index.html":{}}}],["date'})@createdatecolumn",{"_index":83,"title":{},"body":{"classes/BaseEntity.html":{}}}],["date'})@deletedatecolumn",{"_index":85,"title":{},"body":{"classes/BaseEntity.html":{}}}],["date'})@updatedatecolumn",{"_index":87,"title":{},"body":{"classes/BaseEntity.html":{}}}],["decorator",{"_index":429,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["decorator/index.js",{"_index":27,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseView.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["decorators",{"_index":15,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"index.html":{},"properties.html":{}}}],["dedicated",{"_index":675,"title":{},"body":{"index.html":{}}}],["default",{"_index":136,"title":{},"body":{"classes/CommonQueryDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defaultnamingstrategy",{"_index":275,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["define",{"_index":641,"title":{},"body":{"index.html":{}}}],["defined",{"_index":18,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{}}}],["defines",{"_index":562,"title":{},"body":{"index.html":{}}}],["definitions",{"_index":509,"title":{},"body":{"index.html":{},"properties.html":{}}}],["delays",{"_index":621,"title":{},"body":{"index.html":{}}}],["delete",{"_index":149,"title":{},"body":{"classes/DeleteResultDto.html":{},"classes/EntityWriteService.html":{}}}],["delete(id",{"_index":200,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["deleted",{"_index":134,"title":{},"body":{"classes/CommonQueryDto.html":{}}}],["deletedat",{"_index":77,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseView.html":{}}}],["deletedatecolumn",{"_index":94,"title":{},"body":{"classes/BaseEntity.html":{}}}],["deleteresult",{"_index":150,"title":{},"body":{"classes/DeleteResultDto.html":{}}}],["deleteresultdto",{"_index":147,"title":{"classes/DeleteResultDto.html":{}},"body":{"classes/DeleteResultDto.html":{},"coverage.html":{}}}],["demand",{"_index":573,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":401,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["description",{"_index":72,"title":{},"body":{"classes/BaseEntity.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{},"classes/UpdateResultDto.html":{},"miscellaneous/functions.html":{},"properties.html":{}}}],["determines",{"_index":600,"title":{},"body":{"index.html":{}}}],["developer",{"_index":722,"title":{},"body":{"index.html":{}}}],["development",{"_index":524,"title":{},"body":{"index.html":{}}}],["disrupting",{"_index":656,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":344,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["done",{"_index":667,"title":{},"body":{"index.html":{}}}],["driver",{"_index":467,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dto",{"_index":22,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["dto.ts",{"_index":130,"title":{},"body":{"classes/CommonQueryDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["dto.ts:14",{"_index":138,"title":{},"body":{"classes/CommonQueryDto.html":{}}}],["duration",{"_index":601,"title":{},"body":{"index.html":{}}}],["during",{"_index":583,"title":{},"body":{"index.html":{}}}],["eager",{"_index":51,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["efficiency",{"_index":534,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":568,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":517,"title":{},"body":{"index.html":{},"properties.html":{}}}],["effort",{"_index":686,"title":{},"body":{"index.html":{}}}],["encrypion",{"_index":666,"title":{},"body":{"index.html":{}}}],["encrypted",{"_index":674,"title":{},"body":{"index.html":{}}}],["encryption",{"_index":671,"title":{},"body":{"index.html":{}}}],["enhance",{"_index":647,"title":{},"body":{"index.html":{}}}],["enhancing",{"_index":533,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":515,"title":{},"body":{"index.html":{},"properties.html":{}}}],["ensuring",{"_index":567,"title":{},"body":{"index.html":{}}}],["entities",{"_index":2,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"index.html":{},"overview.html":{},"properties.html":{}}}],["entity",{"_index":0,"title":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["entity's",{"_index":458,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entity(uniques",{"_index":451,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entity.ts",{"_index":360,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["entity/base.js",{"_index":112,"title":{},"body":{"classes/BaseEntityService.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["entity/index.js",{"_index":29,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["entityreadservice",{"_index":153,"title":{"classes/EntityReadService.html":{}},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"coverage.html":{}}}],["entityreadservice:16",{"_index":220,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["entityreadservice:25",{"_index":221,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["entityreadservice:29",{"_index":222,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["entityreadservice:33",{"_index":219,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["entitywriteservice",{"_index":186,"title":{"classes/EntityWriteService.html":{}},"body":{"classes/EntityWriteService.html":{},"coverage.html":{}}}],["error.dto.ts",{"_index":246,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{}}}],["error.dto.ts:10",{"_index":340,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:11",{"_index":338,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:12",{"_index":341,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:13",{"_index":339,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:14",{"_index":337,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:15",{"_index":335,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:16",{"_index":334,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:17",{"_index":333,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:18",{"_index":336,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:19",{"_index":332,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:20",{"_index":331,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:21",{"_index":330,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:26",{"_index":251,"title":{},"body":{"classes/SingleValidationErrorDto.html":{}}}],["error.dto.ts:28",{"_index":250,"title":{},"body":{"classes/SingleValidationErrorDto.html":{}}}],["error.dto.ts:37",{"_index":342,"title":{},"body":{"classes/ValidationErrorDto.html":{}}}],["errors",{"_index":267,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"index.html":{}}}],["establish",{"_index":616,"title":{},"body":{"index.html":{}}}],["establishes",{"_index":587,"title":{},"body":{"index.html":{}}}],["even",{"_index":709,"title":{},"body":{"index.html":{}}}],["example",{"_index":545,"title":{},"body":{"index.html":{}}}],["execution",{"_index":678,"title":{},"body":{"index.html":{}}}],["export",{"_index":30,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["expression",{"_index":495,"title":{},"body":{"miscellaneous/functions.html":{}}}],["extend",{"_index":507,"title":{},"body":{"index.html":{},"properties.html":{}}}],["extends",{"_index":34,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["false",{"_index":54,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/CommonQueryDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["features",{"_index":708,"title":{},"body":{"index.html":{}}}],["fields",{"_index":459,"title":{},"body":{"miscellaneous/functions.html":{}}}],["file",{"_index":5,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{},"index.html":{}}}],["find",{"_index":159,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["find(query",{"_index":167,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["findone",{"_index":160,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["findone(query",{"_index":170,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["findonebyid",{"_index":161,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["findonebyid(id",{"_index":173,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["findoperator",{"_index":439,"title":{},"body":{"miscellaneous/functions.html":{}}}],["findoptionswhere",{"_index":175,"title":{},"body":{"classes/EntityReadService.html":{}}}],["firsttablename",{"_index":297,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["firsttablename}_${secondtablename",{"_index":299,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["fixes",{"_index":703,"title":{},"body":{"index.html":{}}}],["following",{"_index":558,"title":{},"body":{"index.html":{}}}],["format",{"_index":552,"title":{},"body":{"index.html":{}}}],["function",{"_index":349,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":418,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funding",{"_index":680,"title":{},"body":{"index.html":{}}}],["general",{"_index":715,"title":{},"body":{"index.html":{}}}],["getting",{"_index":502,"title":{"index.html":{},"todo.html":{}},"body":{}}],["go",{"_index":700,"title":{},"body":{"index.html":{}}}],["handling",{"_index":673,"title":{},"body":{"index.html":{}}}],["hashing",{"_index":665,"title":{},"body":{"index.html":{}}}],["help",{"_index":694,"title":{},"body":{"index.html":{}}}],["homepage",{"_index":731,"title":{},"body":{"properties.html":{}}}],["https://github.com/rbrightline/puq/tree/main",{"_index":737,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io",{"_index":734,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io/puq/orm",{"_index":732,"title":{},"body":{"properties.html":{}}}],["id",{"_index":74,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"miscellaneous/functions.html":{}}}],["id.js",{"_index":98,"title":{},"body":{"classes/BaseEntity.html":{}}}],["id.ts",{"_index":116,"title":{},"body":{"classes/BaseIdEntity.html":{},"coverage.html":{}}}],["id.ts:7",{"_index":117,"title":{},"body":{"classes/BaseIdEntity.html":{}}}],["identifier",{"_index":345,"title":{},"body":{"coverage.html":{}}}],["idle",{"_index":602,"title":{},"body":{"index.html":{}}}],["idletimeoutmillis",{"_index":596,"title":{},"body":{"index.html":{}}}],["implement",{"_index":557,"title":{},"body":{"index.html":{}}}],["implementations",{"_index":531,"title":{},"body":{"index.html":{}}}],["implements",{"_index":80,"title":{},"body":{"classes/BaseEntity.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/SingleValidationErrorDto.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["import",{"_index":21,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["improvements",{"_index":712,"title":{},"body":{"index.html":{}}}],["inactivity",{"_index":611,"title":{},"body":{"index.html":{}}}],["include",{"_index":133,"title":{},"body":{"classes/CommonQueryDto.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["inherited",{"_index":90,"title":{},"body":{"classes/BaseEntity.html":{},"classes/EntityWriteService.html":{}}}],["initial",{"_index":679,"title":{},"body":{"index.html":{}}}],["insert",{"_index":61,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["install",{"_index":544,"title":{},"body":{"index.html":{}}}],["instant",{"_index":699,"title":{},"body":{"index.html":{}}}],["instead",{"_index":661,"title":{},"body":{"index.html":{}}}],["integer",{"_index":42,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{}}}],["integer'})@primarygeneratedcolumn",{"_index":89,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{}}}],["integrating",{"_index":511,"title":{},"body":{"index.html":{},"properties.html":{}}}],["integration",{"_index":527,"title":{},"body":{"index.html":{}}}],["interfere",{"_index":660,"title":{},"body":{"index.html":{}}}],["intuitive",{"_index":528,"title":{},"body":{"index.html":{}}}],["isarray",{"_index":263,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["isboolean",{"_index":261,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["isint",{"_index":260,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["isnumber",{"_index":259,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["isobject",{"_index":262,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["isstring",{"_index":258,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["it's",{"_index":682,"title":{},"body":{"index.html":{}}}],["items",{"_index":49,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["javascript",{"_index":654,"title":{},"body":{"index.html":{}}}],["join",{"_index":58,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["joincolumnname",{"_index":276,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["joincolumnname(relationname",{"_index":280,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["jointablecolumnname",{"_index":277,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["jointablecolumnname(_tablename",{"_index":284,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["jointableinversecolumnname",{"_index":278,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["jointableinversecolumnname(_tablename",{"_index":290,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["jointablename",{"_index":279,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["jointablename(firsttablename",{"_index":292,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["keep",{"_index":717,"title":{},"body":{"index.html":{}}}],["keeping",{"_index":577,"title":{},"body":{"index.html":{}}}],["key",{"_index":10,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["keys",{"_index":445,"title":{},"body":{"miscellaneous/functions.html":{}}}],["keywords",{"_index":728,"title":{},"body":{"properties.html":{}}}],["latency",{"_index":582,"title":{},"body":{"index.html":{}}}],["latest",{"_index":706,"title":{},"body":{"index.html":{}}}],["layer",{"_index":664,"title":{},"body":{"index.html":{}}}],["level",{"_index":519,"title":{},"body":{"index.html":{},"properties.html":{}}}],["library",{"_index":687,"title":{},"body":{"index.html":{}}}],["license",{"_index":735,"title":{},"body":{"properties.html":{}}}],["limit",{"_index":589,"title":{},"body":{"index.html":{}}}],["limitation",{"_index":550,"title":{},"body":{"index.html":{}}}],["link",{"_index":435,"title":{},"body":{"miscellaneous/functions.html":{}}}],["linkk",{"_index":181,"title":{},"body":{"classes/EntityReadService.html":{}}}],["literal",{"_index":745,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["load",{"_index":135,"title":{},"body":{"classes/CommonQueryDto.html":{}}}],["low",{"_index":584,"title":{},"body":{"index.html":{}}}],["mached",{"_index":145,"title":{},"body":{"classes/CountResultDto.html":{}}}],["maintained",{"_index":576,"title":{},"body":{"index.html":{}}}],["maintaining",{"_index":684,"title":{},"body":{"index.html":{}}}],["maintenance",{"_index":716,"title":{},"body":{"index.html":{}}}],["make",{"_index":477,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["many",{"_index":38,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["manyrelation",{"_index":37,"title":{"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{}}}],["mapped",{"_index":516,"title":{},"body":{"index.html":{},"properties.html":{}}}],["matching",{"_index":64,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":255,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"index.html":{}}}],["max_connections",{"_index":626,"title":{},"body":{"index.html":{}}}],["maximum",{"_index":563,"title":{},"body":{"index.html":{}}}],["maxlength",{"_index":257,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["memory",{"_index":642,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":414,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":157,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{}}}],["milliseconds",{"_index":599,"title":{},"body":{"index.html":{}}}],["min",{"_index":254,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"index.html":{}}}],["minimizing",{"_index":608,"title":{},"body":{"index.html":{}}}],["minimum",{"_index":538,"title":{},"body":{"index.html":{}}}],["minlength",{"_index":256,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["miscellaneous",{"_index":417,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":736,"title":{},"body":{"properties.html":{}}}],["modules",{"_index":724,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":710,"title":{},"body":{"index.html":{}}}],["name",{"_index":109,"title":{},"body":{"classes/BaseEntityService.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["names",{"_index":447,"title":{},"body":{"miscellaneous/functions.html":{}}}],["naming",{"_index":273,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["nestjs/common",{"_index":405,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":407,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["new",{"_index":398,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["none",{"_index":478,"title":{},"body":{"miscellaneous/functions.html":{}}}],["null",{"_index":57,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["number",{"_index":43,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"index.html":{}}}],["numbers",{"_index":648,"title":{},"body":{"index.html":{}}}],["numeric",{"_index":650,"title":{},"body":{"index.html":{}}}],["object",{"_index":46,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["object.keys(new",{"_index":101,"title":{},"body":{"classes/BaseEntity.html":{},"miscellaneous/variables.html":{}}}],["ondelete",{"_index":55,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["one",{"_index":36,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["onerelation",{"_index":33,"title":{"entities/OneRelation.html":{},"entities/OneRelation-1.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{}}}],["ongoing",{"_index":692,"title":{},"body":{"index.html":{}}}],["onupdate",{"_index":60,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["open",{"_index":590,"title":{},"body":{"index.html":{}}}],["operation",{"_index":152,"title":{},"body":{"classes/DeleteResultDto.html":{},"classes/UpdateResultDto.html":{},"index.html":{}}}],["operations",{"_index":657,"title":{},"body":{"index.html":{}}}],["operator.ts",{"_index":377,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["optimal",{"_index":637,"title":{},"body":{"index.html":{}}}],["optimize",{"_index":555,"title":{},"body":{"index.html":{}}}],["option",{"_index":386,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["optional",{"_index":110,"title":{},"body":{"classes/BaseEntityService.html":{},"classes/CommonQueryDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":432,"title":{},"body":{"miscellaneous/functions.html":{}}}],["orm",{"_index":730,"title":{},"body":{"properties.html":{}}}],["out",{"_index":714,"title":{},"body":{"index.html":{}}}],["overloading",{"_index":595,"title":{},"body":{"index.html":{}}}],["override",{"_index":298,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["overview",{"_index":725,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":40,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["ownerrelation",{"_index":39,"title":{"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{}}}],["package",{"_index":400,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["paired",{"_index":532,"title":{},"body":{"index.html":{}}}],["param",{"_index":180,"title":{},"body":{"classes/EntityReadService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["parameters",{"_index":108,"title":{},"body":{"classes/BaseEntityService.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{},"miscellaneous/functions.html":{}}}],["parse",{"_index":501,"title":{},"body":{"miscellaneous/functions.html":{}}}],["peak",{"_index":572,"title":{},"body":{"index.html":{}}}],["peer",{"_index":404,"title":{},"body":{"dependencies.html":{}}}],["per",{"_index":644,"title":{},"body":{"index.html":{}}}],["performance",{"_index":556,"title":{},"body":{"index.html":{}}}],["periods",{"_index":586,"title":{},"body":{"index.html":{}}}],["pick",{"_index":462,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pickcolumntype",{"_index":350,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["pickcolumntype(options",{"_index":461,"title":{},"body":{"miscellaneous/functions.html":{}}}],["picks",{"_index":476,"title":{},"body":{"miscellaneous/functions.html":{}}}],["picktransformer",{"_index":354,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["picktransformer(options",{"_index":469,"title":{},"body":{"miscellaneous/functions.html":{}}}],["please",{"_index":689,"title":{},"body":{"index.html":{}}}],["pnpm",{"_index":546,"title":{},"body":{"index.html":{}}}],["pool",{"_index":566,"title":{},"body":{"index.html":{}}}],["poolsize",{"_index":561,"title":{},"body":{"index.html":{}}}],["postgres",{"_index":553,"title":{},"body":{"index.html":{}}}],["postgres.conf",{"_index":625,"title":{},"body":{"index.html":{}}}],["postgresql",{"_index":624,"title":{},"body":{"index.html":{}}}],["powerful",{"_index":711,"title":{},"body":{"index.html":{}}}],["prebuilt",{"_index":491,"title":{},"body":{"miscellaneous/functions.html":{}}}],["precision",{"_index":652,"title":{},"body":{"index.html":{}}}],["preservation",{"_index":651,"title":{},"body":{"index.html":{}}}],["prevent",{"_index":594,"title":{},"body":{"index.html":{}}}],["preventing",{"_index":619,"title":{},"body":{"index.html":{}}}],["primarygeneratedcolumn",{"_index":118,"title":{},"body":{"classes/BaseIdEntity.html":{}}}],["primitive",{"_index":479,"title":{},"body":{"miscellaneous/functions.html":{}}}],["process",{"_index":535,"title":{},"body":{"index.html":{}}}],["proeprty",{"_index":433,"title":{},"body":{"miscellaneous/functions.html":{}}}],["project",{"_index":683,"title":{},"body":{"index.html":{}}}],["prolonged",{"_index":620,"title":{},"body":{"index.html":{}}}],["promise",{"_index":166,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["properties",{"_index":9,"title":{"properties.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"properties.html":{}}}],["property",{"_index":23,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{}}}],["property({type",{"_index":82,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["propertydecorator",{"_index":434,"title":{},"body":{"miscellaneous/functions.html":{}}}],["propertyoptions",{"_index":428,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provided",{"_index":464,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provides",{"_index":73,"title":{},"body":{"classes/BaseEntity.html":{}}}],["providing",{"_index":520,"title":{},"body":{"index.html":{},"properties.html":{}}}],["puq",{"_index":729,"title":{},"body":{"properties.html":{}}}],["puq/names",{"_index":402,"title":{},"body":{"dependencies.html":{}}}],["puq/orm",{"_index":504,"title":{},"body":{"index.html":{}}}],["puq/ormsqlite",{"_index":548,"title":{},"body":{"index.html":{}}}],["puq/property",{"_index":24,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"dependencies.html":{}}}],["puq/query",{"_index":176,"title":{},"body":{"classes/EntityReadService.html":{},"dependencies.html":{}}}],["puq/type",{"_index":92,"title":{},"body":{"classes/BaseEntity.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/SingleValidationErrorDto.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"dependencies.html":{}}}],["queriable",{"_index":450,"title":{},"body":{"miscellaneous/functions.html":{}}}],["query",{"_index":129,"title":{},"body":{"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["querycount",{"_index":163,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["querydeeppartialentity",{"_index":217,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["querymany",{"_index":168,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"miscellaneous/functions.html":{}}}],["querymanydtooptions",{"_index":383,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["queryone",{"_index":171,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"miscellaneous/functions.html":{}}}],["queryonedtooptions",{"_index":385,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["ram",{"_index":636,"title":{},"body":{"index.html":{}}}],["read",{"_index":155,"title":{},"body":{"classes/EntityReadService.html":{}}}],["read.js",{"_index":226,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["readily",{"_index":579,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":114,"title":{},"body":{"classes/BaseEntityService.html":{}}}],["record",{"_index":440,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reduce",{"_index":581,"title":{},"body":{"index.html":{}}}],["reduction",{"_index":539,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":413,"title":{},"body":{"dependencies.html":{}}}],["refrain",{"_index":658,"title":{},"body":{"index.html":{}}}],["relation",{"_index":26,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/EntityWriteService.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["relation(options",{"_index":482,"title":{},"body":{"miscellaneous/functions.html":{}}}],["relation({type",{"_index":302,"title":{},"body":{"entities/TestEntity.html":{},"entities/TestEntity-1.html":{}}}],["relationname",{"_index":283,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["relationoptions",{"_index":483,"title":{},"body":{"miscellaneous/functions.html":{}}}],["relationparam",{"_index":198,"title":{},"body":{"classes/EntityWriteService.html":{},"miscellaneous/functions.html":{}}}],["relations",{"_index":446,"title":{},"body":{"miscellaneous/functions.html":{}}}],["remains",{"_index":604,"title":{},"body":{"index.html":{}}}],["removerelation",{"_index":190,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["removerelation(relation",{"_index":202,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["repo",{"_index":111,"title":{},"body":{"classes/BaseEntityService.html":{}}}],["repository",{"_index":106,"title":{},"body":{"classes/BaseEntityService.html":{},"properties.html":{}}}],["required",{"_index":53,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["resource",{"_index":569,"title":{},"body":{"index.html":{}}}],["responsiveness",{"_index":618,"title":{},"body":{"index.html":{}}}],["result",{"_index":143,"title":{},"body":{"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/UpdateResultDto.html":{}}}],["result.dto.ts",{"_index":141,"title":{},"body":{"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/UpdateResultDto.html":{},"coverage.html":{}}}],["result.dto.ts:13",{"_index":146,"title":{},"body":{"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/UpdateResultDto.html":{}}}],["results",{"_index":63,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":178,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{}}}],["returns",{"_index":165,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{},"miscellaneous/functions.html":{}}}],["rid",{"_index":232,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["rn",{"_index":233,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["robert",{"_index":739,"title":{},"body":{"properties.html":{}}}],["robert.brightline@gmail.com",{"_index":723,"title":{},"body":{"index.html":{}}}],["running",{"_index":718,"title":{},"body":{"index.html":{}}}],["safe",{"_index":669,"title":{},"body":{"index.html":{}}}],["save",{"_index":191,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["save(entity",{"_index":204,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["savemany",{"_index":192,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["savemany(entities",{"_index":207,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["seamlessly",{"_index":510,"title":{},"body":{"index.html":{},"properties.html":{}}}],["secondtablename",{"_index":293,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["secure",{"_index":697,"title":{},"body":{"index.html":{}}}],["securely",{"_index":720,"title":{},"body":{"index.html":{}}}],["select",{"_index":485,"title":{},"body":{"miscellaneous/functions.html":{}}}],["selectbaseentity",{"_index":489,"title":{},"body":{"miscellaneous/functions.html":{}}}],["selectquerybuilder",{"_index":496,"title":{},"body":{"miscellaneous/functions.html":{}}}],["selecttransformer",{"_index":389,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["server",{"_index":622,"title":{},"body":{"index.html":{}}}],["server's",{"_index":635,"title":{},"body":{"index.html":{}}}],["service",{"_index":156,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["set",{"_index":56,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["setrelation",{"_index":193,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["setrelation(relation",{"_index":209,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["sets",{"_index":614,"title":{},"body":{"index.html":{}}}],["settings",{"_index":560,"title":{},"body":{"index.html":{}}}],["shared_buffers",{"_index":631,"title":{},"body":{"index.html":{}}}],["single",{"_index":514,"title":{},"body":{"index.html":{},"properties.html":{}}}],["singlevalidationerror",{"_index":247,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["singlevalidationerrordto",{"_index":244,"title":{"classes/SingleValidationErrorDto.html":{}},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{}}}],["smoothly",{"_index":719,"title":{},"body":{"index.html":{}}}],["softdelete",{"_index":194,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["softdelete(id",{"_index":211,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["sort",{"_index":645,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"index.html":{}}}],["specifies",{"_index":575,"title":{},"body":{"index.html":{}}}],["specify",{"_index":457,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sqlite",{"_index":17,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/ManyRelation.html":{},"entities/OneRelation.html":{},"entities/OwnerRelation.html":{},"entities/TestEntity.html":{},"classes/TestObject.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["sqlite3.ts",{"_index":7,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/ManyRelation.html":{},"entities/OneRelation.html":{},"entities/OwnerRelation.html":{},"entities/TestEntity.html":{},"classes/TestObject.html":{},"coverage.html":{}}}],["sqlite3.ts:12",{"_index":240,"title":{},"body":{"entities/OneRelation.html":{}}}],["sqlite3.ts:17",{"_index":238,"title":{},"body":{"entities/ManyRelation.html":{}}}],["sqlite3.ts:22",{"_index":242,"title":{},"body":{"entities/OwnerRelation.html":{}}}],["sqlite3.ts:27",{"_index":19,"title":{},"body":{"entities/AttributeRelation.html":{}}}],["sqlite3.ts:28",{"_index":20,"title":{},"body":{"entities/AttributeRelation.html":{}}}],["sqlite3.ts:33",{"_index":313,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:34",{"_index":307,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:35",{"_index":309,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:36",{"_index":305,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:37",{"_index":304,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:43",{"_index":310,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:49",{"_index":301,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:50",{"_index":306,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:60",{"_index":311,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:7",{"_index":326,"title":{},"body":{"classes/TestObject.html":{}}}],["sqlite3.ts:70",{"_index":308,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:81",{"_index":312,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:91",{"_index":303,"title":{},"body":{"entities/TestEntity.html":{}}}],["src/.../base.ts",{"_index":747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../column.ts",{"_index":419,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../create",{"_index":420,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../entity.ts",{"_index":421,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../pick",{"_index":422,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../relation.ts",{"_index":423,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../select",{"_index":424,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../view",{"_index":425,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../where",{"_index":426,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/common/pick",{"_index":347,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/decorator/column.ts",{"_index":355,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/decorator/entity.ts",{"_index":356,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/decorator/relation.ts",{"_index":357,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/decorator/view",{"_index":358,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/dto/count",{"_index":140,"title":{},"body":{"classes/CountResultDto.html":{},"coverage.html":{}}}],["src/lib/dto/create",{"_index":364,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/dto/delete",{"_index":148,"title":{},"body":{"classes/DeleteResultDto.html":{},"coverage.html":{}}}],["src/lib/dto/update",{"_index":329,"title":{},"body":{"classes/UpdateResultDto.html":{},"coverage.html":{}}}],["src/lib/dto/validation",{"_index":245,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{}}}],["src/lib/entity/base",{"_index":115,"title":{},"body":{"classes/BaseIdEntity.html":{},"coverage.html":{}}}],["src/lib/entity/base.ts",{"_index":71,"title":{},"body":{"classes/BaseEntity.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/entity/base.ts:12",{"_index":84,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/lib/entity/base.ts:16",{"_index":88,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/lib/entity/base.ts:20",{"_index":86,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/lib/factory/naming",{"_index":269,"title":{},"body":{"classes/TableNamingStrategy.html":{},"coverage.html":{}}}],["src/lib/integration/better",{"_index":6,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/ManyRelation.html":{},"entities/OneRelation.html":{},"entities/OwnerRelation.html":{},"entities/TestEntity.html":{},"classes/TestObject.html":{},"coverage.html":{}}}],["src/lib/integration/postgres.ts",{"_index":66,"title":{},"body":{"entities/AttributeRelation-1.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity-1.html":{},"classes/TestObject-1.html":{},"coverage.html":{}}}],["src/lib/integration/postgres.ts:12",{"_index":241,"title":{},"body":{"entities/OneRelation-1.html":{}}}],["src/lib/integration/postgres.ts:17",{"_index":239,"title":{},"body":{"entities/ManyRelation-1.html":{}}}],["src/lib/integration/postgres.ts:22",{"_index":243,"title":{},"body":{"entities/OwnerRelation-1.html":{}}}],["src/lib/integration/postgres.ts:27",{"_index":68,"title":{},"body":{"entities/AttributeRelation-1.html":{}}}],["src/lib/integration/postgres.ts:28",{"_index":69,"title":{},"body":{"entities/AttributeRelation-1.html":{}}}],["src/lib/integration/postgres.ts:33",{"_index":325,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:34",{"_index":319,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:35",{"_index":321,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:36",{"_index":317,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:37",{"_index":316,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:38",{"_index":322,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:39",{"_index":314,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:40",{"_index":318,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:50",{"_index":323,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:60",{"_index":320,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:7",{"_index":327,"title":{},"body":{"classes/TestObject-1.html":{}}}],["src/lib/integration/postgres.ts:71",{"_index":324,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:81",{"_index":315,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/query/common",{"_index":128,"title":{},"body":{"classes/CommonQueryDto.html":{},"coverage.html":{}}}],["src/lib/query/create",{"_index":376,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/query/select",{"_index":388,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/query/where",{"_index":390,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/service/base.ts",{"_index":103,"title":{},"body":{"classes/BaseEntityService.html":{},"coverage.html":{}}}],["src/lib/service/base.ts:4",{"_index":107,"title":{},"body":{"classes/BaseEntityService.html":{}}}],["src/lib/service/read.ts",{"_index":154,"title":{},"body":{"classes/EntityReadService.html":{},"coverage.html":{}}}],["src/lib/service/read.ts:16",{"_index":169,"title":{},"body":{"classes/EntityReadService.html":{}}}],["src/lib/service/read.ts:25",{"_index":172,"title":{},"body":{"classes/EntityReadService.html":{}}}],["src/lib/service/read.ts:29",{"_index":174,"title":{},"body":{"classes/EntityReadService.html":{}}}],["src/lib/service/read.ts:33",{"_index":164,"title":{},"body":{"classes/EntityReadService.html":{}}}],["src/lib/service/write.ts",{"_index":187,"title":{},"body":{"classes/EntityWriteService.html":{},"coverage.html":{}}}],["src/lib/service/write.ts:12",{"_index":206,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["src/lib/service/write.ts:16",{"_index":208,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["src/lib/service/write.ts:20",{"_index":218,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["src/lib/service/write.ts:24",{"_index":201,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["src/lib/service/write.ts:28",{"_index":212,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["src/lib/service/write.ts:32",{"_index":199,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["src/lib/service/write.ts:38",{"_index":203,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["src/lib/service/write.ts:44",{"_index":210,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["src/lib/service/write.ts:50",{"_index":215,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["src/lib/view/base.view.ts",{"_index":120,"title":{},"body":{"classes/BaseView.html":{},"coverage.html":{}}}],["src/lib/view/base.view.ts:4",{"_index":124,"title":{},"body":{"classes/BaseView.html":{}}}],["src/lib/view/base.view.ts:5",{"_index":122,"title":{},"body":{"classes/BaseView.html":{}}}],["src/lib/view/base.view.ts:6",{"_index":125,"title":{},"body":{"classes/BaseView.html":{}}}],["src/lib/view/base.view.ts:7",{"_index":123,"title":{},"body":{"classes/BaseView.html":{}}}],["standard",{"_index":508,"title":{},"body":{"index.html":{},"properties.html":{}}}],["started",{"_index":503,"title":{"index.html":{},"todo.html":{}},"body":{}}],["statements",{"_index":346,"title":{},"body":{"coverage.html":{}}}],["stays",{"_index":695,"title":{},"body":{"index.html":{}}}],["stored",{"_index":649,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":274,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["strategy.ts",{"_index":270,"title":{},"body":{"classes/TableNamingStrategy.html":{},"coverage.html":{}}}],["strategy.ts:15",{"_index":282,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["strategy.ts:22",{"_index":287,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["strategy.ts:30",{"_index":291,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["strategy.ts:6",{"_index":296,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["streamlined",{"_index":525,"title":{},"body":{"index.html":{}}}],["string",{"_index":14,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["subsequent",{"_index":677,"title":{},"body":{"index.html":{}}}],["such",{"_index":474,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sufficient",{"_index":629,"title":{},"body":{"index.html":{}}}],["summary",{"_index":505,"title":{},"body":{"index.html":{}}}],["suppor",{"_index":475,"title":{},"body":{"miscellaneous/functions.html":{}}}],["support",{"_index":471,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["supporting",{"_index":691,"title":{},"body":{"index.html":{}}}],["swagger",{"_index":523,"title":{},"body":{"index.html":{},"properties.html":{}}}],["system",{"_index":592,"title":{},"body":{"index.html":{}}}],["t",{"_index":205,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["table",{"_index":272,"title":{},"body":{"classes/TableNamingStrategy.html":{},"coverage.html":{}}}],["tablenamingstrategy",{"_index":268,"title":{"classes/TableNamingStrategy.html":{}},"body":{"classes/TableNamingStrategy.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":399,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":685,"title":{},"body":{"index.html":{}}}],["target",{"_index":47,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["tasks",{"_index":742,"title":{},"body":{"todo.html":{}}}],["testentity",{"_index":41,"title":{"entities/TestEntity.html":{},"entities/TestEntity-1.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{}}}],["testobject",{"_index":32,"title":{"classes/TestObject.html":{},"classes/TestObject-1.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{}}}],["thank",{"_index":681,"title":{},"body":{"index.html":{}}}],["this.repo.count(query",{"_index":185,"title":{},"body":{"classes/EntityReadService.html":{}}}],["this.repo.createquerybuilder().relation(rn).of(id).add(rid",{"_index":234,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["this.repo.createquerybuilder().relation(rn).of(id).remove(rid",{"_index":235,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["this.repo.createquerybuilder().relation(rn).of(id).set(null",{"_index":237,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["this.repo.createquerybuilder().relation(rn).of(id).set(rid",{"_index":236,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["this.repo.delete(id",{"_index":230,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["this.repo.find(query",{"_index":179,"title":{},"body":{"classes/EntityReadService.html":{}}}],["this.repo.findone(query",{"_index":182,"title":{},"body":{"classes/EntityReadService.html":{}}}],["this.repo.findoneby",{"_index":183,"title":{},"body":{"classes/EntityReadService.html":{}}}],["this.repo.save(entities",{"_index":228,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["this.repo.save(entity",{"_index":227,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["this.repo.softdelete(id",{"_index":231,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["this.repo.update(id",{"_index":229,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["through",{"_index":526,"title":{},"body":{"index.html":{}}}],["time",{"_index":615,"title":{},"body":{"index.html":{}}}],["timestamp",{"_index":494,"title":{},"body":{"miscellaneous/functions.html":{}}}],["todo",{"_index":741,"title":{"todo.html":{}},"body":{}}],["toward",{"_index":701,"title":{},"body":{"index.html":{}}}],["traffic",{"_index":585,"title":{},"body":{"index.html":{}}}],["transfer",{"_index":663,"title":{},"body":{"index.html":{}}}],["transform",{"_index":484,"title":{},"body":{"miscellaneous/functions.html":{}}}],["transformations",{"_index":662,"title":{},"body":{"index.html":{}}}],["transformed",{"_index":551,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":409,"title":{},"body":{"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["transformer.ts",{"_index":353,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["transformers",{"_index":659,"title":{},"body":{"index.html":{}}}],["true",{"_index":52,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/CommonQueryDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"miscellaneous/functions.html":{}}}],["type",{"_index":12,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["type.ts",{"_index":348,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["typealiases",{"_index":743,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeorm",{"_index":96,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/EntityReadService.html":{},"classes/TableNamingStrategy.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["typeorm/query",{"_index":223,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["typeorom",{"_index":668,"title":{},"body":{"index.html":{}}}],["types",{"_index":473,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["undefined",{"_index":300,"title":{},"body":{"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{}}}],["unique",{"_index":455,"title":{},"body":{"miscellaneous/functions.html":{}}}],["uniques",{"_index":453,"title":{},"body":{"miscellaneous/functions.html":{}}}],["unnecessary",{"_index":609,"title":{},"body":{"index.html":{}}}],["unset",{"_index":366,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["unsetrelation",{"_index":195,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["unsetrelation(relation",{"_index":213,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["unsetrelationparam",{"_index":214,"title":{},"body":{"classes/EntityWriteService.html":{},"miscellaneous/functions.html":{}}}],["up",{"_index":696,"title":{},"body":{"index.html":{}}}],["update",{"_index":196,"title":{},"body":{"classes/EntityWriteService.html":{},"classes/UpdateResultDto.html":{}}}],["update(id",{"_index":216,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["updatedat",{"_index":76,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseView.html":{}}}],["updatedatecolumn",{"_index":95,"title":{},"body":{"classes/BaseEntity.html":{}}}],["updateresult",{"_index":225,"title":{},"body":{"classes/EntityWriteService.html":{},"classes/UpdateResultDto.html":{}}}],["updateresultdto",{"_index":328,"title":{"classes/UpdateResultDto.html":{}},"body":{"classes/UpdateResultDto.html":{},"coverage.html":{}}}],["updates",{"_index":704,"title":{},"body":{"index.html":{}}}],["upper",{"_index":588,"title":{},"body":{"index.html":{}}}],["use",{"_index":670,"title":{},"body":{"index.html":{}}}],["useful",{"_index":688,"title":{},"body":{"index.html":{}}}],["users",{"_index":713,"title":{},"body":{"index.html":{}}}],["using",{"_index":522,"title":{},"body":{"index.html":{},"properties.html":{}}}],["utilization",{"_index":570,"title":{},"body":{"index.html":{}}}],["validated",{"_index":518,"title":{},"body":{"index.html":{},"properties.html":{}}}],["validation",{"_index":430,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["validationconstraints",{"_index":252,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["validationconstraintsdto",{"_index":249,"title":{"classes/ValidationConstraintsDto.html":{}},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{}}}],["validationerrordto",{"_index":266,"title":{"classes/ValidationErrorDto.html":{}},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{}}}],["validationerrorresult",{"_index":253,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["validator",{"_index":411,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["value",{"_index":11,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["valuetransformer",{"_index":481,"title":{},"body":{"miscellaneous/functions.html":{}}}],["variable",{"_index":374,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":746,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":727,"title":{},"body":{"properties.html":{}}}],["versions",{"_index":707,"title":{},"body":{"index.html":{}}}],["view",{"_index":499,"title":{},"body":{"miscellaneous/functions.html":{}}}],["viewcolumn",{"_index":126,"title":{},"body":{"classes/BaseView.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["viewcolumn(options",{"_index":486,"title":{},"body":{"miscellaneous/functions.html":{}}}],["viewcolumn({type",{"_index":121,"title":{},"body":{"classes/BaseView.html":{}}}],["viewentity",{"_index":361,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["viewentity(expression",{"_index":488,"title":{},"body":{"miscellaneous/functions.html":{}}}],["volume",{"_index":542,"title":{},"body":{"index.html":{}}}],["well",{"_index":698,"title":{},"body":{"index.html":{}}}],["whereoption",{"_index":437,"title":{},"body":{"miscellaneous/functions.html":{}}}],["wherequerytransformer",{"_index":391,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["wherequerytransformer(columns",{"_index":500,"title":{},"body":{"miscellaneous/functions.html":{}}}],["wherequerytransformeroptions",{"_index":392,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["whether",{"_index":497,"title":{},"body":{"miscellaneous/functions.html":{}}}],["widely",{"_index":529,"title":{},"body":{"index.html":{}}}],["withdeleted",{"_index":132,"title":{},"body":{"classes/CommonQueryDto.html":{}}}],["within",{"_index":513,"title":{},"body":{"index.html":{},"properties.html":{}}}],["work_mem",{"_index":640,"title":{},"body":{"index.html":{}}}],["write",{"_index":188,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["yes",{"_index":289,"title":{},"body":{"classes/TableNamingStrategy.html":{},"miscellaneous/functions.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"entities/AttributeRelation.html":{"url":"entities/AttributeRelation.html","title":"entity - AttributeRelation","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  AttributeRelation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/better-sqlite3.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                key\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:28\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Column, Entity, Relation } from '../decorator/index.js';\nimport { BaseEntity } from '../entity/index.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) key: string;\n  @Column({ databaseType: 'sqlite', type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) string: string;\n  @Column({ databaseType: 'sqlite', type: 'integer' }) integer: number;\n  @Column({ databaseType: 'sqlite', type: 'number' }) number: number;\n  @Column({ databaseType: 'sqlite', type: 'boolean' }) boolean: boolean;\n  @Column({ databaseType: 'sqlite', type: 'bigint' }) bigint: bigint;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'object',\n    target: () => TestObject,\n  })\n  object: TestObject;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'array',\n    items: { type: 'string' },\n  })\n  array: string[];\n  @Column({ databaseType: 'sqlite', type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/AttributeRelation-1.html":{"url":"entities/AttributeRelation-1.html","title":"entity - AttributeRelation-1","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  AttributeRelation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/postgres.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                key\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:28\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Column, Entity, Relation } from '../decorator/index.js';\nimport { BaseEntity } from '../entity/index.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ type: 'string' }) key: string;\n  @Column({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ type: 'string' }) string: string;\n  @Column({ type: 'integer' }) integer: number;\n  @Column({ type: 'number' }) number: number;\n  @Column({ type: 'boolean' }) boolean: boolean;\n  @Column({ type: 'bigint' }) bigint: bigint;\n  @Column({ type: 'object', target: () => TestObject }) object: TestObject;\n  @Column({ type: 'array', items: { type: 'string' } }) array: string[];\n  @Column({ type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/entity/base.ts\n        \n\n\n            \n                Description\n            \n            \n                All entities extends this entity. The entity provides id, createdAt, updatedAt, and deletedAt columns\n\n            \n\n            \n                Extends\n            \n            \n                            BaseIdEntity\n            \n\n            \n                Implements\n            \n            \n                        BaseModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'date'})@CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/entity/base.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'date'})@DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/entity/base.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'date'})@UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/entity/base.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'integer'})@PrimaryGeneratedColumn()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseIdEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseIdEntity:7\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Property } from '@puq/property';\nimport { BaseModel } from '@puq/type';\nimport { CreateDateColumn, DeleteDateColumn, UpdateDateColumn } from 'typeorm';\nimport { BaseIdEntity } from './base-id.js';\n\n/**\n * All entities extends this entity. The entity provides id, createdAt, updatedAt, and deletedAt columns\n */\nexport class BaseEntity extends BaseIdEntity implements BaseModel {\n  @Property({ type: 'date' })\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @Property({ type: 'date' })\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @Property({ type: 'date' })\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\nexport const BASE_ENTITY_COLUMNS = Object.keys(new BaseEntity());\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntityService.html":{"url":"classes/BaseEntityService.html","title":"class - BaseEntityService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/service/base.ts\n        \n\n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/lib/service/base.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repo\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Repository } from 'typeorm';\nimport { BaseEntity } from '../entity/base.js';\n\nexport class BaseEntityService {\n  constructor(protected readonly repo: Repository) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseIdEntity.html":{"url":"classes/BaseIdEntity.html","title":"class - BaseIdEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseIdEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/entity/base-id.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'integer'})@PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/entity/base-id.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Property } from '@puq/property';\nimport { PrimaryGeneratedColumn } from 'typeorm';\n\nexport class BaseIdEntity {\n  @Property({ type: 'integer' })\n  @PrimaryGeneratedColumn()\n  id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseView.html":{"url":"classes/BaseView.html","title":"class - BaseView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/view/base.view.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewColumn({type: 'date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/view/base.view.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewColumn({type: 'date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/view/base.view.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewColumn({type: 'integer'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/view/base.view.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewColumn({type: 'date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/view/base.view.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ViewColumn } from './../decorator/index.js';\n\nexport class BaseView {\n  @ViewColumn({ type: 'integer' }) id: number;\n  @ViewColumn({ type: 'date' }) createdAt: Date;\n  @ViewColumn({ type: 'date' }) updatedAt: Date;\n  @ViewColumn({ type: 'date' }) deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommonQueryDto.html":{"url":"classes/CommonQueryDto.html","title":"class - CommonQueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommonQueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/query/common-query-dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Common query dto\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                withDeleted\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        withDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'boolean', description: 'Include deleted items to the load', default: false, acceptString: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/query/common-query-dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\n\n/**\n * Common query dto\n */\n@Dto()\nexport class CommonQueryDto {\n  @Property({\n    type: 'boolean',\n    description: 'Include deleted items to the load',\n    default: false,\n    acceptString: true,\n  })\n  withDeleted?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CountResultDto.html":{"url":"classes/CountResultDto.html","title":"class - CountResultDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CountResultDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dto/count-result.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Count result\n\n            \n\n\n            \n                Implements\n            \n            \n                        CountResult\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                count\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        count\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'integer', description: 'The number of items mached the query'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/count-result.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { CountResult } from '@puq/type';\n\n/**\n * Count result\n */\n@Dto()\nexport class CountResultDto implements CountResult {\n  @Property({\n    type: 'integer',\n    description: 'The number of items mached the query',\n  })\n  count: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteResultDto.html":{"url":"classes/DeleteResultDto.html","title":"class - DeleteResultDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteResultDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dto/delete-result.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Delete result dto\n\n            \n\n\n            \n                Implements\n            \n            \n                        DeleteResult\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                affected\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        affected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'integer', description: 'The number of items affected by the delete operation'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/delete-result.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { DeleteResult } from '@puq/type';\n\n/**\n * Delete result dto\n */\n@Dto()\nexport class DeleteResultDto implements DeleteResult {\n  @Property({\n    type: 'integer',\n    description: 'The number of items affected by the delete operation',\n  })\n  affected: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EntityReadService.html":{"url":"classes/EntityReadService.html","title":"class - EntityReadService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EntityReadService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/service/read.ts\n        \n\n\n            \n                Description\n            \n            \n                Read service\n\n            \n\n            \n                Extends\n            \n            \n                            BaseEntityService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                count\n                            \n                            \n                                find\n                            \n                            \n                                findOne\n                            \n                            \n                                findOneById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(query: QueryCount)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/read.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        QueryCount\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \nfind(query: QueryMany)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/read.ts:16\n                        \n                    \n\n\n            \n                \n                        Query all entities\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        QueryMany\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(query: QueryOne)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/read.ts:25\n                        \n                    \n\n\n            \n                \n                        Query one entity\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        QueryOne\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneById\n                        \n                    \n                \n            \n            \n                \nfindOneById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/read.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FindOptionsWhere } from 'typeorm';\nimport { BaseEntity } from '../entity/base.js';\nimport { QueryCount, QueryMany, QueryOne } from '@puq/query';\nimport { CountResult } from '@puq/type';\nimport { BaseEntityService } from './base.js';\n\n/**\n * Read service\n */\nexport class EntityReadService extends BaseEntityService {\n  /**\n   * Query all entities\n   */\n  find(query: QueryMany[]>) {\n    return this.repo.find(query);\n  }\n\n  /**\n   * Query one entity\n   * @param query {@linkk QueryOne}\n   * @returns\n   */\n  findOne(query: QueryOne[]>) {\n    return this.repo.findOne(query);\n  }\n\n  findOneById(id: number) {\n    return this.repo.findOneBy({ id } as FindOptionsWhere);\n  }\n\n  async count(query: QueryCount[]>): Promise {\n    return { count: await this.repo.count(query) };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EntityWriteService.html":{"url":"classes/EntityWriteService.html","title":"class - EntityWriteService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EntityWriteService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/service/write.ts\n        \n\n\n            \n                Description\n            \n            \n                Write service\n\n            \n\n            \n                Extends\n            \n            \n                            EntityReadService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addRelation\n                            \n                            \n                                delete\n                            \n                            \n                                    Async\n                                removeRelation\n                            \n                            \n                                save\n                            \n                            \n                                saveMany\n                            \n                            \n                                    Async\n                                setRelation\n                            \n                            \n                                softDelete\n                            \n                            \n                                    Async\n                                unsetRelation\n                            \n                            \n                                update\n                            \n                            \n                                    Async\n                                count\n                            \n                            \n                                find\n                            \n                            \n                                findOne\n                            \n                            \n                                findOneById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    addRelation(relation: RelationParam)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/write.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relation\n                                            \n                                                            RelationParam\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/write.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeRelation(relation: RelationParam)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/write.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relation\n                                            \n                                                            RelationParam\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        save\n                        \n                    \n                \n            \n            \n                \nsave(entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/write.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveMany\n                        \n                    \n                \n            \n            \n                \nsaveMany(entities: T[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/write.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        T[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    setRelation(relation: RelationParam)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/write.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relation\n                                            \n                                                            RelationParam\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        softDelete\n                        \n                    \n                \n            \n            \n                \nsoftDelete(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/write.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        unsetRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    unsetRelation(relation: UnsetRelationParam)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/write.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relation\n                                            \n                                                            UnsetRelationParam\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, entity: QueryDeepPartialEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/write.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                            QueryDeepPartialEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(query: QueryCount)\n                \n            \n\n\n                    \n                        \n                            Inherited from         EntityReadService\n\n                        \n                    \n                    \n                        \n                                Defined in         EntityReadService:33\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        QueryCount\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \nfind(query: QueryMany)\n                \n            \n\n\n                    \n                        \n                            Inherited from         EntityReadService\n\n                        \n                    \n                    \n                        \n                                Defined in         EntityReadService:16\n\n                        \n                    \n\n\n            \n                \n                        Query all entities\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        QueryMany\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(query: QueryOne)\n                \n            \n\n\n                    \n                        \n                            Inherited from         EntityReadService\n\n                        \n                    \n                    \n                        \n                                Defined in         EntityReadService:25\n\n                        \n                    \n\n\n            \n                \n                        Query one entity\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        QueryOne\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneById\n                        \n                    \n                \n            \n            \n                \nfindOneById(id: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         EntityReadService\n\n                        \n                    \n                    \n                        \n                                Defined in         EntityReadService:29\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BaseEntity } from '../entity/base.js';\nimport { QueryDeepPartialEntity } from 'typeorm/query-builder/QueryPartialEntity.js';\nimport { RelationParam, UnsetRelationParam, UpdateResult } from '@puq/type';\nimport { EntityReadService } from './read.js';\n\n/**\n * Write service\n */\nexport class EntityWriteService extends EntityReadService {\n  save(entity: T): Promise {\n    return this.repo.save(entity);\n  }\n\n  saveMany(entities: T[]): Promise {\n    return this.repo.save(entities);\n  }\n\n  update(id: number, entity: QueryDeepPartialEntity) {\n    return this.repo.update(id, entity);\n  }\n\n  delete(id: number) {\n    return this.repo.delete(id);\n  }\n\n  softDelete(id: number) {\n    return this.repo.softDelete(id);\n  }\n\n  async addRelation(relation: RelationParam): Promise {\n    const { id, rid, rn } = relation;\n    await this.repo.createQueryBuilder().relation(rn).of(id).add(rid);\n    return { affected: 1 };\n  }\n\n  async removeRelation(relation: RelationParam): Promise {\n    const { id, rid, rn } = relation;\n    await this.repo.createQueryBuilder().relation(rn).of(id).remove(rid);\n    return { affected: 1 };\n  }\n\n  async setRelation(relation: RelationParam): Promise {\n    const { id, rid, rn } = relation;\n    await this.repo.createQueryBuilder().relation(rn).of(id).set(rid);\n    return { affected: 1 };\n  }\n\n  async unsetRelation(relation: UnsetRelationParam): Promise {\n    const { id, rn } = relation;\n    await this.repo.createQueryBuilder().relation(rn).of(id).set(null);\n    return { affected: 1 };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ManyRelation.html":{"url":"entities/ManyRelation.html","title":"entity - ManyRelation","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ManyRelation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/better-sqlite3.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                many\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        many\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:17\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Column, Entity, Relation } from '../decorator/index.js';\nimport { BaseEntity } from '../entity/index.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) key: string;\n  @Column({ databaseType: 'sqlite', type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) string: string;\n  @Column({ databaseType: 'sqlite', type: 'integer' }) integer: number;\n  @Column({ databaseType: 'sqlite', type: 'number' }) number: number;\n  @Column({ databaseType: 'sqlite', type: 'boolean' }) boolean: boolean;\n  @Column({ databaseType: 'sqlite', type: 'bigint' }) bigint: bigint;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'object',\n    target: () => TestObject,\n  })\n  object: TestObject;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'array',\n    items: { type: 'string' },\n  })\n  array: string[];\n  @Column({ databaseType: 'sqlite', type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ManyRelation-1.html":{"url":"entities/ManyRelation-1.html","title":"entity - ManyRelation-1","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ManyRelation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/postgres.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                many\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        many\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:17\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Column, Entity, Relation } from '../decorator/index.js';\nimport { BaseEntity } from '../entity/index.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ type: 'string' }) key: string;\n  @Column({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ type: 'string' }) string: string;\n  @Column({ type: 'integer' }) integer: number;\n  @Column({ type: 'number' }) number: number;\n  @Column({ type: 'boolean' }) boolean: boolean;\n  @Column({ type: 'bigint' }) bigint: bigint;\n  @Column({ type: 'object', target: () => TestObject }) object: TestObject;\n  @Column({ type: 'array', items: { type: 'string' } }) array: string[];\n  @Column({ type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/OneRelation.html":{"url":"entities/OneRelation.html","title":"entity - OneRelation","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  OneRelation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/better-sqlite3.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                one\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        one\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:12\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Column, Entity, Relation } from '../decorator/index.js';\nimport { BaseEntity } from '../entity/index.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) key: string;\n  @Column({ databaseType: 'sqlite', type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) string: string;\n  @Column({ databaseType: 'sqlite', type: 'integer' }) integer: number;\n  @Column({ databaseType: 'sqlite', type: 'number' }) number: number;\n  @Column({ databaseType: 'sqlite', type: 'boolean' }) boolean: boolean;\n  @Column({ databaseType: 'sqlite', type: 'bigint' }) bigint: bigint;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'object',\n    target: () => TestObject,\n  })\n  object: TestObject;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'array',\n    items: { type: 'string' },\n  })\n  array: string[];\n  @Column({ databaseType: 'sqlite', type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/OneRelation-1.html":{"url":"entities/OneRelation-1.html","title":"entity - OneRelation-1","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  OneRelation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/postgres.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                one\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        one\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:12\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Column, Entity, Relation } from '../decorator/index.js';\nimport { BaseEntity } from '../entity/index.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ type: 'string' }) key: string;\n  @Column({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ type: 'string' }) string: string;\n  @Column({ type: 'integer' }) integer: number;\n  @Column({ type: 'number' }) number: number;\n  @Column({ type: 'boolean' }) boolean: boolean;\n  @Column({ type: 'bigint' }) bigint: bigint;\n  @Column({ type: 'object', target: () => TestObject }) object: TestObject;\n  @Column({ type: 'array', items: { type: 'string' } }) array: string[];\n  @Column({ type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/OwnerRelation.html":{"url":"entities/OwnerRelation.html","title":"entity - OwnerRelation","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  OwnerRelation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/better-sqlite3.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                owner\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:22\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Column, Entity, Relation } from '../decorator/index.js';\nimport { BaseEntity } from '../entity/index.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) key: string;\n  @Column({ databaseType: 'sqlite', type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) string: string;\n  @Column({ databaseType: 'sqlite', type: 'integer' }) integer: number;\n  @Column({ databaseType: 'sqlite', type: 'number' }) number: number;\n  @Column({ databaseType: 'sqlite', type: 'boolean' }) boolean: boolean;\n  @Column({ databaseType: 'sqlite', type: 'bigint' }) bigint: bigint;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'object',\n    target: () => TestObject,\n  })\n  object: TestObject;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'array',\n    items: { type: 'string' },\n  })\n  array: string[];\n  @Column({ databaseType: 'sqlite', type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/OwnerRelation-1.html":{"url":"entities/OwnerRelation-1.html","title":"entity - OwnerRelation-1","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  OwnerRelation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/postgres.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                owner\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:22\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Column, Entity, Relation } from '../decorator/index.js';\nimport { BaseEntity } from '../entity/index.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ type: 'string' }) key: string;\n  @Column({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ type: 'string' }) string: string;\n  @Column({ type: 'integer' }) integer: number;\n  @Column({ type: 'number' }) number: number;\n  @Column({ type: 'boolean' }) boolean: boolean;\n  @Column({ type: 'bigint' }) bigint: bigint;\n  @Column({ type: 'object', target: () => TestObject }) object: TestObject;\n  @Column({ type: 'array', items: { type: 'string' } }) array: string[];\n  @Column({ type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SingleValidationErrorDto.html":{"url":"classes/SingleValidationErrorDto.html","title":"class - SingleValidationErrorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SingleValidationErrorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dto/validation-error.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        SingleValidationError\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                constraints\n                            \n                            \n                                    \n                                    Optional\n                                property\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        constraints\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ValidationConstraintsDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'object', target: () => ValidationConstraintsDto})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        property\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport {\n  SingleValidationError,\n  ValidationConstraints,\n  ValidationErrorResult,\n} from '@puq/type';\n\n@Dto()\nexport class ValidationConstraintsDto implements ValidationConstraints {\n  @Property({ type: 'string' }) min?: string;\n  @Property({ type: 'string' }) max?: string;\n  @Property({ type: 'string' }) minLength?: string;\n  @Property({ type: 'string' }) maxLength?: string;\n  @Property({ type: 'string' }) isString?: string;\n  @Property({ type: 'string' }) isNumber?: string;\n  @Property({ type: 'string' }) isInt?: string;\n  @Property({ type: 'string' }) isBoolean?: string;\n  @Property({ type: 'string' }) isObject?: string;\n  @Property({ type: 'string' }) isArray?: string;\n  @Property({ type: 'string' }) arrayMinSize?: string;\n  @Property({ type: 'string' }) arrayMaxSize?: string;\n}\n\n@Dto()\nexport class SingleValidationErrorDto implements SingleValidationError {\n  @Property({ type: 'string' }) property?: string;\n  @Property({ type: 'object', target: () => ValidationConstraintsDto })\n  constraints?: ValidationConstraintsDto;\n}\n\n@Dto()\nexport class ValidationErrorDto implements ValidationErrorResult {\n  @Property({\n    type: 'array',\n    items: { type: 'object', target: () => SingleValidationErrorDto },\n  })\n  errors?: SingleValidationErrorDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TableNamingStrategy.html":{"url":"classes/TableNamingStrategy.html","title":"class - TableNamingStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TableNamingStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/factory/naming-strategy.ts\n        \n\n\n            \n                Description\n            \n            \n                Databaes table and column naming strategy\n\n            \n\n            \n                Extends\n            \n            \n                        DefaultNamingStrategy\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                joinColumnName\n                            \n                            \n                                    \n                                joinTableColumnName\n                            \n                            \n                                    \n                                joinTableInverseColumnName\n                            \n                            \n                                    \n                                joinTableName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        joinColumnName\n                        \n                    \n                \n            \n            \n                \n                        \n                    joinColumnName(relationName: string, _referencedColumnName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/factory/naming-strategy.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relationName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                _referencedColumnName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        joinTableColumnName\n                        \n                    \n                \n            \n            \n                \n                        \n                    joinTableColumnName(_tableName: string, _propertyName: string, _columnName?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/factory/naming-strategy.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _tableName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                _propertyName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                _columnName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        joinTableInverseColumnName\n                        \n                    \n                \n            \n            \n                \n                        \n                    joinTableInverseColumnName(_tableName: string, _propertyName: string, _columnName?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/factory/naming-strategy.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _tableName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                _propertyName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                _columnName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        joinTableName\n                        \n                    \n                \n            \n            \n                \n                        \n                    joinTableName(firstTableName: string, secondTableName: string, _firstPropertyName: string, _secondPropertyName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/factory/naming-strategy.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                firstTableName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                secondTableName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                _firstPropertyName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                _secondPropertyName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DefaultNamingStrategy } from 'typeorm';\n/**\n * Databaes table and column naming strategy\n */\nexport class TableNamingStrategy extends DefaultNamingStrategy {\n  override joinTableName(\n    firstTableName: string,\n    secondTableName: string,\n    _firstPropertyName: string,\n    _secondPropertyName: string\n  ): string {\n    return `${firstTableName}_${secondTableName}`;\n  }\n\n  override joinColumnName(\n    relationName: string,\n    _referencedColumnName: string\n  ): string {\n    return relationName;\n  }\n\n  override joinTableColumnName(\n    _tableName: string,\n    _propertyName: string,\n    _columnName?: string\n  ): string {\n    return _tableName;\n  }\n\n  override joinTableInverseColumnName(\n    _tableName: string,\n    _propertyName: string,\n    _columnName?: string\n  ): string {\n    return _tableName;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/TestEntity.html":{"url":"entities/TestEntity.html","title":"entity - TestEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  TestEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/better-sqlite3.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                array\n                            \n                            \n                                    \n                                attributes\n                            \n                            \n                                    \n                                bigint\n                            \n                            \n                                    \n                                boolean\n                            \n                            \n                                    \n                                date\n                            \n                            \n                                    \n                                integer\n                            \n                            \n                                    \n                                many\n                            \n                            \n                                    \n                                number\n                            \n                            \n                                    \n                                object\n                            \n                            \n                                    \n                                one\n                            \n                            \n                                    \n                                owner\n                            \n                            \n                                    \n                                string\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        array\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'array', items: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AttributeRelation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Relation({type: 'many-to-many', target: () => AttributeRelation, eager: true, required: false, cascade: undefined, join: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        bigint\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'bigint'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        boolean\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        integer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'integer'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        many\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ManyRelation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Relation({type: 'many-to-many', target: () => ManyRelation, eager: true, required: false, onDelete: 'SET NULL', join: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        object\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TestObject\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'object', target: () => TestObject})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        one\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OneRelation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Relation({type: 'many-to-one', target: () => OneRelation, eager: true, required: false, onDelete: 'SET NULL', join: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OwnerRelation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Relation({type: 'many-to-one', target: () => OwnerRelation, eager: true, required: false, onDelete: 'CASCADE', onUpdate: 'CASCADE', join: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        string\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:33\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Column, Entity, Relation } from '../decorator/index.js';\nimport { BaseEntity } from '../entity/index.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) key: string;\n  @Column({ databaseType: 'sqlite', type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) string: string;\n  @Column({ databaseType: 'sqlite', type: 'integer' }) integer: number;\n  @Column({ databaseType: 'sqlite', type: 'number' }) number: number;\n  @Column({ databaseType: 'sqlite', type: 'boolean' }) boolean: boolean;\n  @Column({ databaseType: 'sqlite', type: 'bigint' }) bigint: bigint;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'object',\n    target: () => TestObject,\n  })\n  object: TestObject;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'array',\n    items: { type: 'string' },\n  })\n  array: string[];\n  @Column({ databaseType: 'sqlite', type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/TestEntity-1.html":{"url":"entities/TestEntity-1.html","title":"entity - TestEntity-1","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  TestEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/postgres.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                array\n                            \n                            \n                                    \n                                attributes\n                            \n                            \n                                    \n                                bigint\n                            \n                            \n                                    \n                                boolean\n                            \n                            \n                                    \n                                date\n                            \n                            \n                                    \n                                integer\n                            \n                            \n                                    \n                                many\n                            \n                            \n                                    \n                                number\n                            \n                            \n                                    \n                                object\n                            \n                            \n                                    \n                                one\n                            \n                            \n                                    \n                                owner\n                            \n                            \n                                    \n                                string\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        array\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'array', items: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AttributeRelation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Relation({type: 'many-to-many', target: () => AttributeRelation, eager: true, required: false, cascade: undefined, join: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        bigint\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        boolean\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        integer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'integer'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        many\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ManyRelation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Relation({type: 'many-to-many', target: () => ManyRelation, eager: true, required: false, onDelete: 'SET NULL', join: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        object\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TestObject\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'object', target: () => TestObject})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        one\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OneRelation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Relation({type: 'many-to-one', target: () => OneRelation, eager: true, required: false, onDelete: 'SET NULL', join: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OwnerRelation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Relation({type: 'many-to-one', target: () => OwnerRelation, eager: true, required: false, onDelete: 'CASCADE', onUpdate: 'CASCADE', join: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        string\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:33\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Column, Entity, Relation } from '../decorator/index.js';\nimport { BaseEntity } from '../entity/index.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ type: 'string' }) key: string;\n  @Column({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ type: 'string' }) string: string;\n  @Column({ type: 'integer' }) integer: number;\n  @Column({ type: 'number' }) number: number;\n  @Column({ type: 'boolean' }) boolean: boolean;\n  @Column({ type: 'bigint' }) bigint: bigint;\n  @Column({ type: 'object', target: () => TestObject }) object: TestObject;\n  @Column({ type: 'array', items: { type: 'string' } }) array: string[];\n  @Column({ type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestObject.html":{"url":"classes/TestObject.html","title":"class - TestObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/better-sqlite3.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Column, Entity, Relation } from '../decorator/index.js';\nimport { BaseEntity } from '../entity/index.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) key: string;\n  @Column({ databaseType: 'sqlite', type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) string: string;\n  @Column({ databaseType: 'sqlite', type: 'integer' }) integer: number;\n  @Column({ databaseType: 'sqlite', type: 'number' }) number: number;\n  @Column({ databaseType: 'sqlite', type: 'boolean' }) boolean: boolean;\n  @Column({ databaseType: 'sqlite', type: 'bigint' }) bigint: bigint;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'object',\n    target: () => TestObject,\n  })\n  object: TestObject;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'array',\n    items: { type: 'string' },\n  })\n  array: string[];\n  @Column({ databaseType: 'sqlite', type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestObject-1.html":{"url":"classes/TestObject-1.html","title":"class - TestObject-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/postgres.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Column, Entity, Relation } from '../decorator/index.js';\nimport { BaseEntity } from '../entity/index.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ type: 'string' }) key: string;\n  @Column({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ type: 'string' }) string: string;\n  @Column({ type: 'integer' }) integer: number;\n  @Column({ type: 'number' }) number: number;\n  @Column({ type: 'boolean' }) boolean: boolean;\n  @Column({ type: 'bigint' }) bigint: bigint;\n  @Column({ type: 'object', target: () => TestObject }) object: TestObject;\n  @Column({ type: 'array', items: { type: 'string' } }) array: string[];\n  @Column({ type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateResultDto.html":{"url":"classes/UpdateResultDto.html","title":"class - UpdateResultDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateResultDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dto/update-result.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Update result\n\n            \n\n\n            \n                Implements\n            \n            \n                        UpdateResult\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                affected\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        affected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'integer', description: 'The number of items affected by the update operation'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/update-result.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { UpdateResult } from '@puq/type';\n\n/**\n * Update result\n */\n@Dto()\nexport class UpdateResultDto implements UpdateResult {\n  @Property({\n    type: 'integer',\n    description: 'The number of items affected by the update operation',\n  })\n  affected: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationConstraintsDto.html":{"url":"classes/ValidationConstraintsDto.html","title":"class - ValidationConstraintsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationConstraintsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dto/validation-error.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ValidationConstraints\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                arrayMaxSize\n                            \n                            \n                                    \n                                    Optional\n                                arrayMinSize\n                            \n                            \n                                    \n                                    Optional\n                                isArray\n                            \n                            \n                                    \n                                    Optional\n                                isBoolean\n                            \n                            \n                                    \n                                    Optional\n                                isInt\n                            \n                            \n                                    \n                                    Optional\n                                isNumber\n                            \n                            \n                                    \n                                    Optional\n                                isObject\n                            \n                            \n                                    \n                                    Optional\n                                isString\n                            \n                            \n                                    \n                                    Optional\n                                max\n                            \n                            \n                                    \n                                    Optional\n                                maxLength\n                            \n                            \n                                    \n                                    Optional\n                                min\n                            \n                            \n                                    \n                                    Optional\n                                minLength\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        arrayMaxSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        arrayMinSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isBoolean\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isInt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isObject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isString\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        max\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        maxLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        min\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        minLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport {\n  SingleValidationError,\n  ValidationConstraints,\n  ValidationErrorResult,\n} from '@puq/type';\n\n@Dto()\nexport class ValidationConstraintsDto implements ValidationConstraints {\n  @Property({ type: 'string' }) min?: string;\n  @Property({ type: 'string' }) max?: string;\n  @Property({ type: 'string' }) minLength?: string;\n  @Property({ type: 'string' }) maxLength?: string;\n  @Property({ type: 'string' }) isString?: string;\n  @Property({ type: 'string' }) isNumber?: string;\n  @Property({ type: 'string' }) isInt?: string;\n  @Property({ type: 'string' }) isBoolean?: string;\n  @Property({ type: 'string' }) isObject?: string;\n  @Property({ type: 'string' }) isArray?: string;\n  @Property({ type: 'string' }) arrayMinSize?: string;\n  @Property({ type: 'string' }) arrayMaxSize?: string;\n}\n\n@Dto()\nexport class SingleValidationErrorDto implements SingleValidationError {\n  @Property({ type: 'string' }) property?: string;\n  @Property({ type: 'object', target: () => ValidationConstraintsDto })\n  constraints?: ValidationConstraintsDto;\n}\n\n@Dto()\nexport class ValidationErrorDto implements ValidationErrorResult {\n  @Property({\n    type: 'array',\n    items: { type: 'object', target: () => SingleValidationErrorDto },\n  })\n  errors?: SingleValidationErrorDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationErrorDto.html":{"url":"classes/ValidationErrorDto.html","title":"class - ValidationErrorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationErrorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dto/validation-error.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ValidationErrorResult\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                errors\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        errors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SingleValidationErrorDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'array', items: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport {\n  SingleValidationError,\n  ValidationConstraints,\n  ValidationErrorResult,\n} from '@puq/type';\n\n@Dto()\nexport class ValidationConstraintsDto implements ValidationConstraints {\n  @Property({ type: 'string' }) min?: string;\n  @Property({ type: 'string' }) max?: string;\n  @Property({ type: 'string' }) minLength?: string;\n  @Property({ type: 'string' }) maxLength?: string;\n  @Property({ type: 'string' }) isString?: string;\n  @Property({ type: 'string' }) isNumber?: string;\n  @Property({ type: 'string' }) isInt?: string;\n  @Property({ type: 'string' }) isBoolean?: string;\n  @Property({ type: 'string' }) isObject?: string;\n  @Property({ type: 'string' }) isArray?: string;\n  @Property({ type: 'string' }) arrayMinSize?: string;\n  @Property({ type: 'string' }) arrayMaxSize?: string;\n}\n\n@Dto()\nexport class SingleValidationErrorDto implements SingleValidationError {\n  @Property({ type: 'string' }) property?: string;\n  @Property({ type: 'object', target: () => ValidationConstraintsDto })\n  constraints?: ValidationConstraintsDto;\n}\n\n@Dto()\nexport class ValidationErrorDto implements ValidationErrorResult {\n  @Property({\n    type: 'array',\n    items: { type: 'object', target: () => SingleValidationErrorDto },\n  })\n  errors?: SingleValidationErrorDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/lib/common/pick-column-type.ts\n            \n            function\n            pickColumnType\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/common/pick-transformer.ts\n            \n            function\n            pickTransformer\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/decorator/column.ts\n            \n            function\n            Column\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/decorator/entity.ts\n            \n            function\n            Entity\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/decorator/relation.ts\n            \n            function\n            Relation\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/decorator/view-column.ts\n            \n            function\n            ViewColumn\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/decorator/view-entity.ts\n            \n            function\n            ViewEntity\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/dto/count-result.dto.ts\n            \n            class\n            CountResultDto\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                        src/lib/dto/create-relation-param-dto.ts\n            \n            function\n            CreateRelationParamDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/dto/create-unset-relation-param-dto.ts\n            \n            function\n            CreateUnsetRelationParamDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/dto/delete-result.dto.ts\n            \n            class\n            DeleteResultDto\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/lib/dto/update-result.dto.ts\n            \n            class\n            UpdateResultDto\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/lib/dto/validation-error.dto.ts\n            \n            class\n            SingleValidationErrorDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/dto/validation-error.dto.ts\n            \n            class\n            ValidationConstraintsDto\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/lib/dto/validation-error.dto.ts\n            \n            class\n            ValidationErrorDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/entity/base-id.ts\n            \n            class\n            BaseIdEntity\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/entity/base.ts\n            \n            class\n            BaseEntity\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                        src/lib/entity/base.ts\n            \n            variable\n            BASE_ENTITY_COLUMNS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/factory/naming-strategy.ts\n            \n            class\n            TableNamingStrategy\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/lib/integration/better-sqlite3.ts\n            \n            entity\n            AttributeRelation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/better-sqlite3.ts\n            \n            entity\n            ManyRelation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/better-sqlite3.ts\n            \n            entity\n            OneRelation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/better-sqlite3.ts\n            \n            entity\n            OwnerRelation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/better-sqlite3.ts\n            \n            entity\n            TestEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/better-sqlite3.ts\n            \n            class\n            TestObject\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/integration/postgres.ts\n            \n            entity\n            AttributeRelation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/postgres.ts\n            \n            entity\n            ManyRelation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/postgres.ts\n            \n            entity\n            OneRelation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/postgres.ts\n            \n            entity\n            OwnerRelation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/postgres.ts\n            \n            entity\n            TestEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/postgres.ts\n            \n            class\n            TestObject\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/query/common-query-dto.ts\n            \n            class\n            CommonQueryDto\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                        src/lib/query/create-find-operator.ts\n            \n            function\n            createFindOperator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/query/create-query-count-dto.ts\n            \n            function\n            CreateQueryCountDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/query/create-query-count-dto.ts\n            \n            type alias\n            CreateQueryCountDtoOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/query/create-query-many-dto.ts\n            \n            function\n            CreateQueryManyDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/query/create-query-many-dto.ts\n            \n            type alias\n            QueryManyDtoOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/query/create-query-one-dto.ts\n            \n            function\n            CreateQueryOneDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/query/create-query-one-dto.ts\n            \n            type alias\n            QueryOneDtoOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/query/create-where-option-dto.ts\n            \n            function\n            CreateWhereOptionDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/query/select-transformer.ts\n            \n            function\n            SelectTransformer\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/query/where-query-transformer.ts\n            \n            function\n            WhereQueryTransformer\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/query/where-query-transformer.ts\n            \n            type alias\n            WhereQueryTransformerOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/service/base.ts\n            \n            class\n            BaseEntityService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/service/read.ts\n            \n            class\n            EntityReadService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/lib/service/write.ts\n            \n            class\n            EntityWriteService\n            \n                21 %\n                (3/14)\n            \n        \n        \n            \n                \n                src/lib/view/base.view.ts\n            \n            class\n            BaseView\n            \n                0 %\n                (0/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @puq/names : ^0.3.1\n        \n            @puq/property : ^0.3.1\n        \n            @puq/query : ^0.3.1\n        \n            @puq/type : ^0.3.1\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @nestjs/common : ^11.0.10\n        \n            @nestjs/swagger : ^11.0.3\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            reflect-metadata : ^0.2.2\n        \n            typeorm : ^0.3.20\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Column   (src/.../column.ts)\n                        \n                        \n                            createFindOperator   (src/.../create-find-operator.ts)\n                        \n                        \n                            CreateQueryCountDto   (src/.../create-query-count-dto.ts)\n                        \n                        \n                            CreateQueryManyDto   (src/.../create-query-many-dto.ts)\n                        \n                        \n                            CreateQueryOneDto   (src/.../create-query-one-dto.ts)\n                        \n                        \n                            CreateRelationParamDto   (src/.../create-relation-param-dto.ts)\n                        \n                        \n                            CreateUnsetRelationParamDto   (src/.../create-unset-relation-param-dto.ts)\n                        \n                        \n                            CreateWhereOptionDto   (src/.../create-where-option-dto.ts)\n                        \n                        \n                            Entity   (src/.../entity.ts)\n                        \n                        \n                            pickColumnType   (src/.../pick-column-type.ts)\n                        \n                        \n                            pickTransformer   (src/.../pick-transformer.ts)\n                        \n                        \n                            Relation   (src/.../relation.ts)\n                        \n                        \n                            SelectTransformer   (src/.../select-transformer.ts)\n                        \n                        \n                            ViewColumn   (src/.../view-column.ts)\n                        \n                        \n                            ViewEntity   (src/.../view-entity.ts)\n                        \n                        \n                            WhereQueryTransformer   (src/.../where-query-transformer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/decorator/column.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Column\n                        \n                    \n                \n            \n            \n                \nColumn(options: PropertyOptions)\n                \n            \n\n\n\n\n            \n                \n                        Typeorm Column decorator with validation and documentation capabilities.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        PropertyOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    proeprty options PropertyOptions\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     PropertyDecorator\n\n                        \n                            \n                                proeprty decorator {@link PropertyDecorator}\n\n                            \n                \n            \n        \n    \n    src/lib/query/create-find-operator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createFindOperator\n                        \n                    \n                \n            \n            \n                \ncreateFindOperator(query: WhereOption)\n                \n            \n\n\n\n\n            \n                \n                        Create FindOperator from WhereOption\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        WhereOption\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    WhereOption\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Record>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/query/create-query-count-dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CreateQueryCountDto\n                        \n                    \n                \n            \n            \n                \nCreateQueryCountDto(options: CreateQueryCountDtoOptions)\n                \n            \n\n\n\n\n            \n                \n                        Create a count query dto for the entity\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            CreateQueryCountDtoOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    CreateQueryCountDtoOptions\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Type\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/query/create-query-many-dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CreateQueryManyDto\n                        \n                    \n                \n            \n            \n                \nCreateQueryManyDto(options: QueryManyDtoOptions)\n                \n            \n\n\n\n\n            \n                \n                        Create QueryMany dto\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            QueryManyDtoOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    QueryManyDtoOptions\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Type>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/query/create-query-one-dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CreateQueryOneDto\n                        \n                    \n                \n            \n            \n                \nCreateQueryOneDto(options: QueryOneDtoOptions)\n                \n            \n\n\n\n\n            \n                \n                        Create QueryOne dto\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            QueryOneDtoOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    QueryOneDtoOptions\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Type>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/dto/create-relation-param-dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CreateRelationParamDto\n                        \n                    \n                \n            \n            \n                \nCreateRelationParamDto(relations: Keys)\n                \n            \n\n\n\n\n            \n                \n                        Create DTO for RelationParam\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                relations\n                                            \n                                                        Keys\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    relation names of the entity\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Type\n\n                        \n                            \n                                Class {@link Type}\n\n                            \n                \n            \n        \n    \n    src/lib/dto/create-unset-relation-param-dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CreateUnsetRelationParamDto\n                        \n                    \n                \n            \n            \n                \nCreateUnsetRelationParamDto(relations: Keys)\n                \n            \n\n\n\n\n            \n                \n                        Create DTO for UnsetRelationParam\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                relations\n                                            \n                                                        Keys\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    relation names of the entity\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Type\n\n                        \n                            \n                                Class {@link Type}\n\n                            \n                \n            \n        \n    \n    src/lib/query/create-where-option-dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CreateWhereOptionDto\n                        \n                    \n                \n            \n            \n                \nCreateWhereOptionDto(columns: Keys)\n                \n            \n\n\n\n\n            \n                \n                        Create WhereOption dto for the entity\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                columns\n                                            \n                                                        Keys\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    queriable columns\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Type>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/decorator/entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Entity\n                        \n                    \n                \n            \n            \n                \nEntity(uniques?)\n                \n            \n\n\n\n\n            \n                \n                        Typeorm entity decorator with transformer capability\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                uniques\n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    Composite unique constraint must be set on entity classes and must specify entity's fields to be unique\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ClassDecorator\n\n                        \n                            \n                                \n{@link ClassDecorator}\n\n\n                            \n                \n            \n        \n    \n    src/lib/common/pick-column-type.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        pickColumnType\n                        \n                    \n                \n            \n            \n                \npickColumnType(options: PropertyOptions)\n                \n            \n\n\n\n\n            \n                \n                        Pick column type based on provided data type and database driver\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        PropertyOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ColumnType\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/common/pick-transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        pickTransformer\n                        \n                    \n                \n            \n            \n                \npickTransformer(options: PropertyOptions)\n                \n            \n\n\n\n\n            \n                \n                        Some databases does not support a certain data types such as sqlite does not suppor array type.\nThis function picks the transformer to make none-primitive data types compatible with the provided database driver\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        PropertyOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    property options PropertyOptions\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValueTransformer | undefined\n\n                        \n                            \n                                the {@link ValueTransformer}\n\n                            \n                \n            \n        \n    \n    src/lib/decorator/relation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Relation\n                        \n                    \n                \n            \n            \n                \nRelation(options: RelationOptions)\n                \n            \n\n\n\n\n            \n                \n                        Relation decorator\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            RelationOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    relation options RelationOptions\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     PropertyDecorator\n\n                        \n                            \n                                \n{@link PropertyDecorator}\n\n\n                            \n                \n            \n        \n    \n    src/lib/query/select-transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SelectTransformer\n                        \n                    \n                \n            \n            \n                \nSelectTransformer()\n                \n            \n\n\n\n\n            \n                \n                        Transform the select query param into string array\n\n\n                        \n                            Returns :     PropertyDecorator\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/decorator/view-column.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ViewColumn\n                        \n                    \n                \n            \n            \n                \nViewColumn(options: PropertyOptions)\n                \n            \n\n\n\n\n            \n                \n                        TypeORM ___ViewColumn decorator with documentation capability\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        PropertyOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    property options PropertyOptions\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     PropertyDecorator\n\n                        \n                            \n                                \n{@link PropertyDecorator}\n\n\n                            \n                \n            \n        \n    \n    src/lib/decorator/view-entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ViewEntity\n                        \n                    \n                \n            \n            \n                \nViewEntity(expression, selectBaseEntity)\n                \n            \n\n\n\n\n            \n                \n                        TypeORM ___ViewEntity decorator with prebuilt query builder that coverts id and timestamp columns.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expression\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    SelectQueryBuilder query builder\n\n                                            \n                                        \n                                        \n                                                selectBaseEntity\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                            \n                                                    defined whether the fields of BaseEntity class are added or not to the view\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ClassDecorator\n\n                        \n                            \n                                class decorator {@link ClassDecorator}\n\n                            \n                \n            \n        \n    \n    src/lib/query/where-query-transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        WhereQueryTransformer\n                        \n                    \n                \n            \n            \n                \nWhereQueryTransformer(columns: Keys)\n                \n            \n\n\n\n\n            \n                \n                        Parse where-query string into typeorm where object.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                columns\n                                            \n                                                        Keys\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     PropertyDecorator\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n@puq/orm\nSummary\nThe custom TypeORM decorators extend standard entity definitions by seamlessly integrating validation and API documentation within a single decorator. These decorators ensure that database entities are not only mapped efficiently but also validated at the DTO level while providing clear API documentation using Swagger.\nDatabase entity development is streamlined through the integration of intuitive and widely adopted implementations within decorators. These decorators are paired with class-validator, class-transformer, and @nestjs/swagger, enhancing efficiency in the development process. This approach achieves a minimum reduction of 60% in both code volume and associated errors.\nInstall\nExample :  pnpm add @puq/ormSQLite\n\nSQLite does not support array or object data types. To accommodate this limitation, data must be transformed into a string format.\n\nPostgres Datasource\nTo optimize datasource performance, implement the following configuration settings:\n\npoolSize: Set to 50. This defines the maximum number of connections allowed in the pool, ensuring efficient resource utilization while accommodating peak demand.\nmin: Set to 10. This specifies the minimum number of connections maintained in the pool, keeping a baseline of readily available connections to reduce latency during low-traffic periods.\nmax: Set to 50. This establishes the upper limit of open connections, balancing system performance with resource availability to prevent overloading.\nidleTimeoutMillis: Configure to 30,000 milliseconds. This determines the duration an idle connection remains open before being closed, minimizing unnecessary resource consumption during periods of inactivity.\nconnectionTimeoutMillis: Configure to 2,000 milliseconds. This sets the maximum time allowed to establish a connection, enhancing application responsiveness by preventing prolonged delays.\n\nPostgres Server\nAdjust the PostgreSQL server configuration file (postgres.conf) with the following settings:\n\nmax_connections: Set to 200 to accommodate both application and administrative connections, ensuring sufficient capacity.\nshared_buffers: Allocate 25-40% of the server's RAM for optimal performance, configured to 4GB.\nwork_mem: Define the memory allocation per query or sort operation, set to 16MB to enhance query efficiency.\n\nNumbers\n\nThe number data type is stored as a string (numeric) to ensure the preservation of precision.\nThe number value is not converted to a JavaScript number to avoid disrupting query operations.\n\nTypeorm Column Transformer\n\nRefrain from using TypeORM column transformers, as they may interfere with query operations. Instead, implement transformations within the data transfer layer.\n\nHashing and encrypion\n\nHashing should be done in database layer. Typeorom column transformer is safe to use\nEncryption is done in controller layer\nFor handling encrypted data, implement a dedicated data transfer object (DTO) class and apply it subsequent to the execution of the initial DTO class within the controller\n\nFunding\nThank you for using @puq/orm It's an open-source project, and maintaining it takes time and effort. If you find this library useful, please consider supporting its ongoing development. Your contributions help ensure that the project stays up-to-date, secure, and well-maintained.\nInstant Funding\nYour funding will go toward\n\nBug fixes and updates to ensure compatibility with the latest versions of dependencies.\nNew features that will make the library even more powerful.\nDocumentation improvements to help users get the most out of [Your Library Name].\nGeneral maintenance to keep the library running smoothly and securely.\n\nContact to the developer: [robert.brightline@gmail.com]\nSupport the developer\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    10 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    16 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.3.1\n        \n            Description : The custom TypeORM decorators extend standard entity definitions by seamlessly integrating validation and API documentation within a single decorator. These decorators ensure that database entities are not only mapped efficiently but also validated at the DTO level while providing clear API documentation using Swagger.\n        \n            Keywords : puq, orm\n        \n            Homepage : https://rbrightline.github.io/puq/orm\n        \n            Bugs : https://rbrightline.github.io\n        \n            License : MIT\n        \n            Repository : https://github.com/rbrightline/puq/tree/main\n        \n            Author : Robert Brightline\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTASKS\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CreateQueryCountDtoOptions   (src/.../create-query-count-dto.ts)\n                        \n                        \n                            QueryManyDtoOptions   (src/.../create-query-many-dto.ts)\n                        \n                        \n                            QueryOneDtoOptions   (src/.../create-query-one-dto.ts)\n                        \n                        \n                            WhereQueryTransformerOptions   (src/.../where-query-transformer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/query/create-query-count-dto.ts\n    \n    \n        \n            \n                \n                    \n                    CreateQueryCountDtoOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/lib/query/create-query-many-dto.ts\n    \n    \n        \n            \n                \n                    \n                    QueryManyDtoOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/lib/query/create-query-one-dto.ts\n    \n    \n        \n            \n                \n                    \n                    QueryOneDtoOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/lib/query/where-query-transformer.ts\n    \n    \n        \n            \n                \n                    \n                    WhereQueryTransformerOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BASE_ENTITY_COLUMNS   (src/.../base.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/entity/base.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BASE_ENTITY_COLUMNS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.keys(new BaseEntity())\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
