var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/BaseEntity.html",[0,0.108,1,1.096]],["body/classes/BaseEntity.html",[0,0.097,1,1.582,2,0.497,3,0.664,4,0.577,5,0.497,6,1.718,7,0.664,8,1.789,9,1.789,10,1.711,11,3.524,12,2.341,13,3.719,14,3.719,15,3.719,16,2.842,17,2.057,18,4.055,19,0.424,20,1.208,21,0.701,22,0.05,23,3.446,24,1.503,25,3.537,26,2.53,27,1.152,28,2.53,29,2.53,30,2.53,31,1.208,32,2.53,33,2.53,34,2.53,35,2.53,36,1.065,37,3.719,38,1.124,39,0.987,40,3.524,41,3.524,42,3.524,43,3.524,44,0.867,45,0.926,46,1.284,47,2.04,48,1.718,49,2.04,50,0.032,51,0.032]],["title/classes/BaseEntityService.html",[0,0.108,52,1.64]],["body/classes/BaseEntityService.html",[0,0.139,1,1.412,2,0.712,3,0.951,4,0.826,5,0.712,21,0.508,22,0.05,27,0.951,36,1.171,44,1.241,45,0.951,50,0.041,51,0.041,52,2.603,53,2.919,54,3.62,55,3.62,56,4.068,57,3.62,58,1.838,59,1.608,60,1.608,61,4.459,62,2.457,63,3.62,64,3.62]],["title/classes/BaseView.html",[0,0.108,65,1.64]],["body/classes/BaseView.html",[0,0.114,2,0.585,3,0.782,4,0.68,5,0.585,12,2.239,13,3.556,14,3.556,15,3.556,19,0.499,20,1.349,21,0.728,22,0.05,23,3.653,24,1.608,27,1.232,31,1.349,36,0.782,45,0.782,46,1.999,50,0.036,51,0.036,65,2.298,66,2.402,67,4.692,68,2.978,69,2.978,70,2.978,71,2.978,72,3.313,73,2.978,74,2.978]],["title/classes/CommonQueryDto.html",[0,0.108,75,1.908]],["body/classes/CommonQueryDto.html",[0,0.121,2,0.621,3,0.829,4,0.72,5,0.621,7,1.192,19,0.529,20,1.402,21,0.574,22,0.05,24,1.082,25,2.546,27,0.829,36,0.829,37,3.298,38,1.403,45,0.829,50,0.037,51,0.037,60,1.818,75,2.777,76,3.298,77,1.645,78,1.843,79,4.09,80,2.801,81,4.537,82,4.799,83,4.09,84,4.09,85,2.387,86,4.09,87,2.777,88,3.298,89,4.09,90,3.298,91,3.157]],["title/classes/CountResultDto.html",[0,0.108,92,1.908]],["body/classes/CountResultDto.html",[0,0.157,2,0.625,3,0.836,4,0.726,5,0.625,7,1.196,17,2.399,19,0.533,20,1.409,21,0.577,22,0.05,24,1.09,27,0.836,31,1.65,36,1.196,38,1.414,39,1.241,45,0.836,46,2.087,50,0.038,51,0.038,77,1.409,85,2.399,92,2.791,93,2.565,94,2.215,95,2.791,96,3.672,97,2.16,98,4.11,99,3.181,100,2.791,101,2.791,102,1.414]],["title/classes/DeleteResultDto.html",[0,0.108,103,1.908]],["body/classes/DeleteResultDto.html",[0,0.157,2,0.621,3,0.829,4,0.72,5,0.621,7,1.192,17,2.387,19,0.529,20,1.402,21,0.574,22,0.05,24,1.082,27,0.829,31,1.645,36,1.192,38,1.403,39,1.232,45,0.829,46,2.076,50,0.037,51,0.037,85,2.387,95,2.777,97,2.144,100,2.777,101,2.777,102,1.403,103,2.777,104,2.546,105,3.87,106,4.537,107,3.375,108,2.777,109,3.157]],["title/classes/EntityReadService.html",[0,0.108,110,1.64]],["body/classes/EntityReadService.html",[0,0.088,1,0.895,2,0.451,3,0.603,4,0.524,5,0.451,7,0.603,8,1.67,9,1.67,10,1.283,12,1.67,19,0.384,21,0.589,22,0.051,27,1.103,31,1.318,36,1.168,39,0.895,44,0.787,45,0.603,50,0.03,51,0.03,52,2.244,58,2.132,59,1.866,60,1.866,62,1.558,77,1.67,94,1.709,96,1.851,110,1.92,111,1.851,112,3.29,113,2.653,114,2.233,115,3.101,116,1.67,117,2.653,118,2.653,119,2.653,120,3.387,121,2.295,122,2.595,123,2.653,124,2.653,125,2.851,126,2.295,127,2.653,128,3.018,129,2.295,130,1.67,131,2.653,132,2.295,133,3.29,134,1.851,135,2.295,136,2.851,137,2.295,138,1.851,139,2.295,140,2.295,141,2.295,142,1.851,143,2.295]],["title/classes/EntityWriteService.html",[0,0.108,144,1.908]],["body/classes/EntityWriteService.html",[0,0.055,1,0.555,2,0.28,3,0.374,4,0.325,5,0.28,7,0.374,8,1.161,9,1.161,10,1.497,12,2.129,19,0.238,21,0.659,22,0.051,27,1.233,31,1.555,36,0.862,39,0.555,45,0.374,47,2.646,50,0.021,51,0.021,58,2.383,59,2.086,60,2.086,62,0.967,77,1.232,94,1.016,105,1.844,107,2.228,110,2.354,113,1.844,114,1.553,115,3.838,116,1.161,117,1.844,118,1.844,119,1.148,120,1.844,122,2.74,123,3.786,124,1.148,125,1.553,127,1.148,128,1.553,130,0.723,131,1.148,136,2.937,142,2.646,144,1.553,145,1.148,146,2.287,147,2.287,148,2.287,149,2.287,150,2.287,151,2.287,152,2.287,153,2.287,154,1.844,155,2.287,156,3.58,157,1.424,158,2.847,159,2.287,160,1.424,161,2.287,162,1.424,163,2.287,164,3.837,165,1.424,166,2.287,167,1.424,168,2.287,169,1.424,170,2.287,171,1.424,172,2.287,173,2.646,174,1.424,175,2.287,176,3.281,177,1.424,178,3.281,179,1.424,180,1.424,181,1.424,182,1.424,183,1.424,184,1.424,185,1.148,186,1.424,187,1.424,188,1.424,189,1.424,190,1.424,191,1.424,192,2.866,193,3.281,194,1.424,195,3.281,196,1.424,197,1.424,198,1.424]],["title/classes/TableNamingStrategy.html",[0,0.108,199,1.908]],["body/classes/TableNamingStrategy.html",[0,0.083,2,0.423,3,0.566,4,0.491,5,0.423,7,0.566,9,1.595,19,0.361,21,0.572,22,0.05,27,1.071,36,0.566,44,0.738,45,0.566,50,0.029,51,0.029,58,2.07,59,1.812,60,1.812,114,2.133,122,2.38,136,2.768,199,2.133,200,3.496,201,1.737,202,3.142,203,2.534,204,1.834,205,3.142,206,3.142,207,3.709,208,3.709,209,3.709,210,3.709,211,3.709,212,2.154,213,3.796,214,3.709,215,2.154,216,3.709,217,2.154,218,4.527,219,4.527,220,2.154,221,4.527,222,2.534,223,2.154,224,2.154,225,2.154,226,3.709,227,3.709,228,3.709,229,2.154,230,3.142,231,4.077,232,2.154]],["title/classes/UpdateResultDto.html",[0,0.108,233,1.908]],["body/classes/UpdateResultDto.html",[0,0.157,2,0.621,3,0.829,4,0.72,5,0.621,7,1.192,17,2.387,19,0.529,20,1.402,21,0.574,22,0.05,24,1.082,27,0.829,31,1.645,36,1.192,38,1.403,39,1.232,45,0.829,46,2.076,50,0.037,51,0.037,85,2.387,95,2.777,97,2.144,100,2.777,101,2.777,102,1.403,107,3.375,108,2.777,154,3.87,185,3.659,233,2.777,234,2.546,235,3.157]],["title/coverage.html",[236,3.054]],["body/coverage.html",[0,0.186,1,0.771,5,0.389,6,2.002,10,0.771,21,0.587,22,0.05,48,1.342,50,0.027,51,0.027,52,1.154,53,1.594,65,1.154,66,1.594,72,1.342,75,1.342,76,1.594,77,1.637,78,2.728,92,1.342,93,1.594,94,1.31,103,1.342,104,1.594,110,1.154,111,1.594,116,1.003,130,1.497,144,1.342,145,1.594,158,1.342,199,1.342,200,1.594,201,1.594,203,1.594,204,1.154,233,1.342,234,1.594,236,1.594,237,1.342,238,1.976,239,1.976,240,2.845,241,5.179,242,5.142,243,5.142,244,1.594,245,1.594,246,1.594,247,1.594,248,2.378,249,1.594,250,4.674,251,4.389,252,1.594,253,1.594,254,3.154,255,3.911,256,2.378,257,1.594,258,1.594,259,2.949,260,2.949,261,1.976,262,3.173,263,1.594,264,1.594,265,1.594,266,3.911,267,1.342,268,2.002,269,1.594,270,1.342,271,1.594,272,1.342,273,1.594,274,1.594,275,1.594,276,2.395,277,1.594,278,2.002,279,1.594,280,1.594,281,1.976,282,1.594,283,1.976,284,1.976,285,1.976,286,1.976,287,1.594,288,1.976]],["title/dependencies.html",[289,1.912,290,2.286]],["body/dependencies.html",[0,0.167,22,0.051,38,1.555,39,1.365,44,1.199,50,0.04,51,0.04,102,1.555,134,2.822,290,2.965,291,3.499,292,4.02,293,3.499,294,3.499,295,3.499,296,2.822,297,3.499,298,3.499,299,4.366,300,3.499,301,3.499,302,2.822,303,3.499,304,3.499,305,3.499,306,3.499,307,3.499,308,3.499,309,3.499,310,3.499]],["title/miscellaneous/functions.html",[311,1.054,312,2.715]],["body/miscellaneous/functions.html",[2,0.273,7,1.157,9,0.705,10,1.718,12,1.138,16,2.861,19,0.232,21,0.712,22,0.048,44,1.108,50,0.02,51,0.02,58,2.432,59,2.129,60,2.129,65,0.81,72,1.522,77,1.599,78,2.425,80,2.215,87,1.522,88,1.807,90,1.12,94,1.252,102,0.996,116,1.138,122,2.827,125,0.943,128,0.943,130,1.138,138,1.12,156,1.12,158,2.576,173,1.12,204,1.888,213,1.522,222,1.12,240,1.12,244,1.807,245,1.807,246,1.12,247,1.12,248,1.807,249,1.807,252,1.807,253,1.807,256,1.12,257,1.807,258,1.807,262,2.409,263,1.807,264,1.807,265,1.807,267,1.913,268,1.522,269,1.807,270,1.913,271,1.807,272,1.913,273,1.807,274,1.807,275,1.12,276,2.196,277,2.272,278,0.943,279,1.807,311,0.617,312,1.12,313,2.818,314,2.861,315,2.818,316,1.389,317,1.389,318,2.241,319,1.12,320,1.389,321,4.154,322,2.196,323,0.943,324,1.389,325,2.241,326,4.29,327,3.548,328,1.389,329,2.241,330,2.272,331,2.241,332,1.389,333,1.522,334,2.241,335,1.389,336,1.389,337,1.389,338,1.389,339,1.389,340,1.389,341,3.548,342,3.992,343,1.389,344,1.389,345,1.389,346,1.389,347,1.389,348,1.389,349,4.154,350,2.241,351,2.241,352,1.389,353,1.389,354,1.389,355,1.389,356,1.389,357,1.389,358,2.241,359,1.389,360,1.12,361,1.389,362,1.389,363,1.389,364,2.241,365,1.389,366,2.818,367,1.389,368,1.389,369,1.12,370,1.389,371,1.389,372,2.241,373,2.818,374,0.943,375,1.389,376,1.389,377,1.389,378,2.241,379,1.389,380,1.389,381,1.389,382,1.389,383,1.389,384,1.12]],["title/index.html",[19,0.397,385,1.912,386,1.912]],["body/index.html",[0,0.13,4,0.345,5,0.297,8,0.767,10,0.935,21,0.212,22,0.027,23,1.026,24,1.163,31,1.269,44,1.022,50,0.022,51,0.022,59,0.671,77,1.163,80,1.74,102,1.325,108,1.026,116,0.767,204,1.74,213,1.628,237,2.024,254,1.934,282,1.218,287,1.218,290,1.026,296,1.218,302,1.218,322,1.026,323,1.026,330,3.177,333,2.024,360,2.985,369,1.218,374,1.026,384,1.934,387,2.398,388,1.511,389,1.218,390,1.218,391,1.218,392,1.218,393,1.218,394,1.218,395,1.934,396,2.737,397,1.218,398,2.737,399,1.218,400,1.218,401,1.218,402,1.218,403,1.218,404,1.218,405,2.404,406,1.218,407,2.981,408,1.511,409,1.511,410,1.511,411,1.511,412,1.511,413,1.511,414,1.511,415,1.511,416,2.398,417,2.398,418,1.511,419,1.511,420,1.511,421,2.398,422,1.511,423,2.398,424,1.511,425,1.511,426,1.511,427,1.511,428,1.511,429,1.511,430,1.511,431,1.511,432,1.511,433,1.511,434,2.398,435,1.511,436,2.398,437,1.511,438,1.511,439,1.511,440,2.398,441,2.398,442,1.511,443,2.981,444,2.981,445,2.398,446,2.398,447,2.398,448,1.511,449,1.511,450,2.398,451,3.701,452,2.398,453,2.398,454,2.398,455,1.511,456,2.981,457,1.511,458,1.511,459,1.511,460,1.511,461,1.511,462,1.218,463,1.511,464,2.398,465,1.511,466,1.511,467,1.511,468,1.511,469,1.511,470,1.511,471,2.398,472,1.511,473,1.511,474,2.398,475,1.511,476,1.511,477,1.511,478,1.511,479,2.981,480,1.511,481,1.511,482,1.511,483,1.511,484,1.511,485,1.511,486,2.398,487,1.511,488,2.398,489,1.511,490,1.511,491,1.511,492,2.398,493,1.511,494,1.511,495,1.511,496,1.511,497,1.511,498,1.511,499,1.511,500,1.511,501,1.511,502,1.511,503,1.511,504,2.398,505,1.511,506,2.398,507,1.511,508,1.511,509,1.511,510,1.511,511,2.398,512,1.511,513,1.511,514,1.511,515,1.511,516,1.511,517,1.511,518,1.511,519,1.511,520,1.511,521,1.511,522,1.511,523,1.511,524,1.511,525,1.511,526,1.511,527,1.511,528,1.511,529,1.511,530,1.511,531,1.511,532,1.511,533,1.511,534,1.511,535,1.511,536,1.511,537,1.511,538,1.511,539,1.511,540,1.511,541,1.511,542,1.511,543,1.511,544,1.511,545,1.511,546,2.398,547,1.511,548,1.511,549,1.511,550,1.511,551,1.511,552,2.398,553,2.981,554,2.398,555,1.511,556,2.398,557,1.511,558,1.511,559,1.511,560,1.511,561,2.398,562,1.511,563,1.511,564,1.511,565,1.511,566,1.511,567,1.511,568,1.511,569,2.981,570,1.511,571,1.511,572,2.398,573,1.511,574,1.511,575,1.511,576,3.394,577,1.511,578,1.511,579,1.511,580,1.511,581,1.511,582,1.511,583,2.398,584,1.511,585,1.511,586,1.511,587,1.511,588,1.511,589,1.511,590,1.511,591,1.511,592,1.511,593,1.511,594,1.511,595,1.511,596,1.511,597,1.511,598,1.511,599,1.511,600,1.511,601,1.511,602,1.511,603,1.511,604,1.511,605,1.511,606,1.511,607,1.511,608,1.511,609,1.511,610,1.511,611,1.511,612,2.398,613,1.511]],["title/modules.html",[614,3.054]],["body/modules.html",[22,0.045,50,0.045,51,0.045,614,3.472]],["title/overview.html",[615,3.054]],["body/overview.html",[2,0.838,22,0.045,50,0.045,51,0.045,462,3.437,615,3.437]],["title/properties.html",[20,1.154,289,1.912]],["body/properties.html",[7,0.882,8,1.705,10,1.311,20,1.151,22,0.049,24,1.459,44,1.151,50,0.039,51,0.039,56,2.709,80,1.961,237,2.89,292,2.709,322,2.281,323,2.281,333,2.281,389,2.709,390,2.709,391,2.709,392,2.709,393,2.709,394,2.709,395,3.432,396,2.709,397,2.709,398,2.709,399,2.709,400,2.709,401,2.709,402,2.709,403,2.709,404,2.709,405,2.709,406,2.709,616,3.359,617,3.359,618,3.359,619,3.359,620,3.359,621,3.359,622,3.359,623,3.359,624,3.359,625,3.359,626,3.359,627,3.359,628,3.359,629,3.359]],["title/todo.html",[385,1.912,386,1.912,630,2.371]],["body/todo.html",[22,0.045,50,0.045,51,0.045,631,4.306]],["title/miscellaneous/typealiases.html",[311,1.054,632,3.367]],["body/miscellaneous/typealiases.html",[19,0.581,21,0.697,22,0.04,50,0.04,51,0.04,77,1.835,78,3.047,94,1.93,130,2.205,262,3.219,267,2.949,268,2.949,270,2.949,272,2.949,276,2.949,278,2.356,280,3.503,311,1.542,314,3.824,319,2.798,633,3.47,634,4.742]],["title/miscellaneous/variables.html",[311,1.054,635,2.715]],["body/miscellaneous/variables.html",[1,1.59,6,2.767,19,0.682,22,0.046,48,3.252,49,3.287,50,0.044,51,0.044,87,2.767,311,1.811,374,2.767,635,3.287,636,4.076]]],"invertedIndex":[["",{"_index":22,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{},"classes/UpdateResultDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":250,"title":{},"body":{"coverage.html":{}}}],["0.14.1",{"_index":303,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":292,"title":{},"body":{"dependencies.html":{},"properties.html":{}}}],["0.2.2",{"_index":308,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":310,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":301,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":251,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":281,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":286,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":195,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["1/1",{"_index":243,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":255,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":260,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":462,"title":{},"body":{"index.html":{},"overview.html":{}}}],["100",{"_index":242,"title":{},"body":{"coverage.html":{}}}],["11.0.10",{"_index":295,"title":{},"body":{"dependencies.html":{}}}],["11.0.3",{"_index":297,"title":{},"body":{"dependencies.html":{}}}],["11.8.1",{"_index":300,"title":{},"body":{"dependencies.html":{}}}],["16mb",{"_index":535,"title":{},"body":{"index.html":{}}}],["2,000",{"_index":502,"title":{},"body":{"index.html":{}}}],["20",{"_index":259,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":516,"title":{},"body":{"index.html":{}}}],["21",{"_index":284,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":522,"title":{},"body":{"index.html":{}}}],["3/14",{"_index":285,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":283,"title":{},"body":{"coverage.html":{}}}],["30,000",{"_index":487,"title":{},"body":{"index.html":{}}}],["40",{"_index":523,"title":{},"body":{"index.html":{}}}],["4gb",{"_index":528,"title":{},"body":{"index.html":{}}}],["5.1.7",{"_index":309,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":254,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["60",{"_index":282,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["8.13.3",{"_index":305,"title":{},"body":{"dependencies.html":{}}}],["_columnname",{"_index":219,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["_firstpropertyname",{"_index":227,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["_propertyname",{"_index":218,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["_referencedcolumnname",{"_index":214,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["_secondpropertyname",{"_index":228,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["_tablename",{"_index":221,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["acceptstring",{"_index":89,"title":{},"body":{"classes/CommonQueryDto.html":{}}}],["accommodate",{"_index":436,"title":{},"body":{"index.html":{}}}],["accommodating",{"_index":458,"title":{},"body":{"index.html":{}}}],["achieves",{"_index":420,"title":{},"body":{"index.html":{}}}],["add",{"_index":431,"title":{},"body":{"index.html":{}}}],["addrelation",{"_index":147,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["addrelation(relation",{"_index":155,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["adjust",{"_index":512,"title":{},"body":{"index.html":{}}}],["administrative",{"_index":517,"title":{},"body":{"index.html":{}}}],["adopted",{"_index":413,"title":{},"body":{"index.html":{}}}],["affected",{"_index":107,"title":{},"body":{"classes/DeleteResultDto.html":{},"classes/EntityWriteService.html":{},"classes/UpdateResultDto.html":{}}}],["alias",{"_index":266,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":633,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allocate",{"_index":521,"title":{},"body":{"index.html":{}}}],["allocation",{"_index":532,"title":{},"body":{"index.html":{}}}],["allowed",{"_index":452,"title":{},"body":{"index.html":{}}}],["api",{"_index":395,"title":{},"body":{"index.html":{},"properties.html":{}}}],["apiproperty",{"_index":100,"title":{},"body":{"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/UpdateResultDto.html":{}}}],["apiproperty({type",{"_index":97,"title":{},"body":{"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/UpdateResultDto.html":{}}}],["application",{"_index":506,"title":{},"body":{"index.html":{}}}],["apply",{"_index":565,"title":{},"body":{"index.html":{}}}],["approach",{"_index":419,"title":{},"body":{"index.html":{}}}],["array",{"_index":369,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["associated",{"_index":426,"title":{},"body":{"index.html":{}}}],["async",{"_index":115,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["author",{"_index":627,"title":{},"body":{"properties.html":{}}}],["availability",{"_index":482,"title":{},"body":{"index.html":{}}}],["available",{"_index":468,"title":{},"body":{"index.html":{}}}],["avoid",{"_index":544,"title":{},"body":{"index.html":{}}}],["await",{"_index":142,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["balancing",{"_index":480,"title":{},"body":{"index.html":{}}}],["base.js",{"_index":135,"title":{},"body":{"classes/EntityReadService.html":{}}}],["base_entity_columns",{"_index":48,"title":{},"body":{"classes/BaseEntity.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["based",{"_index":331,"title":{},"body":{"miscellaneous/functions.html":{}}}],["baseentity",{"_index":1,"title":{"classes/BaseEntity.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["baseentityservice",{"_index":52,"title":{"classes/BaseEntityService.html":{}},"body":{"classes/BaseEntityService.html":{},"classes/EntityReadService.html":{},"coverage.html":{}}}],["baseline",{"_index":466,"title":{},"body":{"index.html":{}}}],["basemodel",{"_index":18,"title":{},"body":{"classes/BaseEntity.html":{}}}],["baseview",{"_index":65,"title":{"classes/BaseView.html":{}},"body":{"classes/BaseView.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["before",{"_index":494,"title":{},"body":{"index.html":{}}}],["being",{"_index":495,"title":{},"body":{"index.html":{}}}],["better",{"_index":298,"title":{},"body":{"dependencies.html":{}}}],["boolean",{"_index":82,"title":{},"body":{"classes/CommonQueryDto.html":{}}}],["both",{"_index":423,"title":{},"body":{"index.html":{}}}],["brightline",{"_index":629,"title":{},"body":{"properties.html":{}}}],["bug",{"_index":591,"title":{},"body":{"index.html":{}}}],["bugs",{"_index":622,"title":{},"body":{"properties.html":{}}}],["builder",{"_index":377,"title":{},"body":{"miscellaneous/functions.html":{}}}],["builder/querypartialentity.js",{"_index":184,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["capability",{"_index":325,"title":{},"body":{"miscellaneous/functions.html":{}}}],["capacity",{"_index":519,"title":{},"body":{"index.html":{}}}],["class",{"_index":0,"title":{"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{},"classes/UpdateResultDto.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{},"classes/UpdateResultDto.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{}}}],["classdecorator",{"_index":364,"title":{},"body":{"miscellaneous/functions.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{},"classes/UpdateResultDto.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["clear",{"_index":404,"title":{},"body":{"index.html":{},"properties.html":{}}}],["closed",{"_index":496,"title":{},"body":{"index.html":{}}}],["code",{"_index":424,"title":{},"body":{"index.html":{}}}],["column",{"_index":204,"title":{},"body":{"classes/TableNamingStrategy.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["column(options",{"_index":320,"title":{},"body":{"miscellaneous/functions.html":{}}}],["column.js",{"_index":74,"title":{},"body":{"classes/BaseView.html":{}}}],["column.ts",{"_index":249,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["columns",{"_index":16,"title":{},"body":{"classes/BaseEntity.html":{},"miscellaneous/functions.html":{}}}],["columntype",{"_index":335,"title":{},"body":{"miscellaneous/functions.html":{}}}],["common",{"_index":79,"title":{},"body":{"classes/CommonQueryDto.html":{}}}],["commonquerydto",{"_index":75,"title":{"classes/CommonQueryDto.html":{}},"body":{"classes/CommonQueryDto.html":{},"coverage.html":{}}}],["compatibility",{"_index":594,"title":{},"body":{"index.html":{}}}],["composite",{"_index":357,"title":{},"body":{"miscellaneous/functions.html":{}}}],["configuration",{"_index":446,"title":{},"body":{"index.html":{}}}],["configure",{"_index":486,"title":{},"body":{"index.html":{}}}],["configured",{"_index":527,"title":{},"body":{"index.html":{}}}],["connection",{"_index":492,"title":{},"body":{"index.html":{}}}],["connections",{"_index":451,"title":{},"body":{"index.html":{}}}],["connectiontimeoutmillis",{"_index":501,"title":{},"body":{"index.html":{}}}],["consider",{"_index":579,"title":{},"body":{"index.html":{}}}],["const",{"_index":47,"title":{},"body":{"classes/BaseEntity.html":{},"classes/EntityWriteService.html":{}}}],["constraint",{"_index":359,"title":{},"body":{"miscellaneous/functions.html":{}}}],["constructor",{"_index":54,"title":{},"body":{"classes/BaseEntityService.html":{}}}],["constructor(protected",{"_index":63,"title":{},"body":{"classes/BaseEntityService.html":{}}}],["constructor(repo",{"_index":55,"title":{},"body":{"classes/BaseEntityService.html":{}}}],["consumption",{"_index":499,"title":{},"body":{"index.html":{}}}],["contact",{"_index":611,"title":{},"body":{"index.html":{}}}],["contributions",{"_index":582,"title":{},"body":{"index.html":{}}}],["controller",{"_index":561,"title":{},"body":{"index.html":{}}}],["converted",{"_index":542,"title":{},"body":{"index.html":{}}}],["count",{"_index":94,"title":{},"body":{"classes/CountResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["count(query",{"_index":119,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["countresult",{"_index":96,"title":{},"body":{"classes/CountResultDto.html":{},"classes/EntityReadService.html":{}}}],["countresultdto",{"_index":92,"title":{"classes/CountResultDto.html":{}},"body":{"classes/CountResultDto.html":{},"coverage.html":{}}}],["coverage",{"_index":236,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":342,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createdat",{"_index":13,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseView.html":{}}}],["createdatecolumn",{"_index":40,"title":{},"body":{"classes/BaseEntity.html":{}}}],["createfindoperator",{"_index":264,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createfindoperator(query",{"_index":340,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createquerycountdto",{"_index":265,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createquerycountdto(options",{"_index":345,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createquerycountdtooptions",{"_index":267,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["createquerymanydto",{"_index":269,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createquerymanydto(options",{"_index":346,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createqueryonedto",{"_index":271,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createqueryonedto(options",{"_index":347,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createrelationparamdto",{"_index":257,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createrelationparamdto(relations",{"_index":348,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createunsetrelationparamdto",{"_index":258,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createunsetrelationparamdto(relations",{"_index":352,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createwhereoptiondto",{"_index":274,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createwhereoptiondto(columns",{"_index":353,"title":{},"body":{"miscellaneous/functions.html":{}}}],["custom",{"_index":389,"title":{},"body":{"index.html":{},"properties.html":{}}}],["data",{"_index":330,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["databaes",{"_index":202,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["database",{"_index":333,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["datasource",{"_index":441,"title":{},"body":{"index.html":{}}}],["date",{"_index":23,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseView.html":{},"index.html":{}}}],["date'})@createdatecolumn",{"_index":26,"title":{},"body":{"classes/BaseEntity.html":{}}}],["date'})@deletedatecolumn",{"_index":29,"title":{},"body":{"classes/BaseEntity.html":{}}}],["date'})@updatedatecolumn",{"_index":34,"title":{},"body":{"classes/BaseEntity.html":{}}}],["decorator",{"_index":322,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["decorator/view",{"_index":73,"title":{},"body":{"classes/BaseView.html":{}}}],["decorators",{"_index":24,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/UpdateResultDto.html":{},"index.html":{},"properties.html":{}}}],["dedicated",{"_index":564,"title":{},"body":{"index.html":{}}}],["default",{"_index":87,"title":{},"body":{"classes/CommonQueryDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defaultnamingstrategy",{"_index":207,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["define",{"_index":530,"title":{},"body":{"index.html":{}}}],["defined",{"_index":27,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{},"classes/UpdateResultDto.html":{}}}],["defines",{"_index":449,"title":{},"body":{"index.html":{}}}],["definitions",{"_index":392,"title":{},"body":{"index.html":{},"properties.html":{}}}],["delays",{"_index":510,"title":{},"body":{"index.html":{}}}],["delete",{"_index":105,"title":{},"body":{"classes/DeleteResultDto.html":{},"classes/EntityWriteService.html":{}}}],["delete(id",{"_index":159,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["deleted",{"_index":84,"title":{},"body":{"classes/CommonQueryDto.html":{}}}],["deletedat",{"_index":15,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseView.html":{}}}],["deletedatecolumn",{"_index":41,"title":{},"body":{"classes/BaseEntity.html":{}}}],["deleteresult",{"_index":106,"title":{},"body":{"classes/DeleteResultDto.html":{}}}],["deleteresultdto",{"_index":103,"title":{"classes/DeleteResultDto.html":{}},"body":{"classes/DeleteResultDto.html":{},"coverage.html":{}}}],["demand",{"_index":460,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":290,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["description",{"_index":7,"title":{},"body":{"classes/BaseEntity.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{},"classes/UpdateResultDto.html":{},"miscellaneous/functions.html":{},"properties.html":{}}}],["determines",{"_index":489,"title":{},"body":{"index.html":{}}}],["developer",{"_index":612,"title":{},"body":{"index.html":{}}}],["development",{"_index":407,"title":{},"body":{"index.html":{}}}],["disrupting",{"_index":545,"title":{},"body":{"index.html":{}}}],["documentaion",{"_index":324,"title":{},"body":{"miscellaneous/functions.html":{}}}],["documentation",{"_index":237,"title":{},"body":{"coverage.html":{},"index.html":{},"properties.html":{}}}],["done",{"_index":556,"title":{},"body":{"index.html":{}}}],["driver",{"_index":334,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dto",{"_index":80,"title":{},"body":{"classes/CommonQueryDto.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["dto.ts",{"_index":78,"title":{},"body":{"classes/CommonQueryDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["dto.ts:14",{"_index":91,"title":{},"body":{"classes/CommonQueryDto.html":{}}}],["duration",{"_index":490,"title":{},"body":{"index.html":{}}}],["during",{"_index":471,"title":{},"body":{"index.html":{}}}],["efficiency",{"_index":417,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":455,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":400,"title":{},"body":{"index.html":{},"properties.html":{}}}],["effort",{"_index":575,"title":{},"body":{"index.html":{}}}],["encrypion",{"_index":555,"title":{},"body":{"index.html":{}}}],["encrypted",{"_index":563,"title":{},"body":{"index.html":{}}}],["encryption",{"_index":560,"title":{},"body":{"index.html":{}}}],["enhance",{"_index":536,"title":{},"body":{"index.html":{}}}],["enhancing",{"_index":416,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":398,"title":{},"body":{"index.html":{},"properties.html":{}}}],["ensuring",{"_index":454,"title":{},"body":{"index.html":{}}}],["entities",{"_index":8,"title":{},"body":{"classes/BaseEntity.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"index.html":{},"properties.html":{}}}],["entity",{"_index":10,"title":{},"body":{"classes/BaseEntity.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["entity's",{"_index":362,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entity(uniques",{"_index":355,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entity.ts",{"_index":252,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["entity/base.js",{"_index":62,"title":{},"body":{"classes/BaseEntityService.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["entityreadservice",{"_index":110,"title":{"classes/EntityReadService.html":{}},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"coverage.html":{}}}],["entityreadservice:16",{"_index":180,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["entityreadservice:25",{"_index":181,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["entityreadservice:29",{"_index":182,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["entityreadservice:33",{"_index":179,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["entitywriteservice",{"_index":144,"title":{"classes/EntityWriteService.html":{}},"body":{"classes/EntityWriteService.html":{},"coverage.html":{}}}],["errors",{"_index":427,"title":{},"body":{"index.html":{}}}],["establish",{"_index":505,"title":{},"body":{"index.html":{}}}],["establishes",{"_index":476,"title":{},"body":{"index.html":{}}}],["even",{"_index":599,"title":{},"body":{"index.html":{}}}],["example",{"_index":429,"title":{},"body":{"index.html":{}}}],["exclude",{"_index":101,"title":{},"body":{"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/UpdateResultDto.html":{}}}],["execution",{"_index":567,"title":{},"body":{"index.html":{}}}],["export",{"_index":45,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{},"classes/UpdateResultDto.html":{}}}],["expression",{"_index":375,"title":{},"body":{"miscellaneous/functions.html":{}}}],["extend",{"_index":390,"title":{},"body":{"index.html":{},"properties.html":{}}}],["extends",{"_index":9,"title":{},"body":{"classes/BaseEntity.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{},"miscellaneous/functions.html":{}}}],["false",{"_index":88,"title":{},"body":{"classes/CommonQueryDto.html":{},"miscellaneous/functions.html":{}}}],["features",{"_index":597,"title":{},"body":{"index.html":{}}}],["fields",{"_index":363,"title":{},"body":{"miscellaneous/functions.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{},"classes/UpdateResultDto.html":{},"coverage.html":{},"index.html":{}}}],["find",{"_index":116,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["find(query",{"_index":124,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["findone",{"_index":117,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["findone(query",{"_index":127,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["findonebyid",{"_index":118,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["findonebyid(id",{"_index":131,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["findoperator",{"_index":343,"title":{},"body":{"miscellaneous/functions.html":{}}}],["findoptionswhere",{"_index":133,"title":{},"body":{"classes/EntityReadService.html":{}}}],["firsttablename",{"_index":230,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["firsttablename}_${secondtablename",{"_index":232,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["fixes",{"_index":592,"title":{},"body":{"index.html":{}}}],["following",{"_index":445,"title":{},"body":{"index.html":{}}}],["format",{"_index":439,"title":{},"body":{"index.html":{}}}],["function",{"_index":241,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":312,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funding",{"_index":569,"title":{},"body":{"index.html":{}}}],["general",{"_index":605,"title":{},"body":{"index.html":{}}}],["getting",{"_index":385,"title":{"index.html":{},"todo.html":{}},"body":{}}],["given",{"_index":337,"title":{},"body":{"miscellaneous/functions.html":{}}}],["go",{"_index":589,"title":{},"body":{"index.html":{}}}],["handling",{"_index":562,"title":{},"body":{"index.html":{}}}],["hashing",{"_index":554,"title":{},"body":{"index.html":{}}}],["help",{"_index":583,"title":{},"body":{"index.html":{}}}],["homepage",{"_index":620,"title":{},"body":{"properties.html":{}}}],["https://github.com/rbrightline/puq/tree/main",{"_index":626,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io",{"_index":623,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io/puq/orm",{"_index":621,"title":{},"body":{"properties.html":{}}}],["id",{"_index":12,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseView.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"miscellaneous/functions.html":{}}}],["identifier",{"_index":238,"title":{},"body":{"coverage.html":{}}}],["idle",{"_index":491,"title":{},"body":{"index.html":{}}}],["idletimeoutmillis",{"_index":485,"title":{},"body":{"index.html":{}}}],["implement",{"_index":444,"title":{},"body":{"index.html":{}}}],["implementations",{"_index":414,"title":{},"body":{"index.html":{}}}],["implements",{"_index":17,"title":{},"body":{"classes/BaseEntity.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/UpdateResultDto.html":{}}}],["import",{"_index":36,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{},"classes/UpdateResultDto.html":{}}}],["improvements",{"_index":602,"title":{},"body":{"index.html":{}}}],["inactivity",{"_index":500,"title":{},"body":{"index.html":{}}}],["include",{"_index":83,"title":{},"body":{"classes/CommonQueryDto.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{},"classes/UpdateResultDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{},"classes/UpdateResultDto.html":{}}}],["inherited",{"_index":178,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["initial",{"_index":568,"title":{},"body":{"index.html":{}}}],["install",{"_index":428,"title":{},"body":{"index.html":{}}}],["instant",{"_index":588,"title":{},"body":{"index.html":{}}}],["instead",{"_index":550,"title":{},"body":{"index.html":{}}}],["integer",{"_index":46,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseView.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/UpdateResultDto.html":{}}}],["integer'})@primarygeneratedcolumn",{"_index":32,"title":{},"body":{"classes/BaseEntity.html":{}}}],["integrating",{"_index":394,"title":{},"body":{"index.html":{},"properties.html":{}}}],["integration",{"_index":410,"title":{},"body":{"index.html":{}}}],["interfere",{"_index":549,"title":{},"body":{"index.html":{}}}],["intuitive",{"_index":411,"title":{},"body":{"index.html":{}}}],["it's",{"_index":571,"title":{},"body":{"index.html":{}}}],["items",{"_index":85,"title":{},"body":{"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/UpdateResultDto.html":{}}}],["javascript",{"_index":543,"title":{},"body":{"index.html":{}}}],["joincolumnname",{"_index":208,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["joincolumnname(relationname",{"_index":212,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["jointablecolumnname",{"_index":209,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["jointablecolumnname(_tablename",{"_index":217,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["jointableinversecolumnname",{"_index":210,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["jointableinversecolumnname(_tablename",{"_index":223,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["jointablename",{"_index":211,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["jointablename(firsttablename",{"_index":225,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["keep",{"_index":607,"title":{},"body":{"index.html":{}}}],["keeping",{"_index":465,"title":{},"body":{"index.html":{}}}],["keys",{"_index":349,"title":{},"body":{"miscellaneous/functions.html":{}}}],["keywords",{"_index":617,"title":{},"body":{"properties.html":{}}}],["latency",{"_index":470,"title":{},"body":{"index.html":{}}}],["latest",{"_index":595,"title":{},"body":{"index.html":{}}}],["layer",{"_index":553,"title":{},"body":{"index.html":{}}}],["level",{"_index":402,"title":{},"body":{"index.html":{},"properties.html":{}}}],["library",{"_index":576,"title":{},"body":{"index.html":{}}}],["license",{"_index":624,"title":{},"body":{"properties.html":{}}}],["limit",{"_index":478,"title":{},"body":{"index.html":{}}}],["limitation",{"_index":437,"title":{},"body":{"index.html":{}}}],["linkk",{"_index":139,"title":{},"body":{"classes/EntityReadService.html":{}}}],["literal",{"_index":634,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["load",{"_index":86,"title":{},"body":{"classes/CommonQueryDto.html":{}}}],["low",{"_index":472,"title":{},"body":{"index.html":{}}}],["mached",{"_index":98,"title":{},"body":{"classes/CountResultDto.html":{}}}],["maintained",{"_index":464,"title":{},"body":{"index.html":{}}}],["maintaining",{"_index":573,"title":{},"body":{"index.html":{}}}],["maintenance",{"_index":606,"title":{},"body":{"index.html":{}}}],["make",{"_index":598,"title":{},"body":{"index.html":{}}}],["manually",{"_index":381,"title":{},"body":{"miscellaneous/functions.html":{}}}],["many",{"_index":268,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["mapped",{"_index":399,"title":{},"body":{"index.html":{},"properties.html":{}}}],["matching",{"_index":51,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{},"classes/UpdateResultDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":475,"title":{},"body":{"index.html":{}}}],["max_connections",{"_index":515,"title":{},"body":{"index.html":{}}}],["maximum",{"_index":450,"title":{},"body":{"index.html":{}}}],["memory",{"_index":531,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":307,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":114,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{}}}],["milliseconds",{"_index":488,"title":{},"body":{"index.html":{}}}],["min",{"_index":461,"title":{},"body":{"index.html":{}}}],["minimizing",{"_index":497,"title":{},"body":{"index.html":{}}}],["minimum",{"_index":421,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":311,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":625,"title":{},"body":{"properties.html":{}}}],["modules",{"_index":614,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":600,"title":{},"body":{"index.html":{}}}],["name",{"_index":59,"title":{},"body":{"classes/BaseEntityService.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["names",{"_index":351,"title":{},"body":{"miscellaneous/functions.html":{}}}],["naming",{"_index":205,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["nestjs/common",{"_index":294,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":296,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["new",{"_index":287,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["number",{"_index":31,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseView.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/UpdateResultDto.html":{},"index.html":{}}}],["numbers",{"_index":537,"title":{},"body":{"index.html":{}}}],["numeric",{"_index":539,"title":{},"body":{"index.html":{}}}],["object",{"_index":384,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["object.keys(new",{"_index":49,"title":{},"body":{"classes/BaseEntity.html":{},"miscellaneous/variables.html":{}}}],["one",{"_index":130,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["ongoing",{"_index":581,"title":{},"body":{"index.html":{}}}],["open",{"_index":479,"title":{},"body":{"index.html":{}}}],["operation",{"_index":108,"title":{},"body":{"classes/DeleteResultDto.html":{},"classes/UpdateResultDto.html":{},"index.html":{}}}],["operations",{"_index":546,"title":{},"body":{"index.html":{}}}],["operator.ts",{"_index":263,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["optimal",{"_index":526,"title":{},"body":{"index.html":{}}}],["optimize",{"_index":442,"title":{},"body":{"index.html":{}}}],["option",{"_index":273,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["optional",{"_index":60,"title":{},"body":{"classes/BaseEntityService.html":{},"classes/CommonQueryDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":326,"title":{},"body":{"miscellaneous/functions.html":{}}}],["orm",{"_index":619,"title":{},"body":{"properties.html":{}}}],["out",{"_index":604,"title":{},"body":{"index.html":{}}}],["overloading",{"_index":484,"title":{},"body":{"index.html":{}}}],["override",{"_index":231,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["overview",{"_index":615,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":289,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["paired",{"_index":415,"title":{},"body":{"index.html":{}}}],["param",{"_index":138,"title":{},"body":{"classes/EntityReadService.html":{},"miscellaneous/functions.html":{}}}],["parameters",{"_index":58,"title":{},"body":{"classes/BaseEntityService.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{},"miscellaneous/functions.html":{}}}],["parse",{"_index":383,"title":{},"body":{"miscellaneous/functions.html":{}}}],["peak",{"_index":459,"title":{},"body":{"index.html":{}}}],["peer",{"_index":293,"title":{},"body":{"dependencies.html":{}}}],["per",{"_index":533,"title":{},"body":{"index.html":{}}}],["performance",{"_index":443,"title":{},"body":{"index.html":{}}}],["periods",{"_index":474,"title":{},"body":{"index.html":{}}}],["pg",{"_index":304,"title":{},"body":{"dependencies.html":{}}}],["pick",{"_index":329,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pickdatatype",{"_index":244,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["pickdatatype(options",{"_index":328,"title":{},"body":{"miscellaneous/functions.html":{}}}],["picktransformer",{"_index":245,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["picktransformer(options",{"_index":336,"title":{},"body":{"miscellaneous/functions.html":{}}}],["please",{"_index":578,"title":{},"body":{"index.html":{}}}],["pnpm",{"_index":430,"title":{},"body":{"index.html":{}}}],["pool",{"_index":453,"title":{},"body":{"index.html":{}}}],["poolsize",{"_index":448,"title":{},"body":{"index.html":{}}}],["postgres",{"_index":440,"title":{},"body":{"index.html":{}}}],["postgres.conf",{"_index":514,"title":{},"body":{"index.html":{}}}],["postgresql",{"_index":513,"title":{},"body":{"index.html":{}}}],["powerful",{"_index":601,"title":{},"body":{"index.html":{}}}],["precision",{"_index":541,"title":{},"body":{"index.html":{}}}],["preservation",{"_index":540,"title":{},"body":{"index.html":{}}}],["prevent",{"_index":483,"title":{},"body":{"index.html":{}}}],["preventing",{"_index":508,"title":{},"body":{"index.html":{}}}],["primarygeneratedcolumn",{"_index":42,"title":{},"body":{"classes/BaseEntity.html":{}}}],["process",{"_index":418,"title":{},"body":{"index.html":{}}}],["project",{"_index":572,"title":{},"body":{"index.html":{}}}],["prolonged",{"_index":509,"title":{},"body":{"index.html":{}}}],["promise",{"_index":123,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["properties",{"_index":20,"title":{"properties.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/UpdateResultDto.html":{},"properties.html":{}}}],["property",{"_index":37,"title":{},"body":{"classes/BaseEntity.html":{},"classes/CommonQueryDto.html":{}}}],["property({type",{"_index":25,"title":{},"body":{"classes/BaseEntity.html":{},"classes/CommonQueryDto.html":{}}}],["propertydecorator",{"_index":327,"title":{},"body":{"miscellaneous/functions.html":{}}}],["propertyoptions",{"_index":321,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provide",{"_index":380,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provided",{"_index":332,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provides",{"_index":11,"title":{},"body":{"classes/BaseEntity.html":{}}}],["providing",{"_index":403,"title":{},"body":{"index.html":{},"properties.html":{}}}],["puq",{"_index":618,"title":{},"body":{"properties.html":{}}}],["puq/names",{"_index":291,"title":{},"body":{"dependencies.html":{}}}],["puq/orm",{"_index":387,"title":{},"body":{"index.html":{}}}],["puq/ormsqlite",{"_index":432,"title":{},"body":{"index.html":{}}}],["puq/property",{"_index":38,"title":{},"body":{"classes/BaseEntity.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/UpdateResultDto.html":{},"dependencies.html":{}}}],["puq/query",{"_index":134,"title":{},"body":{"classes/EntityReadService.html":{},"dependencies.html":{}}}],["puq/type",{"_index":39,"title":{},"body":{"classes/BaseEntity.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/UpdateResultDto.html":{},"dependencies.html":{}}}],["queriable",{"_index":354,"title":{},"body":{"miscellaneous/functions.html":{}}}],["query",{"_index":77,"title":{},"body":{"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["querycount",{"_index":120,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["querydeeppartialentity",{"_index":176,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["querymany",{"_index":125,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"miscellaneous/functions.html":{}}}],["querymanydtooptions",{"_index":270,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["queryone",{"_index":128,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"miscellaneous/functions.html":{}}}],["queryonedtooptions",{"_index":272,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["ram",{"_index":525,"title":{},"body":{"index.html":{}}}],["read",{"_index":112,"title":{},"body":{"classes/EntityReadService.html":{}}}],["read.js",{"_index":186,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["readily",{"_index":467,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":64,"title":{},"body":{"classes/BaseEntityService.html":{}}}],["record",{"_index":344,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reduce",{"_index":469,"title":{},"body":{"index.html":{}}}],["reduction",{"_index":422,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":306,"title":{},"body":{"dependencies.html":{}}}],["refrain",{"_index":547,"title":{},"body":{"index.html":{}}}],["relation",{"_index":158,"title":{},"body":{"classes/EntityWriteService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["relation(options",{"_index":365,"title":{},"body":{"miscellaneous/functions.html":{}}}],["relationname",{"_index":216,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["relationoptions",{"_index":366,"title":{},"body":{"miscellaneous/functions.html":{}}}],["relationparam",{"_index":156,"title":{},"body":{"classes/EntityWriteService.html":{},"miscellaneous/functions.html":{}}}],["relations",{"_index":350,"title":{},"body":{"miscellaneous/functions.html":{}}}],["remains",{"_index":493,"title":{},"body":{"index.html":{}}}],["removerelation",{"_index":148,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["removerelation(relation",{"_index":161,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["repo",{"_index":61,"title":{},"body":{"classes/BaseEntityService.html":{}}}],["repository",{"_index":56,"title":{},"body":{"classes/BaseEntityService.html":{},"properties.html":{}}}],["resource",{"_index":456,"title":{},"body":{"index.html":{}}}],["responsiveness",{"_index":507,"title":{},"body":{"index.html":{}}}],["result",{"_index":95,"title":{},"body":{"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/UpdateResultDto.html":{}}}],["results",{"_index":50,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{},"classes/UpdateResultDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":136,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{}}}],["returns",{"_index":122,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{},"miscellaneous/functions.html":{}}}],["rid",{"_index":192,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["rn",{"_index":193,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["robert",{"_index":628,"title":{},"body":{"properties.html":{}}}],["robert.brightline@gmail.com",{"_index":613,"title":{},"body":{"index.html":{}}}],["running",{"_index":608,"title":{},"body":{"index.html":{}}}],["safe",{"_index":558,"title":{},"body":{"index.html":{}}}],["save",{"_index":149,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["save(entity",{"_index":163,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["savemany",{"_index":150,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["savemany(entities",{"_index":166,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["seamlessly",{"_index":393,"title":{},"body":{"index.html":{},"properties.html":{}}}],["secondtablename",{"_index":226,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["secure",{"_index":586,"title":{},"body":{"index.html":{}}}],["securely",{"_index":610,"title":{},"body":{"index.html":{}}}],["select",{"_index":368,"title":{},"body":{"miscellaneous/functions.html":{}}}],["selectbaseentity",{"_index":372,"title":{},"body":{"miscellaneous/functions.html":{}}}],["selected",{"_index":379,"title":{},"body":{"miscellaneous/functions.html":{}}}],["selectquerybuilder",{"_index":376,"title":{},"body":{"miscellaneous/functions.html":{}}}],["selecttransformer",{"_index":277,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["server",{"_index":511,"title":{},"body":{"index.html":{}}}],["server's",{"_index":524,"title":{},"body":{"index.html":{}}}],["service",{"_index":113,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["set",{"_index":360,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["setrelation",{"_index":151,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["setrelation(relation",{"_index":168,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["sets",{"_index":503,"title":{},"body":{"index.html":{}}}],["settings",{"_index":447,"title":{},"body":{"index.html":{}}}],["shared_buffers",{"_index":520,"title":{},"body":{"index.html":{}}}],["single",{"_index":397,"title":{},"body":{"index.html":{},"properties.html":{}}}],["smoothly",{"_index":609,"title":{},"body":{"index.html":{}}}],["softdelete",{"_index":152,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["softdelete(id",{"_index":170,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["sort",{"_index":534,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{},"classes/UpdateResultDto.html":{},"index.html":{}}}],["specifies",{"_index":463,"title":{},"body":{"index.html":{}}}],["specify",{"_index":361,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sqlite",{"_index":433,"title":{},"body":{"index.html":{}}}],["sqlite3",{"_index":299,"title":{},"body":{"dependencies.html":{}}}],["src/.../base.ts",{"_index":636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../column.ts",{"_index":313,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../create",{"_index":314,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../entity.ts",{"_index":316,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../relation.ts",{"_index":315,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../select",{"_index":317,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../view",{"_index":318,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../where",{"_index":319,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/decorator/column.ts",{"_index":240,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/decorator/entity.ts",{"_index":246,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/decorator/relation.ts",{"_index":247,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/decorator/view",{"_index":248,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/dto/count.ts",{"_index":93,"title":{},"body":{"classes/CountResultDto.html":{},"coverage.html":{}}}],["src/lib/dto/count.ts:14",{"_index":99,"title":{},"body":{"classes/CountResultDto.html":{}}}],["src/lib/dto/delete.ts",{"_index":104,"title":{},"body":{"classes/DeleteResultDto.html":{},"coverage.html":{}}}],["src/lib/dto/delete.ts:13",{"_index":109,"title":{},"body":{"classes/DeleteResultDto.html":{}}}],["src/lib/dto/relation.ts",{"_index":256,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/dto/update.ts",{"_index":234,"title":{},"body":{"classes/UpdateResultDto.html":{},"coverage.html":{}}}],["src/lib/dto/update.ts:14",{"_index":235,"title":{},"body":{"classes/UpdateResultDto.html":{}}}],["src/lib/entity/base.ts",{"_index":6,"title":{},"body":{"classes/BaseEntity.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/entity/base.ts:16",{"_index":33,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/lib/entity/base.ts:20",{"_index":28,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/lib/entity/base.ts:24",{"_index":35,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/lib/entity/base.ts:28",{"_index":30,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/lib/factory/naming",{"_index":200,"title":{},"body":{"classes/TableNamingStrategy.html":{},"coverage.html":{}}}],["src/lib/query/common",{"_index":76,"title":{},"body":{"classes/CommonQueryDto.html":{},"coverage.html":{}}}],["src/lib/query/create",{"_index":262,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/query/select",{"_index":275,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/query/where",{"_index":278,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/service/base.ts",{"_index":53,"title":{},"body":{"classes/BaseEntityService.html":{},"coverage.html":{}}}],["src/lib/service/base.ts:4",{"_index":57,"title":{},"body":{"classes/BaseEntityService.html":{}}}],["src/lib/service/read.ts",{"_index":111,"title":{},"body":{"classes/EntityReadService.html":{},"coverage.html":{}}}],["src/lib/service/read.ts:16",{"_index":126,"title":{},"body":{"classes/EntityReadService.html":{}}}],["src/lib/service/read.ts:25",{"_index":129,"title":{},"body":{"classes/EntityReadService.html":{}}}],["src/lib/service/read.ts:29",{"_index":132,"title":{},"body":{"classes/EntityReadService.html":{}}}],["src/lib/service/read.ts:33",{"_index":121,"title":{},"body":{"classes/EntityReadService.html":{}}}],["src/lib/service/write.ts",{"_index":145,"title":{},"body":{"classes/EntityWriteService.html":{},"coverage.html":{}}}],["src/lib/service/write.ts:12",{"_index":165,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["src/lib/service/write.ts:16",{"_index":167,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["src/lib/service/write.ts:20",{"_index":177,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["src/lib/service/write.ts:24",{"_index":160,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["src/lib/service/write.ts:28",{"_index":171,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["src/lib/service/write.ts:32",{"_index":157,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["src/lib/service/write.ts:38",{"_index":162,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["src/lib/service/write.ts:44",{"_index":169,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["src/lib/service/write.ts:50",{"_index":174,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["src/lib/view/base.view.ts",{"_index":66,"title":{},"body":{"classes/BaseView.html":{},"coverage.html":{}}}],["src/lib/view/base.view.ts:4",{"_index":70,"title":{},"body":{"classes/BaseView.html":{}}}],["src/lib/view/base.view.ts:5",{"_index":68,"title":{},"body":{"classes/BaseView.html":{}}}],["src/lib/view/base.view.ts:6",{"_index":71,"title":{},"body":{"classes/BaseView.html":{}}}],["src/lib/view/base.view.ts:7",{"_index":69,"title":{},"body":{"classes/BaseView.html":{}}}],["standard",{"_index":391,"title":{},"body":{"index.html":{},"properties.html":{}}}],["started",{"_index":386,"title":{"index.html":{},"todo.html":{}},"body":{}}],["statements",{"_index":239,"title":{},"body":{"coverage.html":{}}}],["stays",{"_index":584,"title":{},"body":{"index.html":{}}}],["stored",{"_index":538,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":206,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["strategy.ts",{"_index":201,"title":{},"body":{"classes/TableNamingStrategy.html":{},"coverage.html":{}}}],["strategy.ts:15",{"_index":215,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["strategy.ts:22",{"_index":220,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["strategy.ts:30",{"_index":224,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["strategy.ts:6",{"_index":229,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["streamlined",{"_index":408,"title":{},"body":{"index.html":{}}}],["string",{"_index":213,"title":{},"body":{"classes/TableNamingStrategy.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["subsequent",{"_index":566,"title":{},"body":{"index.html":{}}}],["sufficient",{"_index":518,"title":{},"body":{"index.html":{}}}],["summary",{"_index":388,"title":{},"body":{"index.html":{}}}],["support",{"_index":434,"title":{},"body":{"index.html":{}}}],["supporting",{"_index":580,"title":{},"body":{"index.html":{}}}],["swagger",{"_index":406,"title":{},"body":{"index.html":{},"properties.html":{}}}],["system",{"_index":481,"title":{},"body":{"index.html":{}}}],["t",{"_index":164,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["table",{"_index":203,"title":{},"body":{"classes/TableNamingStrategy.html":{},"coverage.html":{}}}],["tablenamingstrategy",{"_index":199,"title":{"classes/TableNamingStrategy.html":{}},"body":{"classes/TableNamingStrategy.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":288,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":574,"title":{},"body":{"index.html":{}}}],["tasks",{"_index":631,"title":{},"body":{"todo.html":{}}}],["thank",{"_index":570,"title":{},"body":{"index.html":{}}}],["this.repo.count(query",{"_index":143,"title":{},"body":{"classes/EntityReadService.html":{}}}],["this.repo.createquerybuilder().relation(rn).of(id).add(rid",{"_index":194,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["this.repo.createquerybuilder().relation(rn).of(id).remove(rid",{"_index":196,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["this.repo.createquerybuilder().relation(rn).of(id).set(null",{"_index":198,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["this.repo.createquerybuilder().relation(rn).of(id).set(rid",{"_index":197,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["this.repo.delete(id",{"_index":190,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["this.repo.find(query",{"_index":137,"title":{},"body":{"classes/EntityReadService.html":{}}}],["this.repo.findone(query",{"_index":140,"title":{},"body":{"classes/EntityReadService.html":{}}}],["this.repo.findoneby",{"_index":141,"title":{},"body":{"classes/EntityReadService.html":{}}}],["this.repo.save(entities",{"_index":188,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["this.repo.save(entity",{"_index":187,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["this.repo.softdelete(id",{"_index":191,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["this.repo.update(id",{"_index":189,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["through",{"_index":409,"title":{},"body":{"index.html":{}}}],["time",{"_index":504,"title":{},"body":{"index.html":{}}}],["timestamp",{"_index":378,"title":{},"body":{"miscellaneous/functions.html":{}}}],["todo",{"_index":630,"title":{"todo.html":{}},"body":{}}],["toward",{"_index":590,"title":{},"body":{"index.html":{}}}],["traffic",{"_index":473,"title":{},"body":{"index.html":{}}}],["transfer",{"_index":552,"title":{},"body":{"index.html":{}}}],["transform",{"_index":367,"title":{},"body":{"miscellaneous/functions.html":{}}}],["transformations",{"_index":551,"title":{},"body":{"index.html":{}}}],["transformed",{"_index":438,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":102,"title":{},"body":{"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/UpdateResultDto.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["transformer.ts",{"_index":276,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["transformers",{"_index":548,"title":{},"body":{"index.html":{}}}],["true",{"_index":90,"title":{},"body":{"classes/CommonQueryDto.html":{},"miscellaneous/functions.html":{}}}],["type",{"_index":21,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{},"classes/UpdateResultDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":632,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeorm",{"_index":44,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/EntityReadService.html":{},"classes/TableNamingStrategy.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["typeorm/query",{"_index":183,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["typeorom",{"_index":557,"title":{},"body":{"index.html":{}}}],["types",{"_index":435,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":339,"title":{},"body":{"miscellaneous/functions.html":{}}}],["unique",{"_index":358,"title":{},"body":{"miscellaneous/functions.html":{}}}],["uniques",{"_index":356,"title":{},"body":{"miscellaneous/functions.html":{}}}],["unnecessary",{"_index":498,"title":{},"body":{"index.html":{}}}],["unsetrelation",{"_index":153,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["unsetrelation(relation",{"_index":172,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["unsetrelationparam",{"_index":173,"title":{},"body":{"classes/EntityWriteService.html":{},"miscellaneous/functions.html":{}}}],["up",{"_index":585,"title":{},"body":{"index.html":{}}}],["update",{"_index":154,"title":{},"body":{"classes/EntityWriteService.html":{},"classes/UpdateResultDto.html":{}}}],["update(id",{"_index":175,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["updatedat",{"_index":14,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseView.html":{}}}],["updatedatecolumn",{"_index":43,"title":{},"body":{"classes/BaseEntity.html":{}}}],["updateresult",{"_index":185,"title":{},"body":{"classes/EntityWriteService.html":{},"classes/UpdateResultDto.html":{}}}],["updateresultdto",{"_index":233,"title":{"classes/UpdateResultDto.html":{}},"body":{"classes/UpdateResultDto.html":{},"coverage.html":{}}}],["updates",{"_index":593,"title":{},"body":{"index.html":{}}}],["upper",{"_index":477,"title":{},"body":{"index.html":{}}}],["use",{"_index":559,"title":{},"body":{"index.html":{}}}],["useful",{"_index":577,"title":{},"body":{"index.html":{}}}],["users",{"_index":603,"title":{},"body":{"index.html":{}}}],["using",{"_index":405,"title":{},"body":{"index.html":{},"properties.html":{}}}],["utilization",{"_index":457,"title":{},"body":{"index.html":{}}}],["validated",{"_index":401,"title":{},"body":{"index.html":{},"properties.html":{}}}],["validation",{"_index":323,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["validator",{"_index":302,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["value",{"_index":374,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["valuetransformer",{"_index":338,"title":{},"body":{"miscellaneous/functions.html":{}}}],["variable",{"_index":261,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":635,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":616,"title":{},"body":{"properties.html":{}}}],["versions",{"_index":596,"title":{},"body":{"index.html":{}}}],["view",{"_index":373,"title":{},"body":{"miscellaneous/functions.html":{}}}],["viewcolumn",{"_index":72,"title":{},"body":{"classes/BaseView.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["viewcolumn(options",{"_index":370,"title":{},"body":{"miscellaneous/functions.html":{}}}],["viewcolumn({type",{"_index":67,"title":{},"body":{"classes/BaseView.html":{}}}],["viewentity",{"_index":253,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["viewentity(expression",{"_index":371,"title":{},"body":{"miscellaneous/functions.html":{}}}],["volume",{"_index":425,"title":{},"body":{"index.html":{}}}],["well",{"_index":587,"title":{},"body":{"index.html":{}}}],["whereoption",{"_index":341,"title":{},"body":{"miscellaneous/functions.html":{}}}],["wherequerytransformer",{"_index":279,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["wherequerytransformer(columns",{"_index":382,"title":{},"body":{"miscellaneous/functions.html":{}}}],["wherequerytransformeroptions",{"_index":280,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["widely",{"_index":412,"title":{},"body":{"index.html":{}}}],["withdeleted",{"_index":81,"title":{},"body":{"classes/CommonQueryDto.html":{}}}],["within",{"_index":396,"title":{},"body":{"index.html":{},"properties.html":{}}}],["work_mem",{"_index":529,"title":{},"body":{"index.html":{}}}],["write",{"_index":146,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["yes",{"_index":222,"title":{},"body":{"classes/TableNamingStrategy.html":{},"miscellaneous/functions.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/entity/base.ts\n        \n\n\n            \n                Description\n            \n            \n                All entities extends this entity. The entity provides id, createdAt, updatedAt, and deletedAt columns\n\n            \n\n\n            \n                Implements\n            \n            \n                        BaseModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'date'})@CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/entity/base.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'date'})@DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/entity/base.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'integer'})@PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/entity/base.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'date'})@UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/entity/base.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Property } from '@puq/property';\nimport { BaseModel } from '@puq/type';\nimport {\n  CreateDateColumn,\n  DeleteDateColumn,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\n/**\n * All entities extends this entity. The entity provides id, createdAt, updatedAt, and deletedAt columns\n */\nexport class BaseEntity implements BaseModel {\n  @Property({ type: 'integer' })\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Property({ type: 'date' })\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @Property({ type: 'date' })\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @Property({ type: 'date' })\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\nexport const BASE_ENTITY_COLUMNS = Object.keys(new BaseEntity());\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntityService.html":{"url":"classes/BaseEntityService.html","title":"class - BaseEntityService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/service/base.ts\n        \n\n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/lib/service/base.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repo\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Repository } from 'typeorm';\nimport { BaseEntity } from '../entity/base.js';\n\nexport class BaseEntityService {\n  constructor(protected readonly repo: Repository) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseView.html":{"url":"classes/BaseView.html","title":"class - BaseView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/view/base.view.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewColumn({type: 'date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/view/base.view.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewColumn({type: 'date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/view/base.view.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewColumn({type: 'integer'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/view/base.view.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewColumn({type: 'date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/view/base.view.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ViewColumn } from './../decorator/view-column.js';\n\nexport class BaseView {\n  @ViewColumn({ type: 'integer' }) id: number;\n  @ViewColumn({ type: 'date' }) createdAt: Date;\n  @ViewColumn({ type: 'date' }) updatedAt: Date;\n  @ViewColumn({ type: 'date' }) deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommonQueryDto.html":{"url":"classes/CommonQueryDto.html","title":"class - CommonQueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommonQueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/query/common-query-dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Common query dto\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                withDeleted\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        withDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'boolean', description: 'Include deleted items to the load', default: false, acceptString: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/query/common-query-dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\n\n/**\n * Common query dto\n */\n@Dto()\nexport class CommonQueryDto {\n  @Property({\n    type: 'boolean',\n    description: 'Include deleted items to the load',\n    default: false,\n    acceptString: true,\n  })\n  withDeleted?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CountResultDto.html":{"url":"classes/CountResultDto.html","title":"class - CountResultDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CountResultDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dto/count.ts\n        \n\n\n            \n                Description\n            \n            \n                Count result\n\n            \n\n\n            \n                Implements\n            \n            \n                        CountResult\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                count\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        count\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', description: 'The number of items mached the query'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/count.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@puq/property';\nimport { CountResult } from '@puq/type';\nimport { Exclude } from 'class-transformer';\n\n/**\n * Count result\n */\n@Exclude()\nexport class CountResultDto implements CountResult {\n  @ApiProperty({\n    type: 'integer',\n    description: 'The number of items mached the query',\n  })\n  count: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteResultDto.html":{"url":"classes/DeleteResultDto.html","title":"class - DeleteResultDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteResultDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dto/delete.ts\n        \n\n\n            \n                Description\n            \n            \n                Delete result\n\n            \n\n\n            \n                Implements\n            \n            \n                        DeleteResult\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                affected\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        affected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', description: 'The number of items affected by the delete operation'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/delete.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@puq/property';\nimport { DeleteResult } from '@puq/type';\nimport { Exclude } from 'class-transformer';\n/**\n * Delete result\n */\n@Exclude()\nexport class DeleteResultDto implements DeleteResult {\n  @ApiProperty({\n    type: 'integer',\n    description: 'The number of items affected by the delete operation',\n  })\n  affected: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EntityReadService.html":{"url":"classes/EntityReadService.html","title":"class - EntityReadService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EntityReadService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/service/read.ts\n        \n\n\n            \n                Description\n            \n            \n                Read service\n\n            \n\n            \n                Extends\n            \n            \n                            BaseEntityService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                count\n                            \n                            \n                                find\n                            \n                            \n                                findOne\n                            \n                            \n                                findOneById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(query: QueryCount)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/read.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        QueryCount\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \nfind(query: QueryMany)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/read.ts:16\n                        \n                    \n\n\n            \n                \n                        Query all entities\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        QueryMany\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(query: QueryOne)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/read.ts:25\n                        \n                    \n\n\n            \n                \n                        Query one entity\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        QueryOne\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneById\n                        \n                    \n                \n            \n            \n                \nfindOneById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/read.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FindOptionsWhere } from 'typeorm';\nimport { BaseEntity } from '../entity/base.js';\nimport { QueryCount, QueryMany, QueryOne } from '@puq/query';\nimport { CountResult } from '@puq/type';\nimport { BaseEntityService } from './base.js';\n\n/**\n * Read service\n */\nexport class EntityReadService extends BaseEntityService {\n  /**\n   * Query all entities\n   */\n  find(query: QueryMany[]>) {\n    return this.repo.find(query);\n  }\n\n  /**\n   * Query one entity\n   * @param query {@linkk QueryOne}\n   * @returns\n   */\n  findOne(query: QueryOne[]>) {\n    return this.repo.findOne(query);\n  }\n\n  findOneById(id: number) {\n    return this.repo.findOneBy({ id } as FindOptionsWhere);\n  }\n\n  async count(query: QueryCount[]>): Promise {\n    return { count: await this.repo.count(query) };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EntityWriteService.html":{"url":"classes/EntityWriteService.html","title":"class - EntityWriteService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EntityWriteService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/service/write.ts\n        \n\n\n            \n                Description\n            \n            \n                Write service\n\n            \n\n            \n                Extends\n            \n            \n                            EntityReadService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addRelation\n                            \n                            \n                                delete\n                            \n                            \n                                    Async\n                                removeRelation\n                            \n                            \n                                save\n                            \n                            \n                                saveMany\n                            \n                            \n                                    Async\n                                setRelation\n                            \n                            \n                                softDelete\n                            \n                            \n                                    Async\n                                unsetRelation\n                            \n                            \n                                update\n                            \n                            \n                                    Async\n                                count\n                            \n                            \n                                find\n                            \n                            \n                                findOne\n                            \n                            \n                                findOneById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    addRelation(relation: RelationParam)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/write.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relation\n                                            \n                                                            RelationParam\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/write.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeRelation(relation: RelationParam)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/write.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relation\n                                            \n                                                            RelationParam\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        save\n                        \n                    \n                \n            \n            \n                \nsave(entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/write.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveMany\n                        \n                    \n                \n            \n            \n                \nsaveMany(entities: T[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/write.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        T[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    setRelation(relation: RelationParam)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/write.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relation\n                                            \n                                                            RelationParam\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        softDelete\n                        \n                    \n                \n            \n            \n                \nsoftDelete(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/write.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        unsetRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    unsetRelation(relation: UnsetRelationParam)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/write.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relation\n                                            \n                                                            UnsetRelationParam\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, entity: QueryDeepPartialEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/write.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                            QueryDeepPartialEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(query: QueryCount)\n                \n            \n\n\n                    \n                        \n                            Inherited from         EntityReadService\n\n                        \n                    \n                    \n                        \n                                Defined in         EntityReadService:33\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        QueryCount\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \nfind(query: QueryMany)\n                \n            \n\n\n                    \n                        \n                            Inherited from         EntityReadService\n\n                        \n                    \n                    \n                        \n                                Defined in         EntityReadService:16\n\n                        \n                    \n\n\n            \n                \n                        Query all entities\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        QueryMany\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(query: QueryOne)\n                \n            \n\n\n                    \n                        \n                            Inherited from         EntityReadService\n\n                        \n                    \n                    \n                        \n                                Defined in         EntityReadService:25\n\n                        \n                    \n\n\n            \n                \n                        Query one entity\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        QueryOne\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneById\n                        \n                    \n                \n            \n            \n                \nfindOneById(id: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         EntityReadService\n\n                        \n                    \n                    \n                        \n                                Defined in         EntityReadService:29\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BaseEntity } from '../entity/base.js';\nimport { QueryDeepPartialEntity } from 'typeorm/query-builder/QueryPartialEntity.js';\nimport { RelationParam, UnsetRelationParam, UpdateResult } from '@puq/type';\nimport { EntityReadService } from './read.js';\n\n/**\n * Write service\n */\nexport class EntityWriteService extends EntityReadService {\n  save(entity: T): Promise {\n    return this.repo.save(entity);\n  }\n\n  saveMany(entities: T[]): Promise {\n    return this.repo.save(entities);\n  }\n\n  update(id: number, entity: QueryDeepPartialEntity) {\n    return this.repo.update(id, entity);\n  }\n\n  delete(id: number) {\n    return this.repo.delete(id);\n  }\n\n  softDelete(id: number) {\n    return this.repo.softDelete(id);\n  }\n\n  async addRelation(relation: RelationParam): Promise {\n    const { id, rid, rn } = relation;\n    await this.repo.createQueryBuilder().relation(rn).of(id).add(rid);\n    return { affected: 1 };\n  }\n\n  async removeRelation(relation: RelationParam): Promise {\n    const { id, rid, rn } = relation;\n    await this.repo.createQueryBuilder().relation(rn).of(id).remove(rid);\n    return { affected: 1 };\n  }\n\n  async setRelation(relation: RelationParam): Promise {\n    const { id, rid, rn } = relation;\n    await this.repo.createQueryBuilder().relation(rn).of(id).set(rid);\n    return { affected: 1 };\n  }\n\n  async unsetRelation(relation: UnsetRelationParam): Promise {\n    const { id, rn } = relation;\n    await this.repo.createQueryBuilder().relation(rn).of(id).set(null);\n    return { affected: 1 };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TableNamingStrategy.html":{"url":"classes/TableNamingStrategy.html","title":"class - TableNamingStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TableNamingStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/factory/naming-strategy.ts\n        \n\n\n            \n                Description\n            \n            \n                Databaes table and column naming strategy\n\n            \n\n            \n                Extends\n            \n            \n                        DefaultNamingStrategy\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                joinColumnName\n                            \n                            \n                                    \n                                joinTableColumnName\n                            \n                            \n                                    \n                                joinTableInverseColumnName\n                            \n                            \n                                    \n                                joinTableName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        joinColumnName\n                        \n                    \n                \n            \n            \n                \n                        \n                    joinColumnName(relationName: string, _referencedColumnName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/factory/naming-strategy.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relationName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                _referencedColumnName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        joinTableColumnName\n                        \n                    \n                \n            \n            \n                \n                        \n                    joinTableColumnName(_tableName: string, _propertyName: string, _columnName?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/factory/naming-strategy.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _tableName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                _propertyName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                _columnName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        joinTableInverseColumnName\n                        \n                    \n                \n            \n            \n                \n                        \n                    joinTableInverseColumnName(_tableName: string, _propertyName: string, _columnName?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/factory/naming-strategy.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _tableName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                _propertyName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                _columnName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        joinTableName\n                        \n                    \n                \n            \n            \n                \n                        \n                    joinTableName(firstTableName: string, secondTableName: string, _firstPropertyName: string, _secondPropertyName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/factory/naming-strategy.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                firstTableName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                secondTableName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                _firstPropertyName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                _secondPropertyName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DefaultNamingStrategy } from 'typeorm';\n/**\n * Databaes table and column naming strategy\n */\nexport class TableNamingStrategy extends DefaultNamingStrategy {\n  override joinTableName(\n    firstTableName: string,\n    secondTableName: string,\n    _firstPropertyName: string,\n    _secondPropertyName: string\n  ): string {\n    return `${firstTableName}_${secondTableName}`;\n  }\n\n  override joinColumnName(\n    relationName: string,\n    _referencedColumnName: string\n  ): string {\n    return relationName;\n  }\n\n  override joinTableColumnName(\n    _tableName: string,\n    _propertyName: string,\n    _columnName?: string\n  ): string {\n    return _tableName;\n  }\n\n  override joinTableInverseColumnName(\n    _tableName: string,\n    _propertyName: string,\n    _columnName?: string\n  ): string {\n    return _tableName;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateResultDto.html":{"url":"classes/UpdateResultDto.html","title":"class - UpdateResultDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateResultDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dto/update.ts\n        \n\n\n            \n                Description\n            \n            \n                Update result\n\n            \n\n\n            \n                Implements\n            \n            \n                        UpdateResult\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                affected\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        affected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', description: 'The number of items affected by the update operation'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/update.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@puq/property';\nimport { UpdateResult } from '@puq/type';\nimport { Exclude } from 'class-transformer';\n\n/**\n * Update result\n */\n@Exclude()\nexport class UpdateResultDto implements UpdateResult {\n  @ApiProperty({\n    type: 'integer',\n    description: 'The number of items affected by the update operation',\n  })\n  affected: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/lib/decorator/column.ts\n            \n            function\n            Column\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/decorator/column.ts\n            \n            function\n            pickDataType\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/decorator/column.ts\n            \n            function\n            pickTransformer\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/decorator/entity.ts\n            \n            function\n            Entity\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/decorator/relation.ts\n            \n            function\n            Relation\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/decorator/view-column.ts\n            \n            function\n            ViewColumn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/decorator/view-entity.ts\n            \n            function\n            ViewEntity\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/dto/count.ts\n            \n            class\n            CountResultDto\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/lib/dto/delete.ts\n            \n            class\n            DeleteResultDto\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                        src/lib/dto/relation.ts\n            \n            function\n            CreateRelationParamDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/dto/relation.ts\n            \n            function\n            CreateUnsetRelationParamDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/dto/update.ts\n            \n            class\n            UpdateResultDto\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/lib/entity/base.ts\n            \n            class\n            BaseEntity\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                        src/lib/entity/base.ts\n            \n            variable\n            BASE_ENTITY_COLUMNS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/factory/naming-strategy.ts\n            \n            class\n            TableNamingStrategy\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/lib/query/common-query-dto.ts\n            \n            class\n            CommonQueryDto\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                        src/lib/query/create-find-operator.ts\n            \n            function\n            createFindOperator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/query/create-query-count-dto.ts\n            \n            function\n            CreateQueryCountDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/query/create-query-count-dto.ts\n            \n            type alias\n            CreateQueryCountDtoOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/query/create-query-many-dto.ts\n            \n            function\n            CreateQueryManyDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/query/create-query-many-dto.ts\n            \n            type alias\n            QueryManyDtoOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/query/create-query-one-dto.ts\n            \n            function\n            CreateQueryOneDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/query/create-query-one-dto.ts\n            \n            type alias\n            QueryOneDtoOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/query/create-where-option-dto.ts\n            \n            function\n            CreateWhereOptionDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/query/select-transformer.ts\n            \n            function\n            SelectTransformer\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/query/where-query-transformer.ts\n            \n            function\n            WhereQueryTransformer\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/query/where-query-transformer.ts\n            \n            type alias\n            WhereQueryTransformerOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/service/base.ts\n            \n            class\n            BaseEntityService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/service/read.ts\n            \n            class\n            EntityReadService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/lib/service/write.ts\n            \n            class\n            EntityWriteService\n            \n                21 %\n                (3/14)\n            \n        \n        \n            \n                \n                src/lib/view/base.view.ts\n            \n            class\n            BaseView\n            \n                0 %\n                (0/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @puq/names : ^0.2.0\n        \n            @puq/query : ^0.2.0\n        \n            @puq/property : ^0.2.0\n        \n            @puq/type : ^0.2.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @nestjs/common : ^11.0.10\n        \n            @nestjs/swagger : ^11.0.3\n        \n            better-sqlite3 : ^11.8.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            pg : ^8.13.3\n        \n            reflect-metadata : ^0.2.2\n        \n            sqlite3 : ^5.1.7\n        \n            typeorm : ^0.3.20\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Column   (src/.../column.ts)\n                        \n                        \n                            createFindOperator   (src/.../create-find-operator.ts)\n                        \n                        \n                            CreateQueryCountDto   (src/.../create-query-count-dto.ts)\n                        \n                        \n                            CreateQueryManyDto   (src/.../create-query-many-dto.ts)\n                        \n                        \n                            CreateQueryOneDto   (src/.../create-query-one-dto.ts)\n                        \n                        \n                            CreateRelationParamDto   (src/.../relation.ts)\n                        \n                        \n                            CreateUnsetRelationParamDto   (src/.../relation.ts)\n                        \n                        \n                            CreateWhereOptionDto   (src/.../create-where-option-dto.ts)\n                        \n                        \n                            Entity   (src/.../entity.ts)\n                        \n                        \n                            pickDataType   (src/.../column.ts)\n                        \n                        \n                            pickTransformer   (src/.../column.ts)\n                        \n                        \n                            Relation   (src/.../relation.ts)\n                        \n                        \n                            SelectTransformer   (src/.../select-transformer.ts)\n                        \n                        \n                            ViewColumn   (src/.../view-column.ts)\n                        \n                        \n                            ViewEntity   (src/.../view-entity.ts)\n                        \n                        \n                            WhereQueryTransformer   (src/.../where-query-transformer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/decorator/column.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Column\n                        \n                    \n                \n            \n            \n                \nColumn(options: PropertyOptions)\n                \n            \n\n\n\n\n            \n                \n                        Typeorm Column decorator with validation and documentaion capability\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        PropertyOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     PropertyDecorator\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pickDataType\n                        \n                    \n                \n            \n            \n                \npickDataType(options: PropertyOptions)\n                \n            \n\n\n\n\n            \n                \n                        Pick column data type based on provided data type and database driver\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        PropertyOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ColumnType\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pickTransformer\n                        \n                    \n                \n            \n            \n                \npickTransformer(options: PropertyOptions)\n                \n            \n\n\n\n\n            \n                \n                        Pick transformer based on the given data type and database driver\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        PropertyOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValueTransformer | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/query/create-find-operator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createFindOperator\n                        \n                    \n                \n            \n            \n                \ncreateFindOperator(query: WhereOption)\n                \n            \n\n\n\n\n            \n                \n                        Create FindOperator from WhereOption\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        WhereOption\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    WhereOption\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Record>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/query/create-query-count-dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CreateQueryCountDto\n                        \n                    \n                \n            \n            \n                \nCreateQueryCountDto(options: CreateQueryCountDtoOptions)\n                \n            \n\n\n\n\n            \n                \n                        Create a count query dto for the entity\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            CreateQueryCountDtoOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    CreateQueryCountDtoOptions\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Type\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/query/create-query-many-dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CreateQueryManyDto\n                        \n                    \n                \n            \n            \n                \nCreateQueryManyDto(options: QueryManyDtoOptions)\n                \n            \n\n\n\n\n            \n                \n                        Create QueryMany dto\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            QueryManyDtoOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    QueryManyDtoOptions\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Type>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/query/create-query-one-dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CreateQueryOneDto\n                        \n                    \n                \n            \n            \n                \nCreateQueryOneDto(options: QueryOneDtoOptions)\n                \n            \n\n\n\n\n            \n                \n                        Create QueryOne dto\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            QueryOneDtoOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    QueryOneDtoOptions\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Type>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/dto/relation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CreateRelationParamDto\n                        \n                    \n                \n            \n            \n                \nCreateRelationParamDto(relations: Keys)\n                \n            \n\n\n\n\n            \n                \n                        Create RelationParam dto for the entity\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                relations\n                                            \n                                                        Keys\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    relation names\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Type\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CreateUnsetRelationParamDto\n                        \n                    \n                \n            \n            \n                \nCreateUnsetRelationParamDto(relations: Keys)\n                \n            \n\n\n\n\n            \n                \n                        Create UnsetRelationParam dto for the entity\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                relations\n                                            \n                                                        Keys\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    relation names\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Type\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/query/create-where-option-dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CreateWhereOptionDto\n                        \n                    \n                \n            \n            \n                \nCreateWhereOptionDto(columns: Keys)\n                \n            \n\n\n\n\n            \n                \n                        Create WhereOption dto for the entity\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                columns\n                                            \n                                                        Keys\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    queriable columns\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Type>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/decorator/entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Entity\n                        \n                    \n                \n            \n            \n                \nEntity(uniques?)\n                \n            \n\n\n\n\n            \n                \n                        Typeorm entity decorator with transformer capability\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                uniques\n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    Composite unique constraint must be set on entity classes and must specify entity's fields to be unique\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ClassDecorator\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/decorator/relation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Relation\n                        \n                    \n                \n            \n            \n                \nRelation(options: RelationOptions)\n                \n            \n\n\n\n\n            \n                \n                        Relation decorator\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            RelationOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    relation options RelationOptions\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     PropertyDecorator\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/query/select-transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SelectTransformer\n                        \n                    \n                \n            \n            \n                \nSelectTransformer()\n                \n            \n\n\n\n\n            \n                \n                        Transform the select query param into string array\n\n\n                        \n                            Returns :     PropertyDecorator\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/decorator/view-column.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ViewColumn\n                        \n                    \n                \n            \n            \n                \nViewColumn(options: PropertyOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        PropertyOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     PropertyDecorator\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/decorator/view-entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ViewEntity\n                        \n                    \n                \n            \n            \n                \nViewEntity(expression, selectBaseEntity)\n                \n            \n\n\n\n\n            \n                \n                        TypeORM view entity decorator\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expression\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    SelectQueryBuilder query builder\n\n                                            \n                                        \n                                        \n                                                selectBaseEntity\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                            \n                                                    if false, the id, and timestamp columns are not selected by default. if not false, the view entity should extends the BaseView or provide the id, and timestamp view columns manually.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ClassDecorator\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/query/where-query-transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        WhereQueryTransformer\n                        \n                    \n                \n            \n            \n                \nWhereQueryTransformer(columns: Keys)\n                \n            \n\n\n\n\n            \n                \n                        Parse where-query string into typeorm where object.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                columns\n                                            \n                                                        Keys\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     PropertyDecorator\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n@puq/orm\nSummary\nThe custom TypeORM decorators extend standard entity definitions by seamlessly integrating validation and API documentation within a single decorator. These decorators ensure that database entities are not only mapped efficiently but also validated at the DTO level while providing clear API documentation using Swagger.\nDatabase entity development is streamlined through the integration of intuitive and widely adopted implementations within decorators. These decorators are paired with class-validator, class-transformer, and @nestjs/swagger, enhancing efficiency in the development process. This approach achieves a minimum reduction of 60% in both code volume and associated errors.\nInstall\nExample :  pnpm add @puq/ormSQLite\n\nSQLite does not support array or object data types. To accommodate this limitation, data must be transformed into a string format.\n\nPostgres Datasource\nTo optimize datasource performance, implement the following configuration settings:\n\npoolSize: Set to 50. This defines the maximum number of connections allowed in the pool, ensuring efficient resource utilization while accommodating peak demand.\nmin: Set to 10. This specifies the minimum number of connections maintained in the pool, keeping a baseline of readily available connections to reduce latency during low-traffic periods.\nmax: Set to 50. This establishes the upper limit of open connections, balancing system performance with resource availability to prevent overloading.\nidleTimeoutMillis: Configure to 30,000 milliseconds. This determines the duration an idle connection remains open before being closed, minimizing unnecessary resource consumption during periods of inactivity.\nconnectionTimeoutMillis: Configure to 2,000 milliseconds. This sets the maximum time allowed to establish a connection, enhancing application responsiveness by preventing prolonged delays.\n\nPostgres Server\nAdjust the PostgreSQL server configuration file (postgres.conf) with the following settings:\n\nmax_connections: Set to 200 to accommodate both application and administrative connections, ensuring sufficient capacity.\nshared_buffers: Allocate 25-40% of the server's RAM for optimal performance, configured to 4GB.\nwork_mem: Define the memory allocation per query or sort operation, set to 16MB to enhance query efficiency.\n\nNumbers\n\nThe number data type is stored as a string (numeric) to ensure the preservation of precision.\nThe number value is not converted to a JavaScript number to avoid disrupting query operations.\n\nTypeorm Column Transformer\n\nRefrain from using TypeORM column transformers, as they may interfere with query operations. Instead, implement transformations within the data transfer layer.\n\nHashing and encrypion\n\nHashing should be done in database layer. Typeorom column transformer is safe to use\nEncryption is done in controller layer\nFor handling encrypted data, implement a dedicated data transfer object (DTO) class and apply it subsequent to the execution of the initial DTO class within the controller\n\nFunding\nThank you for using @puq/orm It's an open-source project, and maintaining it takes time and effort. If you find this library useful, please consider supporting its ongoing development. Your contributions help ensure that the project stays up-to-date, secure, and well-maintained.\nInstant Funding\nYour funding will go toward\n\nBug fixes and updates to ensure compatibility with the latest versions of dependencies.\nNew features that will make the library even more powerful.\nDocumentation improvements to help users get the most out of [Your Library Name].\nGeneral maintenance to keep the library running smoothly and securely.\n\nContact to the developer: [robert.brightline@gmail.com]\nSupport the developer\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    10 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.2.0\n        \n            Description : The custom TypeORM decorators extend standard entity definitions by seamlessly integrating validation and API documentation within a single decorator. These decorators ensure that database entities are not only mapped efficiently but also validated at the DTO level while providing clear API documentation using Swagger.\n        \n            Keywords : puq, orm\n        \n            Homepage : https://rbrightline.github.io/puq/orm\n        \n            Bugs : https://rbrightline.github.io\n        \n            License : MIT\n        \n            Repository : https://github.com/rbrightline/puq/tree/main\n        \n            Author : Robert Brightline\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTASKS\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CreateQueryCountDtoOptions   (src/.../create-query-count-dto.ts)\n                        \n                        \n                            QueryManyDtoOptions   (src/.../create-query-many-dto.ts)\n                        \n                        \n                            QueryOneDtoOptions   (src/.../create-query-one-dto.ts)\n                        \n                        \n                            WhereQueryTransformerOptions   (src/.../where-query-transformer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/query/create-query-count-dto.ts\n    \n    \n        \n            \n                \n                    \n                    CreateQueryCountDtoOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/lib/query/create-query-many-dto.ts\n    \n    \n        \n            \n                \n                    \n                    QueryManyDtoOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/lib/query/create-query-one-dto.ts\n    \n    \n        \n            \n                \n                    \n                    QueryOneDtoOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/lib/query/where-query-transformer.ts\n    \n    \n        \n            \n                \n                    \n                    WhereQueryTransformerOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BASE_ENTITY_COLUMNS   (src/.../base.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/entity/base.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BASE_ENTITY_COLUMNS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.keys(new BaseEntity())\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
