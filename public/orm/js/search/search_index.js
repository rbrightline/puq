var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/entities/AttributeRelation.html",[0,0.241,1,0.924]],["body/entities/AttributeRelation.html",[0,0.391,1,1.357,2,0.673,3,0.247,4,0.217,5,0.189,6,2.269,7,1.329,8,0.161,9,0.45,10,1.543,11,1.357,12,0.33,13,0.029,14,1.311,15,0.45,16,2.303,17,2.917,18,0.315,19,2.67,20,2.67,21,0.491,22,0.548,23,0.548,24,0.378,25,1.441,26,0.904,27,0.904,28,1.59,29,0.904,30,1.02,31,0.725,32,0.513,33,0.368,34,1.237,35,1.237,36,1.061,37,3.397,38,1.168,39,1.237,40,1.588,41,1.237,42,1.311,43,0.725,44,0.837,45,0.776,46,1.434,47,1.543,48,0.905,49,1.441,50,0.905,51,0.533,52,1.051,53,1.693,54,1.71,55,1.693,56,1.573,57,1.543,58,1.132,59,1.311,60,1.693,61,1.543,62,0.904,63,0.904,64,0.904,65,0.016,66,0.016]],["title/entities/AttributeRelation-1.html",[0,0.203,1,0.779,67,1.429]],["body/entities/AttributeRelation-1.html",[0,0.399,1,1.392,2,0.71,3,0.261,4,0.23,5,0.199,8,0.17,9,0.468,10,1.591,11,1.392,12,0.33,13,0.029,14,1.319,15,0.468,18,0.328,21,0.502,22,0.57,23,0.57,24,0.399,25,1.472,26,0.955,27,0.955,28,1.605,29,0.955,30,1.039,31,0.765,32,0.522,33,0.374,34,1.276,35,1.276,36,1.084,38,1.198,39,1.276,40,1.612,41,1.276,42,1.364,43,0.765,44,0.871,45,0.796,46,1.478,47,1.591,48,0.941,49,1.472,50,0.941,51,0.563,52,1.093,53,1.736,54,1.735,55,1.736,56,1.613,57,1.591,58,1.177,59,1.364,60,1.736,61,1.591,62,0.955,63,0.955,64,0.955,65,0.017,66,0.017,68,1.404,69,2.396,70,2.82,71,2.82]],["title/classes/BaseEntity.html",[30,0.627,33,0.226]],["body/classes/BaseEntity.html",[0,0.404,2,1.211,3,0.337,4,0.297,5,0.258,8,0.22,9,0.558,12,0.317,13,0.029,15,0.664,18,0.465,21,0.529,23,0.809,24,0.516,30,0.991,32,0.445,33,0.242,36,1.142,45,0.566,52,1.734,65,0.02,66,0.02,72,0.728,73,2.682,74,1.065,75,4.806,76,3.101,77,4.995,78,4.995,79,4.995,80,4.04,81,3.757,82,2.205,83,5.377,84,1.935,85,3.645,86,3.645,87,3.645,88,3.645,89,3.645,90,3.645,91,3.064,92,3.064,93,3.645,94,1.432,95,4.806,96,4.806,97,4.806,98,1.546,99,3.645,100,3.645,101,3.064,102,2.682,103,3.064]],["title/classes/BaseEntityService.html",[33,0.226,104,2.238]],["body/classes/BaseEntityService.html",[3,0.436,4,0.384,5,0.333,12,0.304,13,0.029,18,0.384,21,0.523,30,0.868,31,1.28,32,0.436,33,0.313,65,0.024,66,0.024,72,0.942,98,2,104,3.714,105,3.963,106,4.714,107,4.714,108,5.476,109,4.714,110,2.803,111,2.558,112,2,113,4.714,114,4.714]],["title/classes/BaseIdEntity.html",[33,0.226,81,2.238]],["body/classes/BaseIdEntity.html",[3,0.42,4,0.369,5,0.32,8,0.273,9,0.641,12,0.299,13,0.029,15,0.526,18,0.369,21,0.551,23,0.782,24,0.642,32,0.42,33,0.301,44,0.98,45,0.856,65,0.023,66,0.023,72,0.906,76,3.228,81,3.627,82,2.532,84,1.535,91,3.811,94,1.781,98,1.923,115,4.639,116,3.811,117,5.95,118,4.533,119,5.519]],["title/classes/BaseView.html",[33,0.226,120,2.505]],["body/classes/BaseView.html",[3,0.384,4,0.338,5,0.293,8,0.25,9,0.607,12,0.326,13,0.029,15,0.697,18,0.489,21,0.384,32,0.384,33,0.275,44,1.129,45,0.81,52,1.809,65,0.022,66,0.022,72,0.829,76,3.102,77,4.806,78,4.806,79,4.806,120,3.842,121,3.486,122,6.001,123,4.147,124,4.147,125,4.147,126,4.147,127,4.551,128,4.147,129,4.147]],["title/classes/CommonQueryDto.html",[33,0.226,130,2.505]],["body/classes/CommonQueryDto.html",[3,0.4,4,0.352,5,0.305,8,0.26,9,0.622,12,0.269,13,0.028,15,0.502,18,0.352,21,0.4,22,0.862,23,0.759,24,0.612,32,0.4,33,0.287,46,1.915,51,1.071,54,1.566,56,1.685,65,0.023,66,0.023,72,0.863,74,1.702,84,1.463,112,2.273,130,3.942,131,4.504,132,2.794,133,2.84,134,4.504,135,5.825,136,5.358,137,5.358,138,5.358,139,3.942,140,5.358,141,4.32]],["title/classes/CountResultDto.html",[33,0.226,142,2.505]],["body/classes/CountResultDto.html",[3,0.404,4,0.356,5,0.309,8,0.263,9,0.626,12,0.294,13,0.029,15,0.507,18,0.356,21,0.499,22,0.764,23,0.764,24,0.618,32,0.404,33,0.29,44,1.166,45,0.948,51,1.078,65,0.023,66,0.023,72,0.872,74,1.71,82,2.475,84,1.478,94,1.716,132,2.475,142,3.968,143,4.534,144,2.87,145,3.407,146,3.968,147,4.919,148,5.393,149,3.212]],["title/classes/DeleteResultDto.html",[33,0.226,150,2.505]],["body/classes/DeleteResultDto.html",[3,0.4,4,0.352,5,0.305,8,0.26,9,0.622,12,0.292,13,0.029,15,0.502,18,0.352,21,0.496,22,0.862,23,0.759,24,0.612,32,0.4,33,0.287,44,1.159,45,0.945,51,1.071,65,0.023,66,0.023,72,0.863,74,1.702,82,2.459,84,1.463,94,1.698,144,2.84,146,3.942,149,3.178,150,3.942,151,4.504,152,5.119,153,5.825,154,4.606,155,3.942]],["title/classes/EntityReadService.html",[33,0.226,156,2.238]],["body/classes/EntityReadService.html",[0,0.323,2,1.152,3,0.313,4,0.276,5,0.239,8,0.204,12,0.312,13,0.029,18,0.452,21,0.537,30,0.623,31,0.919,32,0.313,33,0.225,36,0.914,38,1.068,45,0.804,65,0.019,66,0.019,72,0.676,74,1.337,76,2.481,94,1.33,98,1.436,104,3.405,110,3.3,111,3.01,112,2.354,132,2.85,145,2.811,147,2.845,156,3.006,157,2.845,158,4.574,159,3.845,160,3.365,161,4.355,162,2.72,163,3.845,164,3.845,165,3.845,166,4.664,167,3.384,168,3.809,169,3.845,170,3.845,171,4.082,172,3.384,173,3.845,174,4.394,175,3.384,176,3.845,177,3.384,178,4.574,179,2.845,180,3.384,181,4.082,182,3.384,183,2.49,184,2.013,185,3.384,186,3.384,187,2.845,188,3.384]],["title/classes/EntityWriteService.html",[33,0.226,189,2.505]],["body/classes/EntityWriteService.html",[0,0.369,2,0.865,3,0.21,4,0.185,5,0.16,8,0.137,12,0.313,13,0.029,18,0.494,21,0.428,25,1.515,30,0.418,31,0.616,32,0.21,33,0.151,36,0.686,38,0.53,45,0.918,65,0.015,66,0.015,67,2.3,72,0.454,74,1.004,76,3.029,92,3.884,94,0.892,101,3.884,110,3.609,111,3.293,112,2.574,132,2.277,145,1.864,152,2.888,154,3.399,156,3.563,159,2.888,160,2.527,161,5.153,162,2.043,163,2.888,164,2.888,165,1.909,166,2.888,168,3.989,169,5.102,170,1.909,171,2.527,173,1.909,174,3.048,176,1.909,181,4.204,187,3.884,189,2.527,190,1.909,191,3.435,192,3.435,193,3.435,194,3.435,195,3.435,196,3.435,197,3.435,198,3.435,199,2.888,200,3.435,201,4.897,202,2.271,203,3.435,204,2.271,205,3.435,206,2.271,207,3.435,208,5.22,209,2.271,210,3.435,211,2.271,212,3.435,213,2.271,214,3.435,215,2.271,216,3.435,217,3.884,218,2.271,219,3.435,220,4.62,221,2.271,222,2.271,223,2.271,224,2.271,225,2.271,226,2.271,227,2.271,228,1.909,229,2.271,230,2.271,231,2.271,232,2.271,233,2.271,234,2.271,235,4.143,236,4.171,237,4.62,238,4.62,239,4.62,240,4.62,241,2.271,242,2.271,243,2.271,244,2.271]],["title/classes/HttpErrorDto.html",[33,0.226,245,1.847]],["body/classes/HttpErrorDto.html",[3,0.39,4,0.343,5,0.298,8,0.254,9,0.612,12,0.303,13,0.029,14,1.206,15,0.612,18,0.429,21,0.39,22,0.747,23,0.815,24,0.596,32,0.39,33,0.28,44,1.14,45,0.818,65,0.022,66,0.022,72,0.841,74,1.231,84,1.785,134,4.433,245,2.861,246,4.84,247,2.504,248,3.966,249,5.273,250,6.213,251,5.757,252,4.211,253,3.54,254,5.273,255,4.433]],["title/entities/ManyRelation.html",[0,0.241,39,0.924]],["body/entities/ManyRelation.html",[0,0.394,1,1.253,2,0.688,3,0.253,4,0.222,5,0.193,6,1.96,7,1.36,8,0.165,9,0.457,10,0.925,11,1.069,12,0.329,13,0.029,14,1.306,15,0.317,16,1.624,17,2.907,18,0.222,21,0.496,22,0.558,23,0.558,24,0.387,25,1.454,26,0.925,27,0.925,28,1.596,29,0.925,30,1.028,31,0.741,32,0.517,33,0.37,34,1.253,35,1.253,36,1.07,37,3.411,38,1.18,39,1.372,40,1.653,41,1.253,42,1.333,43,0.741,44,0.851,45,0.784,46,1.452,47,1.563,48,0.92,49,1.454,50,0.92,51,0.546,52,1.069,53,1.711,54,1.721,55,1.711,56,1.589,57,1.563,58,1.151,59,1.333,60,1.711,61,1.563,62,0.925,63,0.925,64,0.925,65,0.017,66,0.017,256,2.731]],["title/entities/ManyRelation-1.html",[0,0.203,39,0.779,67,1.429]],["body/entities/ManyRelation-1.html",[0,0.401,1,1.289,2,0.724,3,0.266,4,0.234,5,0.203,8,0.173,9,0.474,10,0.973,11,1.108,12,0.33,13,0.029,14,1.314,15,0.334,18,0.234,21,0.506,22,0.578,23,0.578,24,0.407,25,1.483,26,0.973,27,0.973,28,1.609,29,0.973,30,1.046,31,0.78,32,0.525,33,0.377,34,1.289,35,1.289,36,1.092,38,1.208,39,1.404,40,1.671,41,1.289,42,1.382,43,0.78,44,0.883,45,0.803,46,1.494,47,1.608,48,0.954,49,1.483,50,0.954,51,0.574,52,1.108,53,1.751,54,1.744,55,1.751,56,1.627,57,1.608,58,1.193,59,1.382,60,1.751,61,1.608,62,0.973,63,0.973,64,0.973,65,0.017,66,0.017,68,1.431,69,1.709,257,2.873]],["title/entities/OneRelation.html",[0,0.241,35,0.924]],["body/entities/OneRelation.html",[0,0.394,1,1.253,2,0.688,3,0.253,4,0.222,5,0.193,6,1.96,7,1.36,8,0.165,9,0.457,10,0.925,11,1.069,12,0.329,13,0.029,14,1.306,15,0.317,16,1.624,17,2.907,18,0.222,21,0.496,22,0.558,23,0.558,24,0.387,25,1.454,26,0.925,27,0.925,28,1.596,29,0.925,30,1.028,31,0.741,32,0.517,33,0.37,34,1.253,35,1.372,36,1.07,37,3.411,38,1.303,39,1.253,40,1.598,41,1.253,42,1.333,43,0.741,44,0.851,45,0.784,46,1.452,47,1.563,48,0.92,49,1.454,50,0.92,51,0.546,52,1.069,53,1.711,54,1.721,55,1.711,56,1.589,57,1.563,58,1.151,59,1.333,60,1.711,61,1.563,62,0.925,63,0.925,64,0.925,65,0.017,66,0.017,258,2.731]],["title/entities/OneRelation-1.html",[0,0.203,35,0.779,67,1.429]],["body/entities/OneRelation-1.html",[0,0.401,1,1.289,2,0.724,3,0.266,4,0.234,5,0.203,8,0.173,9,0.474,10,0.973,11,1.108,12,0.33,13,0.029,14,1.314,15,0.334,18,0.234,21,0.506,22,0.578,23,0.578,24,0.407,25,1.483,26,0.973,27,0.973,28,1.609,29,0.973,30,1.046,31,0.78,32,0.525,33,0.377,34,1.289,35,1.404,36,1.092,38,1.326,39,1.289,40,1.62,41,1.289,42,1.382,43,0.78,44,0.883,45,0.803,46,1.494,47,1.608,48,0.954,49,1.483,50,0.954,51,0.574,52,1.108,53,1.751,54,1.744,55,1.751,56,1.627,57,1.608,58,1.193,59,1.382,60,1.751,61,1.608,62,0.973,63,0.973,64,0.973,65,0.017,66,0.017,68,1.431,69,1.709,259,2.873]],["title/entities/OwnerRelation.html",[0,0.241,41,0.924]],["body/entities/OwnerRelation.html",[0,0.394,1,1.253,2,0.688,3,0.253,4,0.222,5,0.193,6,1.96,7,1.36,8,0.165,9,0.457,10,0.925,11,1.069,12,0.329,13,0.029,14,1.306,15,0.317,16,1.624,17,2.907,18,0.222,21,0.496,22,0.558,23,0.558,24,0.387,25,1.454,26,0.925,27,0.925,28,1.596,29,0.925,30,1.028,31,0.741,32,0.517,33,0.37,34,1.253,35,1.253,36,1.07,37,3.411,38,1.18,39,1.253,40,1.598,41,1.372,42,1.711,43,0.741,44,0.851,45,0.784,46,1.452,47,1.563,48,0.92,49,1.454,50,0.92,51,0.546,52,1.069,53,1.711,54,1.721,55,1.711,56,1.589,57,1.563,58,1.151,59,1.333,60,1.711,61,1.563,62,0.925,63,0.925,64,0.925,65,0.017,66,0.017,260,2.731]],["title/entities/OwnerRelation-1.html",[0,0.203,41,0.779,67,1.429]],["body/entities/OwnerRelation-1.html",[0,0.401,1,1.289,2,0.724,3,0.266,4,0.234,5,0.203,8,0.173,9,0.474,10,0.973,11,1.108,12,0.33,13,0.029,14,1.314,15,0.334,18,0.234,21,0.506,22,0.578,23,0.578,24,0.407,25,1.483,26,0.973,27,0.973,28,1.609,29,0.973,30,1.046,31,0.78,32,0.525,33,0.377,34,1.289,35,1.289,36,1.092,38,1.208,39,1.289,40,1.62,41,1.404,42,1.751,43,0.78,44,0.883,45,0.803,46,1.494,47,1.608,48,0.954,49,1.483,50,0.954,51,0.574,52,1.108,53,1.751,54,1.744,55,1.751,56,1.627,57,1.608,58,1.193,59,1.382,60,1.751,61,1.608,62,0.973,63,0.973,64,0.973,65,0.017,66,0.017,68,1.431,69,1.709,261,2.873]],["title/classes/SingleValidationErrorDto.html",[33,0.226,262,2.024]],["body/classes/SingleValidationErrorDto.html",[3,0.276,4,0.242,5,0.21,8,0.179,9,0.486,12,0.33,13,0.029,14,1.343,15,0.486,18,0.341,21,0.448,22,0.853,23,0.937,24,0.422,32,0.448,33,0.321,36,0.595,48,1.131,49,1.314,50,0.695,51,0.595,65,0.018,66,0.018,72,0.595,74,0.87,82,2.411,84,1.417,94,1.17,112,2.228,184,2.489,245,2.271,247,1.77,248,3.958,262,3.292,263,3.183,264,2.489,265,3.004,266,3.562,267,4.224,268,3.508,269,2.977,270,2.977,271,3.08,272,3.08,273,3.08,274,2.19,275,2.19,276,1.956,277,1.956,278,2.19,279,2.19,280,2.19,281,2.19,282,2.19,283,2.19,284,2.19,285,2.19,286,2.19,287,2.19,288,1.77,289,2.19,290,2.752]],["title/classes/TableNamingStrategy.html",[33,0.226,291,2.505]],["body/classes/TableNamingStrategy.html",[3,0.335,4,0.295,5,0.256,8,0.218,12,0.286,13,0.029,14,1.353,18,0.464,21,0.335,28,1.206,32,0.335,33,0.24,36,0.956,65,0.02,66,0.02,72,0.724,74,1.058,98,1.536,110,3.391,111,3.093,112,2.418,160,3.52,168,3.747,181,4.194,236,4.023,291,3.52,292,4.984,293,3.044,294,3.145,295,4.023,296,4.785,297,4.785,298,5.359,299,4.785,300,4.785,301,4.785,302,5.359,303,4.785,304,3.621,305,4.785,306,3.621,307,5.702,308,4.785,309,3.621,310,3.621,311,5.359,312,3.621,313,4.785,314,5.702,315,3.621]],["title/entities/TestEntity.html",[0,0.241,43,0.924]],["body/entities/TestEntity.html",[0,0.354,1,1.284,2,0.514,3,0.189,4,0.166,5,0.144,6,2.953,7,1.016,8,0.123,9,0.368,10,0.691,11,0.859,12,0.333,13,0.029,14,1.278,15,0.68,16,3.209,17,2.897,18,0.477,21,0.438,22,0.448,23,0.448,24,0.289,25,1.284,26,0.691,27,0.691,28,1.512,29,0.691,30,0.922,31,0.554,32,0.463,33,0.332,34,1.284,35,1.284,36,0.945,37,3.218,38,1.26,39,1.284,40,1.66,41,1.284,42,1.479,43,0.859,44,1.023,45,0.86,46,1.642,47,1.694,48,1.105,49,1.537,50,1.105,51,0.633,52,1.284,53,1.827,54,1.787,55,1.827,56,1.697,57,1.694,58,1.277,59,1.479,60,1.827,61,1.694,62,1.072,63,0.691,64,1.313,65,0.013,66,0.013,316,2.081,317,2.041,318,3.673,319,2.041,320,2.041,321,2.041,322,2.041,323,2.041,324,2.041,325,2.041,326,2.041,327,2.041,328,2.041,329,2.041]],["title/entities/TestEntity-1.html",[0,0.203,43,0.779,67,1.429]],["body/entities/TestEntity-1.html",[0,0.364,1,1.325,2,0.552,3,0.203,4,0.178,5,0.155,8,0.132,9,0.388,10,0.741,11,0.907,12,0.33,13,0.029,14,1.29,15,0.691,18,0.485,21,0.452,22,0.473,23,0.473,24,0.31,25,1.325,26,0.741,27,0.741,28,1.533,29,0.741,30,0.948,31,0.594,32,0.476,33,0.342,34,1.325,35,1.325,36,0.976,38,1.289,39,1.325,40,1.681,41,1.325,42,1.535,43,0.907,44,1.056,45,0.878,46,1.684,47,1.742,48,1.141,49,1.566,50,1.141,51,0.668,52,1.325,53,1.869,54,1.81,55,1.869,56,1.736,57,1.742,58,1.325,59,1.535,60,1.869,61,1.742,62,1.131,63,0.741,64,1.372,65,0.014,66,0.014,68,1.09,69,3.282,316,2.196,318,3.812,330,2.189,331,2.189,332,2.189,333,2.189,334,2.189,335,2.189,336,2.189,337,2.189,338,2.189,339,2.189,340,2.189,341,2.189]],["title/classes/TestObject.html",[33,0.226,34,0.924]],["body/classes/TestObject.html",[0,0.395,1,1.256,3,0.254,4,0.223,5,0.194,6,1.965,7,1.364,8,0.165,9,0.458,10,0.928,11,1.374,12,0.328,13,0.029,14,1.306,15,0.318,17,2.886,18,0.223,21,0.497,22,0.559,23,0.559,24,0.388,25,1.456,26,0.928,27,0.928,28,1.597,29,0.928,30,1.029,31,0.744,32,0.517,33,0.371,34,1.374,35,1.256,36,1.072,37,3.413,38,1.182,39,1.256,40,1.6,41,1.256,42,1.336,43,0.744,44,0.853,45,0.785,46,1.455,47,1.566,48,0.922,49,1.456,50,0.922,51,0.548,52,1.071,53,1.713,54,1.722,55,1.713,56,1.592,57,1.566,58,1.153,59,1.336,60,1.713,61,1.566,62,0.928,63,0.928,64,0.928,65,0.017,66,0.017,72,0.548,84,0.928,342,2.74]],["title/classes/TestObject-1.html",[33,0.191,34,0.779,67,1.429]],["body/classes/TestObject-1.html",[0,0.401,1,1.289,3,0.266,4,0.234,5,0.203,8,0.173,9,0.474,10,0.973,11,1.404,12,0.33,13,0.029,14,1.314,15,0.334,18,0.234,21,0.506,22,0.578,23,0.578,24,0.407,25,1.483,26,0.973,27,0.973,28,1.609,29,0.973,30,1.046,31,0.78,32,0.525,33,0.377,34,1.404,35,1.289,36,1.092,38,1.208,39,1.289,40,1.62,41,1.289,42,1.382,43,0.78,44,0.883,45,0.803,46,1.494,47,1.608,48,0.954,49,1.483,50,0.954,51,0.574,52,1.108,53,1.751,54,1.744,55,1.751,56,1.627,57,1.608,58,1.193,59,1.382,60,1.751,61,1.608,62,0.973,63,0.973,64,0.973,65,0.017,66,0.017,68,1.431,72,0.574,84,0.973,343,2.873]],["title/classes/UpdateResultDto.html",[33,0.226,344,2.505]],["body/classes/UpdateResultDto.html",[3,0.402,4,0.354,5,0.307,8,0.262,9,0.624,12,0.293,13,0.029,15,0.504,18,0.354,21,0.498,22,0.761,23,0.761,24,0.615,32,0.402,33,0.288,44,1.162,45,0.947,51,1.074,65,0.023,66,0.023,72,0.868,74,1.706,82,2.467,84,1.47,94,1.707,144,2.855,146,3.955,149,3.195,154,4.613,155,3.955,199,5.129,228,4.908,344,3.955,345,4.519]],["title/classes/ValidationConstraintsDto.html",[33,0.226,268,2.024]],["body/classes/ValidationConstraintsDto.html",[3,0.223,4,0.196,5,0.171,8,0.145,9,0.418,12,0.332,13,0.029,14,1.357,15,0.706,18,0.495,21,0.398,22,0.805,23,0.902,24,0.342,32,0.398,33,0.285,36,0.482,48,0.84,49,0.976,50,0.564,51,0.482,65,0.015,66,0.015,72,0.482,74,0.705,82,2.185,84,2.058,94,0.948,112,2.769,184,2.138,245,1.951,247,1.435,248,3.51,253,2.028,262,2.832,263,4.038,264,1.435,265,2.763,266,2.645,267,3.504,268,3.029,271,1.775,272,3.162,273,2.645,274,1.775,275,1.775,276,2.825,277,2.825,278,3.162,279,3.162,280,3.162,281,3.162,282,3.162,283,3.162,284,3.162,285,3.162,286,3.162,287,3.162,288,1.435,289,1.775,290,2.363,346,2.413,347,2.413,348,2.413,349,2.413,350,2.413,351,2.413,352,2.413,353,2.413,354,2.413,355,2.413,356,2.413]],["title/classes/ValidationErrorDto.html",[33,0.226,288,2.024]],["body/classes/ValidationErrorDto.html",[3,0.285,4,0.251,5,0.218,8,0.186,9,0.498,12,0.33,13,0.029,14,1.343,15,0.358,18,0.251,21,0.457,22,0.86,23,0.932,24,0.436,32,0.457,33,0.327,36,0.616,48,1.002,49,1.164,50,1.002,51,0.857,65,0.018,66,0.018,72,0.616,74,0.901,82,2.448,84,1.043,94,1.211,112,1.819,184,2.551,245,2.327,247,1.833,248,3.816,262,3.452,263,2.819,264,1.833,265,3.15,266,3.156,267,3.63,268,3.172,271,2.267,272,3.156,273,3.63,274,2.267,275,2.267,276,2.026,277,2.026,278,2.267,279,2.267,280,2.267,281,2.267,282,2.267,283,2.267,284,2.267,285,2.267,286,2.267,287,2.267,288,2.551,289,3.156,290,3.686,316,2.026,357,3.082]],["title/coverage.html",[358,3.86]],["body/coverage.html",[0,0.427,1,0.995,5,0.175,6,2.685,7,2.685,12,0.259,13,0.029,25,1.185,28,0.924,30,0.456,33,0.422,34,0.995,35,0.995,38,0.857,39,0.995,40,0.995,41,0.995,43,0.995,65,0.016,66,0.016,68,2.685,73,2.698,81,1.629,102,1.823,104,1.629,105,2.083,115,2.083,116,2.083,120,1.823,121,2.083,127,1.823,130,1.823,131,2.083,132,2.685,133,3.913,142,1.823,143,2.083,144,2.869,145,1.99,150,1.823,151,2.083,156,1.629,157,2.083,162,1.473,183,2.698,189,1.823,190,2.083,245,1.344,246,2.083,247,2.869,262,1.473,263,2.869,268,1.473,288,1.473,291,1.823,292,2.083,293,2.083,295,2.083,344,1.823,345,2.083,358,2.083,359,1.629,360,2.478,361,2.478,362,3.083,363,2.083,364,5.315,365,2.083,366,6.427,367,6.322,368,3.55,369,2.083,370,2.083,371,2.083,372,2.083,373,3.083,374,2.083,375,2.083,376,2.083,377,4.056,378,4.825,379,3.083,380,2.083,381,2.083,382,2.083,383,3.667,384,2.478,385,2.478,386,2.478,387,6.456,388,4.825,389,3.667,390,3.667,391,2.478,392,6.279,393,4.215,394,2.083,395,2.083,396,2.083,397,4.825,398,1.823,399,2.083,400,1.823,401,2.083,402,1.823,403,2.083,404,2.083,405,2.083,406,2.083,407,2.698,408,2.083,409,2.083,410,2.083,411,2.478,412,2.478,413,2.478,414,2.478,415,2.083,416,2.478]],["title/dependencies.html",[417,2.413,418,3.001]],["body/dependencies.html",[13,0.028,24,0.71,33,0.333,65,0.025,66,0.025,98,2.127,179,4.215,418,4.312,419,5.014,420,5.014,421,4.927,422,5.014,423,3.689,424,5.014,425,5.014]],["title/miscellaneous/functions.html",[426,1.557,427,3.43]],["body/miscellaneous/functions.html",[0,0.384,8,0.125,11,0.564,12,0.322,13,0.028,14,0.641,17,0.953,18,0.169,22,0.714,23,0.625,25,1.544,28,1.27,30,0.383,33,0.293,38,0.749,40,0.871,48,0.485,50,0.749,54,0.607,58,0.607,65,0.014,66,0.014,72,0.415,74,1.74,76,1.127,80,3.708,98,2.022,110,3.616,111,3.299,112,2.579,127,2.361,132,2.814,133,3.864,139,1.528,145,2.127,162,1.908,168,4.031,171,1.528,174,1.528,183,3.507,184,3.227,201,1.746,217,1.746,265,1.127,294,2.109,316,1.365,359,2.109,362,2.697,363,2.697,364,1.746,365,2.697,368,3.708,369,2.697,370,1.746,371,1.746,372,1.746,373,2.697,374,2.697,375,2.697,376,2.697,379,2.697,380,2.697,381,2.697,382,2.697,393,3.507,394,2.697,395,2.697,396,2.697,398,2.885,399,2.697,400,2.885,401,2.697,402,2.885,403,2.697,404,2.697,405,1.746,406,3.296,407,1.528,408,2.697,423,2.361,426,1.127,427,1.746,428,2.077,429,4.417,430,2.077,431,3.209,432,2.077,433,2.077,434,3.209,435,1.746,436,2.077,437,5.791,438,3.865,439,2.077,440,5.878,441,5.427,442,2.077,443,4.768,444,5.254,445,2.077,446,2.077,447,2.077,448,2.077,449,2.077,450,2.077,451,5.57,452,3.209,453,3.209,454,2.077,455,2.077,456,2.077,457,1.746,458,2.077,459,3.209,460,2.077,461,2.077,462,2.077,463,3.209,464,2.077,465,2.077,466,2.077,467,3.209,468,4.411,469,2.077,470,2.077,471,2.077,472,3.209,473,3.296,474,3.209,475,2.077,476,2.077,477,2.077,478,2.697,479,2.077,480,2.697,481,2.077,482,2.077,483,1.746,484,2.077,485,2.077,486,2.077,487,3.209,488,2.077,489,3.921,490,2.077,491,2.077,492,2.077,493,2.077,494,2.077,495,3.209,496,2.077,497,2.077,498,3.209,499,2.077,500,2.077,501,2.077,502,2.077,503,2.077,504,2.077,505,2.077,506,2.077,507,2.077]],["title/index.html",[8,0.173,508,2.87,509,2.87]],["body/index.html",[0,0.258,2,0.62,4,0.2,5,0.174,11,0.668,12,0.123,13,0.018,14,0.729,15,0.558,17,1.129,22,0.615,28,1.095,33,0.319,45,0.797,48,0.852,50,0.574,52,0.668,58,1.5,65,0.015,66,0.015,98,1.844,111,1.334,132,2.206,155,1.809,162,1.463,255,2.067,264,1.463,265,1.334,276,1.616,277,1.616,290,1.616,294,2.857,359,2.857,377,3.066,410,2.067,415,2.067,418,1.809,423,3.198,438,1.809,457,3.066,473,4.521,478,3.066,480,2.067,483,2.067,510,3.647,511,2.459,512,2.067,513,2.067,514,2.067,515,2.067,516,2.067,517,2.067,518,3.066,519,4.041,520,4.041,521,2.067,522,2.067,523,2.067,524,2.067,525,2.067,526,2.067,527,3.654,528,2.067,529,4.346,530,2.459,531,2.459,532,2.459,533,2.459,534,2.459,535,2.459,536,2.459,537,2.459,538,2.459,539,2.459,540,3.647,541,3.647,542,2.459,543,2.459,544,2.459,545,3.647,546,2.459,547,3.647,548,2.459,549,2.459,550,2.459,551,2.459,552,2.459,553,2.459,554,2.459,555,3.647,556,2.459,557,2.459,558,2.459,559,3.647,560,3.647,561,2.459,562,4.346,563,4.346,564,3.647,565,3.647,566,3.647,567,2.459,568,2.459,569,3.647,570,5.134,571,3.647,572,3.647,573,3.647,574,2.459,575,4.346,576,2.459,577,2.459,578,2.459,579,2.459,580,2.067,581,2.459,582,3.647,583,2.459,584,2.459,585,2.459,586,2.459,587,2.459,588,2.459,589,3.647,590,2.459,591,2.459,592,3.647,593,2.459,594,2.459,595,2.459,596,4.346,597,2.459,598,2.459,599,2.459,600,2.459,601,2.459,602,2.459,603,3.647,604,2.459,605,3.647,606,2.459,607,2.459,608,2.459,609,3.647,610,2.459,611,2.459,612,2.459,613,2.459,614,2.459,615,2.459,616,2.459,617,2.459,618,2.459,619,2.459,620,2.459,621,3.647,622,2.459,623,3.647,624,2.459,625,2.459,626,2.459,627,2.459,628,3.647,629,2.459,630,2.459,631,2.459,632,2.459,633,2.459,634,2.459,635,2.459,636,2.459,637,2.459,638,2.459,639,2.459,640,2.459,641,2.459,642,2.459,643,2.459,644,2.459,645,2.459,646,2.459,647,2.459,648,2.459,649,2.459,650,2.459,651,2.459,652,2.459,653,2.459,654,2.459,655,2.459,656,2.459,657,2.459,658,2.459,659,2.459,660,2.459,661,2.459,662,2.459,663,2.459,664,2.459,665,2.459,666,2.459,667,2.459,668,3.647,669,4.346,670,3.647,671,2.459,672,3.647,673,2.459,674,2.459,675,2.459,676,2.459,677,3.647,678,2.459,679,2.459,680,2.459,681,2.459,682,2.459,683,2.459,684,2.459,685,4.346,686,2.459,687,2.459,688,3.647,689,2.459,690,2.459,691,2.459,692,4.808,693,2.459,694,2.459,695,2.459,696,2.459,697,2.459,698,2.459,699,3.647,700,2.459,701,2.459,702,2.459,703,2.459,704,2.459,705,2.459,706,2.459,707,2.459,708,2.459,709,2.459,710,2.459,711,2.459,712,2.459,713,2.459,714,2.459,715,2.459,716,2.459,717,2.459,718,2.459,719,2.459,720,2.459,721,2.459,722,2.459,723,2.459,724,2.459,725,2.459,726,2.459,727,3.647,728,2.459]],["title/modules.html",[729,3.86]],["body/modules.html",[13,0.026,65,0.026,66,0.026,729,4.458]],["title/overview.html",[730,3.86]],["body/overview.html",[2,1.319,13,0.026,65,0.026,66,0.026,72,1.046,580,4.402,730,4.402,731,5.236]],["title/properties.html",[9,0.474,417,2.413]],["body/properties.html",[0,0.319,2,1.136,9,0.524,13,0.028,15,0.639,22,0.638,65,0.023,66,0.023,74,1.318,98,1.912,108,3.79,264,2.681,265,2.446,294,2.963,359,3.615,421,3.79,438,3.317,512,3.79,513,3.79,514,3.79,515,3.79,516,3.79,517,3.79,518,4.624,519,3.79,520,3.79,521,3.79,522,3.79,523,3.79,524,3.79,525,3.79,526,3.79,527,3.79,528,3.79,732,4.509,733,4.509,734,4.509,735,4.509,736,4.509,737,4.509,738,4.509,739,4.509,740,4.509,741,4.509,742,4.509,743,4.509,744,4.509,745,4.509]],["title/miscellaneous/typealiases.html",[426,1.557,746,4.08]],["body/miscellaneous/typealiases.html",[8,0.278,12,0.313,13,0.024,38,1.302,40,1.513,65,0.024,66,0.024,132,3.035,133,4.259,145,3.025,368,4.101,393,4.409,398,4.101,400,4.101,402,4.101,407,3.391,409,4.686,426,2.501,429,5.038,435,3.875,747,4.609,748,5.993]],["title/miscellaneous/variables.html",[426,1.557,749,3.43]],["body/miscellaneous/variables.html",[8,0.309,11,1.39,13,0.027,30,0.944,65,0.025,66,0.025,73,3.768,102,4.366,103,4.306,139,3.768,426,2.779,749,4.306,750,5.123]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":387,"title":{},"body":{"coverage.html":{}}}],["0.3.20",{"_index":425,"title":{},"body":{"dependencies.html":{}}}],["0.4.11",{"_index":421,"title":{},"body":{"dependencies.html":{},"properties.html":{}}}],["0.5.1",{"_index":424,"title":{},"body":{"dependencies.html":{}}}],["0.5.15",{"_index":420,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":392,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":388,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":414,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":67,"title":{"entities/AttributeRelation-1.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity-1.html":{},"classes/TestObject-1.html":{}},"body":{"classes/EntityWriteService.html":{}}}],["1/1",{"_index":367,"title":{},"body":{"coverage.html":{}}}],["1/13",{"_index":385,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":378,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":390,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":580,"title":{},"body":{"index.html":{},"overview.html":{}}}],["100",{"_index":366,"title":{},"body":{"coverage.html":{}}}],["16mb",{"_index":652,"title":{},"body":{"index.html":{}}}],["17",{"_index":731,"title":{},"body":{"overview.html":{}}}],["2,000",{"_index":619,"title":{},"body":{"index.html":{}}}],["2/2",{"_index":386,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":389,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":633,"title":{},"body":{"index.html":{}}}],["21",{"_index":412,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":639,"title":{},"body":{"index.html":{}}}],["3/14",{"_index":413,"title":{},"body":{"coverage.html":{}}}],["3/3",{"_index":383,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":411,"title":{},"body":{"coverage.html":{}}}],["30,000",{"_index":604,"title":{},"body":{"index.html":{}}}],["40",{"_index":640,"title":{},"body":{"index.html":{}}}],["4gb",{"_index":645,"title":{},"body":{"index.html":{}}}],["50",{"_index":377,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["60",{"_index":410,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["7",{"_index":384,"title":{},"body":{"coverage.html":{}}}],["___viewcolumn",{"_index":493,"title":{},"body":{"miscellaneous/functions.html":{}}}],["___viewentity",{"_index":496,"title":{},"body":{"miscellaneous/functions.html":{}}}],["_tablename",{"_index":307,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["acceptstring",{"_index":140,"title":{},"body":{"classes/CommonQueryDto.html":{}}}],["accommodate",{"_index":555,"title":{},"body":{"index.html":{}}}],["accommodating",{"_index":577,"title":{},"body":{"index.html":{}}}],["achieves",{"_index":544,"title":{},"body":{"index.html":{}}}],["add",{"_index":553,"title":{},"body":{"index.html":{}}}],["add(relationid",{"_index":241,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["added",{"_index":504,"title":{},"body":{"miscellaneous/functions.html":{}}}],["addrelation",{"_index":192,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["addrelation(relation",{"_index":200,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["adjust",{"_index":629,"title":{},"body":{"index.html":{}}}],["administrative",{"_index":634,"title":{},"body":{"index.html":{}}}],["adopted",{"_index":535,"title":{},"body":{"index.html":{}}}],["affected",{"_index":154,"title":{},"body":{"classes/DeleteResultDto.html":{},"classes/EntityWriteService.html":{},"classes/UpdateResultDto.html":{}}}],["alias",{"_index":397,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":747,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allocate",{"_index":638,"title":{},"body":{"index.html":{}}}],["allocation",{"_index":649,"title":{},"body":{"index.html":{}}}],["allowed",{"_index":571,"title":{},"body":{"index.html":{}}}],["allows",{"_index":456,"title":{},"body":{"miscellaneous/functions.html":{}}}],["api",{"_index":518,"title":{},"body":{"index.html":{},"properties.html":{}}}],["application",{"_index":623,"title":{},"body":{"index.html":{}}}],["apply",{"_index":681,"title":{},"body":{"index.html":{}}}],["approach",{"_index":543,"title":{},"body":{"index.html":{}}}],["array",{"_index":50,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["arraymaxsize",{"_index":287,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["arrayminsize",{"_index":286,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["associated",{"_index":549,"title":{},"body":{"index.html":{}}}],["async",{"_index":161,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["attributerelation",{"_index":1,"title":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{}}}],["attributes",{"_index":64,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["author",{"_index":743,"title":{},"body":{"properties.html":{}}}],["availability",{"_index":599,"title":{},"body":{"index.html":{}}}],["available",{"_index":586,"title":{},"body":{"index.html":{}}}],["avoid",{"_index":661,"title":{},"body":{"index.html":{}}}],["await",{"_index":187,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["balancing",{"_index":597,"title":{},"body":{"index.html":{}}}],["base",{"_index":99,"title":{},"body":{"classes/BaseEntity.html":{}}}],["base.js",{"_index":180,"title":{},"body":{"classes/EntityReadService.html":{}}}],["base_entity_columns",{"_index":102,"title":{},"body":{"classes/BaseEntity.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["based",{"_index":471,"title":{},"body":{"miscellaneous/functions.html":{}}}],["baseentity",{"_index":30,"title":{"classes/BaseEntity.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["baseentityservice",{"_index":104,"title":{"classes/BaseEntityService.html":{}},"body":{"classes/BaseEntityService.html":{},"classes/EntityReadService.html":{},"coverage.html":{}}}],["baseidentity",{"_index":81,"title":{"classes/BaseIdEntity.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"coverage.html":{}}}],["baseidentity:8",{"_index":93,"title":{},"body":{"classes/BaseEntity.html":{}}}],["baseline",{"_index":584,"title":{},"body":{"index.html":{}}}],["basemodel",{"_index":83,"title":{},"body":{"classes/BaseEntity.html":{}}}],["baseview",{"_index":120,"title":{"classes/BaseView.html":{}},"body":{"classes/BaseView.html":{},"coverage.html":{}}}],["before",{"_index":611,"title":{},"body":{"index.html":{}}}],["being",{"_index":612,"title":{},"body":{"index.html":{}}}],["bigint",{"_index":47,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["boolean",{"_index":46,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/CommonQueryDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["both",{"_index":547,"title":{},"body":{"index.html":{}}}],["brightline",{"_index":745,"title":{},"body":{"properties.html":{}}}],["bug",{"_index":707,"title":{},"body":{"index.html":{}}}],["bugs",{"_index":738,"title":{},"body":{"properties.html":{}}}],["builder",{"_index":498,"title":{},"body":{"miscellaneous/functions.html":{}}}],["builder/querypartialentity.js",{"_index":227,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["capabilities",{"_index":439,"title":{},"body":{"miscellaneous/functions.html":{}}}],["capability",{"_index":459,"title":{},"body":{"miscellaneous/functions.html":{}}}],["capacity",{"_index":636,"title":{},"body":{"index.html":{}}}],["cascade",{"_index":61,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["certain",{"_index":479,"title":{},"body":{"miscellaneous/functions.html":{}}}],["class",{"_index":33,"title":{"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/HttpErrorDto.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["classdecorator",{"_index":468,"title":{},"body":{"miscellaneous/functions.html":{}}}],["classes",{"_index":72,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/HttpErrorDto.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["clear",{"_index":526,"title":{},"body":{"index.html":{},"properties.html":{}}}],["closed",{"_index":613,"title":{},"body":{"index.html":{}}}],["code",{"_index":255,"title":{},"body":{"classes/HttpErrorDto.html":{},"index.html":{}}}],["column",{"_index":28,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["column(options",{"_index":436,"title":{},"body":{"miscellaneous/functions.html":{}}}],["column({databasetype",{"_index":16,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/ManyRelation.html":{},"entities/OneRelation.html":{},"entities/OwnerRelation.html":{},"entities/TestEntity.html":{}}}],["column({type",{"_index":69,"title":{},"body":{"entities/AttributeRelation-1.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity-1.html":{}}}],["column.js",{"_index":129,"title":{},"body":{"classes/BaseView.html":{}}}],["column.ts",{"_index":374,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["columns",{"_index":80,"title":{},"body":{"classes/BaseEntity.html":{},"miscellaneous/functions.html":{}}}],["columntype",{"_index":475,"title":{},"body":{"miscellaneous/functions.html":{}}}],["common",{"_index":134,"title":{},"body":{"classes/CommonQueryDto.html":{},"classes/HttpErrorDto.html":{}}}],["commonquerydto",{"_index":130,"title":{"classes/CommonQueryDto.html":{}},"body":{"classes/CommonQueryDto.html":{},"coverage.html":{}}}],["compatibility",{"_index":710,"title":{},"body":{"index.html":{}}}],["compatible",{"_index":486,"title":{},"body":{"miscellaneous/functions.html":{}}}],["composite",{"_index":462,"title":{},"body":{"miscellaneous/functions.html":{}}}],["configuration",{"_index":565,"title":{},"body":{"index.html":{}}}],["configure",{"_index":603,"title":{},"body":{"index.html":{}}}],["configured",{"_index":644,"title":{},"body":{"index.html":{}}}],["connection",{"_index":609,"title":{},"body":{"index.html":{}}}],["connections",{"_index":570,"title":{},"body":{"index.html":{}}}],["connectiontimeoutmillis",{"_index":618,"title":{},"body":{"index.html":{}}}],["consider",{"_index":695,"title":{},"body":{"index.html":{}}}],["const",{"_index":101,"title":{},"body":{"classes/BaseEntity.html":{},"classes/EntityWriteService.html":{}}}],["constraint",{"_index":464,"title":{},"body":{"miscellaneous/functions.html":{}}}],["constraints",{"_index":267,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["constructor",{"_index":106,"title":{},"body":{"classes/BaseEntityService.html":{}}}],["constructor(protected",{"_index":113,"title":{},"body":{"classes/BaseEntityService.html":{}}}],["constructor(repository",{"_index":107,"title":{},"body":{"classes/BaseEntityService.html":{}}}],["consumption",{"_index":616,"title":{},"body":{"index.html":{}}}],["contact",{"_index":726,"title":{},"body":{"index.html":{}}}],["contributions",{"_index":698,"title":{},"body":{"index.html":{}}}],["controller",{"_index":677,"title":{},"body":{"index.html":{}}}],["converted",{"_index":659,"title":{},"body":{"index.html":{}}}],["count",{"_index":145,"title":{},"body":{"classes/CountResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["count(query",{"_index":165,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["countresult",{"_index":147,"title":{},"body":{"classes/CountResultDto.html":{},"classes/EntityReadService.html":{}}}],["countresultdto",{"_index":142,"title":{"classes/CountResultDto.html":{}},"body":{"classes/CountResultDto.html":{},"coverage.html":{}}}],["coverage",{"_index":358,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["coverts",{"_index":499,"title":{},"body":{"miscellaneous/functions.html":{}}}],["create",{"_index":444,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createdat",{"_index":77,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseView.html":{}}}],["createdatecolumn",{"_index":95,"title":{},"body":{"classes/BaseEntity.html":{}}}],["createfindoperator",{"_index":395,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createfindoperator(query",{"_index":442,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createquerybuilder",{"_index":238,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["createquerycountdto",{"_index":396,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createquerycountdto(options",{"_index":447,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createquerycountdtooptions",{"_index":398,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["createquerymanydto",{"_index":399,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createquerymanydto(options",{"_index":448,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createqueryonedto",{"_index":401,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createqueryonedto(options",{"_index":449,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createrelationparamdto",{"_index":380,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createrelationparamdto(relations",{"_index":450,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createunsetrelationparamdto",{"_index":382,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createunsetrelationparamdto(relations",{"_index":454,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createwhereoptiondto",{"_index":404,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createwhereoptiondto(columns",{"_index":455,"title":{},"body":{"miscellaneous/functions.html":{}}}],["custom",{"_index":512,"title":{},"body":{"index.html":{},"properties.html":{}}}],["data",{"_index":473,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["database",{"_index":294,"title":{},"body":{"classes/TableNamingStrategy.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["databases",{"_index":477,"title":{},"body":{"miscellaneous/functions.html":{}}}],["databasetype",{"_index":37,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/ManyRelation.html":{},"entities/OneRelation.html":{},"entities/OwnerRelation.html":{},"entities/TestEntity.html":{},"classes/TestObject.html":{}}}],["datasource",{"_index":560,"title":{},"body":{"index.html":{}}}],["date",{"_index":52,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseView.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"index.html":{}}}],["date'})@createdatecolumn",{"_index":85,"title":{},"body":{"classes/BaseEntity.html":{}}}],["date'})@deletedatecolumn",{"_index":87,"title":{},"body":{"classes/BaseEntity.html":{}}}],["date'})@updatedatecolumn",{"_index":89,"title":{},"body":{"classes/BaseEntity.html":{}}}],["decorator",{"_index":438,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["decorator/column.js",{"_index":29,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["decorator/entity.js",{"_index":27,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["decorator/relation.js",{"_index":26,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["decorator/view",{"_index":128,"title":{},"body":{"classes/BaseView.html":{}}}],["decorators",{"_index":15,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"index.html":{},"properties.html":{}}}],["dedicated",{"_index":680,"title":{},"body":{"index.html":{}}}],["default",{"_index":139,"title":{},"body":{"classes/CommonQueryDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defaultnamingstrategy",{"_index":298,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["define",{"_index":647,"title":{},"body":{"index.html":{}}}],["defined",{"_index":18,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{}}}],["defines",{"_index":568,"title":{},"body":{"index.html":{}}}],["definitions",{"_index":515,"title":{},"body":{"index.html":{},"properties.html":{}}}],["delays",{"_index":627,"title":{},"body":{"index.html":{}}}],["delete",{"_index":152,"title":{},"body":{"classes/DeleteResultDto.html":{},"classes/EntityWriteService.html":{}}}],["delete(id",{"_index":203,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["deleted",{"_index":137,"title":{},"body":{"classes/CommonQueryDto.html":{}}}],["deletedat",{"_index":79,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseView.html":{}}}],["deletedatecolumn",{"_index":96,"title":{},"body":{"classes/BaseEntity.html":{}}}],["deleteresult",{"_index":153,"title":{},"body":{"classes/DeleteResultDto.html":{}}}],["deleteresultdto",{"_index":150,"title":{"classes/DeleteResultDto.html":{}},"body":{"classes/DeleteResultDto.html":{},"coverage.html":{}}}],["demand",{"_index":579,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":418,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["description",{"_index":74,"title":{},"body":{"classes/BaseEntity.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/HttpErrorDto.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{},"properties.html":{}}}],["determines",{"_index":606,"title":{},"body":{"index.html":{}}}],["developer",{"_index":727,"title":{},"body":{"index.html":{}}}],["development",{"_index":529,"title":{},"body":{"index.html":{}}}],["disrupting",{"_index":662,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":359,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["done",{"_index":672,"title":{},"body":{"index.html":{}}}],["driver",{"_index":474,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dto",{"_index":22,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["dto.ts",{"_index":133,"title":{},"body":{"classes/CommonQueryDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["dto.ts:14",{"_index":141,"title":{},"body":{"classes/CommonQueryDto.html":{}}}],["duration",{"_index":607,"title":{},"body":{"index.html":{}}}],["during",{"_index":589,"title":{},"body":{"index.html":{}}}],["eager",{"_index":53,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["efficiency",{"_index":541,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":574,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":522,"title":{},"body":{"index.html":{},"properties.html":{}}}],["effort",{"_index":691,"title":{},"body":{"index.html":{}}}],["encrypion",{"_index":671,"title":{},"body":{"index.html":{}}}],["encrypted",{"_index":679,"title":{},"body":{"index.html":{}}}],["encryption",{"_index":676,"title":{},"body":{"index.html":{}}}],["enhance",{"_index":653,"title":{},"body":{"index.html":{}}}],["enhancing",{"_index":540,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":520,"title":{},"body":{"index.html":{},"properties.html":{}}}],["ensuring",{"_index":573,"title":{},"body":{"index.html":{}}}],["entities",{"_index":2,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"index.html":{},"overview.html":{},"properties.html":{}}}],["entity",{"_index":0,"title":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["entity's",{"_index":466,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entity(uniques",{"_index":458,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entity.ts",{"_index":375,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["entity/base.js",{"_index":31,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntityService.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["entityreadservice",{"_index":156,"title":{"classes/EntityReadService.html":{}},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"coverage.html":{}}}],["entityreadservice:16",{"_index":223,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["entityreadservice:25",{"_index":224,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["entityreadservice:29",{"_index":225,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["entityreadservice:33",{"_index":222,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["entitywriteservice",{"_index":189,"title":{"classes/EntityWriteService.html":{}},"body":{"classes/EntityWriteService.html":{},"coverage.html":{}}}],["error",{"_index":248,"title":{},"body":{"classes/HttpErrorDto.html":{},"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["error.dto.js",{"_index":275,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["error.dto.ts",{"_index":247,"title":{},"body":{"classes/HttpErrorDto.html":{},"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{}}}],["error.dto.ts:11",{"_index":252,"title":{},"body":{"classes/HttpErrorDto.html":{}}}],["error.dto.ts:14",{"_index":356,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:15",{"_index":354,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:16",{"_index":253,"title":{},"body":{"classes/HttpErrorDto.html":{},"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:17",{"_index":355,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:18",{"_index":353,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:19",{"_index":351,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:20",{"_index":350,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:21",{"_index":349,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:22",{"_index":352,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:23",{"_index":348,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:24",{"_index":347,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:25",{"_index":346,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:36",{"_index":270,"title":{},"body":{"classes/SingleValidationErrorDto.html":{}}}],["error.dto.ts:42",{"_index":269,"title":{},"body":{"classes/SingleValidationErrorDto.html":{}}}],["error.dto.ts:60",{"_index":357,"title":{},"body":{"classes/ValidationErrorDto.html":{}}}],["errors",{"_index":290,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"index.html":{}}}],["establish",{"_index":622,"title":{},"body":{"index.html":{}}}],["establishes",{"_index":593,"title":{},"body":{"index.html":{}}}],["even",{"_index":714,"title":{},"body":{"index.html":{}}}],["example",{"_index":551,"title":{},"body":{"index.html":{}}}],["execution",{"_index":683,"title":{},"body":{"index.html":{}}}],["export",{"_index":32,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["expression",{"_index":501,"title":{},"body":{"miscellaneous/functions.html":{}}}],["extend",{"_index":513,"title":{},"body":{"index.html":{},"properties.html":{}}}],["extends",{"_index":36,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["false",{"_index":56,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/CommonQueryDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["features",{"_index":713,"title":{},"body":{"index.html":{}}}],["fields",{"_index":467,"title":{},"body":{"miscellaneous/functions.html":{}}}],["file",{"_index":5,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{},"index.html":{}}}],["find",{"_index":162,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["find(query",{"_index":170,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["findone",{"_index":163,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["findone(query",{"_index":173,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["findonebyid",{"_index":164,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["findonebyid(id",{"_index":176,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["findoperator",{"_index":445,"title":{},"body":{"miscellaneous/functions.html":{}}}],["findoptionswhere",{"_index":178,"title":{},"body":{"classes/EntityReadService.html":{}}}],["firsttablename",{"_index":313,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["firsttablename}_${secondtablename",{"_index":315,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["fixes",{"_index":708,"title":{},"body":{"index.html":{}}}],["following",{"_index":564,"title":{},"body":{"index.html":{}}}],["format",{"_index":558,"title":{},"body":{"index.html":{}}}],["function",{"_index":364,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":427,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funding",{"_index":685,"title":{},"body":{"index.html":{}}}],["general",{"_index":720,"title":{},"body":{"index.html":{}}}],["getting",{"_index":508,"title":{"index.html":{}},"body":{}}],["go",{"_index":705,"title":{},"body":{"index.html":{}}}],["handling",{"_index":678,"title":{},"body":{"index.html":{}}}],["hashing",{"_index":670,"title":{},"body":{"index.html":{}}}],["help",{"_index":699,"title":{},"body":{"index.html":{}}}],["homepage",{"_index":736,"title":{},"body":{"properties.html":{}}}],["http",{"_index":274,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["httperrordto",{"_index":245,"title":{"classes/HttpErrorDto.html":{}},"body":{"classes/HttpErrorDto.html":{},"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{}}}],["https://github.com/rbrightline/puq/tree/main",{"_index":742,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io",{"_index":739,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io/puq/orm",{"_index":737,"title":{},"body":{"properties.html":{}}}],["id",{"_index":76,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"miscellaneous/functions.html":{}}}],["id.js",{"_index":100,"title":{},"body":{"classes/BaseEntity.html":{}}}],["id.ts",{"_index":116,"title":{},"body":{"classes/BaseIdEntity.html":{},"coverage.html":{}}}],["id.ts:8",{"_index":118,"title":{},"body":{"classes/BaseIdEntity.html":{}}}],["identifier",{"_index":360,"title":{},"body":{"coverage.html":{}}}],["idle",{"_index":608,"title":{},"body":{"index.html":{}}}],["idletimeoutmillis",{"_index":602,"title":{},"body":{"index.html":{}}}],["idmodel",{"_index":117,"title":{},"body":{"classes/BaseIdEntity.html":{}}}],["implement",{"_index":563,"title":{},"body":{"index.html":{}}}],["implementations",{"_index":536,"title":{},"body":{"index.html":{}}}],["implements",{"_index":82,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/SingleValidationErrorDto.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["import",{"_index":21,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["improvements",{"_index":717,"title":{},"body":{"index.html":{}}}],["inactivity",{"_index":617,"title":{},"body":{"index.html":{}}}],["include",{"_index":136,"title":{},"body":{"classes/CommonQueryDto.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["inherited",{"_index":92,"title":{},"body":{"classes/BaseEntity.html":{},"classes/EntityWriteService.html":{}}}],["initial",{"_index":684,"title":{},"body":{"index.html":{}}}],["insert",{"_index":63,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["install",{"_index":550,"title":{},"body":{"index.html":{}}}],["instant",{"_index":704,"title":{},"body":{"index.html":{}}}],["instead",{"_index":666,"title":{},"body":{"index.html":{}}}],["integer",{"_index":44,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{}}}],["integer'})@primarygeneratedcolumn",{"_index":91,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{}}}],["integrating",{"_index":517,"title":{},"body":{"index.html":{},"properties.html":{}}}],["integration",{"_index":532,"title":{},"body":{"index.html":{}}}],["interfere",{"_index":665,"title":{},"body":{"index.html":{}}}],["intuitive",{"_index":533,"title":{},"body":{"index.html":{}}}],["isarray",{"_index":285,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["isboolean",{"_index":283,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["isint",{"_index":282,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["isnumber",{"_index":281,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["isobject",{"_index":284,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["isstring",{"_index":280,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["it's",{"_index":687,"title":{},"body":{"index.html":{}}}],["items",{"_index":51,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["javascript",{"_index":660,"title":{},"body":{"index.html":{}}}],["join",{"_index":60,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["joincolumnname",{"_index":299,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["joincolumnname(relationname",{"_index":303,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["jointablecolumnname",{"_index":300,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["jointablecolumnname(_tablename",{"_index":305,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["jointableinversecolumnname",{"_index":301,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["jointableinversecolumnname(_tablename",{"_index":308,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["jointablename",{"_index":302,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["jointablename(firsttablename",{"_index":310,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["keep",{"_index":722,"title":{},"body":{"index.html":{}}}],["keeping",{"_index":583,"title":{},"body":{"index.html":{}}}],["key",{"_index":10,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["keys",{"_index":451,"title":{},"body":{"miscellaneous/functions.html":{}}}],["keywords",{"_index":733,"title":{},"body":{"properties.html":{}}}],["latency",{"_index":588,"title":{},"body":{"index.html":{}}}],["latest",{"_index":711,"title":{},"body":{"index.html":{}}}],["layer",{"_index":669,"title":{},"body":{"index.html":{}}}],["level",{"_index":524,"title":{},"body":{"index.html":{},"properties.html":{}}}],["library",{"_index":692,"title":{},"body":{"index.html":{}}}],["license",{"_index":740,"title":{},"body":{"properties.html":{}}}],["limit",{"_index":595,"title":{},"body":{"index.html":{}}}],["limitation",{"_index":556,"title":{},"body":{"index.html":{}}}],["link",{"_index":184,"title":{},"body":{"classes/EntityReadService.html":{},"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{}}}],["list",{"_index":289,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["literal",{"_index":748,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["load",{"_index":138,"title":{},"body":{"classes/CommonQueryDto.html":{}}}],["low",{"_index":590,"title":{},"body":{"index.html":{}}}],["maintained",{"_index":582,"title":{},"body":{"index.html":{}}}],["maintaining",{"_index":689,"title":{},"body":{"index.html":{}}}],["maintenance",{"_index":721,"title":{},"body":{"index.html":{}}}],["make",{"_index":483,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["many",{"_index":40,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["manyrelation",{"_index":39,"title":{"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{}}}],["mapped",{"_index":521,"title":{},"body":{"index.html":{},"properties.html":{}}}],["matched",{"_index":148,"title":{},"body":{"classes/CountResultDto.html":{}}}],["matching",{"_index":66,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":277,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"index.html":{}}}],["max_connections",{"_index":632,"title":{},"body":{"index.html":{}}}],["maximum",{"_index":569,"title":{},"body":{"index.html":{}}}],["maxlength",{"_index":279,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["memory",{"_index":648,"title":{},"body":{"index.html":{}}}],["message",{"_index":250,"title":{},"body":{"classes/HttpErrorDto.html":{}}}],["methods",{"_index":160,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{}}}],["milliseconds",{"_index":605,"title":{},"body":{"index.html":{}}}],["min",{"_index":276,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"index.html":{}}}],["minimizing",{"_index":614,"title":{},"body":{"index.html":{}}}],["minimum",{"_index":545,"title":{},"body":{"index.html":{}}}],["minlength",{"_index":278,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["miscellaneous",{"_index":426,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":741,"title":{},"body":{"properties.html":{}}}],["modules",{"_index":729,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":715,"title":{},"body":{"index.html":{}}}],["name",{"_index":111,"title":{},"body":{"classes/BaseEntityService.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["names",{"_index":453,"title":{},"body":{"miscellaneous/functions.html":{}}}],["naming",{"_index":296,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["nestjs/swagger",{"_index":539,"title":{},"body":{"index.html":{}}}],["new",{"_index":415,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["none",{"_index":484,"title":{},"body":{"miscellaneous/functions.html":{}}}],["null",{"_index":59,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["number",{"_index":45,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"index.html":{}}}],["numbers",{"_index":654,"title":{},"body":{"index.html":{}}}],["numeric",{"_index":656,"title":{},"body":{"index.html":{}}}],["object",{"_index":48,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["object.keys(new",{"_index":103,"title":{},"body":{"classes/BaseEntity.html":{},"miscellaneous/variables.html":{}}}],["of(id",{"_index":240,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["ondelete",{"_index":57,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["one",{"_index":38,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["onerelation",{"_index":35,"title":{"entities/OneRelation.html":{},"entities/OneRelation-1.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{}}}],["ongoing",{"_index":697,"title":{},"body":{"index.html":{}}}],["onupdate",{"_index":62,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["open",{"_index":596,"title":{},"body":{"index.html":{}}}],["operation",{"_index":155,"title":{},"body":{"classes/DeleteResultDto.html":{},"classes/UpdateResultDto.html":{},"index.html":{}}}],["operations",{"_index":457,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["operator.ts",{"_index":394,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["optimal",{"_index":643,"title":{},"body":{"index.html":{}}}],["optimize",{"_index":561,"title":{},"body":{"index.html":{}}}],["option",{"_index":403,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["optional",{"_index":112,"title":{},"body":{"classes/BaseEntityService.html":{},"classes/CommonQueryDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":440,"title":{},"body":{"miscellaneous/functions.html":{}}}],["orm",{"_index":735,"title":{},"body":{"properties.html":{}}}],["out",{"_index":719,"title":{},"body":{"index.html":{}}}],["overloading",{"_index":601,"title":{},"body":{"index.html":{}}}],["override",{"_index":314,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["overview",{"_index":730,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":42,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["ownerrelation",{"_index":41,"title":{"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{}}}],["package",{"_index":417,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["paired",{"_index":537,"title":{},"body":{"index.html":{}}}],["param",{"_index":183,"title":{},"body":{"classes/EntityReadService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["parameters",{"_index":110,"title":{},"body":{"classes/BaseEntityService.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{},"miscellaneous/functions.html":{}}}],["parse",{"_index":507,"title":{},"body":{"miscellaneous/functions.html":{}}}],["peak",{"_index":578,"title":{},"body":{"index.html":{}}}],["peer",{"_index":422,"title":{},"body":{"dependencies.html":{}}}],["per",{"_index":650,"title":{},"body":{"index.html":{}}}],["performance",{"_index":562,"title":{},"body":{"index.html":{}}}],["periods",{"_index":592,"title":{},"body":{"index.html":{}}}],["pick",{"_index":470,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pickcolumntype",{"_index":365,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["pickcolumntype(options",{"_index":469,"title":{},"body":{"miscellaneous/functions.html":{}}}],["picks",{"_index":482,"title":{},"body":{"miscellaneous/functions.html":{}}}],["picktransformer",{"_index":369,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["picktransformer(options",{"_index":476,"title":{},"body":{"miscellaneous/functions.html":{}}}],["please",{"_index":694,"title":{},"body":{"index.html":{}}}],["pnpm",{"_index":552,"title":{},"body":{"index.html":{}}}],["pool",{"_index":572,"title":{},"body":{"index.html":{}}}],["poolsize",{"_index":567,"title":{},"body":{"index.html":{}}}],["postgres",{"_index":559,"title":{},"body":{"index.html":{}}}],["postgres.conf",{"_index":631,"title":{},"body":{"index.html":{}}}],["postgresql",{"_index":630,"title":{},"body":{"index.html":{}}}],["powerful",{"_index":716,"title":{},"body":{"index.html":{}}}],["prebuilt",{"_index":497,"title":{},"body":{"miscellaneous/functions.html":{}}}],["precision",{"_index":658,"title":{},"body":{"index.html":{}}}],["preservation",{"_index":657,"title":{},"body":{"index.html":{}}}],["prevent",{"_index":600,"title":{},"body":{"index.html":{}}}],["preventing",{"_index":625,"title":{},"body":{"index.html":{}}}],["primarygeneratedcolumn",{"_index":119,"title":{},"body":{"classes/BaseIdEntity.html":{}}}],["primitive",{"_index":485,"title":{},"body":{"miscellaneous/functions.html":{}}}],["process",{"_index":542,"title":{},"body":{"index.html":{}}}],["project",{"_index":688,"title":{},"body":{"index.html":{}}}],["prolonged",{"_index":626,"title":{},"body":{"index.html":{}}}],["promise",{"_index":169,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["properties",{"_index":9,"title":{"properties.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"properties.html":{}}}],["property",{"_index":23,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{}}}],["property({type",{"_index":84,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/HttpErrorDto.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["propertydecorator",{"_index":441,"title":{},"body":{"miscellaneous/functions.html":{}}}],["propertyoptions",{"_index":437,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provided",{"_index":472,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provides",{"_index":75,"title":{},"body":{"classes/BaseEntity.html":{}}}],["providing",{"_index":525,"title":{},"body":{"index.html":{},"properties.html":{}}}],["puq",{"_index":734,"title":{},"body":{"properties.html":{}}}],["puq/orm",{"_index":510,"title":{},"body":{"index.html":{}}}],["puq/ormsqlite",{"_index":554,"title":{},"body":{"index.html":{}}}],["puq/property",{"_index":24,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"dependencies.html":{}}}],["puq/query",{"_index":179,"title":{},"body":{"classes/EntityReadService.html":{},"dependencies.html":{}}}],["puq/type",{"_index":94,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/SingleValidationErrorDto.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["query",{"_index":132,"title":{},"body":{"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["querycount",{"_index":166,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["querydeeppartialentity",{"_index":220,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["querymany",{"_index":171,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"miscellaneous/functions.html":{}}}],["querymanydtooptions",{"_index":400,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["queryone",{"_index":174,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"miscellaneous/functions.html":{}}}],["queryonedtooptions",{"_index":402,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["ram",{"_index":642,"title":{},"body":{"index.html":{}}}],["read",{"_index":158,"title":{},"body":{"classes/EntityReadService.html":{}}}],["read.js",{"_index":229,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["readily",{"_index":585,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":114,"title":{},"body":{"classes/BaseEntityService.html":{}}}],["record",{"_index":446,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reduce",{"_index":587,"title":{},"body":{"index.html":{}}}],["reduction",{"_index":546,"title":{},"body":{"index.html":{}}}],["refrain",{"_index":663,"title":{},"body":{"index.html":{}}}],["related",{"_index":271,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["relation",{"_index":25,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/EntityWriteService.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["relation(options",{"_index":488,"title":{},"body":{"miscellaneous/functions.html":{}}}],["relation(relationname",{"_index":239,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["relation({type",{"_index":318,"title":{},"body":{"entities/TestEntity.html":{},"entities/TestEntity-1.html":{}}}],["relationid",{"_index":235,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["relationname",{"_index":236,"title":{},"body":{"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{}}}],["relationoptions",{"_index":489,"title":{},"body":{"miscellaneous/functions.html":{}}}],["relationparam",{"_index":201,"title":{},"body":{"classes/EntityWriteService.html":{},"miscellaneous/functions.html":{}}}],["relations",{"_index":452,"title":{},"body":{"miscellaneous/functions.html":{}}}],["remains",{"_index":610,"title":{},"body":{"index.html":{}}}],["remove(relationid",{"_index":242,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["removerelation",{"_index":193,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["removerelation(relation",{"_index":205,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["repository",{"_index":108,"title":{},"body":{"classes/BaseEntityService.html":{},"properties.html":{}}}],["required",{"_index":55,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["resource",{"_index":575,"title":{},"body":{"index.html":{}}}],["responsiveness",{"_index":624,"title":{},"body":{"index.html":{}}}],["result",{"_index":146,"title":{},"body":{"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/UpdateResultDto.html":{}}}],["result.dto.ts",{"_index":144,"title":{},"body":{"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/UpdateResultDto.html":{},"coverage.html":{}}}],["result.dto.ts:13",{"_index":149,"title":{},"body":{"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/UpdateResultDto.html":{}}}],["results",{"_index":65,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":181,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{}}}],["returns",{"_index":168,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/TableNamingStrategy.html":{},"miscellaneous/functions.html":{}}}],["robert",{"_index":744,"title":{},"body":{"properties.html":{}}}],["robert.brightline@gmail.com",{"_index":728,"title":{},"body":{"index.html":{}}}],["running",{"_index":723,"title":{},"body":{"index.html":{}}}],["safe",{"_index":674,"title":{},"body":{"index.html":{}}}],["save",{"_index":194,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["save(entity",{"_index":207,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["savemany",{"_index":195,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["savemany(entities",{"_index":210,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["seamlessly",{"_index":516,"title":{},"body":{"index.html":{},"properties.html":{}}}],["secondtablename",{"_index":311,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["secure",{"_index":702,"title":{},"body":{"index.html":{}}}],["securely",{"_index":725,"title":{},"body":{"index.html":{}}}],["select",{"_index":491,"title":{},"body":{"miscellaneous/functions.html":{}}}],["selectbaseentity",{"_index":495,"title":{},"body":{"miscellaneous/functions.html":{}}}],["selectquerybuilder",{"_index":502,"title":{},"body":{"miscellaneous/functions.html":{}}}],["selecttransformer",{"_index":406,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["server",{"_index":628,"title":{},"body":{"index.html":{}}}],["server's",{"_index":641,"title":{},"body":{"index.html":{}}}],["service",{"_index":159,"title":{},"body":{"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{}}}],["set",{"_index":58,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["set(null",{"_index":244,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["set(relationid",{"_index":243,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["setrelation",{"_index":196,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["setrelation(relation",{"_index":212,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["sets",{"_index":620,"title":{},"body":{"index.html":{}}}],["settings",{"_index":566,"title":{},"body":{"index.html":{}}}],["shared_buffers",{"_index":637,"title":{},"body":{"index.html":{}}}],["single",{"_index":264,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"index.html":{},"properties.html":{}}}],["singlevalidationerror",{"_index":266,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["singlevalidationerrordto",{"_index":262,"title":{"classes/SingleValidationErrorDto.html":{}},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{}}}],["smoothly",{"_index":724,"title":{},"body":{"index.html":{}}}],["softdelete",{"_index":197,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["softdelete(id",{"_index":214,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["sort",{"_index":651,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"index.html":{}}}],["specifies",{"_index":581,"title":{},"body":{"index.html":{}}}],["specify",{"_index":465,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sqlite",{"_index":17,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/ManyRelation.html":{},"entities/OneRelation.html":{},"entities/OwnerRelation.html":{},"entities/TestEntity.html":{},"classes/TestObject.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["sqlite3.ts",{"_index":7,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/ManyRelation.html":{},"entities/OneRelation.html":{},"entities/OwnerRelation.html":{},"entities/TestEntity.html":{},"classes/TestObject.html":{},"coverage.html":{}}}],["sqlite3.ts:14",{"_index":258,"title":{},"body":{"entities/OneRelation.html":{}}}],["sqlite3.ts:19",{"_index":256,"title":{},"body":{"entities/ManyRelation.html":{}}}],["sqlite3.ts:24",{"_index":260,"title":{},"body":{"entities/OwnerRelation.html":{}}}],["sqlite3.ts:29",{"_index":19,"title":{},"body":{"entities/AttributeRelation.html":{}}}],["sqlite3.ts:30",{"_index":20,"title":{},"body":{"entities/AttributeRelation.html":{}}}],["sqlite3.ts:35",{"_index":329,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:36",{"_index":323,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:37",{"_index":325,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:38",{"_index":321,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:39",{"_index":320,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:45",{"_index":326,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:51",{"_index":317,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:52",{"_index":322,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:62",{"_index":327,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:72",{"_index":324,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:83",{"_index":328,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:9",{"_index":342,"title":{},"body":{"classes/TestObject.html":{}}}],["sqlite3.ts:93",{"_index":319,"title":{},"body":{"entities/TestEntity.html":{}}}],["src/.../base.ts",{"_index":750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../column.ts",{"_index":428,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../create",{"_index":429,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../entity.ts",{"_index":430,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../pick",{"_index":431,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../relation.ts",{"_index":432,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../select",{"_index":433,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../view",{"_index":434,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../where",{"_index":435,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/common/pick",{"_index":362,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/decorator/column.ts",{"_index":370,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/decorator/entity.ts",{"_index":371,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/decorator/relation.ts",{"_index":372,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/decorator/view",{"_index":373,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/dto/count",{"_index":143,"title":{},"body":{"classes/CountResultDto.html":{},"coverage.html":{}}}],["src/lib/dto/create",{"_index":379,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/dto/delete",{"_index":151,"title":{},"body":{"classes/DeleteResultDto.html":{},"coverage.html":{}}}],["src/lib/dto/http",{"_index":246,"title":{},"body":{"classes/HttpErrorDto.html":{},"coverage.html":{}}}],["src/lib/dto/update",{"_index":345,"title":{},"body":{"classes/UpdateResultDto.html":{},"coverage.html":{}}}],["src/lib/dto/validation",{"_index":263,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{}}}],["src/lib/entity/base",{"_index":115,"title":{},"body":{"classes/BaseIdEntity.html":{},"coverage.html":{}}}],["src/lib/entity/base.ts",{"_index":73,"title":{},"body":{"classes/BaseEntity.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/entity/base.ts:12",{"_index":86,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/lib/entity/base.ts:16",{"_index":90,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/lib/entity/base.ts:20",{"_index":88,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/lib/factory/naming",{"_index":292,"title":{},"body":{"classes/TableNamingStrategy.html":{},"coverage.html":{}}}],["src/lib/integration/better",{"_index":6,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/ManyRelation.html":{},"entities/OneRelation.html":{},"entities/OwnerRelation.html":{},"entities/TestEntity.html":{},"classes/TestObject.html":{},"coverage.html":{}}}],["src/lib/integration/postgres.ts",{"_index":68,"title":{},"body":{"entities/AttributeRelation-1.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity-1.html":{},"classes/TestObject-1.html":{},"coverage.html":{}}}],["src/lib/integration/postgres.ts:14",{"_index":259,"title":{},"body":{"entities/OneRelation-1.html":{}}}],["src/lib/integration/postgres.ts:19",{"_index":257,"title":{},"body":{"entities/ManyRelation-1.html":{}}}],["src/lib/integration/postgres.ts:24",{"_index":261,"title":{},"body":{"entities/OwnerRelation-1.html":{}}}],["src/lib/integration/postgres.ts:29",{"_index":70,"title":{},"body":{"entities/AttributeRelation-1.html":{}}}],["src/lib/integration/postgres.ts:30",{"_index":71,"title":{},"body":{"entities/AttributeRelation-1.html":{}}}],["src/lib/integration/postgres.ts:35",{"_index":341,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:36",{"_index":335,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:37",{"_index":337,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:38",{"_index":333,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:39",{"_index":332,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:40",{"_index":338,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:41",{"_index":330,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:42",{"_index":334,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:52",{"_index":339,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:62",{"_index":336,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:73",{"_index":340,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:83",{"_index":331,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:9",{"_index":343,"title":{},"body":{"classes/TestObject-1.html":{}}}],["src/lib/query/common",{"_index":131,"title":{},"body":{"classes/CommonQueryDto.html":{},"coverage.html":{}}}],["src/lib/query/create",{"_index":393,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/query/select",{"_index":405,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/query/where",{"_index":407,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/service/base.ts",{"_index":105,"title":{},"body":{"classes/BaseEntityService.html":{},"coverage.html":{}}}],["src/lib/service/base.ts:4",{"_index":109,"title":{},"body":{"classes/BaseEntityService.html":{}}}],["src/lib/service/read.ts",{"_index":157,"title":{},"body":{"classes/EntityReadService.html":{},"coverage.html":{}}}],["src/lib/service/read.ts:16",{"_index":172,"title":{},"body":{"classes/EntityReadService.html":{}}}],["src/lib/service/read.ts:25",{"_index":175,"title":{},"body":{"classes/EntityReadService.html":{}}}],["src/lib/service/read.ts:29",{"_index":177,"title":{},"body":{"classes/EntityReadService.html":{}}}],["src/lib/service/read.ts:33",{"_index":167,"title":{},"body":{"classes/EntityReadService.html":{}}}],["src/lib/service/write.ts",{"_index":190,"title":{},"body":{"classes/EntityWriteService.html":{},"coverage.html":{}}}],["src/lib/service/write.ts:16",{"_index":209,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["src/lib/service/write.ts:20",{"_index":211,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["src/lib/service/write.ts:24",{"_index":221,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["src/lib/service/write.ts:28",{"_index":204,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["src/lib/service/write.ts:32",{"_index":215,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["src/lib/service/write.ts:36",{"_index":202,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["src/lib/service/write.ts:46",{"_index":206,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["src/lib/service/write.ts:56",{"_index":213,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["src/lib/service/write.ts:66",{"_index":218,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["src/lib/view/base.view.ts",{"_index":121,"title":{},"body":{"classes/BaseView.html":{},"coverage.html":{}}}],["src/lib/view/base.view.ts:4",{"_index":125,"title":{},"body":{"classes/BaseView.html":{}}}],["src/lib/view/base.view.ts:5",{"_index":123,"title":{},"body":{"classes/BaseView.html":{}}}],["src/lib/view/base.view.ts:6",{"_index":126,"title":{},"body":{"classes/BaseView.html":{}}}],["src/lib/view/base.view.ts:7",{"_index":124,"title":{},"body":{"classes/BaseView.html":{}}}],["standard",{"_index":514,"title":{},"body":{"index.html":{},"properties.html":{}}}],["started",{"_index":509,"title":{"index.html":{}},"body":{}}],["statements",{"_index":361,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":254,"title":{},"body":{"classes/HttpErrorDto.html":{}}}],["statuscode",{"_index":251,"title":{},"body":{"classes/HttpErrorDto.html":{}}}],["stays",{"_index":700,"title":{},"body":{"index.html":{}}}],["stored",{"_index":655,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":297,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["strategy.ts",{"_index":293,"title":{},"body":{"classes/TableNamingStrategy.html":{},"coverage.html":{}}}],["strategy.ts:13",{"_index":304,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["strategy.ts:17",{"_index":306,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["strategy.ts:21",{"_index":309,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["strategy.ts:6",{"_index":312,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["streamlined",{"_index":530,"title":{},"body":{"index.html":{}}}],["string",{"_index":14,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["structure",{"_index":249,"title":{},"body":{"classes/HttpErrorDto.html":{}}}],["subsequent",{"_index":682,"title":{},"body":{"index.html":{}}}],["such",{"_index":481,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sufficient",{"_index":635,"title":{},"body":{"index.html":{}}}],["summary",{"_index":511,"title":{},"body":{"index.html":{}}}],["support",{"_index":478,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["supporting",{"_index":696,"title":{},"body":{"index.html":{}}}],["swagger",{"_index":528,"title":{},"body":{"index.html":{},"properties.html":{}}}],["swc/helpers",{"_index":419,"title":{},"body":{"dependencies.html":{}}}],["system",{"_index":598,"title":{},"body":{"index.html":{}}}],["t",{"_index":208,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["table",{"_index":295,"title":{},"body":{"classes/TableNamingStrategy.html":{},"coverage.html":{}}}],["tablenamingstrategy",{"_index":291,"title":{"classes/TableNamingStrategy.html":{}},"body":{"classes/TableNamingStrategy.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":416,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":690,"title":{},"body":{"index.html":{}}}],["target",{"_index":49,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["testentity",{"_index":43,"title":{"entities/TestEntity.html":{},"entities/TestEntity-1.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{}}}],["testobject",{"_index":34,"title":{"classes/TestObject.html":{},"classes/TestObject-1.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{}}}],["thank",{"_index":686,"title":{},"body":{"index.html":{}}}],["this.repository",{"_index":237,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["this.repository.count(query",{"_index":188,"title":{},"body":{"classes/EntityReadService.html":{}}}],["this.repository.delete(id",{"_index":233,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["this.repository.find(query",{"_index":182,"title":{},"body":{"classes/EntityReadService.html":{}}}],["this.repository.findone(query",{"_index":185,"title":{},"body":{"classes/EntityReadService.html":{}}}],["this.repository.findoneby",{"_index":186,"title":{},"body":{"classes/EntityReadService.html":{}}}],["this.repository.save(entities",{"_index":231,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["this.repository.save(entity",{"_index":230,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["this.repository.softdelete(id",{"_index":234,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["this.repository.update(id",{"_index":232,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["through",{"_index":531,"title":{},"body":{"index.html":{}}}],["time",{"_index":621,"title":{},"body":{"index.html":{}}}],["timestamp",{"_index":500,"title":{},"body":{"miscellaneous/functions.html":{}}}],["toward",{"_index":706,"title":{},"body":{"index.html":{}}}],["traffic",{"_index":591,"title":{},"body":{"index.html":{}}}],["transfer",{"_index":668,"title":{},"body":{"index.html":{}}}],["transform",{"_index":490,"title":{},"body":{"miscellaneous/functions.html":{}}}],["transformations",{"_index":667,"title":{},"body":{"index.html":{}}}],["transformed",{"_index":557,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":423,"title":{},"body":{"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["transformer.ts",{"_index":368,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["transformers",{"_index":664,"title":{},"body":{"index.html":{}}}],["true",{"_index":54,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/CommonQueryDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"miscellaneous/functions.html":{}}}],["type",{"_index":12,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityReadService.html":{},"classes/EntityWriteService.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["type.ts",{"_index":363,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["typealiases",{"_index":746,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeorm",{"_index":98,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/EntityReadService.html":{},"classes/TableNamingStrategy.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["typeorm/query",{"_index":226,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["typeorom",{"_index":673,"title":{},"body":{"index.html":{}}}],["types",{"_index":480,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["undefined",{"_index":316,"title":{},"body":{"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{}}}],["unique",{"_index":463,"title":{},"body":{"miscellaneous/functions.html":{}}}],["uniques",{"_index":460,"title":{},"body":{"miscellaneous/functions.html":{}}}],["unnecessary",{"_index":615,"title":{},"body":{"index.html":{}}}],["unset",{"_index":381,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["unsetrelation",{"_index":198,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["unsetrelation(relation",{"_index":216,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["unsetrelationparam",{"_index":217,"title":{},"body":{"classes/EntityWriteService.html":{},"miscellaneous/functions.html":{}}}],["up",{"_index":701,"title":{},"body":{"index.html":{}}}],["update",{"_index":199,"title":{},"body":{"classes/EntityWriteService.html":{},"classes/UpdateResultDto.html":{}}}],["update(id",{"_index":219,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["updatedat",{"_index":78,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseView.html":{}}}],["updatedatecolumn",{"_index":97,"title":{},"body":{"classes/BaseEntity.html":{}}}],["updateresult",{"_index":228,"title":{},"body":{"classes/EntityWriteService.html":{},"classes/UpdateResultDto.html":{}}}],["updateresultdto",{"_index":344,"title":{"classes/UpdateResultDto.html":{}},"body":{"classes/UpdateResultDto.html":{},"coverage.html":{}}}],["updates",{"_index":709,"title":{},"body":{"index.html":{}}}],["upper",{"_index":594,"title":{},"body":{"index.html":{}}}],["use",{"_index":675,"title":{},"body":{"index.html":{}}}],["useful",{"_index":693,"title":{},"body":{"index.html":{}}}],["users",{"_index":718,"title":{},"body":{"index.html":{}}}],["using",{"_index":527,"title":{},"body":{"index.html":{},"properties.html":{}}}],["utilization",{"_index":576,"title":{},"body":{"index.html":{}}}],["validated",{"_index":523,"title":{},"body":{"index.html":{},"properties.html":{}}}],["validation",{"_index":265,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["validationconstraints",{"_index":272,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["validationconstraintsdto",{"_index":268,"title":{"classes/ValidationConstraintsDto.html":{}},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{}}}],["validationerrordto",{"_index":288,"title":{"classes/ValidationErrorDto.html":{}},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{}}}],["validationerrorresult",{"_index":273,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["validator",{"_index":538,"title":{},"body":{"index.html":{}}}],["value",{"_index":11,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["valuetransformer",{"_index":487,"title":{},"body":{"miscellaneous/functions.html":{}}}],["variable",{"_index":391,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":749,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":732,"title":{},"body":{"properties.html":{}}}],["versions",{"_index":712,"title":{},"body":{"index.html":{}}}],["view",{"_index":505,"title":{},"body":{"miscellaneous/functions.html":{}}}],["viewcolumn",{"_index":127,"title":{},"body":{"classes/BaseView.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["viewcolumn(options",{"_index":492,"title":{},"body":{"miscellaneous/functions.html":{}}}],["viewcolumn({type",{"_index":122,"title":{},"body":{"classes/BaseView.html":{}}}],["viewentity",{"_index":376,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["viewentity(expression",{"_index":494,"title":{},"body":{"miscellaneous/functions.html":{}}}],["volume",{"_index":548,"title":{},"body":{"index.html":{}}}],["well",{"_index":703,"title":{},"body":{"index.html":{}}}],["whereoption",{"_index":443,"title":{},"body":{"miscellaneous/functions.html":{}}}],["wherequerytransformer",{"_index":408,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["wherequerytransformer(columns",{"_index":506,"title":{},"body":{"miscellaneous/functions.html":{}}}],["wherequerytransformeroptions",{"_index":409,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["whether",{"_index":503,"title":{},"body":{"miscellaneous/functions.html":{}}}],["widely",{"_index":534,"title":{},"body":{"index.html":{}}}],["withdeleted",{"_index":135,"title":{},"body":{"classes/CommonQueryDto.html":{}}}],["within",{"_index":519,"title":{},"body":{"index.html":{},"properties.html":{}}}],["work_mem",{"_index":646,"title":{},"body":{"index.html":{}}}],["write",{"_index":191,"title":{},"body":{"classes/EntityWriteService.html":{}}}],["yes",{"_index":461,"title":{},"body":{"miscellaneous/functions.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"entities/AttributeRelation.html":{"url":"entities/AttributeRelation.html","title":"entity - AttributeRelation","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  AttributeRelation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/better-sqlite3.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                key\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:30\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) key: string;\n  @Column({ databaseType: 'sqlite', type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) string: string;\n  @Column({ databaseType: 'sqlite', type: 'integer' }) integer: number;\n  @Column({ databaseType: 'sqlite', type: 'number' }) number: number;\n  @Column({ databaseType: 'sqlite', type: 'boolean' }) boolean: boolean;\n  @Column({ databaseType: 'sqlite', type: 'bigint' }) bigint: bigint;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'object',\n    target: () => TestObject,\n  })\n  object: TestObject;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'array',\n    items: { type: 'string' },\n  })\n  array: string[];\n  @Column({ databaseType: 'sqlite', type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/AttributeRelation-1.html":{"url":"entities/AttributeRelation-1.html","title":"entity - AttributeRelation-1","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  AttributeRelation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/postgres.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                key\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:30\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ type: 'string' }) key: string;\n  @Column({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ type: 'string' }) string: string;\n  @Column({ type: 'integer' }) integer: number;\n  @Column({ type: 'number' }) number: number;\n  @Column({ type: 'boolean' }) boolean: boolean;\n  @Column({ type: 'bigint' }) bigint: bigint;\n  @Column({ type: 'object', target: () => TestObject }) object: TestObject;\n  @Column({ type: 'array', items: { type: 'string' } }) array: string[];\n  @Column({ type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/entity/base.ts\n        \n\n\n            \n                Description\n            \n            \n                All entities extends this entity. The entity provides id, createdAt, updatedAt, and deletedAt columns\n\n            \n\n            \n                Extends\n            \n            \n                            BaseIdEntity\n            \n\n            \n                Implements\n            \n            \n                        BaseModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'date'})@CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/entity/base.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'date'})@DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/entity/base.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'date'})@UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/entity/base.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'integer'})@PrimaryGeneratedColumn()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseIdEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseIdEntity:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type { BaseModel } from '@puq/type';\nimport { Property } from '@puq/property';\nimport { CreateDateColumn, DeleteDateColumn, UpdateDateColumn } from 'typeorm';\nimport { BaseIdEntity } from './base-id.js';\n\n/**\n * All entities extends this entity. The entity provides id, createdAt, updatedAt, and deletedAt columns\n */\nexport class BaseEntity extends BaseIdEntity implements BaseModel {\n  @Property({ type: 'date' })\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @Property({ type: 'date' })\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @Property({ type: 'date' })\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\nexport const BASE_ENTITY_COLUMNS = Object.keys(new BaseEntity());\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntityService.html":{"url":"classes/BaseEntityService.html","title":"class - BaseEntityService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/service/base.ts\n        \n\n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/lib/service/base.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type { Repository } from 'typeorm';\nimport type { BaseEntity } from '../entity/base.js';\n\nexport class BaseEntityService {\n  constructor(protected readonly repository: Repository) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseIdEntity.html":{"url":"classes/BaseIdEntity.html","title":"class - BaseIdEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseIdEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/entity/base-id.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IDModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'integer'})@PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/entity/base-id.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type { IDModel } from '@puq/type';\nimport { Property } from '@puq/property';\nimport { PrimaryGeneratedColumn } from 'typeorm';\n\nexport class BaseIdEntity implements IDModel {\n  @Property({ type: 'integer' })\n  @PrimaryGeneratedColumn()\n  id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseView.html":{"url":"classes/BaseView.html","title":"class - BaseView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/view/base.view.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewColumn({type: 'date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/view/base.view.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewColumn({type: 'date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/view/base.view.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewColumn({type: 'integer'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/view/base.view.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewColumn({type: 'date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/view/base.view.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ViewColumn } from './../decorator/view-column.js';\n\nexport class BaseView {\n  @ViewColumn({ type: 'integer' }) id: number;\n  @ViewColumn({ type: 'date' }) createdAt: Date;\n  @ViewColumn({ type: 'date' }) updatedAt: Date;\n  @ViewColumn({ type: 'date' }) deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommonQueryDto.html":{"url":"classes/CommonQueryDto.html","title":"class - CommonQueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommonQueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/query/common-query-dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Common query dto\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                withDeleted\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        withDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'boolean', description: 'Include deleted items to the load', default: false, acceptString: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/query/common-query-dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\n\n/**\n * Common query dto\n */\n@Dto()\nexport class CommonQueryDto {\n  @Property({\n    type: 'boolean',\n    description: 'Include deleted items to the load',\n    default: false,\n    acceptString: true,\n  })\n  withDeleted?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CountResultDto.html":{"url":"classes/CountResultDto.html","title":"class - CountResultDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CountResultDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dto/count-result.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Count result\n\n            \n\n\n            \n                Implements\n            \n            \n                        CountResult\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                count\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        count\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'integer', description: 'The number of items matched the query'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/count-result.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type { CountResult } from '@puq/type';\nimport { Dto, Property } from '@puq/property';\n\n/**\n * Count result\n */\n@Dto()\nexport class CountResultDto implements CountResult {\n  @Property({\n    type: 'integer',\n    description: 'The number of items matched the query',\n  })\n  count: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteResultDto.html":{"url":"classes/DeleteResultDto.html","title":"class - DeleteResultDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteResultDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dto/delete-result.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Delete result dto\n\n            \n\n\n            \n                Implements\n            \n            \n                        DeleteResult\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                affected\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        affected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'integer', description: 'The number of items affected by the delete operation'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/delete-result.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type { DeleteResult } from '@puq/type';\nimport { Dto, Property } from '@puq/property';\n\n/**\n * Delete result dto\n */\n@Dto()\nexport class DeleteResultDto implements DeleteResult {\n  @Property({\n    type: 'integer',\n    description: 'The number of items affected by the delete operation',\n  })\n  affected: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EntityReadService.html":{"url":"classes/EntityReadService.html","title":"class - EntityReadService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EntityReadService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/service/read.ts\n        \n\n\n            \n                Description\n            \n            \n                Read service\n\n            \n\n            \n                Extends\n            \n            \n                            BaseEntityService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                count\n                            \n                            \n                                find\n                            \n                            \n                                findOne\n                            \n                            \n                                findOneById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(query: QueryCount)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/read.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        QueryCount\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \nfind(query: QueryMany)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/read.ts:16\n                        \n                    \n\n\n            \n                \n                        Query all entities\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        QueryMany\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(query: QueryOne)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/read.ts:25\n                        \n                    \n\n\n            \n                \n                        Query one entity\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        QueryOne\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    QueryOne\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneById\n                        \n                    \n                \n            \n            \n                \nfindOneById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/read.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type { FindOptionsWhere } from 'typeorm';\nimport type { CountResult } from '@puq/type';\nimport type { QueryCount, QueryMany, QueryOne } from '@puq/query';\nimport type { BaseEntity } from '../entity/base.js';\nimport { BaseEntityService } from './base.js';\n\n/**\n * Read service\n */\nexport class EntityReadService extends BaseEntityService {\n  /**\n   * Query all entities\n   */\n  find(query: QueryMany[]>) {\n    return this.repository.find(query);\n  }\n\n  /**\n   * Query one entity\n   * @param query {@link QueryOne}\n   * @returns\n   */\n  findOne(query: QueryOne[]>) {\n    return this.repository.findOne(query);\n  }\n\n  findOneById(id: number) {\n    return this.repository.findOneBy({ id } as FindOptionsWhere);\n  }\n\n  async count(query: QueryCount[]>): Promise {\n    return { count: await this.repository.count(query) };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EntityWriteService.html":{"url":"classes/EntityWriteService.html","title":"class - EntityWriteService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EntityWriteService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/service/write.ts\n        \n\n\n            \n                Description\n            \n            \n                Write service\n\n            \n\n            \n                Extends\n            \n            \n                            EntityReadService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addRelation\n                            \n                            \n                                delete\n                            \n                            \n                                    Async\n                                removeRelation\n                            \n                            \n                                save\n                            \n                            \n                                saveMany\n                            \n                            \n                                    Async\n                                setRelation\n                            \n                            \n                                softDelete\n                            \n                            \n                                    Async\n                                unsetRelation\n                            \n                            \n                                update\n                            \n                            \n                                    Async\n                                count\n                            \n                            \n                                find\n                            \n                            \n                                findOne\n                            \n                            \n                                findOneById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    addRelation(relation: RelationParam)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/write.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relation\n                                            \n                                                            RelationParam\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/write.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeRelation(relation: RelationParam)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/write.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relation\n                                            \n                                                            RelationParam\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        save\n                        \n                    \n                \n            \n            \n                \nsave(entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/write.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveMany\n                        \n                    \n                \n            \n            \n                \nsaveMany(entities: T[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/write.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        T[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    setRelation(relation: RelationParam)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/write.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relation\n                                            \n                                                            RelationParam\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        softDelete\n                        \n                    \n                \n            \n            \n                \nsoftDelete(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/write.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        unsetRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    unsetRelation(relation: UnsetRelationParam)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/write.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relation\n                                            \n                                                            UnsetRelationParam\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, entity: QueryDeepPartialEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/write.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                            QueryDeepPartialEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(query: QueryCount)\n                \n            \n\n\n                    \n                        \n                            Inherited from         EntityReadService\n\n                        \n                    \n                    \n                        \n                                Defined in         EntityReadService:33\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        QueryCount\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \nfind(query: QueryMany)\n                \n            \n\n\n                    \n                        \n                            Inherited from         EntityReadService\n\n                        \n                    \n                    \n                        \n                                Defined in         EntityReadService:16\n\n                        \n                    \n\n\n            \n                \n                        Query all entities\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        QueryMany\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(query: QueryOne)\n                \n            \n\n\n                    \n                        \n                            Inherited from         EntityReadService\n\n                        \n                    \n                    \n                        \n                                Defined in         EntityReadService:25\n\n                        \n                    \n\n\n            \n                \n                        Query one entity\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        QueryOne\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    QueryOne\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneById\n                        \n                    \n                \n            \n            \n                \nfindOneById(id: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         EntityReadService\n\n                        \n                    \n                    \n                        \n                                Defined in         EntityReadService:29\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type { BaseEntity } from '../entity/base.js';\nimport type { QueryDeepPartialEntity } from 'typeorm/query-builder/QueryPartialEntity.js';\nimport type {\n  RelationParam,\n  UnsetRelationParam,\n  UpdateResult,\n} from '@puq/type';\nimport { EntityReadService } from './read.js';\n\n/**\n * Write service\n */\nexport class EntityWriteService extends EntityReadService {\n  save(entity: T): Promise {\n    return this.repository.save(entity);\n  }\n\n  saveMany(entities: T[]): Promise {\n    return this.repository.save(entities);\n  }\n\n  update(id: number, entity: QueryDeepPartialEntity) {\n    return this.repository.update(id, entity);\n  }\n\n  delete(id: number) {\n    return this.repository.delete(id);\n  }\n\n  softDelete(id: number) {\n    return this.repository.softDelete(id);\n  }\n\n  async addRelation(relation: RelationParam): Promise {\n    const { id, relationId, relationName } = relation;\n    await this.repository\n      .createQueryBuilder()\n      .relation(relationName)\n      .of(id)\n      .add(relationId);\n    return { affected: 1 };\n  }\n\n  async removeRelation(relation: RelationParam): Promise {\n    const { id, relationId, relationName: relationName } = relation;\n    await this.repository\n      .createQueryBuilder()\n      .relation(relationName)\n      .of(id)\n      .remove(relationId);\n    return { affected: 1 };\n  }\n\n  async setRelation(relation: RelationParam): Promise {\n    const { id, relationId, relationName } = relation;\n    await this.repository\n      .createQueryBuilder()\n      .relation(relationName)\n      .of(id)\n      .set(relationId);\n    return { affected: 1 };\n  }\n\n  async unsetRelation(relation: UnsetRelationParam): Promise {\n    const { id, relationName } = relation;\n    await this.repository\n      .createQueryBuilder()\n      .relation(relationName)\n      .of(id)\n      .set(null);\n    return { affected: 1 };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpErrorDto.html":{"url":"classes/HttpErrorDto.html","title":"class - HttpErrorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpErrorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dto/http-error.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                This is the common error structure\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                message\n                            \n                            \n                                    \n                                statusCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/http-error.dto.ts:11\n                        \n                    \n\n            \n                \n                    error message\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'integer'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/http-error.dto.ts:16\n                        \n                    \n\n            \n                \n                    status code\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\n\n/**\n * This is the common error structure\n */\n@Dto()\nexport class HttpErrorDto {\n  /**\n   * error message\n   */\n  @Property({ type: 'string' }) message: string;\n\n  /**\n   * status code\n   */\n  @Property({ type: 'integer' }) statusCode: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ManyRelation.html":{"url":"entities/ManyRelation.html","title":"entity - ManyRelation","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ManyRelation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/better-sqlite3.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                many\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        many\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:19\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) key: string;\n  @Column({ databaseType: 'sqlite', type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) string: string;\n  @Column({ databaseType: 'sqlite', type: 'integer' }) integer: number;\n  @Column({ databaseType: 'sqlite', type: 'number' }) number: number;\n  @Column({ databaseType: 'sqlite', type: 'boolean' }) boolean: boolean;\n  @Column({ databaseType: 'sqlite', type: 'bigint' }) bigint: bigint;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'object',\n    target: () => TestObject,\n  })\n  object: TestObject;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'array',\n    items: { type: 'string' },\n  })\n  array: string[];\n  @Column({ databaseType: 'sqlite', type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ManyRelation-1.html":{"url":"entities/ManyRelation-1.html","title":"entity - ManyRelation-1","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ManyRelation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/postgres.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                many\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        many\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:19\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ type: 'string' }) key: string;\n  @Column({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ type: 'string' }) string: string;\n  @Column({ type: 'integer' }) integer: number;\n  @Column({ type: 'number' }) number: number;\n  @Column({ type: 'boolean' }) boolean: boolean;\n  @Column({ type: 'bigint' }) bigint: bigint;\n  @Column({ type: 'object', target: () => TestObject }) object: TestObject;\n  @Column({ type: 'array', items: { type: 'string' } }) array: string[];\n  @Column({ type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/OneRelation.html":{"url":"entities/OneRelation.html","title":"entity - OneRelation","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  OneRelation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/better-sqlite3.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                one\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        one\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:14\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) key: string;\n  @Column({ databaseType: 'sqlite', type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) string: string;\n  @Column({ databaseType: 'sqlite', type: 'integer' }) integer: number;\n  @Column({ databaseType: 'sqlite', type: 'number' }) number: number;\n  @Column({ databaseType: 'sqlite', type: 'boolean' }) boolean: boolean;\n  @Column({ databaseType: 'sqlite', type: 'bigint' }) bigint: bigint;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'object',\n    target: () => TestObject,\n  })\n  object: TestObject;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'array',\n    items: { type: 'string' },\n  })\n  array: string[];\n  @Column({ databaseType: 'sqlite', type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/OneRelation-1.html":{"url":"entities/OneRelation-1.html","title":"entity - OneRelation-1","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  OneRelation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/postgres.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                one\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        one\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:14\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ type: 'string' }) key: string;\n  @Column({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ type: 'string' }) string: string;\n  @Column({ type: 'integer' }) integer: number;\n  @Column({ type: 'number' }) number: number;\n  @Column({ type: 'boolean' }) boolean: boolean;\n  @Column({ type: 'bigint' }) bigint: bigint;\n  @Column({ type: 'object', target: () => TestObject }) object: TestObject;\n  @Column({ type: 'array', items: { type: 'string' } }) array: string[];\n  @Column({ type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/OwnerRelation.html":{"url":"entities/OwnerRelation.html","title":"entity - OwnerRelation","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  OwnerRelation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/better-sqlite3.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                owner\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:24\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) key: string;\n  @Column({ databaseType: 'sqlite', type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) string: string;\n  @Column({ databaseType: 'sqlite', type: 'integer' }) integer: number;\n  @Column({ databaseType: 'sqlite', type: 'number' }) number: number;\n  @Column({ databaseType: 'sqlite', type: 'boolean' }) boolean: boolean;\n  @Column({ databaseType: 'sqlite', type: 'bigint' }) bigint: bigint;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'object',\n    target: () => TestObject,\n  })\n  object: TestObject;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'array',\n    items: { type: 'string' },\n  })\n  array: string[];\n  @Column({ databaseType: 'sqlite', type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/OwnerRelation-1.html":{"url":"entities/OwnerRelation-1.html","title":"entity - OwnerRelation-1","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  OwnerRelation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/postgres.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                owner\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:24\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ type: 'string' }) key: string;\n  @Column({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ type: 'string' }) string: string;\n  @Column({ type: 'integer' }) integer: number;\n  @Column({ type: 'number' }) number: number;\n  @Column({ type: 'boolean' }) boolean: boolean;\n  @Column({ type: 'bigint' }) bigint: bigint;\n  @Column({ type: 'object', target: () => TestObject }) object: TestObject;\n  @Column({ type: 'array', items: { type: 'string' } }) array: string[];\n  @Column({ type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SingleValidationErrorDto.html":{"url":"classes/SingleValidationErrorDto.html","title":"class - SingleValidationErrorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SingleValidationErrorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dto/validation-error.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Single validation error dto\n\n            \n\n\n            \n                Implements\n            \n            \n                        SingleValidationError\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                constraints\n                            \n                            \n                                    \n                                    Optional\n                                property\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        constraints\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ValidationConstraintsDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'object', target: () => ValidationConstraintsDto})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:42\n                        \n                    \n\n            \n                \n                    The error constraints ValidationConstraintsDto\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        property\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:36\n                        \n                    \n\n            \n                \n                    The related property of the error\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type {\n  SingleValidationError,\n  ValidationConstraints,\n  ValidationErrorResult,\n} from '@puq/type';\nimport { Dto, Property } from '@puq/property';\nimport { HttpErrorDto } from './http-error.dto.js';\n\n/**\n * Validation error constraints dto\n */\n@Dto()\nexport class ValidationConstraintsDto implements ValidationConstraints {\n  @Property({ type: 'string' }) min?: string;\n  @Property({ type: 'string' }) max?: string;\n  @Property({ type: 'string' }) minLength?: string;\n  @Property({ type: 'string' }) maxLength?: string;\n  @Property({ type: 'string' }) isString?: string;\n  @Property({ type: 'string' }) isNumber?: string;\n  @Property({ type: 'string' }) isInt?: string;\n  @Property({ type: 'string' }) isBoolean?: string;\n  @Property({ type: 'string' }) isObject?: string;\n  @Property({ type: 'string' }) isArray?: string;\n  @Property({ type: 'string' }) arrayMinSize?: string;\n  @Property({ type: 'string' }) arrayMaxSize?: string;\n}\n\n/**\n * Single validation error dto\n */\n@Dto()\nexport class SingleValidationErrorDto implements SingleValidationError {\n  /**\n   * The related property of the error\n   */\n  @Property({ type: 'string' }) property?: string;\n\n  /**\n   * The error constraints {@link ValidationConstraintsDto}\n   */\n  @Property({ type: 'object', target: () => ValidationConstraintsDto })\n  constraints?: ValidationConstraintsDto;\n}\n\n/**\n * Validation error dto\n */\n@Dto()\nexport class ValidationErrorDto\n  extends HttpErrorDto\n  implements ValidationErrorResult\n{\n  /**\n   * List of validation errors {@link SingleValidationErrorDto}\n   */\n  @Property({\n    type: 'array',\n    items: { type: 'object', target: () => SingleValidationErrorDto },\n  })\n  errors?: SingleValidationErrorDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TableNamingStrategy.html":{"url":"classes/TableNamingStrategy.html","title":"class - TableNamingStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TableNamingStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/factory/naming-strategy.ts\n        \n\n\n            \n                Description\n            \n            \n                Database table and column naming strategy\n\n            \n\n            \n                Extends\n            \n            \n                        DefaultNamingStrategy\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                joinColumnName\n                            \n                            \n                                    \n                                joinTableColumnName\n                            \n                            \n                                    \n                                joinTableInverseColumnName\n                            \n                            \n                                    \n                                joinTableName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        joinColumnName\n                        \n                    \n                \n            \n            \n                \n                        \n                    joinColumnName(relationName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/factory/naming-strategy.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relationName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        joinTableColumnName\n                        \n                    \n                \n            \n            \n                \n                        \n                    joinTableColumnName(_tableName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/factory/naming-strategy.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _tableName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        joinTableInverseColumnName\n                        \n                    \n                \n            \n            \n                \n                        \n                    joinTableInverseColumnName(_tableName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/factory/naming-strategy.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _tableName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        joinTableName\n                        \n                    \n                \n            \n            \n                \n                        \n                    joinTableName(firstTableName: string, secondTableName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/factory/naming-strategy.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                firstTableName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                secondTableName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DefaultNamingStrategy } from 'typeorm';\n/**\n * Database table and column naming strategy\n */\nexport class TableNamingStrategy extends DefaultNamingStrategy {\n  override joinTableName(\n    firstTableName: string,\n    secondTableName: string,\n  ): string {\n    return `${firstTableName}_${secondTableName}`;\n  }\n\n  override joinColumnName(relationName: string): string {\n    return relationName;\n  }\n\n  override joinTableColumnName(_tableName: string): string {\n    return _tableName;\n  }\n\n  override joinTableInverseColumnName(_tableName: string): string {\n    return _tableName;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/TestEntity.html":{"url":"entities/TestEntity.html","title":"entity - TestEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  TestEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/better-sqlite3.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                array\n                            \n                            \n                                    \n                                attributes\n                            \n                            \n                                    \n                                bigint\n                            \n                            \n                                    \n                                boolean\n                            \n                            \n                                    \n                                date\n                            \n                            \n                                    \n                                integer\n                            \n                            \n                                    \n                                many\n                            \n                            \n                                    \n                                number\n                            \n                            \n                                    \n                                object\n                            \n                            \n                                    \n                                one\n                            \n                            \n                                    \n                                owner\n                            \n                            \n                                    \n                                string\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        array\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'array', items: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AttributeRelation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Relation({type: 'many-to-many', target: () => AttributeRelation, eager: true, required: false, cascade: undefined, join: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        bigint\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'bigint'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        boolean\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        integer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'integer'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        many\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ManyRelation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Relation({type: 'many-to-many', target: () => ManyRelation, eager: true, required: false, onDelete: 'SET NULL', join: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        object\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TestObject\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'object', target: () => TestObject})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        one\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OneRelation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Relation({type: 'many-to-one', target: () => OneRelation, eager: true, required: false, onDelete: 'SET NULL', join: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OwnerRelation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Relation({type: 'many-to-one', target: () => OwnerRelation, eager: true, required: false, onDelete: 'CASCADE', onUpdate: 'CASCADE', join: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        string\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:35\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) key: string;\n  @Column({ databaseType: 'sqlite', type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) string: string;\n  @Column({ databaseType: 'sqlite', type: 'integer' }) integer: number;\n  @Column({ databaseType: 'sqlite', type: 'number' }) number: number;\n  @Column({ databaseType: 'sqlite', type: 'boolean' }) boolean: boolean;\n  @Column({ databaseType: 'sqlite', type: 'bigint' }) bigint: bigint;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'object',\n    target: () => TestObject,\n  })\n  object: TestObject;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'array',\n    items: { type: 'string' },\n  })\n  array: string[];\n  @Column({ databaseType: 'sqlite', type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/TestEntity-1.html":{"url":"entities/TestEntity-1.html","title":"entity - TestEntity-1","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  TestEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/postgres.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                array\n                            \n                            \n                                    \n                                attributes\n                            \n                            \n                                    \n                                bigint\n                            \n                            \n                                    \n                                boolean\n                            \n                            \n                                    \n                                date\n                            \n                            \n                                    \n                                integer\n                            \n                            \n                                    \n                                many\n                            \n                            \n                                    \n                                number\n                            \n                            \n                                    \n                                object\n                            \n                            \n                                    \n                                one\n                            \n                            \n                                    \n                                owner\n                            \n                            \n                                    \n                                string\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        array\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'array', items: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AttributeRelation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Relation({type: 'many-to-many', target: () => AttributeRelation, eager: true, required: false, cascade: undefined, join: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        bigint\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        boolean\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        integer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'integer'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        many\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ManyRelation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Relation({type: 'many-to-many', target: () => ManyRelation, eager: true, required: false, onDelete: 'SET NULL', join: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        object\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TestObject\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'object', target: () => TestObject})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        one\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OneRelation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Relation({type: 'many-to-one', target: () => OneRelation, eager: true, required: false, onDelete: 'SET NULL', join: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OwnerRelation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Relation({type: 'many-to-one', target: () => OwnerRelation, eager: true, required: false, onDelete: 'CASCADE', onUpdate: 'CASCADE', join: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        string\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:35\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ type: 'string' }) key: string;\n  @Column({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ type: 'string' }) string: string;\n  @Column({ type: 'integer' }) integer: number;\n  @Column({ type: 'number' }) number: number;\n  @Column({ type: 'boolean' }) boolean: boolean;\n  @Column({ type: 'bigint' }) bigint: bigint;\n  @Column({ type: 'object', target: () => TestObject }) object: TestObject;\n  @Column({ type: 'array', items: { type: 'string' } }) array: string[];\n  @Column({ type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestObject.html":{"url":"classes/TestObject.html","title":"class - TestObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/better-sqlite3.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) key: string;\n  @Column({ databaseType: 'sqlite', type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) string: string;\n  @Column({ databaseType: 'sqlite', type: 'integer' }) integer: number;\n  @Column({ databaseType: 'sqlite', type: 'number' }) number: number;\n  @Column({ databaseType: 'sqlite', type: 'boolean' }) boolean: boolean;\n  @Column({ databaseType: 'sqlite', type: 'bigint' }) bigint: bigint;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'object',\n    target: () => TestObject,\n  })\n  object: TestObject;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'array',\n    items: { type: 'string' },\n  })\n  array: string[];\n  @Column({ databaseType: 'sqlite', type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestObject-1.html":{"url":"classes/TestObject-1.html","title":"class - TestObject-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/postgres.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ type: 'string' }) key: string;\n  @Column({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ type: 'string' }) string: string;\n  @Column({ type: 'integer' }) integer: number;\n  @Column({ type: 'number' }) number: number;\n  @Column({ type: 'boolean' }) boolean: boolean;\n  @Column({ type: 'bigint' }) bigint: bigint;\n  @Column({ type: 'object', target: () => TestObject }) object: TestObject;\n  @Column({ type: 'array', items: { type: 'string' } }) array: string[];\n  @Column({ type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateResultDto.html":{"url":"classes/UpdateResultDto.html","title":"class - UpdateResultDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateResultDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dto/update-result.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Update result\n\n            \n\n\n            \n                Implements\n            \n            \n                        UpdateResult\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                affected\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        affected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'integer', description: 'The number of items affected by the update operation'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/update-result.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type { UpdateResult } from '@puq/type';\nimport { Dto, Property } from '@puq/property';\n\n/**\n * Update result\n */\n@Dto()\nexport class UpdateResultDto implements UpdateResult {\n  @Property({\n    type: 'integer',\n    description: 'The number of items affected by the update operation',\n  })\n  affected: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationConstraintsDto.html":{"url":"classes/ValidationConstraintsDto.html","title":"class - ValidationConstraintsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationConstraintsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dto/validation-error.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Validation error constraints dto\n\n            \n\n\n            \n                Implements\n            \n            \n                        ValidationConstraints\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                arrayMaxSize\n                            \n                            \n                                    \n                                    Optional\n                                arrayMinSize\n                            \n                            \n                                    \n                                    Optional\n                                isArray\n                            \n                            \n                                    \n                                    Optional\n                                isBoolean\n                            \n                            \n                                    \n                                    Optional\n                                isInt\n                            \n                            \n                                    \n                                    Optional\n                                isNumber\n                            \n                            \n                                    \n                                    Optional\n                                isObject\n                            \n                            \n                                    \n                                    Optional\n                                isString\n                            \n                            \n                                    \n                                    Optional\n                                max\n                            \n                            \n                                    \n                                    Optional\n                                maxLength\n                            \n                            \n                                    \n                                    Optional\n                                min\n                            \n                            \n                                    \n                                    Optional\n                                minLength\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        arrayMaxSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        arrayMinSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isBoolean\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isInt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isObject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isString\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        max\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        maxLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        min\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        minLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type {\n  SingleValidationError,\n  ValidationConstraints,\n  ValidationErrorResult,\n} from '@puq/type';\nimport { Dto, Property } from '@puq/property';\nimport { HttpErrorDto } from './http-error.dto.js';\n\n/**\n * Validation error constraints dto\n */\n@Dto()\nexport class ValidationConstraintsDto implements ValidationConstraints {\n  @Property({ type: 'string' }) min?: string;\n  @Property({ type: 'string' }) max?: string;\n  @Property({ type: 'string' }) minLength?: string;\n  @Property({ type: 'string' }) maxLength?: string;\n  @Property({ type: 'string' }) isString?: string;\n  @Property({ type: 'string' }) isNumber?: string;\n  @Property({ type: 'string' }) isInt?: string;\n  @Property({ type: 'string' }) isBoolean?: string;\n  @Property({ type: 'string' }) isObject?: string;\n  @Property({ type: 'string' }) isArray?: string;\n  @Property({ type: 'string' }) arrayMinSize?: string;\n  @Property({ type: 'string' }) arrayMaxSize?: string;\n}\n\n/**\n * Single validation error dto\n */\n@Dto()\nexport class SingleValidationErrorDto implements SingleValidationError {\n  /**\n   * The related property of the error\n   */\n  @Property({ type: 'string' }) property?: string;\n\n  /**\n   * The error constraints {@link ValidationConstraintsDto}\n   */\n  @Property({ type: 'object', target: () => ValidationConstraintsDto })\n  constraints?: ValidationConstraintsDto;\n}\n\n/**\n * Validation error dto\n */\n@Dto()\nexport class ValidationErrorDto\n  extends HttpErrorDto\n  implements ValidationErrorResult\n{\n  /**\n   * List of validation errors {@link SingleValidationErrorDto}\n   */\n  @Property({\n    type: 'array',\n    items: { type: 'object', target: () => SingleValidationErrorDto },\n  })\n  errors?: SingleValidationErrorDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationErrorDto.html":{"url":"classes/ValidationErrorDto.html","title":"class - ValidationErrorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationErrorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dto/validation-error.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Validation error dto\n\n            \n\n\n            \n                Implements\n            \n            \n                        ValidationErrorResult\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                errors\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        errors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SingleValidationErrorDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'array', items: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:60\n                        \n                    \n\n            \n                \n                    List of validation errors SingleValidationErrorDto\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type {\n  SingleValidationError,\n  ValidationConstraints,\n  ValidationErrorResult,\n} from '@puq/type';\nimport { Dto, Property } from '@puq/property';\nimport { HttpErrorDto } from './http-error.dto.js';\n\n/**\n * Validation error constraints dto\n */\n@Dto()\nexport class ValidationConstraintsDto implements ValidationConstraints {\n  @Property({ type: 'string' }) min?: string;\n  @Property({ type: 'string' }) max?: string;\n  @Property({ type: 'string' }) minLength?: string;\n  @Property({ type: 'string' }) maxLength?: string;\n  @Property({ type: 'string' }) isString?: string;\n  @Property({ type: 'string' }) isNumber?: string;\n  @Property({ type: 'string' }) isInt?: string;\n  @Property({ type: 'string' }) isBoolean?: string;\n  @Property({ type: 'string' }) isObject?: string;\n  @Property({ type: 'string' }) isArray?: string;\n  @Property({ type: 'string' }) arrayMinSize?: string;\n  @Property({ type: 'string' }) arrayMaxSize?: string;\n}\n\n/**\n * Single validation error dto\n */\n@Dto()\nexport class SingleValidationErrorDto implements SingleValidationError {\n  /**\n   * The related property of the error\n   */\n  @Property({ type: 'string' }) property?: string;\n\n  /**\n   * The error constraints {@link ValidationConstraintsDto}\n   */\n  @Property({ type: 'object', target: () => ValidationConstraintsDto })\n  constraints?: ValidationConstraintsDto;\n}\n\n/**\n * Validation error dto\n */\n@Dto()\nexport class ValidationErrorDto\n  extends HttpErrorDto\n  implements ValidationErrorResult\n{\n  /**\n   * List of validation errors {@link SingleValidationErrorDto}\n   */\n  @Property({\n    type: 'array',\n    items: { type: 'object', target: () => SingleValidationErrorDto },\n  })\n  errors?: SingleValidationErrorDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/lib/common/pick-column-type.ts\n            \n            function\n            pickColumnType\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/common/pick-transformer.ts\n            \n            function\n            pickTransformer\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/decorator/column.ts\n            \n            function\n            Column\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/decorator/entity.ts\n            \n            function\n            Entity\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/decorator/relation.ts\n            \n            function\n            Relation\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/decorator/view-column.ts\n            \n            function\n            ViewColumn\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/decorator/view-entity.ts\n            \n            function\n            ViewEntity\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/dto/count-result.dto.ts\n            \n            class\n            CountResultDto\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                        src/lib/dto/create-relation-param-dto.ts\n            \n            function\n            CreateRelationParamDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/dto/create-unset-relation-param-dto.ts\n            \n            function\n            CreateUnsetRelationParamDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/dto/delete-result.dto.ts\n            \n            class\n            DeleteResultDto\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/lib/dto/http-error.dto.ts\n            \n            class\n            HttpErrorDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/lib/dto/update-result.dto.ts\n            \n            class\n            UpdateResultDto\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/lib/dto/validation-error.dto.ts\n            \n            class\n            SingleValidationErrorDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/lib/dto/validation-error.dto.ts\n            \n            class\n            ValidationConstraintsDto\n            \n                7 %\n                (1/13)\n            \n        \n        \n            \n                \n                src/lib/dto/validation-error.dto.ts\n            \n            class\n            ValidationErrorDto\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/lib/entity/base-id.ts\n            \n            class\n            BaseIdEntity\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/entity/base.ts\n            \n            class\n            BaseEntity\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                        src/lib/entity/base.ts\n            \n            variable\n            BASE_ENTITY_COLUMNS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/factory/naming-strategy.ts\n            \n            class\n            TableNamingStrategy\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/lib/integration/better-sqlite3.ts\n            \n            entity\n            AttributeRelation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/better-sqlite3.ts\n            \n            entity\n            ManyRelation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/better-sqlite3.ts\n            \n            entity\n            OneRelation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/better-sqlite3.ts\n            \n            entity\n            OwnerRelation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/better-sqlite3.ts\n            \n            entity\n            TestEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/better-sqlite3.ts\n            \n            class\n            TestObject\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/integration/postgres.ts\n            \n            entity\n            AttributeRelation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/postgres.ts\n            \n            entity\n            ManyRelation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/postgres.ts\n            \n            entity\n            OneRelation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/postgres.ts\n            \n            entity\n            OwnerRelation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/postgres.ts\n            \n            entity\n            TestEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/postgres.ts\n            \n            class\n            TestObject\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/query/common-query-dto.ts\n            \n            class\n            CommonQueryDto\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                        src/lib/query/create-find-operator.ts\n            \n            function\n            createFindOperator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/query/create-query-count-dto.ts\n            \n            function\n            CreateQueryCountDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/query/create-query-count-dto.ts\n            \n            type alias\n            CreateQueryCountDtoOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/query/create-query-many-dto.ts\n            \n            function\n            CreateQueryManyDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/query/create-query-many-dto.ts\n            \n            type alias\n            QueryManyDtoOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/query/create-query-one-dto.ts\n            \n            function\n            CreateQueryOneDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/query/create-query-one-dto.ts\n            \n            type alias\n            QueryOneDtoOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/query/create-where-option-dto.ts\n            \n            function\n            CreateWhereOptionDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/query/select-transformer.ts\n            \n            function\n            SelectTransformer\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/query/where-query-transformer.ts\n            \n            function\n            WhereQueryTransformer\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/query/where-query-transformer.ts\n            \n            type alias\n            WhereQueryTransformerOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/service/base.ts\n            \n            class\n            BaseEntityService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/service/read.ts\n            \n            class\n            EntityReadService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/lib/service/write.ts\n            \n            class\n            EntityWriteService\n            \n                21 %\n                (3/14)\n            \n        \n        \n            \n                \n                src/lib/view/base.view.ts\n            \n            class\n            BaseView\n            \n                0 %\n                (0/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @swc/helpers : ~0.5.15\n        \n            @puq/query : ^0.4.11\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            class-transformer : ^0.5.1\n        \n            typeorm : ^0.3.20\n        \n            @puq/property : ^0.4.11\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Column   (src/.../column.ts)\n                        \n                        \n                            createFindOperator   (src/.../create-find-operator.ts)\n                        \n                        \n                            CreateQueryCountDto   (src/.../create-query-count-dto.ts)\n                        \n                        \n                            CreateQueryManyDto   (src/.../create-query-many-dto.ts)\n                        \n                        \n                            CreateQueryOneDto   (src/.../create-query-one-dto.ts)\n                        \n                        \n                            CreateRelationParamDto   (src/.../create-relation-param-dto.ts)\n                        \n                        \n                            CreateUnsetRelationParamDto   (src/.../create-unset-relation-param-dto.ts)\n                        \n                        \n                            CreateWhereOptionDto   (src/.../create-where-option-dto.ts)\n                        \n                        \n                            Entity   (src/.../entity.ts)\n                        \n                        \n                            pickColumnType   (src/.../pick-column-type.ts)\n                        \n                        \n                            pickTransformer   (src/.../pick-transformer.ts)\n                        \n                        \n                            Relation   (src/.../relation.ts)\n                        \n                        \n                            SelectTransformer   (src/.../select-transformer.ts)\n                        \n                        \n                            ViewColumn   (src/.../view-column.ts)\n                        \n                        \n                            ViewEntity   (src/.../view-entity.ts)\n                        \n                        \n                            WhereQueryTransformer   (src/.../where-query-transformer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/decorator/column.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Column\n                        \n                    \n                \n            \n            \n                \nColumn(options: PropertyOptions)\n                \n            \n\n\n\n\n            \n                \n                        Typeorm Column decorator with validation and documentation capabilities.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        PropertyOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    property options PropertyOptions\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     PropertyDecorator\n\n                        \n                            \n                                property decorator {@link PropertyDecorator}\n\n                            \n                \n            \n        \n    \n    src/lib/query/create-find-operator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createFindOperator\n                        \n                    \n                \n            \n            \n                \ncreateFindOperator(query: WhereOption)\n                \n            \n\n\n\n\n            \n                \n                        Create FindOperator from WhereOption\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        WhereOption\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    WhereOption\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Record>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/query/create-query-count-dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CreateQueryCountDto\n                        \n                    \n                \n            \n            \n                \nCreateQueryCountDto(options: CreateQueryCountDtoOptions)\n                \n            \n\n\n\n\n            \n                \n                        Create a count query dto for the entity\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            CreateQueryCountDtoOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    CreateQueryCountDtoOptions\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Type\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/query/create-query-many-dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CreateQueryManyDto\n                        \n                    \n                \n            \n            \n                \nCreateQueryManyDto(options: QueryManyDtoOptions)\n                \n            \n\n\n\n\n            \n                \n                        Create QueryMany dto\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            QueryManyDtoOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    QueryManyDtoOptions\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Type>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/query/create-query-one-dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CreateQueryOneDto\n                        \n                    \n                \n            \n            \n                \nCreateQueryOneDto(options: QueryOneDtoOptions)\n                \n            \n\n\n\n\n            \n                \n                        Create QueryOne dto\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            QueryOneDtoOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    QueryOneDtoOptions\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Type>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/dto/create-relation-param-dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CreateRelationParamDto\n                        \n                    \n                \n            \n            \n                \nCreateRelationParamDto(relations: Keys)\n                \n            \n\n\n\n\n            \n                \n                        Create DTO for RelationParam\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                relations\n                                            \n                                                        Keys\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    relation names of the entity\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Type\n\n                        \n                            \n                                Class {@link Type}\n\n                            \n                \n            \n        \n    \n    src/lib/dto/create-unset-relation-param-dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CreateUnsetRelationParamDto\n                        \n                    \n                \n            \n            \n                \nCreateUnsetRelationParamDto(relations: Keys)\n                \n            \n\n\n\n\n            \n                \n                        Create DTO for UnsetRelationParam\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                relations\n                                            \n                                                        Keys\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    relation names of the entity\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Type\n\n                        \n                            \n                                Class {@link Type}\n\n                            \n                \n            \n        \n    \n    src/lib/query/create-where-option-dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CreateWhereOptionDto\n                        \n                    \n                \n            \n            \n                \nCreateWhereOptionDto(columns: Keys)\n                \n            \n\n\n\n\n            \n                \n                        Create WhereOption query dto for the entity\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                columns\n                                            \n                                                        Keys\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nKeys columns that allows query operations\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Type>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/decorator/entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Entity\n                        \n                    \n                \n            \n            \n                \nEntity(uniques?)\n                \n            \n\n\n\n\n            \n                \n                        Typeorm entity decorator with transformer capability\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                uniques\n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    Composite unique constraint must be set on entity classes and must specify entity's fields to be unique\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ClassDecorator\n\n                        \n                            \n                                \n{@link ClassDecorator}\n\n\n                            \n                \n            \n        \n    \n    src/lib/common/pick-column-type.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        pickColumnType\n                        \n                    \n                \n            \n            \n                \npickColumnType(options: PropertyOptions)\n                \n            \n\n\n\n\n            \n                \n                        Pick column type based on provided data type and database driver\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        PropertyOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ColumnType\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/common/pick-transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        pickTransformer\n                        \n                    \n                \n            \n            \n                \npickTransformer(options: PropertyOptions)\n                \n            \n\n\n\n\n            \n                \n                        Some databases do not support a certain data types such as sqlite does not support array type.\nThis function picks the transformer to make none-primitive data types compatible with the provided database driver\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        PropertyOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    property options PropertyOptions\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValueTransformer | undefined\n\n                        \n                            \n                                the {@link ValueTransformer}\n\n                            \n                \n            \n        \n    \n    src/lib/decorator/relation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Relation\n                        \n                    \n                \n            \n            \n                \nRelation(options: RelationOptions)\n                \n            \n\n\n\n\n            \n                \n                        Relation decorator\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            RelationOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    relation options RelationOptions\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     PropertyDecorator\n\n                        \n                            \n                                \n{@link PropertyDecorator}\n\n\n                            \n                \n            \n        \n    \n    src/lib/query/select-transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SelectTransformer\n                        \n                    \n                \n            \n            \n                \nSelectTransformer()\n                \n            \n\n\n\n\n            \n                \n                        Transform the select query param into string array\n\n\n                        \n                            Returns :     PropertyDecorator\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/decorator/view-column.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ViewColumn\n                        \n                    \n                \n            \n            \n                \nViewColumn(options: PropertyOptions)\n                \n            \n\n\n\n\n            \n                \n                        TypeORM ___ViewColumn decorator with documentation capability\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        PropertyOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    property options PropertyOptions\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     PropertyDecorator\n\n                        \n                            \n                                \n{@link PropertyDecorator}\n\n\n                            \n                \n            \n        \n    \n    src/lib/decorator/view-entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ViewEntity\n                        \n                    \n                \n            \n            \n                \nViewEntity(expression, selectBaseEntity)\n                \n            \n\n\n\n\n            \n                \n                        TypeORM ___ViewEntity decorator with prebuilt query builder that coverts id and timestamp columns.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expression\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    SelectQueryBuilder query builder\n\n                                            \n                                        \n                                        \n                                                selectBaseEntity\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                            \n                                                    defined whether the fields of BaseEntity class are added or not to the view\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ClassDecorator\n\n                        \n                            \n                                class decorator {@link ClassDecorator}\n\n                            \n                \n            \n        \n    \n    src/lib/query/where-query-transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        WhereQueryTransformer\n                        \n                    \n                \n            \n            \n                \nWhereQueryTransformer(columns: Keys)\n                \n            \n\n\n\n\n            \n                \n                        Parse where-query string into typeorm where object.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                columns\n                                            \n                                                        Keys\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     PropertyDecorator\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n@puq/orm\nSummary\nThe custom TypeORM decorators extend standard entity definitions by seamlessly integrating validation and API documentation within a single decorator. These decorators ensure that database entities are not only mapped efficiently but also validated at the DTO level while providing clear API documentation using Swagger.\nDatabase entity development is streamlined through the integration of intuitive and widely adopted implementations within decorators. These decorators are paired with class-validator, class-transformer, and @nestjs/swagger, enhancing efficiency in the development process. This approach achieves a minimum reduction of 60% in both code volume and associated errors.\nInstall\nExample :  pnpm add @puq/ormSQLite\n\nSQLite does not support array or object data types. To accommodate this limitation, data must be transformed into a string format.\n\nPostgres Datasource\nTo optimize datasource performance, implement the following configuration settings:\n\npoolSize: Set to 50. This defines the maximum number of connections allowed in the pool, ensuring efficient resource utilization while accommodating peak demand.\nmin: Set to 10. This specifies the minimum number of connections maintained in the pool, keeping a baseline of readily available connections to reduce latency during low-traffic periods.\nmax: Set to 50. This establishes the upper limit of open connections, balancing system performance with resource availability to prevent overloading.\nidleTimeoutMillis: Configure to 30,000 milliseconds. This determines the duration an idle connection remains open before being closed, minimizing unnecessary resource consumption during periods of inactivity.\nconnectionTimeoutMillis: Configure to 2,000 milliseconds. This sets the maximum time allowed to establish a connection, enhancing application responsiveness by preventing prolonged delays.\n\nPostgres Server\nAdjust the PostgreSQL server configuration file (postgres.conf) with the following settings:\n\nmax_connections: Set to 200 to accommodate both application and administrative connections, ensuring sufficient capacity.\nshared_buffers: Allocate 25-40% of the server's RAM for optimal performance, configured to 4GB.\nwork_mem: Define the memory allocation per query or sort operation, set to 16MB to enhance query efficiency.\n\nNumbers\n\nThe number data type is stored as a string (numeric) to ensure the preservation of precision.\nThe number value is not converted to a JavaScript number to avoid disrupting query operations.\n\nTypeorm Column Transformer\n\nRefrain from using TypeORM column transformers, as they may interfere with query operations. Instead, implement transformations within the data transfer layer.\n\nHashing and encrypion\n\nHashing should be done in database layer. Typeorom column transformer is safe to use\nEncryption is done in controller layer\nFor handling encrypted data, implement a dedicated data transfer object (DTO) class and apply it subsequent to the execution of the initial DTO class within the controller\n\nFunding\nThank you for using @puq/orm It's an open-source project, and maintaining it takes time and effort. If you find this library useful, please consider supporting its ongoing development. Your contributions help ensure that the project stays up-to-date, secure, and well-maintained.\nInstant Funding\nYour funding will go toward\n\nBug fixes and updates to ensure compatibility with the latest versions of dependencies.\nNew features that will make the library even more powerful.\nDocumentation improvements to help users get the most out of [Your Library Name].\nGeneral maintenance to keep the library running smoothly and securely.\n\nContact to the developer: [robert.brightline@gmail.com]\nSupport the developer\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    10 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    17 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.4.11\n        \n            Description : The custom TypeORM decorators extend standard entity definitions by seamlessly integrating validation and API documentation within a single decorator. These decorators ensure that database entities are not only mapped efficiently but also validated at the DTO level while providing clear API documentation using Swagger.\n        \n            Keywords : puq, orm\n        \n            Homepage : https://rbrightline.github.io/puq/orm\n        \n            Bugs : https://rbrightline.github.io\n        \n            License : MIT\n        \n            Repository : https://github.com/rbrightline/puq/tree/main\n        \n            Author : Robert Brightline\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CreateQueryCountDtoOptions   (src/.../create-query-count-dto.ts)\n                        \n                        \n                            QueryManyDtoOptions   (src/.../create-query-many-dto.ts)\n                        \n                        \n                            QueryOneDtoOptions   (src/.../create-query-one-dto.ts)\n                        \n                        \n                            WhereQueryTransformerOptions   (src/.../where-query-transformer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/query/create-query-count-dto.ts\n    \n    \n        \n            \n                \n                    \n                    CreateQueryCountDtoOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/lib/query/create-query-many-dto.ts\n    \n    \n        \n            \n                \n                    \n                    QueryManyDtoOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/lib/query/create-query-one-dto.ts\n    \n    \n        \n            \n                \n                    \n                    QueryOneDtoOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/lib/query/where-query-transformer.ts\n    \n    \n        \n            \n                \n                    \n                    WhereQueryTransformerOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BASE_ENTITY_COLUMNS   (src/.../base.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/entity/base.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BASE_ENTITY_COLUMNS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.keys(new BaseEntity())\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
