var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/entities/AttributeRelation.html",[0,0.205,1,0.924]],["body/entities/AttributeRelation.html",[0,0.334,1,1.357,2,0.623,3,0.247,4,0.217,5,0.189,6,2.269,7,1.329,8,0.161,9,0.45,10,1.543,11,1.357,12,0.33,13,0.029,14,1.311,15,0.45,16,2.303,17,2.917,18,0.315,19,2.669,20,2.669,21,0.491,22,0.548,23,0.548,24,0.378,25,1.441,26,0.904,27,0.904,28,1.59,29,0.904,30,1.02,31,0.724,32,0.513,33,0.368,34,1.237,35,1.237,36,1.061,37,3.397,38,1.259,39,1.237,40,1.71,41,1.237,42,1.311,43,0.724,44,0.837,45,0.776,46,1.433,47,1.543,48,0.976,49,1.441,50,0.904,51,0.533,52,1.051,53,1.692,54,1.71,55,1.692,56,1.572,57,1.543,58,1.132,59,1.311,60,1.692,61,1.543,62,0.904,63,0.904,64,0.904,65,0.016,66,0.016]],["title/entities/AttributeRelation-1.html",[0,0.173,1,0.779,67,1.429]],["body/entities/AttributeRelation-1.html",[0,0.34,1,1.392,2,0.658,3,0.261,4,0.23,5,0.199,8,0.17,9,0.468,10,1.591,11,1.392,12,0.33,13,0.029,14,1.319,15,0.468,18,0.328,21,0.502,22,0.57,23,0.57,24,0.399,25,1.472,26,0.954,27,0.954,28,1.605,29,0.954,30,1.039,31,0.765,32,0.522,33,0.374,34,1.276,35,1.276,36,1.084,38,1.292,39,1.276,40,1.735,41,1.276,42,1.364,43,0.765,44,0.871,45,0.796,46,1.478,47,1.591,48,1.015,49,1.472,50,0.941,51,0.563,52,1.093,53,1.736,54,1.735,55,1.736,56,1.613,57,1.591,58,1.177,59,1.364,60,1.736,61,1.591,62,0.954,63,0.954,64,0.954,65,0.017,66,0.017,68,1.404,69,2.395,70,2.819,71,2.819]],["title/classes/BaseEntity.html",[30,0.627,33,0.226]],["body/classes/BaseEntity.html",[0,0.344,2,1.122,3,0.337,4,0.297,5,0.258,8,0.22,9,0.558,12,0.317,13,0.029,15,0.664,18,0.465,21,0.529,23,0.809,24,0.516,30,0.99,32,0.445,33,0.242,36,1.142,45,0.566,52,1.734,65,0.02,66,0.02,72,0.728,73,2.681,74,0.989,75,4.806,76,3.101,77,4.994,78,4.994,79,4.994,80,3.535,81,3.757,82,2.205,83,5.376,84,1.935,85,3.645,86,3.645,87,3.645,88,3.645,89,3.645,90,3.645,91,3.064,92,3.064,93,3.645,94,1.329,95,4.806,96,4.806,97,4.806,98,1.432,99,2.681,100,3.645,101,3.064,102,2.681,103,3.064]],["title/classes/BaseEntityService.html",[33,0.226,104,2.238]],["body/classes/BaseEntityService.html",[3,0.434,4,0.382,5,0.331,12,0.303,13,0.028,18,0.382,21,0.521,30,0.863,31,1.272,32,0.434,33,0.311,65,0.024,66,0.024,72,0.937,98,1.842,104,3.701,105,4.734,106,3.94,107,4.687,108,4.687,109,5.468,110,4.687,111,2.787,112,2.543,113,1.988,114,4.687,115,4.687]],["title/classes/BaseIdEntity.html",[33,0.226,81,2.238]],["body/classes/BaseIdEntity.html",[3,0.42,4,0.369,5,0.32,8,0.273,9,0.641,12,0.299,13,0.029,15,0.526,18,0.369,21,0.551,23,0.781,24,0.642,32,0.42,33,0.301,44,0.98,45,0.856,65,0.023,66,0.023,72,0.906,76,3.228,81,3.627,82,2.532,84,1.535,91,3.811,94,1.653,98,1.781,116,4.639,117,3.811,118,5.95,119,4.533,120,5.519]],["title/classes/BaseView.html",[33,0.226,121,2.505]],["body/classes/BaseView.html",[0,0.306,3,0.367,4,0.323,5,0.28,8,0.239,9,0.59,12,0.323,13,0.029,15,0.686,18,0.481,21,0.367,32,0.367,33,0.263,44,1.098,45,0.788,52,1.798,65,0.022,66,0.022,72,0.793,74,1.077,76,3.311,77,4.708,78,4.708,79,4.708,80,3.736,99,3.736,121,3.736,122,3.336,123,4.269,124,5.078,125,4.269,126,5.905,127,3.968,128,3.968,129,3.968,130,3.968,131,4.49,132,3.968,133,3.968]],["title/classes/CommonQueryDto.html",[33,0.226,134,2.505]],["body/classes/CommonQueryDto.html",[3,0.4,4,0.352,5,0.305,8,0.26,9,0.622,12,0.269,13,0.028,15,0.502,18,0.352,21,0.4,22,0.862,23,0.759,24,0.612,32,0.4,33,0.287,46,1.915,51,1.071,54,1.566,56,1.685,65,0.023,66,0.023,72,0.863,74,1.581,84,1.463,113,2.273,134,3.942,135,4.504,136,2.794,137,3.178,138,4.504,139,5.824,140,5.358,141,5.358,142,5.358,143,3.942,144,5.358,145,4.32]],["title/classes/CountResultDto.html",[33,0.226,146,2.505]],["body/classes/CountResultDto.html",[3,0.404,4,0.355,5,0.309,8,0.263,9,0.626,12,0.294,13,0.029,15,0.507,18,0.355,21,0.499,22,0.764,23,0.764,24,0.618,32,0.404,33,0.29,44,1.166,45,0.948,51,1.078,65,0.023,66,0.023,72,0.872,74,1.588,82,2.475,84,1.478,94,1.592,136,2.475,146,3.967,147,4.533,148,2.869,149,3.734,150,3.967,151,4.919,152,5.393,153,3.212]],["title/classes/DeleteResultDto.html",[33,0.226,154,2.505]],["body/classes/DeleteResultDto.html",[3,0.4,4,0.352,5,0.305,8,0.26,9,0.622,12,0.292,13,0.029,15,0.502,18,0.352,21,0.496,22,0.862,23,0.759,24,0.612,32,0.4,33,0.287,44,1.159,45,0.945,51,1.071,65,0.023,66,0.023,72,0.863,74,1.581,82,2.459,84,1.463,94,1.575,148,2.839,150,3.942,153,3.178,154,3.942,155,4.504,156,5.119,157,5.824,158,4.605,159,3.942]],["title/classes/EntityQueryService.html",[33,0.226,160,2.238]],["body/classes/EntityQueryService.html",[0,0.273,2,1.059,3,0.309,4,0.272,5,0.236,8,0.201,12,0.311,13,0.029,18,0.45,21,0.534,30,0.616,31,0.907,32,0.309,33,0.222,36,0.906,38,1.143,45,0.799,65,0.019,66,0.019,72,0.668,74,1.231,76,2.461,94,1.219,98,1.313,99,2.459,104,3.384,111,3.283,112,2.995,113,2.342,136,2.842,149,3.061,151,2.81,160,2.981,161,4.851,162,2.81,163,4.536,164,3.813,165,3.337,166,4.327,167,2.697,168,3.813,169,3.813,170,3.813,171,4.641,172,3.343,173,3.793,174,3.813,175,3.813,176,4.641,177,3.343,178,3.813,179,5.003,180,3.343,181,3.813,182,3.343,183,4.536,184,2.81,185,3.343,186,4.061,187,3.343,188,2.459,189,1.988,190,3.343,191,3.343,192,2.81,193,3.343]],["title/classes/EntityService.html",[33,0.226,194,2.505]],["body/classes/EntityService.html",[0,0.326,2,0.796,3,0.208,4,0.183,5,0.159,8,0.135,12,0.315,13,0.029,18,0.493,21,0.457,25,1.511,30,0.414,31,0.61,32,0.208,33,0.149,36,0.681,38,0.566,45,0.916,65,0.014,66,0.014,67,2.289,72,0.449,74,0.925,76,3.02,92,3.864,94,0.82,98,0.883,101,3.864,111,3.602,112,3.286,113,2.569,136,2.267,149,2.027,156,2.866,158,3.382,160,3.551,164,2.866,165,2.508,166,5.143,167,2.027,168,2.866,169,2.866,170,1.89,171,2.866,173,3.981,174,5.091,175,1.89,176,2.866,178,1.89,179,3.462,181,1.89,186,4.193,192,3.864,194,2.508,195,1.89,196,3.409,197,3.409,198,3.409,199,3.409,200,3.409,201,3.409,202,3.409,203,3.409,204,2.866,205,3.409,206,4.885,207,2.248,208,3.409,209,2.248,210,3.409,211,2.248,212,3.409,213,5.403,214,2.248,215,3.409,216,2.248,217,3.409,218,2.248,219,3.409,220,2.248,221,3.409,222,3.864,223,2.248,224,3.409,225,4.597,226,2.248,227,2.248,228,2.248,229,2.248,230,2.248,231,2.248,232,2.248,233,1.89,234,2.248,235,2.248,236,2.248,237,2.248,238,2.248,239,2.248,240,4.119,241,4.153,242,4.597,243,4.597,244,4.597,245,4.597,246,2.248,247,2.248,248,2.248,249,2.248]],["title/classes/HttpErrorDto.html",[33,0.226,250,1.847]],["body/classes/HttpErrorDto.html",[3,0.39,4,0.343,5,0.298,8,0.254,9,0.612,12,0.303,13,0.029,14,1.206,15,0.612,18,0.429,21,0.39,22,0.747,23,0.815,24,0.596,32,0.39,33,0.279,44,1.14,45,0.818,65,0.022,66,0.022,72,0.841,74,1.143,84,1.785,138,4.432,250,2.861,251,4.839,252,2.504,253,3.966,254,5.273,255,6.213,256,5.757,257,4.21,258,3.539,259,5.273,260,4.432]],["title/entities/ManyRelation.html",[0,0.205,39,0.924]],["body/entities/ManyRelation.html",[0,0.336,1,1.253,2,0.638,3,0.253,4,0.222,5,0.193,6,1.96,7,1.36,8,0.165,9,0.457,10,0.924,11,1.069,12,0.329,13,0.029,14,1.306,15,0.317,16,1.624,17,2.907,18,0.222,21,0.496,22,0.557,23,0.557,24,0.387,25,1.454,26,0.924,27,0.924,28,1.596,29,0.924,30,1.028,31,0.741,32,0.517,33,0.37,34,1.253,35,1.253,36,1.07,37,3.411,38,1.273,39,1.372,40,1.779,41,1.253,42,1.333,43,0.741,44,0.851,45,0.784,46,1.452,47,1.563,48,0.992,49,1.454,50,0.92,51,0.546,52,1.069,53,1.711,54,1.721,55,1.711,56,1.589,57,1.563,58,1.15,59,1.333,60,1.711,61,1.563,62,0.924,63,0.924,64,0.924,65,0.017,66,0.017,261,2.73]],["title/entities/ManyRelation-1.html",[0,0.173,39,0.779,67,1.429]],["body/entities/ManyRelation-1.html",[0,0.342,1,1.289,2,0.671,3,0.266,4,0.234,5,0.203,8,0.173,9,0.474,10,0.973,11,1.108,12,0.33,13,0.029,14,1.314,15,0.334,18,0.234,21,0.506,22,0.578,23,0.578,24,0.407,25,1.483,26,0.973,27,0.973,28,1.609,29,0.973,30,1.046,31,0.78,32,0.525,33,0.377,34,1.289,35,1.289,36,1.092,38,1.303,39,1.404,40,1.799,41,1.289,42,1.382,43,0.78,44,0.883,45,0.802,46,1.494,47,1.608,48,1.028,49,1.483,50,0.954,51,0.574,52,1.108,53,1.751,54,1.744,55,1.751,56,1.627,57,1.608,58,1.193,59,1.382,60,1.751,61,1.608,62,0.973,63,0.973,64,0.973,65,0.017,66,0.017,68,1.43,69,1.708,262,2.873]],["title/entities/OneRelation.html",[0,0.205,35,0.924]],["body/entities/OneRelation.html",[0,0.336,1,1.253,2,0.638,3,0.253,4,0.222,5,0.193,6,1.96,7,1.36,8,0.165,9,0.457,10,0.924,11,1.069,12,0.329,13,0.029,14,1.306,15,0.317,16,1.624,17,2.907,18,0.222,21,0.496,22,0.557,23,0.557,24,0.387,25,1.454,26,0.924,27,0.924,28,1.596,29,0.924,30,1.028,31,0.741,32,0.517,33,0.37,34,1.253,35,1.372,36,1.07,37,3.411,38,1.406,39,1.253,40,1.721,41,1.253,42,1.333,43,0.741,44,0.851,45,0.784,46,1.452,47,1.563,48,0.992,49,1.454,50,0.92,51,0.546,52,1.069,53,1.711,54,1.721,55,1.711,56,1.589,57,1.563,58,1.15,59,1.333,60,1.711,61,1.563,62,0.924,63,0.924,64,0.924,65,0.017,66,0.017,263,2.73]],["title/entities/OneRelation-1.html",[0,0.173,35,0.779,67,1.429]],["body/entities/OneRelation-1.html",[0,0.342,1,1.289,2,0.671,3,0.266,4,0.234,5,0.203,8,0.173,9,0.474,10,0.973,11,1.108,12,0.33,13,0.029,14,1.314,15,0.334,18,0.234,21,0.506,22,0.578,23,0.578,24,0.407,25,1.483,26,0.973,27,0.973,28,1.609,29,0.973,30,1.046,31,0.78,32,0.525,33,0.377,34,1.289,35,1.404,36,1.092,38,1.43,39,1.289,40,1.744,41,1.289,42,1.382,43,0.78,44,0.883,45,0.802,46,1.494,47,1.608,48,1.028,49,1.483,50,0.954,51,0.574,52,1.108,53,1.751,54,1.744,55,1.751,56,1.627,57,1.608,58,1.193,59,1.382,60,1.751,61,1.608,62,0.973,63,0.973,64,0.973,65,0.017,66,0.017,68,1.43,69,1.708,264,2.873]],["title/entities/OwnerRelation.html",[0,0.205,41,0.924]],["body/entities/OwnerRelation.html",[0,0.336,1,1.253,2,0.638,3,0.253,4,0.222,5,0.193,6,1.96,7,1.36,8,0.165,9,0.457,10,0.924,11,1.069,12,0.329,13,0.029,14,1.306,15,0.317,16,1.624,17,2.907,18,0.222,21,0.496,22,0.557,23,0.557,24,0.387,25,1.454,26,0.924,27,0.924,28,1.596,29,0.924,30,1.028,31,0.741,32,0.517,33,0.37,34,1.253,35,1.253,36,1.07,37,3.411,38,1.273,39,1.253,40,1.721,41,1.372,42,1.711,43,0.741,44,0.851,45,0.784,46,1.452,47,1.563,48,0.992,49,1.454,50,0.92,51,0.546,52,1.069,53,1.711,54,1.721,55,1.711,56,1.589,57,1.563,58,1.15,59,1.333,60,1.711,61,1.563,62,0.924,63,0.924,64,0.924,65,0.017,66,0.017,265,2.73]],["title/entities/OwnerRelation-1.html",[0,0.173,41,0.779,67,1.429]],["body/entities/OwnerRelation-1.html",[0,0.342,1,1.289,2,0.671,3,0.266,4,0.234,5,0.203,8,0.173,9,0.474,10,0.973,11,1.108,12,0.33,13,0.029,14,1.314,15,0.334,18,0.234,21,0.506,22,0.578,23,0.578,24,0.407,25,1.483,26,0.973,27,0.973,28,1.609,29,0.973,30,1.046,31,0.78,32,0.525,33,0.377,34,1.289,35,1.289,36,1.092,38,1.303,39,1.289,40,1.744,41,1.404,42,1.751,43,0.78,44,0.883,45,0.802,46,1.494,47,1.608,48,1.028,49,1.483,50,0.954,51,0.574,52,1.108,53,1.751,54,1.744,55,1.751,56,1.627,57,1.608,58,1.193,59,1.382,60,1.751,61,1.608,62,0.973,63,0.973,64,0.973,65,0.017,66,0.017,68,1.43,69,1.708,266,2.873]],["title/classes/SingleValidationErrorDto.html",[33,0.226,267,2.024]],["body/classes/SingleValidationErrorDto.html",[3,0.275,4,0.242,5,0.21,8,0.179,9,0.486,12,0.33,13,0.029,14,1.343,15,0.486,18,0.341,21,0.448,22,0.853,23,0.937,24,0.421,32,0.448,33,0.321,36,0.595,48,1.22,49,1.314,50,0.695,51,0.595,65,0.018,66,0.018,72,0.595,74,0.808,82,2.411,84,1.417,94,1.085,113,2.228,189,2.489,250,2.271,252,1.77,253,3.958,267,3.292,268,3.182,269,2.271,270,3.003,271,3.562,272,4.224,273,3.507,274,2.976,275,2.976,276,3.079,277,3.079,278,3.079,279,2.189,280,2.189,281,1.956,282,1.956,283,2.189,284,2.189,285,2.189,286,2.189,287,2.189,288,2.189,289,2.189,290,2.189,291,2.189,292,2.189,293,1.77,294,2.189,295,2.751]],["title/classes/TableNamingStrategy.html",[33,0.226,296,2.505]],["body/classes/TableNamingStrategy.html",[3,0.335,4,0.295,5,0.256,8,0.218,12,0.286,13,0.029,14,1.353,18,0.464,21,0.335,28,1.205,32,0.335,33,0.24,36,0.956,65,0.02,66,0.02,72,0.723,74,0.983,98,1.423,111,3.39,112,3.093,113,2.418,165,3.52,173,3.747,186,4.194,241,4.022,296,3.52,297,4.984,298,3.044,299,3.145,300,4.022,301,4.785,302,4.785,303,5.359,304,4.785,305,4.785,306,4.785,307,5.359,308,4.785,309,3.621,310,4.785,311,3.621,312,5.701,313,4.785,314,3.621,315,3.621,316,5.359,317,3.621,318,4.785,319,5.701,320,3.621]],["title/entities/TestEntity.html",[0,0.205,43,0.924]],["body/entities/TestEntity.html",[0,0.302,1,1.284,2,0.477,3,0.189,4,0.166,5,0.144,6,2.953,7,1.016,8,0.123,9,0.368,10,0.691,11,0.859,12,0.333,13,0.029,14,1.278,15,0.68,16,3.208,17,2.897,18,0.477,21,0.438,22,0.448,23,0.448,24,0.289,25,1.284,26,0.691,27,0.691,28,1.511,29,0.691,30,0.922,31,0.554,32,0.463,33,0.332,34,1.284,35,1.284,36,0.945,37,3.218,38,1.359,39,1.284,40,1.787,41,1.284,42,1.479,43,0.859,44,1.023,45,0.86,46,1.642,47,1.694,48,1.191,49,1.537,50,1.105,51,0.632,52,1.284,53,1.827,54,1.787,55,1.827,56,1.697,57,1.694,58,1.277,59,1.479,60,1.827,61,1.694,62,1.071,63,0.691,64,1.313,65,0.013,66,0.013,321,2.08,322,2.04,323,3.673,324,2.04,325,2.04,326,2.04,327,2.04,328,2.04,329,2.04,330,2.04,331,2.04,332,2.04,333,2.04,334,2.04]],["title/entities/TestEntity-1.html",[0,0.173,43,0.779,67,1.429]],["body/entities/TestEntity-1.html",[0,0.31,1,1.325,2,0.511,3,0.203,4,0.178,5,0.155,8,0.132,9,0.388,10,0.741,11,0.907,12,0.33,13,0.029,14,1.29,15,0.691,18,0.485,21,0.452,22,0.473,23,0.473,24,0.31,25,1.325,26,0.741,27,0.741,28,1.533,29,0.741,30,0.948,31,0.594,32,0.476,33,0.342,34,1.325,35,1.325,36,0.976,38,1.39,39,1.325,40,1.81,41,1.325,42,1.535,43,0.907,44,1.056,45,0.878,46,1.684,47,1.742,48,1.23,49,1.566,50,1.14,51,0.668,52,1.325,53,1.868,54,1.81,55,1.868,56,1.736,57,1.742,58,1.325,59,1.535,60,1.868,61,1.742,62,1.131,63,0.741,64,1.372,65,0.014,66,0.014,68,1.09,69,3.282,321,2.196,323,3.811,335,2.189,336,2.189,337,2.189,338,2.189,339,2.189,340,2.189,341,2.189,342,2.189,343,2.189,344,2.189,345,2.189,346,2.189]],["title/classes/TestObject.html",[33,0.226,34,0.924]],["body/classes/TestObject.html",[0,0.337,1,1.255,3,0.254,4,0.223,5,0.194,6,1.965,7,1.364,8,0.165,9,0.458,10,0.927,11,1.374,12,0.328,13,0.029,14,1.306,15,0.318,17,2.886,18,0.223,21,0.496,22,0.559,23,0.559,24,0.388,25,1.456,26,0.927,27,0.927,28,1.597,29,0.927,30,1.029,31,0.744,32,0.517,33,0.371,34,1.374,35,1.255,36,1.072,37,3.413,38,1.275,39,1.255,40,1.722,41,1.255,42,1.336,43,0.744,44,0.853,45,0.785,46,1.455,47,1.566,48,0.994,49,1.456,50,0.922,51,0.547,52,1.071,53,1.713,54,1.722,55,1.713,56,1.592,57,1.566,58,1.153,59,1.336,60,1.713,61,1.566,62,0.927,63,0.927,64,0.927,65,0.017,66,0.017,72,0.547,84,0.927,347,2.74]],["title/classes/TestObject-1.html",[33,0.191,34,0.779,67,1.429]],["body/classes/TestObject-1.html",[0,0.342,1,1.289,3,0.266,4,0.234,5,0.203,8,0.173,9,0.474,10,0.973,11,1.404,12,0.33,13,0.029,14,1.314,15,0.334,18,0.234,21,0.506,22,0.578,23,0.578,24,0.407,25,1.483,26,0.973,27,0.973,28,1.609,29,0.973,30,1.046,31,0.78,32,0.525,33,0.377,34,1.404,35,1.289,36,1.092,38,1.303,39,1.289,40,1.744,41,1.289,42,1.382,43,0.78,44,0.883,45,0.802,46,1.494,47,1.608,48,1.028,49,1.483,50,0.954,51,0.574,52,1.108,53,1.751,54,1.744,55,1.751,56,1.627,57,1.608,58,1.193,59,1.382,60,1.751,61,1.608,62,0.973,63,0.973,64,0.973,65,0.017,66,0.017,68,1.43,72,0.574,84,0.973,348,2.873]],["title/classes/UpdateResultDto.html",[33,0.226,349,2.505]],["body/classes/UpdateResultDto.html",[3,0.402,4,0.354,5,0.307,8,0.262,9,0.624,12,0.293,13,0.029,15,0.504,18,0.354,21,0.498,22,0.761,23,0.761,24,0.615,32,0.402,33,0.288,44,1.162,45,0.947,51,1.074,65,0.023,66,0.023,72,0.868,74,1.585,82,2.466,84,1.47,94,1.583,148,2.854,150,3.954,153,3.195,158,4.612,159,3.954,204,5.128,233,4.908,349,3.954,350,4.519]],["title/classes/ValidationConstraintsDto.html",[33,0.226,273,2.024]],["body/classes/ValidationConstraintsDto.html",[3,0.223,4,0.196,5,0.17,8,0.145,9,0.417,12,0.332,13,0.029,14,1.357,15,0.706,18,0.495,21,0.398,22,0.805,23,0.902,24,0.342,32,0.398,33,0.285,36,0.482,48,0.906,49,0.976,50,0.563,51,0.482,65,0.015,66,0.015,72,0.482,74,0.655,82,2.185,84,2.058,94,0.879,113,2.769,189,2.138,250,1.95,252,1.434,253,3.51,258,2.028,267,2.832,268,4.038,269,1.309,270,2.763,271,2.644,272,3.503,273,3.028,276,1.774,277,3.161,278,2.644,279,1.774,280,1.774,281,2.824,282,2.824,283,3.161,284,3.161,285,3.161,286,3.161,287,3.161,288,3.161,289,3.161,290,3.161,291,3.161,292,3.161,293,1.434,294,1.774,295,2.363,351,2.412,352,2.412,353,2.412,354,2.412,355,2.412,356,2.412,357,2.412,358,2.412,359,2.412,360,2.412,361,2.412]],["title/classes/ValidationErrorDto.html",[33,0.226,293,2.024]],["body/classes/ValidationErrorDto.html",[3,0.285,4,0.251,5,0.218,8,0.186,9,0.498,12,0.33,13,0.029,14,1.343,15,0.358,18,0.251,21,0.457,22,0.86,23,0.932,24,0.436,32,0.457,33,0.327,36,0.616,48,1.08,49,1.164,50,1.002,51,0.857,65,0.018,66,0.018,72,0.616,74,0.836,82,2.447,84,1.043,94,1.123,113,1.819,189,2.55,250,2.327,252,1.832,253,3.816,267,3.452,268,2.819,269,1.672,270,3.15,271,3.155,272,3.629,273,3.172,276,2.267,277,3.155,278,3.629,279,2.267,280,2.267,281,2.025,282,2.025,283,2.267,284,2.267,285,2.267,286,2.267,287,2.267,288,2.267,289,2.267,290,2.267,291,2.267,292,2.267,293,2.55,294,3.155,295,3.685,321,2.025,362,3.081]],["title/coverage.html",[363,3.86]],["body/coverage.html",[0,0.367,1,1.027,5,0.183,6,2.726,7,2.726,12,0.19,13,0.029,25,1.215,28,0.953,30,0.476,33,0.425,34,1.027,35,1.027,38,0.651,39,1.027,40,0.756,41,1.027,43,1.027,65,0.016,66,0.016,68,2.726,73,2.784,81,1.699,102,1.902,104,1.699,105,2.173,106,2.173,116,2.173,117,2.173,121,1.902,122,2.173,131,1.902,134,1.902,135,2.173,136,2.512,137,4.161,146,1.902,147,2.173,148,2.941,149,1.537,154,1.902,155,2.173,160,1.699,161,2.173,162,2.173,167,1.537,188,2.784,194,1.902,195,2.173,250,1.403,251,2.173,252,2.929,267,1.537,268,2.941,273,1.537,293,1.537,296,1.902,297,2.173,298,2.173,300,2.173,349,1.902,350,2.173,363,2.173,364,1.699,365,2.585,366,2.585,367,3.181,368,2.173,369,5.35,370,2.173,371,6.464,372,6.365,373,3.762,374,2.173,375,2.173,376,2.173,377,2.173,378,3.181,379,2.173,380,2.173,381,2.173,382,4.14,383,4.925,384,3.181,385,2.173,386,2.173,387,2.173,388,3.784,389,2.585,390,2.585,391,2.585,392,6.365,393,4.925,394,4.475,395,4.475,396,2.585,397,6.165,398,4.028,399,2.173,400,2.173,401,2.173,402,2.173,403,2.173,404,2.173,405,2.585,406,1.902,407,2.173,408,2.173,409,2.173,410,2.173,411,2.173,412,2.173,413,2.173,414,2.585,415,2.585,416,2.585,417,2.173,418,2.585]],["title/dependencies.html",[419,2.413,420,3.001]],["body/dependencies.html",[13,0.029,24,0.673,33,0.316,65,0.024,66,0.024,94,1.733,98,1.868,184,3.997,420,4.178,421,4.754,422,4.754,423,4.754,424,6.292,425,4.754,426,4.754,427,4.754,428,4.754,429,3.498,430,4.754,431,4.754,432,4.754,433,4.754,434,4.754,435,4.754,436,4.754]],["title/miscellaneous/functions.html",[437,1.557,438,3.43]],["body/miscellaneous/functions.html",[0,0.316,2,0.481,8,0.124,11,0.559,12,0.322,13,0.028,14,0.411,17,0.944,18,0.168,22,0.787,23,0.622,25,1.54,28,1.265,30,0.379,33,0.291,38,0.803,40,1.139,50,0.744,54,0.601,58,0.601,65,0.014,66,0.014,72,0.411,74,1.613,76,1.117,80,1.514,98,1.973,111,3.61,112,3.293,113,2.575,123,1.73,125,1.73,131,2.344,136,2.886,137,4.315,143,1.514,149,2.318,167,2.61,173,4.025,188,3.493,189,3.218,206,1.73,222,1.73,269,1.117,270,1.117,299,2.094,321,1.353,364,2.094,367,2.679,368,2.679,369,1.73,370,2.679,373,4.221,374,2.679,375,1.73,376,1.73,377,1.73,378,2.679,379,2.679,380,2.679,381,2.679,384,2.679,385,2.679,386,2.679,387,2.679,398,3.493,399,2.679,400,2.679,401,2.679,402,2.679,403,2.679,406,4.422,407,3.69,408,2.679,409,1.73,410,3.277,411,1.73,412,2.679,429,2.868,437,1.117,438,1.73,439,2.058,440,4.402,441,2.058,442,3.186,443,2.058,444,2.058,445,3.186,446,2.058,447,2.058,448,5.778,449,3.853,450,2.058,451,6.01,452,5.411,453,2.058,454,4.389,455,5.237,456,3.186,457,2.058,458,2.058,459,2.058,460,2.058,461,2.058,462,4.389,463,3.186,464,3.186,465,2.058,466,2.058,467,2.058,468,3.186,469,2.058,470,2.058,471,2.058,472,3.186,473,2.058,474,2.058,475,2.058,476,3.186,477,4.389,478,2.058,479,2.058,480,2.058,481,3.186,482,3.277,483,3.186,484,2.058,485,2.058,486,2.058,487,2.679,488,2.058,489,2.679,490,2.058,491,2.058,492,1.73,493,2.058,494,2.058,495,2.058,496,3.186,497,2.058,498,3.899,499,2.058,500,2.058,501,2.058,502,2.058,503,2.058,504,3.186,505,2.058,506,2.058,507,3.186,508,2.058,509,2.058,510,2.058,511,2.058,512,2.058,513,2.058]],["title/index.html",[8,0.173,514,2.87,515,2.87]],["body/index.html",[0,0.22,2,0.574,4,0.2,5,0.174,11,0.667,12,0.123,13,0.018,14,0.729,15,0.558,17,1.128,22,0.615,28,1.095,33,0.319,45,0.797,48,0.919,50,0.574,52,0.667,58,1.5,65,0.015,66,0.015,98,1.708,112,1.334,136,2.206,159,1.809,167,1.462,260,2.067,269,1.334,270,1.334,281,1.616,282,1.616,295,1.616,299,2.856,364,2.856,382,3.065,413,2.067,417,2.067,420,1.809,429,3.197,449,1.809,482,4.521,487,3.065,489,2.067,492,2.067,516,3.646,517,2.459,518,2.067,519,2.067,520,2.067,521,2.067,522,2.067,523,2.067,524,3.065,525,4.041,526,4.041,527,2.067,528,2.067,529,2.067,530,2.067,531,2.067,532,2.067,533,3.653,534,2.067,535,4.346,536,2.459,537,2.459,538,2.459,539,2.459,540,2.459,541,2.459,542,2.459,543,2.459,544,2.459,545,2.459,546,3.646,547,3.646,548,2.459,549,2.459,550,2.459,551,3.646,552,2.459,553,3.646,554,2.459,555,2.459,556,2.459,557,2.459,558,2.459,559,2.459,560,2.459,561,3.646,562,2.459,563,2.459,564,2.459,565,3.646,566,3.646,567,2.459,568,4.346,569,4.346,570,3.646,571,3.646,572,3.646,573,2.459,574,2.459,575,3.646,576,5.134,577,3.646,578,3.646,579,3.646,580,2.459,581,4.346,582,2.459,583,2.459,584,2.459,585,2.459,586,2.067,587,2.459,588,3.646,589,2.459,590,2.459,591,2.459,592,2.459,593,2.459,594,2.459,595,3.646,596,2.459,597,2.459,598,3.646,599,2.459,600,2.459,601,2.459,602,4.346,603,2.459,604,2.459,605,2.459,606,2.459,607,2.459,608,2.459,609,3.646,610,2.459,611,3.646,612,2.459,613,2.459,614,2.459,615,3.646,616,2.459,617,2.459,618,2.459,619,2.459,620,2.459,621,2.459,622,2.459,623,2.459,624,2.459,625,2.459,626,2.459,627,3.646,628,2.459,629,3.646,630,2.459,631,2.459,632,2.459,633,2.459,634,3.646,635,2.459,636,2.459,637,2.459,638,2.459,639,2.459,640,2.459,641,2.459,642,2.459,643,2.459,644,2.459,645,2.459,646,2.459,647,2.459,648,2.459,649,2.459,650,2.459,651,2.459,652,2.459,653,2.459,654,2.459,655,2.459,656,2.459,657,2.459,658,2.459,659,2.459,660,2.459,661,2.459,662,2.459,663,2.459,664,2.459,665,2.459,666,2.459,667,2.459,668,2.459,669,3.646,670,2.459,671,2.459,672,2.459,673,2.459,674,2.459,675,3.646,676,4.346,677,3.646,678,2.459,679,3.646,680,2.459,681,2.459,682,2.459,683,2.459,684,3.646,685,2.459,686,2.459,687,2.459,688,2.459,689,2.459,690,2.459,691,2.459,692,4.346,693,2.459,694,2.459,695,3.646,696,2.459,697,2.459,698,2.459,699,4.807,700,2.459,701,2.459,702,2.459,703,2.459,704,2.459,705,2.459,706,3.646,707,2.459,708,2.459,709,2.459,710,2.459,711,2.459,712,2.459,713,2.459,714,2.459,715,2.459,716,2.459,717,2.459,718,2.459,719,2.459,720,2.459,721,2.459,722,2.459,723,2.459,724,2.459,725,2.459,726,2.459,727,2.459,728,2.459,729,2.459,730,2.459,731,2.459,732,2.459,733,2.459,734,3.646,735,2.459]],["title/modules.html",[736,3.86]],["body/modules.html",[13,0.026,65,0.026,66,0.026,736,4.458]],["title/overview.html",[737,3.86]],["body/overview.html",[2,1.223,13,0.026,65,0.026,66,0.026,72,1.046,586,4.401,737,4.401,738,5.236]],["title/properties.html",[9,0.474,419,2.413]],["body/properties.html",[0,0.272,2,1.053,9,0.524,13,0.028,15,0.639,22,0.638,65,0.023,66,0.023,74,1.224,98,1.771,109,3.79,269,2.446,270,2.446,299,2.963,364,3.615,449,3.317,518,3.79,519,3.79,520,3.79,521,3.79,522,3.79,523,3.79,524,4.624,525,3.79,526,3.79,527,3.79,528,3.79,529,3.79,530,3.79,531,3.79,532,3.79,533,3.79,534,3.79,739,4.508,740,4.508,741,4.508,742,4.508,743,4.508,744,4.508,745,4.508,746,4.508,747,4.508,748,4.508,749,4.508,750,4.508,751,4.508,752,4.508,753,4.508]],["title/miscellaneous/typealiases.html",[437,1.557,754,4.08]],["body/miscellaneous/typealiases.html",[8,0.307,12,0.297,13,0.025,65,0.025,66,0.025,136,2.713,398,3.745,404,4.971,406,4.35,437,2.762,440,4.28,755,5.091,756,5.091]],["title/miscellaneous/variables.html",[437,1.557,757,3.43]],["body/miscellaneous/variables.html",[8,0.309,11,1.39,13,0.027,30,0.944,65,0.025,66,0.025,73,3.768,102,4.366,103,4.306,143,3.768,437,2.779,757,4.306,758,5.122]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":392,"title":{},"body":{"coverage.html":{}}}],["0.3.20",{"_index":433,"title":{},"body":{"dependencies.html":{}}}],["0.4.50",{"_index":424,"title":{},"body":{"dependencies.html":{}}}],["0.4.60",{"_index":436,"title":{},"body":{"dependencies.html":{}}}],["0.5.0",{"_index":740,"title":{},"body":{"properties.html":{}}}],["0.5.1",{"_index":430,"title":{},"body":{"dependencies.html":{}}}],["0.5.15",{"_index":422,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":397,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":393,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":67,"title":{"entities/AttributeRelation-1.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity-1.html":{},"classes/TestObject-1.html":{}},"body":{"classes/EntityService.html":{}}}],["1/1",{"_index":372,"title":{},"body":{"coverage.html":{}}}],["1/13",{"_index":390,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":383,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":395,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":586,"title":{},"body":{"index.html":{},"overview.html":{}}}],["100",{"_index":371,"title":{},"body":{"coverage.html":{}}}],["11.0.0",{"_index":432,"title":{},"body":{"dependencies.html":{}}}],["11.0.11",{"_index":426,"title":{},"body":{"dependencies.html":{}}}],["16mb",{"_index":658,"title":{},"body":{"index.html":{}}}],["17",{"_index":738,"title":{},"body":{"overview.html":{}}}],["2,000",{"_index":625,"title":{},"body":{"index.html":{}}}],["2/2",{"_index":391,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":394,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":639,"title":{},"body":{"index.html":{}}}],["21",{"_index":415,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":645,"title":{},"body":{"index.html":{}}}],["3/14",{"_index":416,"title":{},"body":{"coverage.html":{}}}],["3/3",{"_index":388,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":414,"title":{},"body":{"coverage.html":{}}}],["30,000",{"_index":610,"title":{},"body":{"index.html":{}}}],["4.0.0",{"_index":428,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":646,"title":{},"body":{"index.html":{}}}],["4gb",{"_index":651,"title":{},"body":{"index.html":{}}}],["50",{"_index":382,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["60",{"_index":413,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["7",{"_index":389,"title":{},"body":{"coverage.html":{}}}],["___viewcolumn",{"_index":502,"title":{},"body":{"miscellaneous/functions.html":{}}}],["___viewentity",{"_index":505,"title":{},"body":{"miscellaneous/functions.html":{}}}],["_tablename",{"_index":312,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["acceptstring",{"_index":144,"title":{},"body":{"classes/CommonQueryDto.html":{}}}],["accommodate",{"_index":561,"title":{},"body":{"index.html":{}}}],["accommodating",{"_index":583,"title":{},"body":{"index.html":{}}}],["achieves",{"_index":550,"title":{},"body":{"index.html":{}}}],["add",{"_index":559,"title":{},"body":{"index.html":{}}}],["add(relationid",{"_index":246,"title":{},"body":{"classes/EntityService.html":{}}}],["added",{"_index":512,"title":{},"body":{"miscellaneous/functions.html":{}}}],["addrelation",{"_index":197,"title":{},"body":{"classes/EntityService.html":{}}}],["addrelation(relation",{"_index":205,"title":{},"body":{"classes/EntityService.html":{}}}],["adjust",{"_index":635,"title":{},"body":{"index.html":{}}}],["administrative",{"_index":640,"title":{},"body":{"index.html":{}}}],["adopted",{"_index":541,"title":{},"body":{"index.html":{}}}],["affected",{"_index":158,"title":{},"body":{"classes/DeleteResultDto.html":{},"classes/EntityService.html":{},"classes/UpdateResultDto.html":{}}}],["alias",{"_index":405,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":755,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allocate",{"_index":644,"title":{},"body":{"index.html":{}}}],["allocation",{"_index":655,"title":{},"body":{"index.html":{}}}],["allowed",{"_index":577,"title":{},"body":{"index.html":{}}}],["api",{"_index":524,"title":{},"body":{"index.html":{},"properties.html":{}}}],["application",{"_index":629,"title":{},"body":{"index.html":{}}}],["apply",{"_index":688,"title":{},"body":{"index.html":{}}}],["approach",{"_index":549,"title":{},"body":{"index.html":{}}}],["array",{"_index":50,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["arraymaxsize",{"_index":292,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["arrayminsize",{"_index":291,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["associated",{"_index":555,"title":{},"body":{"index.html":{}}}],["async",{"_index":166,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{}}}],["attributerelation",{"_index":1,"title":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{}}}],["attributes",{"_index":64,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["author",{"_index":751,"title":{},"body":{"properties.html":{}}}],["availability",{"_index":605,"title":{},"body":{"index.html":{}}}],["available",{"_index":592,"title":{},"body":{"index.html":{}}}],["avoid",{"_index":667,"title":{},"body":{"index.html":{}}}],["await",{"_index":192,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{}}}],["balancing",{"_index":603,"title":{},"body":{"index.html":{}}}],["base",{"_index":99,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseView.html":{},"classes/EntityQueryService.html":{}}}],["base_entity_columns",{"_index":102,"title":{},"body":{"classes/BaseEntity.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["based",{"_index":480,"title":{},"body":{"miscellaneous/functions.html":{}}}],["baseentity",{"_index":30,"title":{"classes/BaseEntity.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["baseentityservice",{"_index":104,"title":{"classes/BaseEntityService.html":{}},"body":{"classes/BaseEntityService.html":{},"classes/EntityQueryService.html":{},"coverage.html":{}}}],["baseidentity",{"_index":81,"title":{"classes/BaseIdEntity.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"coverage.html":{}}}],["baseidentity:8",{"_index":93,"title":{},"body":{"classes/BaseEntity.html":{}}}],["baseline",{"_index":590,"title":{},"body":{"index.html":{}}}],["basemodel",{"_index":83,"title":{},"body":{"classes/BaseEntity.html":{}}}],["baseview",{"_index":121,"title":{"classes/BaseView.html":{}},"body":{"classes/BaseView.html":{},"coverage.html":{}}}],["before",{"_index":617,"title":{},"body":{"index.html":{}}}],["being",{"_index":618,"title":{},"body":{"index.html":{}}}],["bigint",{"_index":47,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["boolean",{"_index":46,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/CommonQueryDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["both",{"_index":553,"title":{},"body":{"index.html":{}}}],["brightline",{"_index":753,"title":{},"body":{"properties.html":{}}}],["bug",{"_index":714,"title":{},"body":{"index.html":{}}}],["bugs",{"_index":746,"title":{},"body":{"properties.html":{}}}],["builder",{"_index":507,"title":{},"body":{"miscellaneous/functions.html":{}}}],["builder/querypartialentity.js",{"_index":232,"title":{},"body":{"classes/EntityService.html":{}}}],["capabilities",{"_index":450,"title":{},"body":{"miscellaneous/functions.html":{}}}],["capability",{"_index":468,"title":{},"body":{"miscellaneous/functions.html":{}}}],["capacity",{"_index":642,"title":{},"body":{"index.html":{}}}],["cascade",{"_index":61,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["certain",{"_index":488,"title":{},"body":{"miscellaneous/functions.html":{}}}],["class",{"_index":33,"title":{"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/HttpErrorDto.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["classdecorator",{"_index":477,"title":{},"body":{"miscellaneous/functions.html":{}}}],["classes",{"_index":72,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/HttpErrorDto.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["clear",{"_index":532,"title":{},"body":{"index.html":{},"properties.html":{}}}],["closed",{"_index":619,"title":{},"body":{"index.html":{}}}],["code",{"_index":260,"title":{},"body":{"classes/HttpErrorDto.html":{},"index.html":{}}}],["column",{"_index":28,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["column(options",{"_index":447,"title":{},"body":{"miscellaneous/functions.html":{}}}],["column({databasetype",{"_index":16,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/ManyRelation.html":{},"entities/OneRelation.html":{},"entities/OwnerRelation.html":{},"entities/TestEntity.html":{}}}],["column({type",{"_index":69,"title":{},"body":{"entities/AttributeRelation-1.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity-1.html":{}}}],["column.js",{"_index":133,"title":{},"body":{"classes/BaseView.html":{}}}],["column.ts",{"_index":379,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["columns",{"_index":80,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseView.html":{},"miscellaneous/functions.html":{}}}],["columntype",{"_index":484,"title":{},"body":{"miscellaneous/functions.html":{}}}],["common",{"_index":138,"title":{},"body":{"classes/CommonQueryDto.html":{},"classes/HttpErrorDto.html":{}}}],["commonquerydto",{"_index":134,"title":{"classes/CommonQueryDto.html":{}},"body":{"classes/CommonQueryDto.html":{},"coverage.html":{}}}],["compatibility",{"_index":717,"title":{},"body":{"index.html":{}}}],["compatible",{"_index":495,"title":{},"body":{"miscellaneous/functions.html":{}}}],["composite",{"_index":471,"title":{},"body":{"miscellaneous/functions.html":{}}}],["configuration",{"_index":571,"title":{},"body":{"index.html":{}}}],["configure",{"_index":609,"title":{},"body":{"index.html":{}}}],["configured",{"_index":650,"title":{},"body":{"index.html":{}}}],["connection",{"_index":615,"title":{},"body":{"index.html":{}}}],["connections",{"_index":576,"title":{},"body":{"index.html":{}}}],["connectiontimeoutmillis",{"_index":624,"title":{},"body":{"index.html":{}}}],["consider",{"_index":702,"title":{},"body":{"index.html":{}}}],["const",{"_index":101,"title":{},"body":{"classes/BaseEntity.html":{},"classes/EntityService.html":{}}}],["constraint",{"_index":473,"title":{},"body":{"miscellaneous/functions.html":{}}}],["constraints",{"_index":272,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["constructor",{"_index":107,"title":{},"body":{"classes/BaseEntityService.html":{}}}],["constructor(protected",{"_index":114,"title":{},"body":{"classes/BaseEntityService.html":{}}}],["constructor(repository",{"_index":108,"title":{},"body":{"classes/BaseEntityService.html":{}}}],["consumption",{"_index":622,"title":{},"body":{"index.html":{}}}],["contact",{"_index":733,"title":{},"body":{"index.html":{}}}],["contributions",{"_index":705,"title":{},"body":{"index.html":{}}}],["controller",{"_index":684,"title":{},"body":{"index.html":{}}}],["converted",{"_index":665,"title":{},"body":{"index.html":{}}}],["count",{"_index":149,"title":{},"body":{"classes/CountResultDto.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["count(query",{"_index":170,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{}}}],["countresult",{"_index":151,"title":{},"body":{"classes/CountResultDto.html":{},"classes/EntityQueryService.html":{}}}],["countresultdto",{"_index":146,"title":{"classes/CountResultDto.html":{}},"body":{"classes/CountResultDto.html":{},"coverage.html":{}}}],["coverage",{"_index":363,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["coverts",{"_index":508,"title":{},"body":{"miscellaneous/functions.html":{}}}],["create",{"_index":455,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createdat",{"_index":77,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseView.html":{}}}],["createdatecolumn",{"_index":95,"title":{},"body":{"classes/BaseEntity.html":{}}}],["createfindoperator",{"_index":400,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createfindoperator(query",{"_index":453,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createquerybuilder",{"_index":243,"title":{},"body":{"classes/EntityService.html":{}}}],["createquerycountdto",{"_index":401,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createquerycountdto(options",{"_index":458,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createquerymanydto",{"_index":402,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createquerymanydto(options",{"_index":459,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createqueryonedto",{"_index":403,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createqueryonedto(options",{"_index":460,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createqueryoptions",{"_index":406,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["createrelationparamdto",{"_index":385,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createrelationparamdto(relations",{"_index":461,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createunsetrelationparamdto",{"_index":387,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createunsetrelationparamdto(relations",{"_index":465,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createwhereoptiondto",{"_index":408,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createwhereoptiondto(options",{"_index":466,"title":{},"body":{"miscellaneous/functions.html":{}}}],["custom",{"_index":518,"title":{},"body":{"index.html":{},"properties.html":{}}}],["data",{"_index":482,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["database",{"_index":299,"title":{},"body":{"classes/TableNamingStrategy.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["databases",{"_index":486,"title":{},"body":{"miscellaneous/functions.html":{}}}],["databasetype",{"_index":37,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/ManyRelation.html":{},"entities/OneRelation.html":{},"entities/OwnerRelation.html":{},"entities/TestEntity.html":{},"classes/TestObject.html":{}}}],["datasource",{"_index":566,"title":{},"body":{"index.html":{}}}],["date",{"_index":52,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseView.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"index.html":{}}}],["date'})@createdatecolumn",{"_index":85,"title":{},"body":{"classes/BaseEntity.html":{}}}],["date'})@deletedatecolumn",{"_index":87,"title":{},"body":{"classes/BaseEntity.html":{}}}],["date'})@updatedatecolumn",{"_index":89,"title":{},"body":{"classes/BaseEntity.html":{}}}],["decorator",{"_index":449,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["decorator/column.js",{"_index":29,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["decorator/entity.js",{"_index":27,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["decorator/relation.js",{"_index":26,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["decorator/view",{"_index":132,"title":{},"body":{"classes/BaseView.html":{}}}],["decorators",{"_index":15,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"index.html":{},"properties.html":{}}}],["dedicated",{"_index":687,"title":{},"body":{"index.html":{}}}],["deeppartial",{"_index":213,"title":{},"body":{"classes/EntityService.html":{}}}],["default",{"_index":143,"title":{},"body":{"classes/CommonQueryDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defaultnamingstrategy",{"_index":303,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["define",{"_index":653,"title":{},"body":{"index.html":{}}}],["defined",{"_index":18,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{}}}],["defines",{"_index":574,"title":{},"body":{"index.html":{}}}],["definitions",{"_index":521,"title":{},"body":{"index.html":{},"properties.html":{}}}],["delays",{"_index":633,"title":{},"body":{"index.html":{}}}],["delete",{"_index":156,"title":{},"body":{"classes/DeleteResultDto.html":{},"classes/EntityService.html":{}}}],["delete(id",{"_index":208,"title":{},"body":{"classes/EntityService.html":{}}}],["deleted",{"_index":141,"title":{},"body":{"classes/CommonQueryDto.html":{}}}],["deletedat",{"_index":79,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseView.html":{}}}],["deletedatecolumn",{"_index":96,"title":{},"body":{"classes/BaseEntity.html":{}}}],["deleteresult",{"_index":157,"title":{},"body":{"classes/DeleteResultDto.html":{}}}],["deleteresultdto",{"_index":154,"title":{"classes/DeleteResultDto.html":{}},"body":{"classes/DeleteResultDto.html":{},"coverage.html":{}}}],["demand",{"_index":585,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":420,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["description",{"_index":74,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/HttpErrorDto.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{},"properties.html":{}}}],["determines",{"_index":612,"title":{},"body":{"index.html":{}}}],["developer",{"_index":734,"title":{},"body":{"index.html":{}}}],["development",{"_index":535,"title":{},"body":{"index.html":{}}}],["disrupting",{"_index":668,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":364,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["done",{"_index":679,"title":{},"body":{"index.html":{}}}],["driver",{"_index":483,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dto",{"_index":22,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["dto.ts",{"_index":137,"title":{},"body":{"classes/CommonQueryDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["dto.ts:14",{"_index":145,"title":{},"body":{"classes/CommonQueryDto.html":{}}}],["duration",{"_index":613,"title":{},"body":{"index.html":{}}}],["during",{"_index":595,"title":{},"body":{"index.html":{}}}],["eager",{"_index":53,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["efficiency",{"_index":547,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":580,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":528,"title":{},"body":{"index.html":{},"properties.html":{}}}],["effort",{"_index":698,"title":{},"body":{"index.html":{}}}],["encrypion",{"_index":678,"title":{},"body":{"index.html":{}}}],["encrypted",{"_index":686,"title":{},"body":{"index.html":{}}}],["encryption",{"_index":683,"title":{},"body":{"index.html":{}}}],["enhance",{"_index":659,"title":{},"body":{"index.html":{}}}],["enhancing",{"_index":546,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":526,"title":{},"body":{"index.html":{},"properties.html":{}}}],["ensuring",{"_index":579,"title":{},"body":{"index.html":{}}}],["entities",{"_index":2,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"miscellaneous/functions.html":{},"index.html":{},"overview.html":{},"properties.html":{}}}],["entity",{"_index":0,"title":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseView.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["entity's",{"_index":475,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entity(uniques",{"_index":467,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entity.service.js",{"_index":185,"title":{},"body":{"classes/EntityQueryService.html":{}}}],["entity.service.ts",{"_index":106,"title":{},"body":{"classes/BaseEntityService.html":{},"coverage.html":{}}}],["entity.service.ts:4",{"_index":110,"title":{},"body":{"classes/BaseEntityService.html":{}}}],["entity.ts",{"_index":380,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["entity/base.js",{"_index":31,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntityService.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["entityqueryservice",{"_index":160,"title":{"classes/EntityQueryService.html":{}},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"coverage.html":{}}}],["entityqueryservice:16",{"_index":228,"title":{},"body":{"classes/EntityService.html":{}}}],["entityqueryservice:25",{"_index":229,"title":{},"body":{"classes/EntityService.html":{}}}],["entityqueryservice:29",{"_index":230,"title":{},"body":{"classes/EntityService.html":{}}}],["entityqueryservice:33",{"_index":227,"title":{},"body":{"classes/EntityService.html":{}}}],["entityservice",{"_index":194,"title":{"classes/EntityService.html":{}},"body":{"classes/EntityService.html":{},"coverage.html":{}}}],["error",{"_index":253,"title":{},"body":{"classes/HttpErrorDto.html":{},"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["error.dto.js",{"_index":280,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["error.dto.ts",{"_index":252,"title":{},"body":{"classes/HttpErrorDto.html":{},"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{}}}],["error.dto.ts:11",{"_index":257,"title":{},"body":{"classes/HttpErrorDto.html":{}}}],["error.dto.ts:14",{"_index":361,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:15",{"_index":359,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:16",{"_index":258,"title":{},"body":{"classes/HttpErrorDto.html":{},"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:17",{"_index":360,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:18",{"_index":358,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:19",{"_index":356,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:20",{"_index":355,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:21",{"_index":354,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:22",{"_index":357,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:23",{"_index":353,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:24",{"_index":352,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:25",{"_index":351,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:36",{"_index":275,"title":{},"body":{"classes/SingleValidationErrorDto.html":{}}}],["error.dto.ts:42",{"_index":274,"title":{},"body":{"classes/SingleValidationErrorDto.html":{}}}],["error.dto.ts:60",{"_index":362,"title":{},"body":{"classes/ValidationErrorDto.html":{}}}],["errors",{"_index":295,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"index.html":{}}}],["establish",{"_index":628,"title":{},"body":{"index.html":{}}}],["establishes",{"_index":599,"title":{},"body":{"index.html":{}}}],["even",{"_index":721,"title":{},"body":{"index.html":{}}}],["example",{"_index":557,"title":{},"body":{"index.html":{}}}],["execution",{"_index":690,"title":{},"body":{"index.html":{}}}],["export",{"_index":32,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["expression",{"_index":509,"title":{},"body":{"miscellaneous/functions.html":{}}}],["extend",{"_index":519,"title":{},"body":{"index.html":{},"properties.html":{}}}],["extends",{"_index":36,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["false",{"_index":56,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/CommonQueryDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["features",{"_index":720,"title":{},"body":{"index.html":{}}}],["fields",{"_index":476,"title":{},"body":{"miscellaneous/functions.html":{}}}],["file",{"_index":5,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{},"index.html":{}}}],["find",{"_index":167,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["find(query",{"_index":175,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{}}}],["findone",{"_index":168,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{}}}],["findone(query",{"_index":178,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{}}}],["findonebyid",{"_index":169,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{}}}],["findonebyid(id",{"_index":181,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{}}}],["findoptionswhere",{"_index":183,"title":{},"body":{"classes/EntityQueryService.html":{}}}],["firsttablename",{"_index":318,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["firsttablename}_${secondtablename",{"_index":320,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["fixes",{"_index":715,"title":{},"body":{"index.html":{}}}],["following",{"_index":570,"title":{},"body":{"index.html":{}}}],["format",{"_index":564,"title":{},"body":{"index.html":{}}}],["function",{"_index":369,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":438,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funding",{"_index":692,"title":{},"body":{"index.html":{}}}],["general",{"_index":727,"title":{},"body":{"index.html":{}}}],["getting",{"_index":514,"title":{"index.html":{}},"body":{}}],["go",{"_index":712,"title":{},"body":{"index.html":{}}}],["handling",{"_index":685,"title":{},"body":{"index.html":{}}}],["hashing",{"_index":677,"title":{},"body":{"index.html":{}}}],["help",{"_index":706,"title":{},"body":{"index.html":{}}}],["homepage",{"_index":744,"title":{},"body":{"properties.html":{}}}],["http",{"_index":279,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["httperrordto",{"_index":250,"title":{"classes/HttpErrorDto.html":{}},"body":{"classes/HttpErrorDto.html":{},"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{}}}],["https://github.com/rbrightline/puq/tree/main",{"_index":750,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io",{"_index":747,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io/puq/orm",{"_index":745,"title":{},"body":{"properties.html":{}}}],["id",{"_index":76,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"miscellaneous/functions.html":{}}}],["id.js",{"_index":100,"title":{},"body":{"classes/BaseEntity.html":{}}}],["id.ts",{"_index":117,"title":{},"body":{"classes/BaseIdEntity.html":{},"coverage.html":{}}}],["id.ts:8",{"_index":119,"title":{},"body":{"classes/BaseIdEntity.html":{}}}],["identifier",{"_index":365,"title":{},"body":{"coverage.html":{}}}],["idle",{"_index":614,"title":{},"body":{"index.html":{}}}],["idletimeoutmillis",{"_index":608,"title":{},"body":{"index.html":{}}}],["idmodel",{"_index":118,"title":{},"body":{"classes/BaseIdEntity.html":{}}}],["implement",{"_index":569,"title":{},"body":{"index.html":{}}}],["implementations",{"_index":542,"title":{},"body":{"index.html":{}}}],["implements",{"_index":82,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/SingleValidationErrorDto.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["import",{"_index":21,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["improvements",{"_index":724,"title":{},"body":{"index.html":{}}}],["inactivity",{"_index":623,"title":{},"body":{"index.html":{}}}],["include",{"_index":140,"title":{},"body":{"classes/CommonQueryDto.html":{}}}],["includes",{"_index":124,"title":{},"body":{"classes/BaseView.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["inherited",{"_index":92,"title":{},"body":{"classes/BaseEntity.html":{},"classes/EntityService.html":{}}}],["initial",{"_index":691,"title":{},"body":{"index.html":{}}}],["insert",{"_index":63,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["install",{"_index":556,"title":{},"body":{"index.html":{}}}],["instant",{"_index":711,"title":{},"body":{"index.html":{}}}],["instead",{"_index":673,"title":{},"body":{"index.html":{}}}],["integer",{"_index":44,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{}}}],["integer'})@primarygeneratedcolumn",{"_index":91,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{}}}],["integrating",{"_index":523,"title":{},"body":{"index.html":{},"properties.html":{}}}],["integration",{"_index":538,"title":{},"body":{"index.html":{}}}],["interfere",{"_index":672,"title":{},"body":{"index.html":{}}}],["intuitive",{"_index":539,"title":{},"body":{"index.html":{}}}],["isarray",{"_index":290,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["isboolean",{"_index":288,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["isint",{"_index":287,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["isnumber",{"_index":286,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["isobject",{"_index":289,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["isstring",{"_index":285,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["it's",{"_index":694,"title":{},"body":{"index.html":{}}}],["items",{"_index":51,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["javascript",{"_index":666,"title":{},"body":{"index.html":{}}}],["join",{"_index":60,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["joincolumnname",{"_index":304,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["joincolumnname(relationname",{"_index":308,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["jointablecolumnname",{"_index":305,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["jointablecolumnname(_tablename",{"_index":310,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["jointableinversecolumnname",{"_index":306,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["jointableinversecolumnname(_tablename",{"_index":313,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["jointablename",{"_index":307,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["jointablename(firsttablename",{"_index":315,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["keep",{"_index":729,"title":{},"body":{"index.html":{}}}],["keeping",{"_index":589,"title":{},"body":{"index.html":{}}}],["key",{"_index":10,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["keys",{"_index":462,"title":{},"body":{"miscellaneous/functions.html":{}}}],["keywords",{"_index":741,"title":{},"body":{"properties.html":{}}}],["latency",{"_index":594,"title":{},"body":{"index.html":{}}}],["latest",{"_index":718,"title":{},"body":{"index.html":{}}}],["layer",{"_index":676,"title":{},"body":{"index.html":{}}}],["level",{"_index":530,"title":{},"body":{"index.html":{},"properties.html":{}}}],["library",{"_index":699,"title":{},"body":{"index.html":{}}}],["license",{"_index":748,"title":{},"body":{"properties.html":{}}}],["limit",{"_index":601,"title":{},"body":{"index.html":{}}}],["limitation",{"_index":562,"title":{},"body":{"index.html":{}}}],["link",{"_index":189,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{}}}],["list",{"_index":294,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["literal",{"_index":756,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["load",{"_index":142,"title":{},"body":{"classes/CommonQueryDto.html":{}}}],["low",{"_index":596,"title":{},"body":{"index.html":{}}}],["maintained",{"_index":588,"title":{},"body":{"index.html":{}}}],["maintaining",{"_index":696,"title":{},"body":{"index.html":{}}}],["maintenance",{"_index":728,"title":{},"body":{"index.html":{}}}],["make",{"_index":492,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["many",{"_index":40,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["manyrelation",{"_index":39,"title":{"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{}}}],["mapped",{"_index":527,"title":{},"body":{"index.html":{},"properties.html":{}}}],["matched",{"_index":152,"title":{},"body":{"classes/CountResultDto.html":{}}}],["matching",{"_index":66,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":282,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"index.html":{}}}],["max_connections",{"_index":638,"title":{},"body":{"index.html":{}}}],["maximum",{"_index":575,"title":{},"body":{"index.html":{}}}],["maxlength",{"_index":284,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["memory",{"_index":654,"title":{},"body":{"index.html":{}}}],["message",{"_index":255,"title":{},"body":{"classes/HttpErrorDto.html":{}}}],["methods",{"_index":165,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/TableNamingStrategy.html":{}}}],["milliseconds",{"_index":611,"title":{},"body":{"index.html":{}}}],["min",{"_index":281,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"index.html":{}}}],["minimizing",{"_index":620,"title":{},"body":{"index.html":{}}}],["minimum",{"_index":551,"title":{},"body":{"index.html":{}}}],["minlength",{"_index":283,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["miscellaneous",{"_index":437,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":749,"title":{},"body":{"properties.html":{}}}],["modules",{"_index":736,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":722,"title":{},"body":{"index.html":{}}}],["name",{"_index":112,"title":{},"body":{"classes/BaseEntityService.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/TableNamingStrategy.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["names",{"_index":464,"title":{},"body":{"miscellaneous/functions.html":{}}}],["naming",{"_index":301,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["nestjs/common",{"_index":425,"title":{},"body":{"dependencies.html":{}}}],["nestjs/config",{"_index":427,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":545,"title":{},"body":{"index.html":{}}}],["nestjs/typeorm",{"_index":431,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":417,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["none",{"_index":493,"title":{},"body":{"miscellaneous/functions.html":{}}}],["null",{"_index":59,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["number",{"_index":45,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"index.html":{}}}],["numbers",{"_index":660,"title":{},"body":{"index.html":{}}}],["numeric",{"_index":662,"title":{},"body":{"index.html":{}}}],["object",{"_index":48,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"index.html":{}}}],["object.keys(new",{"_index":103,"title":{},"body":{"classes/BaseEntity.html":{},"miscellaneous/variables.html":{}}}],["of(id",{"_index":245,"title":{},"body":{"classes/EntityService.html":{}}}],["ondelete",{"_index":57,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["one",{"_index":38,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["onerelation",{"_index":35,"title":{"entities/OneRelation.html":{},"entities/OneRelation-1.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{}}}],["ongoing",{"_index":704,"title":{},"body":{"index.html":{}}}],["onupdate",{"_index":62,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["open",{"_index":602,"title":{},"body":{"index.html":{}}}],["operation",{"_index":159,"title":{},"body":{"classes/DeleteResultDto.html":{},"classes/UpdateResultDto.html":{},"index.html":{}}}],["operations",{"_index":669,"title":{},"body":{"index.html":{}}}],["operator",{"_index":456,"title":{},"body":{"miscellaneous/functions.html":{}}}],["operator.ts",{"_index":399,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["optimal",{"_index":649,"title":{},"body":{"index.html":{}}}],["optimize",{"_index":567,"title":{},"body":{"index.html":{}}}],["option",{"_index":407,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["optional",{"_index":113,"title":{},"body":{"classes/BaseEntityService.html":{},"classes/CommonQueryDto.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":451,"title":{},"body":{"miscellaneous/functions.html":{}}}],["options.ts",{"_index":404,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["orm",{"_index":743,"title":{},"body":{"properties.html":{}}}],["out",{"_index":726,"title":{},"body":{"index.html":{}}}],["overloading",{"_index":607,"title":{},"body":{"index.html":{}}}],["override",{"_index":319,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["overview",{"_index":737,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":42,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["ownerrelation",{"_index":41,"title":{"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{}}}],["package",{"_index":419,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["paired",{"_index":543,"title":{},"body":{"index.html":{}}}],["param",{"_index":188,"title":{},"body":{"classes/EntityQueryService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["parameters",{"_index":111,"title":{},"body":{"classes/BaseEntityService.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/TableNamingStrategy.html":{},"miscellaneous/functions.html":{}}}],["peak",{"_index":584,"title":{},"body":{"index.html":{}}}],["peer",{"_index":423,"title":{},"body":{"dependencies.html":{}}}],["per",{"_index":656,"title":{},"body":{"index.html":{}}}],["performance",{"_index":568,"title":{},"body":{"index.html":{}}}],["periods",{"_index":598,"title":{},"body":{"index.html":{}}}],["pick",{"_index":479,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pickcolumntype",{"_index":370,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["pickcolumntype(options",{"_index":478,"title":{},"body":{"miscellaneous/functions.html":{}}}],["picks",{"_index":491,"title":{},"body":{"miscellaneous/functions.html":{}}}],["picktransformer",{"_index":374,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["picktransformer(options",{"_index":485,"title":{},"body":{"miscellaneous/functions.html":{}}}],["please",{"_index":701,"title":{},"body":{"index.html":{}}}],["pnpm",{"_index":558,"title":{},"body":{"index.html":{}}}],["pool",{"_index":578,"title":{},"body":{"index.html":{}}}],["poolsize",{"_index":573,"title":{},"body":{"index.html":{}}}],["postgres",{"_index":565,"title":{},"body":{"index.html":{}}}],["postgres.conf",{"_index":637,"title":{},"body":{"index.html":{}}}],["postgresql",{"_index":636,"title":{},"body":{"index.html":{}}}],["powerful",{"_index":723,"title":{},"body":{"index.html":{}}}],["prebuilt",{"_index":506,"title":{},"body":{"miscellaneous/functions.html":{}}}],["precision",{"_index":664,"title":{},"body":{"index.html":{}}}],["preservation",{"_index":663,"title":{},"body":{"index.html":{}}}],["prevent",{"_index":606,"title":{},"body":{"index.html":{}}}],["preventing",{"_index":631,"title":{},"body":{"index.html":{}}}],["primarygeneratedcolumn",{"_index":120,"title":{},"body":{"classes/BaseIdEntity.html":{}}}],["primitive",{"_index":494,"title":{},"body":{"miscellaneous/functions.html":{}}}],["process",{"_index":548,"title":{},"body":{"index.html":{}}}],["project",{"_index":695,"title":{},"body":{"index.html":{}}}],["prolonged",{"_index":632,"title":{},"body":{"index.html":{}}}],["promise",{"_index":174,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{}}}],["properties",{"_index":9,"title":{"properties.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"properties.html":{}}}],["property",{"_index":23,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{}}}],["property({type",{"_index":84,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/HttpErrorDto.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["propertydecorator",{"_index":452,"title":{},"body":{"miscellaneous/functions.html":{}}}],["propertyoptions",{"_index":448,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provided",{"_index":481,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provides",{"_index":75,"title":{},"body":{"classes/BaseEntity.html":{}}}],["providing",{"_index":531,"title":{},"body":{"index.html":{},"properties.html":{}}}],["puq",{"_index":742,"title":{},"body":{"properties.html":{}}}],["puq/is",{"_index":434,"title":{},"body":{"dependencies.html":{}}}],["puq/meta",{"_index":435,"title":{},"body":{"dependencies.html":{}}}],["puq/orm",{"_index":516,"title":{},"body":{"index.html":{}}}],["puq/ormsqlite",{"_index":560,"title":{},"body":{"index.html":{}}}],["puq/property",{"_index":24,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"dependencies.html":{}}}],["puq/query",{"_index":184,"title":{},"body":{"classes/EntityQueryService.html":{},"dependencies.html":{}}}],["puq/type",{"_index":94,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/SingleValidationErrorDto.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"dependencies.html":{}}}],["query",{"_index":136,"title":{},"body":{"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["query.service.js",{"_index":234,"title":{},"body":{"classes/EntityService.html":{}}}],["query.service.ts",{"_index":162,"title":{},"body":{"classes/EntityQueryService.html":{},"coverage.html":{}}}],["query.service.ts:16",{"_index":177,"title":{},"body":{"classes/EntityQueryService.html":{}}}],["query.service.ts:25",{"_index":180,"title":{},"body":{"classes/EntityQueryService.html":{}}}],["query.service.ts:29",{"_index":182,"title":{},"body":{"classes/EntityQueryService.html":{}}}],["query.service.ts:33",{"_index":172,"title":{},"body":{"classes/EntityQueryService.html":{}}}],["querycount",{"_index":171,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{}}}],["querydeeppartialentity",{"_index":225,"title":{},"body":{"classes/EntityService.html":{}}}],["querymany",{"_index":176,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{}}}],["queryone",{"_index":179,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{}}}],["ram",{"_index":648,"title":{},"body":{"index.html":{}}}],["read",{"_index":163,"title":{},"body":{"classes/EntityQueryService.html":{}}}],["readily",{"_index":591,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":115,"title":{},"body":{"classes/BaseEntityService.html":{}}}],["record",{"_index":457,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reduce",{"_index":593,"title":{},"body":{"index.html":{}}}],["reduction",{"_index":552,"title":{},"body":{"index.html":{}}}],["refrain",{"_index":670,"title":{},"body":{"index.html":{}}}],["related",{"_index":276,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["relation",{"_index":25,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/EntityService.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["relation(options",{"_index":497,"title":{},"body":{"miscellaneous/functions.html":{}}}],["relation(relationname",{"_index":244,"title":{},"body":{"classes/EntityService.html":{}}}],["relation({type",{"_index":323,"title":{},"body":{"entities/TestEntity.html":{},"entities/TestEntity-1.html":{}}}],["relationid",{"_index":240,"title":{},"body":{"classes/EntityService.html":{}}}],["relationname",{"_index":241,"title":{},"body":{"classes/EntityService.html":{},"classes/TableNamingStrategy.html":{}}}],["relationoptions",{"_index":498,"title":{},"body":{"miscellaneous/functions.html":{}}}],["relationparam",{"_index":206,"title":{},"body":{"classes/EntityService.html":{},"miscellaneous/functions.html":{}}}],["relations",{"_index":463,"title":{},"body":{"miscellaneous/functions.html":{}}}],["remains",{"_index":616,"title":{},"body":{"index.html":{}}}],["remove(relationid",{"_index":247,"title":{},"body":{"classes/EntityService.html":{}}}],["removerelation",{"_index":198,"title":{},"body":{"classes/EntityService.html":{}}}],["removerelation(relation",{"_index":210,"title":{},"body":{"classes/EntityService.html":{}}}],["repository",{"_index":109,"title":{},"body":{"classes/BaseEntityService.html":{},"properties.html":{}}}],["required",{"_index":55,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["resource",{"_index":581,"title":{},"body":{"index.html":{}}}],["responsiveness",{"_index":630,"title":{},"body":{"index.html":{}}}],["result",{"_index":150,"title":{},"body":{"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/UpdateResultDto.html":{}}}],["result.dto.ts",{"_index":148,"title":{},"body":{"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/UpdateResultDto.html":{},"coverage.html":{}}}],["result.dto.ts:13",{"_index":153,"title":{},"body":{"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/UpdateResultDto.html":{}}}],["results",{"_index":65,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":186,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/TableNamingStrategy.html":{}}}],["returns",{"_index":173,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/TableNamingStrategy.html":{},"miscellaneous/functions.html":{}}}],["robert",{"_index":752,"title":{},"body":{"properties.html":{}}}],["robert.brightline@gmail.com",{"_index":735,"title":{},"body":{"index.html":{}}}],["running",{"_index":730,"title":{},"body":{"index.html":{}}}],["safe",{"_index":681,"title":{},"body":{"index.html":{}}}],["save",{"_index":199,"title":{},"body":{"classes/EntityService.html":{}}}],["save(entity",{"_index":212,"title":{},"body":{"classes/EntityService.html":{}}}],["savemany",{"_index":200,"title":{},"body":{"classes/EntityService.html":{}}}],["savemany(entities",{"_index":215,"title":{},"body":{"classes/EntityService.html":{}}}],["seamlessly",{"_index":522,"title":{},"body":{"index.html":{},"properties.html":{}}}],["secondtablename",{"_index":316,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["secure",{"_index":709,"title":{},"body":{"index.html":{}}}],["securely",{"_index":732,"title":{},"body":{"index.html":{}}}],["select",{"_index":500,"title":{},"body":{"miscellaneous/functions.html":{}}}],["selectbaseentity",{"_index":504,"title":{},"body":{"miscellaneous/functions.html":{}}}],["selectquerybuilder",{"_index":510,"title":{},"body":{"miscellaneous/functions.html":{}}}],["selecttransformer",{"_index":410,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["server",{"_index":634,"title":{},"body":{"index.html":{}}}],["server's",{"_index":647,"title":{},"body":{"index.html":{}}}],["service",{"_index":164,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{}}}],["set",{"_index":58,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["set(null",{"_index":249,"title":{},"body":{"classes/EntityService.html":{}}}],["set(relationid",{"_index":248,"title":{},"body":{"classes/EntityService.html":{}}}],["setrelation",{"_index":201,"title":{},"body":{"classes/EntityService.html":{}}}],["setrelation(relation",{"_index":217,"title":{},"body":{"classes/EntityService.html":{}}}],["sets",{"_index":626,"title":{},"body":{"index.html":{}}}],["settings",{"_index":572,"title":{},"body":{"index.html":{}}}],["shared_buffers",{"_index":643,"title":{},"body":{"index.html":{}}}],["single",{"_index":269,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["singlevalidationerror",{"_index":271,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["singlevalidationerrordto",{"_index":267,"title":{"classes/SingleValidationErrorDto.html":{}},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{}}}],["smoothly",{"_index":731,"title":{},"body":{"index.html":{}}}],["softdelete",{"_index":202,"title":{},"body":{"classes/EntityService.html":{}}}],["softdelete(id",{"_index":219,"title":{},"body":{"classes/EntityService.html":{}}}],["sort",{"_index":657,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"index.html":{}}}],["specifies",{"_index":587,"title":{},"body":{"index.html":{}}}],["specify",{"_index":474,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sqlite",{"_index":17,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/ManyRelation.html":{},"entities/OneRelation.html":{},"entities/OwnerRelation.html":{},"entities/TestEntity.html":{},"classes/TestObject.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["sqlite3.ts",{"_index":7,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/ManyRelation.html":{},"entities/OneRelation.html":{},"entities/OwnerRelation.html":{},"entities/TestEntity.html":{},"classes/TestObject.html":{},"coverage.html":{}}}],["sqlite3.ts:14",{"_index":263,"title":{},"body":{"entities/OneRelation.html":{}}}],["sqlite3.ts:19",{"_index":261,"title":{},"body":{"entities/ManyRelation.html":{}}}],["sqlite3.ts:24",{"_index":265,"title":{},"body":{"entities/OwnerRelation.html":{}}}],["sqlite3.ts:29",{"_index":19,"title":{},"body":{"entities/AttributeRelation.html":{}}}],["sqlite3.ts:30",{"_index":20,"title":{},"body":{"entities/AttributeRelation.html":{}}}],["sqlite3.ts:35",{"_index":334,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:36",{"_index":328,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:37",{"_index":330,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:38",{"_index":326,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:39",{"_index":325,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:45",{"_index":331,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:51",{"_index":322,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:52",{"_index":327,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:62",{"_index":332,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:72",{"_index":329,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:83",{"_index":333,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:9",{"_index":347,"title":{},"body":{"classes/TestObject.html":{}}}],["sqlite3.ts:93",{"_index":324,"title":{},"body":{"entities/TestEntity.html":{}}}],["src/.../base.ts",{"_index":758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../column.ts",{"_index":439,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../create",{"_index":440,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../entity.ts",{"_index":441,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../pick",{"_index":442,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../relation.ts",{"_index":443,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../select",{"_index":444,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../view",{"_index":445,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../where",{"_index":446,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/lib/common/pick",{"_index":367,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/decorator/column.ts",{"_index":375,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/decorator/entity.ts",{"_index":376,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/decorator/relation.ts",{"_index":377,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/decorator/view",{"_index":378,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/dto/count",{"_index":147,"title":{},"body":{"classes/CountResultDto.html":{},"coverage.html":{}}}],["src/lib/dto/create",{"_index":384,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/dto/delete",{"_index":155,"title":{},"body":{"classes/DeleteResultDto.html":{},"coverage.html":{}}}],["src/lib/dto/http",{"_index":251,"title":{},"body":{"classes/HttpErrorDto.html":{},"coverage.html":{}}}],["src/lib/dto/update",{"_index":350,"title":{},"body":{"classes/UpdateResultDto.html":{},"coverage.html":{}}}],["src/lib/dto/validation",{"_index":268,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{}}}],["src/lib/entity/base",{"_index":116,"title":{},"body":{"classes/BaseIdEntity.html":{},"coverage.html":{}}}],["src/lib/entity/base.ts",{"_index":73,"title":{},"body":{"classes/BaseEntity.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/entity/base.ts:12",{"_index":86,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/lib/entity/base.ts:16",{"_index":90,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/lib/entity/base.ts:20",{"_index":88,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/lib/factory/naming",{"_index":297,"title":{},"body":{"classes/TableNamingStrategy.html":{},"coverage.html":{}}}],["src/lib/integration/better",{"_index":6,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/ManyRelation.html":{},"entities/OneRelation.html":{},"entities/OwnerRelation.html":{},"entities/TestEntity.html":{},"classes/TestObject.html":{},"coverage.html":{}}}],["src/lib/integration/postgres.ts",{"_index":68,"title":{},"body":{"entities/AttributeRelation-1.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity-1.html":{},"classes/TestObject-1.html":{},"coverage.html":{}}}],["src/lib/integration/postgres.ts:14",{"_index":264,"title":{},"body":{"entities/OneRelation-1.html":{}}}],["src/lib/integration/postgres.ts:19",{"_index":262,"title":{},"body":{"entities/ManyRelation-1.html":{}}}],["src/lib/integration/postgres.ts:24",{"_index":266,"title":{},"body":{"entities/OwnerRelation-1.html":{}}}],["src/lib/integration/postgres.ts:29",{"_index":70,"title":{},"body":{"entities/AttributeRelation-1.html":{}}}],["src/lib/integration/postgres.ts:30",{"_index":71,"title":{},"body":{"entities/AttributeRelation-1.html":{}}}],["src/lib/integration/postgres.ts:35",{"_index":346,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:36",{"_index":340,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:37",{"_index":342,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:38",{"_index":338,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:39",{"_index":337,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:40",{"_index":343,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:41",{"_index":335,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:42",{"_index":339,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:52",{"_index":344,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:62",{"_index":341,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:73",{"_index":345,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:83",{"_index":336,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:9",{"_index":348,"title":{},"body":{"classes/TestObject-1.html":{}}}],["src/lib/query/common",{"_index":135,"title":{},"body":{"classes/CommonQueryDto.html":{},"coverage.html":{}}}],["src/lib/query/create",{"_index":398,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/query/select",{"_index":409,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/query/where",{"_index":411,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/service/base",{"_index":105,"title":{},"body":{"classes/BaseEntityService.html":{},"coverage.html":{}}}],["src/lib/service/entity",{"_index":161,"title":{},"body":{"classes/EntityQueryService.html":{},"coverage.html":{}}}],["src/lib/service/entity.service.ts",{"_index":195,"title":{},"body":{"classes/EntityService.html":{},"coverage.html":{}}}],["src/lib/service/entity.service.ts:15",{"_index":214,"title":{},"body":{"classes/EntityService.html":{}}}],["src/lib/service/entity.service.ts:19",{"_index":216,"title":{},"body":{"classes/EntityService.html":{}}}],["src/lib/service/entity.service.ts:23",{"_index":226,"title":{},"body":{"classes/EntityService.html":{}}}],["src/lib/service/entity.service.ts:27",{"_index":209,"title":{},"body":{"classes/EntityService.html":{}}}],["src/lib/service/entity.service.ts:31",{"_index":220,"title":{},"body":{"classes/EntityService.html":{}}}],["src/lib/service/entity.service.ts:35",{"_index":207,"title":{},"body":{"classes/EntityService.html":{}}}],["src/lib/service/entity.service.ts:45",{"_index":211,"title":{},"body":{"classes/EntityService.html":{}}}],["src/lib/service/entity.service.ts:55",{"_index":218,"title":{},"body":{"classes/EntityService.html":{}}}],["src/lib/service/entity.service.ts:65",{"_index":223,"title":{},"body":{"classes/EntityService.html":{}}}],["src/lib/view/base.view.ts",{"_index":122,"title":{},"body":{"classes/BaseView.html":{},"coverage.html":{}}}],["src/lib/view/base.view.ts:10",{"_index":128,"title":{},"body":{"classes/BaseView.html":{}}}],["src/lib/view/base.view.ts:7",{"_index":129,"title":{},"body":{"classes/BaseView.html":{}}}],["src/lib/view/base.view.ts:8",{"_index":127,"title":{},"body":{"classes/BaseView.html":{}}}],["src/lib/view/base.view.ts:9",{"_index":130,"title":{},"body":{"classes/BaseView.html":{}}}],["standard",{"_index":520,"title":{},"body":{"index.html":{},"properties.html":{}}}],["started",{"_index":515,"title":{"index.html":{}},"body":{}}],["statements",{"_index":366,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":259,"title":{},"body":{"classes/HttpErrorDto.html":{}}}],["statuscode",{"_index":256,"title":{},"body":{"classes/HttpErrorDto.html":{}}}],["stays",{"_index":707,"title":{},"body":{"index.html":{}}}],["stored",{"_index":661,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":302,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["strategy.ts",{"_index":298,"title":{},"body":{"classes/TableNamingStrategy.html":{},"coverage.html":{}}}],["strategy.ts:13",{"_index":309,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["strategy.ts:17",{"_index":311,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["strategy.ts:21",{"_index":314,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["strategy.ts:6",{"_index":317,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["streamlined",{"_index":536,"title":{},"body":{"index.html":{}}}],["string",{"_index":14,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["structure",{"_index":254,"title":{},"body":{"classes/HttpErrorDto.html":{}}}],["subsequent",{"_index":689,"title":{},"body":{"index.html":{}}}],["such",{"_index":490,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sufficient",{"_index":641,"title":{},"body":{"index.html":{}}}],["summary",{"_index":517,"title":{},"body":{"index.html":{}}}],["support",{"_index":487,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["supporting",{"_index":703,"title":{},"body":{"index.html":{}}}],["swagger",{"_index":534,"title":{},"body":{"index.html":{},"properties.html":{}}}],["swc/helpers",{"_index":421,"title":{},"body":{"dependencies.html":{}}}],["system",{"_index":604,"title":{},"body":{"index.html":{}}}],["table",{"_index":300,"title":{},"body":{"classes/TableNamingStrategy.html":{},"coverage.html":{}}}],["tablenamingstrategy",{"_index":296,"title":{"classes/TableNamingStrategy.html":{}},"body":{"classes/TableNamingStrategy.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":418,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":697,"title":{},"body":{"index.html":{}}}],["target",{"_index":49,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["testentity",{"_index":43,"title":{"entities/TestEntity.html":{},"entities/TestEntity-1.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{}}}],["testobject",{"_index":34,"title":{"classes/TestObject.html":{},"classes/TestObject-1.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{}}}],["thank",{"_index":693,"title":{},"body":{"index.html":{}}}],["this.repository",{"_index":242,"title":{},"body":{"classes/EntityService.html":{}}}],["this.repository.count(query",{"_index":193,"title":{},"body":{"classes/EntityQueryService.html":{}}}],["this.repository.delete(id",{"_index":238,"title":{},"body":{"classes/EntityService.html":{}}}],["this.repository.find(query",{"_index":187,"title":{},"body":{"classes/EntityQueryService.html":{}}}],["this.repository.findone(query",{"_index":190,"title":{},"body":{"classes/EntityQueryService.html":{}}}],["this.repository.findoneby",{"_index":191,"title":{},"body":{"classes/EntityQueryService.html":{}}}],["this.repository.save(entities",{"_index":236,"title":{},"body":{"classes/EntityService.html":{}}}],["this.repository.save(entity",{"_index":235,"title":{},"body":{"classes/EntityService.html":{}}}],["this.repository.softdelete(id",{"_index":239,"title":{},"body":{"classes/EntityService.html":{}}}],["this.repository.update(id",{"_index":237,"title":{},"body":{"classes/EntityService.html":{}}}],["through",{"_index":537,"title":{},"body":{"index.html":{}}}],["time",{"_index":627,"title":{},"body":{"index.html":{}}}],["timestamp",{"_index":125,"title":{},"body":{"classes/BaseView.html":{},"miscellaneous/functions.html":{}}}],["toward",{"_index":713,"title":{},"body":{"index.html":{}}}],["traffic",{"_index":597,"title":{},"body":{"index.html":{}}}],["transfer",{"_index":675,"title":{},"body":{"index.html":{}}}],["transform",{"_index":499,"title":{},"body":{"miscellaneous/functions.html":{}}}],["transformations",{"_index":674,"title":{},"body":{"index.html":{}}}],["transformed",{"_index":563,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":429,"title":{},"body":{"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["transformer.ts",{"_index":373,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["transformers",{"_index":671,"title":{},"body":{"index.html":{}}}],["true",{"_index":54,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/CommonQueryDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"miscellaneous/functions.html":{}}}],["type",{"_index":12,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["type.ts",{"_index":368,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["typealiases",{"_index":754,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeorm",{"_index":98,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/TableNamingStrategy.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["typeorm/query",{"_index":231,"title":{},"body":{"classes/EntityService.html":{}}}],["typeorom",{"_index":680,"title":{},"body":{"index.html":{}}}],["types",{"_index":489,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["undefined",{"_index":321,"title":{},"body":{"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{}}}],["unique",{"_index":472,"title":{},"body":{"miscellaneous/functions.html":{}}}],["uniques",{"_index":469,"title":{},"body":{"miscellaneous/functions.html":{}}}],["unnecessary",{"_index":621,"title":{},"body":{"index.html":{}}}],["unset",{"_index":386,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["unsetrelation",{"_index":203,"title":{},"body":{"classes/EntityService.html":{}}}],["unsetrelation(relation",{"_index":221,"title":{},"body":{"classes/EntityService.html":{}}}],["unsetrelationparam",{"_index":222,"title":{},"body":{"classes/EntityService.html":{},"miscellaneous/functions.html":{}}}],["up",{"_index":708,"title":{},"body":{"index.html":{}}}],["update",{"_index":204,"title":{},"body":{"classes/EntityService.html":{},"classes/UpdateResultDto.html":{}}}],["update(id",{"_index":224,"title":{},"body":{"classes/EntityService.html":{}}}],["updatedat",{"_index":78,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseView.html":{}}}],["updatedatecolumn",{"_index":97,"title":{},"body":{"classes/BaseEntity.html":{}}}],["updateresult",{"_index":233,"title":{},"body":{"classes/EntityService.html":{},"classes/UpdateResultDto.html":{}}}],["updateresultdto",{"_index":349,"title":{"classes/UpdateResultDto.html":{}},"body":{"classes/UpdateResultDto.html":{},"coverage.html":{}}}],["updates",{"_index":716,"title":{},"body":{"index.html":{}}}],["upper",{"_index":600,"title":{},"body":{"index.html":{}}}],["use",{"_index":682,"title":{},"body":{"index.html":{}}}],["useful",{"_index":700,"title":{},"body":{"index.html":{}}}],["users",{"_index":725,"title":{},"body":{"index.html":{}}}],["using",{"_index":533,"title":{},"body":{"index.html":{},"properties.html":{}}}],["utilization",{"_index":582,"title":{},"body":{"index.html":{}}}],["validated",{"_index":529,"title":{},"body":{"index.html":{},"properties.html":{}}}],["validation",{"_index":270,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["validationconstraints",{"_index":277,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["validationconstraintsdto",{"_index":273,"title":{"classes/ValidationConstraintsDto.html":{}},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{}}}],["validationerrordto",{"_index":293,"title":{"classes/ValidationErrorDto.html":{}},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{}}}],["validationerrorresult",{"_index":278,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["validator",{"_index":544,"title":{},"body":{"index.html":{}}}],["value",{"_index":11,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["valuetransformer",{"_index":496,"title":{},"body":{"miscellaneous/functions.html":{}}}],["variable",{"_index":396,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":757,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":739,"title":{},"body":{"properties.html":{}}}],["versions",{"_index":719,"title":{},"body":{"index.html":{}}}],["view",{"_index":123,"title":{},"body":{"classes/BaseView.html":{},"miscellaneous/functions.html":{}}}],["viewcolumn",{"_index":131,"title":{},"body":{"classes/BaseView.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["viewcolumn(options",{"_index":501,"title":{},"body":{"miscellaneous/functions.html":{}}}],["viewcolumn({type",{"_index":126,"title":{},"body":{"classes/BaseView.html":{}}}],["viewentity",{"_index":381,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["viewentity(expression",{"_index":503,"title":{},"body":{"miscellaneous/functions.html":{}}}],["volume",{"_index":554,"title":{},"body":{"index.html":{}}}],["well",{"_index":710,"title":{},"body":{"index.html":{}}}],["whereoption",{"_index":454,"title":{},"body":{"miscellaneous/functions.html":{}}}],["wherequerytransformer",{"_index":412,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["wherequerytransformer(options",{"_index":513,"title":{},"body":{"miscellaneous/functions.html":{}}}],["whether",{"_index":511,"title":{},"body":{"miscellaneous/functions.html":{}}}],["widely",{"_index":540,"title":{},"body":{"index.html":{}}}],["withdeleted",{"_index":139,"title":{},"body":{"classes/CommonQueryDto.html":{}}}],["within",{"_index":525,"title":{},"body":{"index.html":{},"properties.html":{}}}],["work_mem",{"_index":652,"title":{},"body":{"index.html":{}}}],["write",{"_index":196,"title":{},"body":{"classes/EntityService.html":{}}}],["yes",{"_index":470,"title":{},"body":{"miscellaneous/functions.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"entities/AttributeRelation.html":{"url":"entities/AttributeRelation.html","title":"entity - AttributeRelation","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  AttributeRelation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/better-sqlite3.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                key\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:30\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) key: string;\n  @Column({ databaseType: 'sqlite', type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) string: string;\n  @Column({ databaseType: 'sqlite', type: 'integer' }) integer: number;\n  @Column({ databaseType: 'sqlite', type: 'number' }) number: number;\n  @Column({ databaseType: 'sqlite', type: 'boolean' }) boolean: boolean;\n  @Column({ databaseType: 'sqlite', type: 'bigint' }) bigint: bigint;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'object',\n    target: () => TestObject,\n  })\n  object: TestObject;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'array',\n    items: { type: 'string' },\n  })\n  array: string[];\n  @Column({ databaseType: 'sqlite', type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/AttributeRelation-1.html":{"url":"entities/AttributeRelation-1.html","title":"entity - AttributeRelation-1","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  AttributeRelation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/postgres.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                key\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:30\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ type: 'string' }) key: string;\n  @Column({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ type: 'string' }) string: string;\n  @Column({ type: 'integer' }) integer: number;\n  @Column({ type: 'number' }) number: number;\n  @Column({ type: 'boolean' }) boolean: boolean;\n  @Column({ type: 'bigint' }) bigint: bigint;\n  @Column({ type: 'object', target: () => TestObject }) object: TestObject;\n  @Column({ type: 'array', items: { type: 'string' } }) array: string[];\n  @Column({ type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/entity/base.ts\n        \n\n\n            \n                Description\n            \n            \n                All entities extends this entity. The entity provides id, createdAt, updatedAt, and deletedAt columns\n\n            \n\n            \n                Extends\n            \n            \n                            BaseIdEntity\n            \n\n            \n                Implements\n            \n            \n                        BaseModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'date'})@CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/entity/base.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'date'})@DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/entity/base.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'date'})@UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/entity/base.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'integer'})@PrimaryGeneratedColumn()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseIdEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseIdEntity:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type { BaseModel } from '@puq/type';\nimport { Property } from '@puq/property';\nimport { CreateDateColumn, DeleteDateColumn, UpdateDateColumn } from 'typeorm';\nimport { BaseIdEntity } from './base-id.js';\n\n/**\n * All entities extends this entity. The entity provides id, createdAt, updatedAt, and deletedAt columns\n */\nexport class BaseEntity extends BaseIdEntity implements BaseModel {\n  @Property({ type: 'date' })\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @Property({ type: 'date' })\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @Property({ type: 'date' })\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\nexport const BASE_ENTITY_COLUMNS = Object.keys(new BaseEntity());\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntityService.html":{"url":"classes/BaseEntityService.html","title":"class - BaseEntityService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/service/base-entity.service.ts\n        \n\n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/lib/service/base-entity.service.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type { Repository } from 'typeorm';\nimport type { BaseEntity } from '../entity/base.js';\n\nexport class BaseEntityService {\n  constructor(protected readonly repository: Repository) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseIdEntity.html":{"url":"classes/BaseIdEntity.html","title":"class - BaseIdEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseIdEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/entity/base-id.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IDModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'integer'})@PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/entity/base-id.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type { IDModel } from '@puq/type';\nimport { Property } from '@puq/property';\nimport { PrimaryGeneratedColumn } from 'typeorm';\n\nexport class BaseIdEntity implements IDModel {\n  @Property({ type: 'integer' })\n  @PrimaryGeneratedColumn()\n  id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseView.html":{"url":"classes/BaseView.html","title":"class - BaseView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/view/base.view.ts\n        \n\n\n            \n                Description\n            \n            \n                Base view entity that includes id and timestamp columns\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewColumn({type: 'date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/view/base.view.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewColumn({type: 'date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/view/base.view.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewColumn({type: 'integer'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/view/base.view.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewColumn({type: 'date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/view/base.view.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ViewColumn } from './../decorator/view-column.js';\n\n/**\n * Base view entity that includes `id` and `timestamp` columns\n */\nexport class BaseView {\n  @ViewColumn({ type: 'integer' }) id: number;\n  @ViewColumn({ type: 'date' }) createdAt: Date;\n  @ViewColumn({ type: 'date' }) updatedAt: Date;\n  @ViewColumn({ type: 'date' }) deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommonQueryDto.html":{"url":"classes/CommonQueryDto.html","title":"class - CommonQueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommonQueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/query/common-query-dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Common query dto\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                withDeleted\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        withDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'boolean', description: 'Include deleted items to the load', default: false, acceptString: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/query/common-query-dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\n\n/**\n * Common query dto\n */\n@Dto()\nexport class CommonQueryDto {\n  @Property({\n    type: 'boolean',\n    description: 'Include deleted items to the load',\n    default: false,\n    acceptString: true,\n  })\n  withDeleted?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CountResultDto.html":{"url":"classes/CountResultDto.html","title":"class - CountResultDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CountResultDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dto/count-result.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Count result\n\n            \n\n\n            \n                Implements\n            \n            \n                        CountResult\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                count\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        count\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'integer', description: 'The number of items matched the query'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/count-result.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type { CountResult } from '@puq/type';\nimport { Dto, Property } from '@puq/property';\n\n/**\n * Count result\n */\n@Dto()\nexport class CountResultDto implements CountResult {\n  @Property({\n    type: 'integer',\n    description: 'The number of items matched the query',\n  })\n  count: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteResultDto.html":{"url":"classes/DeleteResultDto.html","title":"class - DeleteResultDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteResultDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dto/delete-result.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Delete result dto\n\n            \n\n\n            \n                Implements\n            \n            \n                        DeleteResult\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                affected\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        affected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'integer', description: 'The number of items affected by the delete operation'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/delete-result.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type { DeleteResult } from '@puq/type';\nimport { Dto, Property } from '@puq/property';\n\n/**\n * Delete result dto\n */\n@Dto()\nexport class DeleteResultDto implements DeleteResult {\n  @Property({\n    type: 'integer',\n    description: 'The number of items affected by the delete operation',\n  })\n  affected: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EntityQueryService.html":{"url":"classes/EntityQueryService.html","title":"class - EntityQueryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EntityQueryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/service/entity-query.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Read service\n\n            \n\n            \n                Extends\n            \n            \n                            BaseEntityService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                count\n                            \n                            \n                                find\n                            \n                            \n                                findOne\n                            \n                            \n                                findOneById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(query: QueryCount)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/entity-query.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        QueryCount\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \nfind(query: QueryMany)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/entity-query.service.ts:16\n                        \n                    \n\n\n            \n                \n                        Query all entities\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        QueryMany\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(query: QueryOne)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/entity-query.service.ts:25\n                        \n                    \n\n\n            \n                \n                        Query one entity\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        QueryOne\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    QueryOne\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneById\n                        \n                    \n                \n            \n            \n                \nfindOneById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/entity-query.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type { FindOptionsWhere } from 'typeorm';\nimport type { CountResult } from '@puq/type';\nimport type { QueryCount, QueryMany, QueryOne } from '@puq/query';\nimport type { BaseEntity } from '../entity/base.js';\nimport { BaseEntityService } from './base-entity.service.js';\n\n/**\n * Read service\n */\nexport class EntityQueryService extends BaseEntityService {\n  /**\n   * Query all entities\n   */\n  find(query: QueryMany[]>) {\n    return this.repository.find(query);\n  }\n\n  /**\n   * Query one entity\n   * @param query {@link QueryOne}\n   * @returns\n   */\n  findOne(query: QueryOne[]>) {\n    return this.repository.findOne(query);\n  }\n\n  findOneById(id: number) {\n    return this.repository.findOneBy({ id } as FindOptionsWhere);\n  }\n\n  async count(query: QueryCount[]>): Promise {\n    return { count: await this.repository.count(query) };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EntityService.html":{"url":"classes/EntityService.html","title":"class - EntityService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EntityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/service/entity.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Write service\n\n            \n\n            \n                Extends\n            \n            \n                            EntityQueryService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addRelation\n                            \n                            \n                                delete\n                            \n                            \n                                    Async\n                                removeRelation\n                            \n                            \n                                save\n                            \n                            \n                                saveMany\n                            \n                            \n                                    Async\n                                setRelation\n                            \n                            \n                                softDelete\n                            \n                            \n                                    Async\n                                unsetRelation\n                            \n                            \n                                update\n                            \n                            \n                                    Async\n                                count\n                            \n                            \n                                find\n                            \n                            \n                                findOne\n                            \n                            \n                                findOneById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    addRelation(relation: RelationParam)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/entity.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relation\n                                            \n                                                            RelationParam\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/entity.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeRelation(relation: RelationParam)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/entity.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relation\n                                            \n                                                            RelationParam\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        save\n                        \n                    \n                \n            \n            \n                \nsave(entity: DeepPartial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/entity.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveMany\n                        \n                    \n                \n            \n            \n                \nsaveMany(entities: DeepPartial[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/entity.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        DeepPartial[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    setRelation(relation: RelationParam)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/entity.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relation\n                                            \n                                                            RelationParam\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        softDelete\n                        \n                    \n                \n            \n            \n                \nsoftDelete(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/entity.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        unsetRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    unsetRelation(relation: UnsetRelationParam)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/entity.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relation\n                                            \n                                                            UnsetRelationParam\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, entity: QueryDeepPartialEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/entity.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                            QueryDeepPartialEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(query: QueryCount)\n                \n            \n\n\n                    \n                        \n                            Inherited from         EntityQueryService\n\n                        \n                    \n                    \n                        \n                                Defined in         EntityQueryService:33\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        QueryCount\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \nfind(query: QueryMany)\n                \n            \n\n\n                    \n                        \n                            Inherited from         EntityQueryService\n\n                        \n                    \n                    \n                        \n                                Defined in         EntityQueryService:16\n\n                        \n                    \n\n\n            \n                \n                        Query all entities\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        QueryMany\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(query: QueryOne)\n                \n            \n\n\n                    \n                        \n                            Inherited from         EntityQueryService\n\n                        \n                    \n                    \n                        \n                                Defined in         EntityQueryService:25\n\n                        \n                    \n\n\n            \n                \n                        Query one entity\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        QueryOne\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    QueryOne\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneById\n                        \n                    \n                \n            \n            \n                \nfindOneById(id: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         EntityQueryService\n\n                        \n                    \n                    \n                        \n                                Defined in         EntityQueryService:29\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type { BaseEntity } from '../entity/base.js';\nimport type { QueryDeepPartialEntity } from 'typeorm/query-builder/QueryPartialEntity.js';\nimport type {\n  RelationParam,\n  UnsetRelationParam,\n  UpdateResult,\n} from '@puq/type';\nimport { EntityQueryService } from './entity-query.service.js';\nimport type { DeepPartial } from 'typeorm';\n\n/**\n * Write service\n */\nexport class EntityService extends EntityQueryService {\n  save(entity: DeepPartial): Promise {\n    return this.repository.save(entity);\n  }\n\n  saveMany(entities: DeepPartial[]): Promise {\n    return this.repository.save(entities);\n  }\n\n  update(id: number, entity: QueryDeepPartialEntity) {\n    return this.repository.update(id, entity);\n  }\n\n  delete(id: number) {\n    return this.repository.delete(id);\n  }\n\n  softDelete(id: number) {\n    return this.repository.softDelete(id);\n  }\n\n  async addRelation(relation: RelationParam): Promise {\n    const { id, relationId, relationName } = relation;\n    await this.repository\n      .createQueryBuilder()\n      .relation(relationName)\n      .of(id)\n      .add(relationId);\n    return { affected: 1 };\n  }\n\n  async removeRelation(relation: RelationParam): Promise {\n    const { id, relationId, relationName: relationName } = relation;\n    await this.repository\n      .createQueryBuilder()\n      .relation(relationName)\n      .of(id)\n      .remove(relationId);\n    return { affected: 1 };\n  }\n\n  async setRelation(relation: RelationParam): Promise {\n    const { id, relationId, relationName } = relation;\n    await this.repository\n      .createQueryBuilder()\n      .relation(relationName)\n      .of(id)\n      .set(relationId);\n    return { affected: 1 };\n  }\n\n  async unsetRelation(relation: UnsetRelationParam): Promise {\n    const { id, relationName } = relation;\n    await this.repository\n      .createQueryBuilder()\n      .relation(relationName)\n      .of(id)\n      .set(null);\n    return { affected: 1 };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpErrorDto.html":{"url":"classes/HttpErrorDto.html","title":"class - HttpErrorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpErrorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dto/http-error.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                This is the common error structure\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                message\n                            \n                            \n                                    \n                                statusCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/http-error.dto.ts:11\n                        \n                    \n\n            \n                \n                    error message\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'integer'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/http-error.dto.ts:16\n                        \n                    \n\n            \n                \n                    status code\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\n\n/**\n * This is the common error structure\n */\n@Dto()\nexport class HttpErrorDto {\n  /**\n   * error message\n   */\n  @Property({ type: 'string' }) message: string;\n\n  /**\n   * status code\n   */\n  @Property({ type: 'integer' }) statusCode: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ManyRelation.html":{"url":"entities/ManyRelation.html","title":"entity - ManyRelation","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ManyRelation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/better-sqlite3.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                many\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        many\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:19\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) key: string;\n  @Column({ databaseType: 'sqlite', type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) string: string;\n  @Column({ databaseType: 'sqlite', type: 'integer' }) integer: number;\n  @Column({ databaseType: 'sqlite', type: 'number' }) number: number;\n  @Column({ databaseType: 'sqlite', type: 'boolean' }) boolean: boolean;\n  @Column({ databaseType: 'sqlite', type: 'bigint' }) bigint: bigint;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'object',\n    target: () => TestObject,\n  })\n  object: TestObject;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'array',\n    items: { type: 'string' },\n  })\n  array: string[];\n  @Column({ databaseType: 'sqlite', type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ManyRelation-1.html":{"url":"entities/ManyRelation-1.html","title":"entity - ManyRelation-1","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ManyRelation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/postgres.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                many\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        many\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:19\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ type: 'string' }) key: string;\n  @Column({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ type: 'string' }) string: string;\n  @Column({ type: 'integer' }) integer: number;\n  @Column({ type: 'number' }) number: number;\n  @Column({ type: 'boolean' }) boolean: boolean;\n  @Column({ type: 'bigint' }) bigint: bigint;\n  @Column({ type: 'object', target: () => TestObject }) object: TestObject;\n  @Column({ type: 'array', items: { type: 'string' } }) array: string[];\n  @Column({ type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/OneRelation.html":{"url":"entities/OneRelation.html","title":"entity - OneRelation","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  OneRelation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/better-sqlite3.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                one\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        one\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:14\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) key: string;\n  @Column({ databaseType: 'sqlite', type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) string: string;\n  @Column({ databaseType: 'sqlite', type: 'integer' }) integer: number;\n  @Column({ databaseType: 'sqlite', type: 'number' }) number: number;\n  @Column({ databaseType: 'sqlite', type: 'boolean' }) boolean: boolean;\n  @Column({ databaseType: 'sqlite', type: 'bigint' }) bigint: bigint;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'object',\n    target: () => TestObject,\n  })\n  object: TestObject;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'array',\n    items: { type: 'string' },\n  })\n  array: string[];\n  @Column({ databaseType: 'sqlite', type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/OneRelation-1.html":{"url":"entities/OneRelation-1.html","title":"entity - OneRelation-1","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  OneRelation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/postgres.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                one\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        one\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:14\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ type: 'string' }) key: string;\n  @Column({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ type: 'string' }) string: string;\n  @Column({ type: 'integer' }) integer: number;\n  @Column({ type: 'number' }) number: number;\n  @Column({ type: 'boolean' }) boolean: boolean;\n  @Column({ type: 'bigint' }) bigint: bigint;\n  @Column({ type: 'object', target: () => TestObject }) object: TestObject;\n  @Column({ type: 'array', items: { type: 'string' } }) array: string[];\n  @Column({ type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/OwnerRelation.html":{"url":"entities/OwnerRelation.html","title":"entity - OwnerRelation","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  OwnerRelation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/better-sqlite3.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                owner\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:24\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) key: string;\n  @Column({ databaseType: 'sqlite', type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) string: string;\n  @Column({ databaseType: 'sqlite', type: 'integer' }) integer: number;\n  @Column({ databaseType: 'sqlite', type: 'number' }) number: number;\n  @Column({ databaseType: 'sqlite', type: 'boolean' }) boolean: boolean;\n  @Column({ databaseType: 'sqlite', type: 'bigint' }) bigint: bigint;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'object',\n    target: () => TestObject,\n  })\n  object: TestObject;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'array',\n    items: { type: 'string' },\n  })\n  array: string[];\n  @Column({ databaseType: 'sqlite', type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/OwnerRelation-1.html":{"url":"entities/OwnerRelation-1.html","title":"entity - OwnerRelation-1","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  OwnerRelation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/postgres.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                owner\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:24\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ type: 'string' }) key: string;\n  @Column({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ type: 'string' }) string: string;\n  @Column({ type: 'integer' }) integer: number;\n  @Column({ type: 'number' }) number: number;\n  @Column({ type: 'boolean' }) boolean: boolean;\n  @Column({ type: 'bigint' }) bigint: bigint;\n  @Column({ type: 'object', target: () => TestObject }) object: TestObject;\n  @Column({ type: 'array', items: { type: 'string' } }) array: string[];\n  @Column({ type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SingleValidationErrorDto.html":{"url":"classes/SingleValidationErrorDto.html","title":"class - SingleValidationErrorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SingleValidationErrorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dto/validation-error.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Single validation error dto\n\n            \n\n\n            \n                Implements\n            \n            \n                        SingleValidationError\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                constraints\n                            \n                            \n                                    \n                                    Optional\n                                property\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        constraints\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ValidationConstraintsDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'object', target: () => ValidationConstraintsDto})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:42\n                        \n                    \n\n            \n                \n                    The error constraints ValidationConstraintsDto\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        property\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:36\n                        \n                    \n\n            \n                \n                    The related property of the error\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type {\n  SingleValidationError,\n  ValidationConstraints,\n  ValidationErrorResult,\n} from '@puq/type';\nimport { Dto, Property } from '@puq/property';\nimport { HttpErrorDto } from './http-error.dto.js';\n\n/**\n * Validation error constraints dto\n */\n@Dto()\nexport class ValidationConstraintsDto implements ValidationConstraints {\n  @Property({ type: 'string' }) min?: string;\n  @Property({ type: 'string' }) max?: string;\n  @Property({ type: 'string' }) minLength?: string;\n  @Property({ type: 'string' }) maxLength?: string;\n  @Property({ type: 'string' }) isString?: string;\n  @Property({ type: 'string' }) isNumber?: string;\n  @Property({ type: 'string' }) isInt?: string;\n  @Property({ type: 'string' }) isBoolean?: string;\n  @Property({ type: 'string' }) isObject?: string;\n  @Property({ type: 'string' }) isArray?: string;\n  @Property({ type: 'string' }) arrayMinSize?: string;\n  @Property({ type: 'string' }) arrayMaxSize?: string;\n}\n\n/**\n * Single validation error dto\n */\n@Dto()\nexport class SingleValidationErrorDto implements SingleValidationError {\n  /**\n   * The related property of the error\n   */\n  @Property({ type: 'string' }) property?: string;\n\n  /**\n   * The error constraints {@link ValidationConstraintsDto}\n   */\n  @Property({ type: 'object', target: () => ValidationConstraintsDto })\n  constraints?: ValidationConstraintsDto;\n}\n\n/**\n * Validation error dto\n */\n@Dto()\nexport class ValidationErrorDto\n  extends HttpErrorDto\n  implements ValidationErrorResult\n{\n  /**\n   * List of validation errors {@link SingleValidationErrorDto}\n   */\n  @Property({\n    type: 'array',\n    items: { type: 'object', target: () => SingleValidationErrorDto },\n  })\n  errors?: SingleValidationErrorDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TableNamingStrategy.html":{"url":"classes/TableNamingStrategy.html","title":"class - TableNamingStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TableNamingStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/factory/naming-strategy.ts\n        \n\n\n            \n                Description\n            \n            \n                Database table and column naming strategy\n\n            \n\n            \n                Extends\n            \n            \n                        DefaultNamingStrategy\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                joinColumnName\n                            \n                            \n                                    \n                                joinTableColumnName\n                            \n                            \n                                    \n                                joinTableInverseColumnName\n                            \n                            \n                                    \n                                joinTableName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        joinColumnName\n                        \n                    \n                \n            \n            \n                \n                        \n                    joinColumnName(relationName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/factory/naming-strategy.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relationName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        joinTableColumnName\n                        \n                    \n                \n            \n            \n                \n                        \n                    joinTableColumnName(_tableName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/factory/naming-strategy.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _tableName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        joinTableInverseColumnName\n                        \n                    \n                \n            \n            \n                \n                        \n                    joinTableInverseColumnName(_tableName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/factory/naming-strategy.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _tableName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        joinTableName\n                        \n                    \n                \n            \n            \n                \n                        \n                    joinTableName(firstTableName: string, secondTableName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/factory/naming-strategy.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                firstTableName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                secondTableName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DefaultNamingStrategy } from 'typeorm';\n/**\n * Database table and column naming strategy\n */\nexport class TableNamingStrategy extends DefaultNamingStrategy {\n  override joinTableName(\n    firstTableName: string,\n    secondTableName: string,\n  ): string {\n    return `${firstTableName}_${secondTableName}`;\n  }\n\n  override joinColumnName(relationName: string): string {\n    return relationName;\n  }\n\n  override joinTableColumnName(_tableName: string): string {\n    return _tableName;\n  }\n\n  override joinTableInverseColumnName(_tableName: string): string {\n    return _tableName;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/TestEntity.html":{"url":"entities/TestEntity.html","title":"entity - TestEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  TestEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/better-sqlite3.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                array\n                            \n                            \n                                    \n                                attributes\n                            \n                            \n                                    \n                                bigint\n                            \n                            \n                                    \n                                boolean\n                            \n                            \n                                    \n                                date\n                            \n                            \n                                    \n                                integer\n                            \n                            \n                                    \n                                many\n                            \n                            \n                                    \n                                number\n                            \n                            \n                                    \n                                object\n                            \n                            \n                                    \n                                one\n                            \n                            \n                                    \n                                owner\n                            \n                            \n                                    \n                                string\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        array\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'array', items: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AttributeRelation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Relation({type: 'many-to-many', target: () => AttributeRelation, eager: true, required: false, cascade: undefined, join: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        bigint\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'bigint'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        boolean\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        integer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'integer'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        many\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ManyRelation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Relation({type: 'many-to-many', target: () => ManyRelation, eager: true, required: false, onDelete: 'SET NULL', join: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        object\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TestObject\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'object', target: () => TestObject})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        one\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OneRelation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Relation({type: 'many-to-one', target: () => OneRelation, eager: true, required: false, onDelete: 'SET NULL', join: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OwnerRelation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Relation({type: 'many-to-one', target: () => OwnerRelation, eager: true, required: false, onDelete: 'CASCADE', onUpdate: 'CASCADE', join: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        string\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:35\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) key: string;\n  @Column({ databaseType: 'sqlite', type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) string: string;\n  @Column({ databaseType: 'sqlite', type: 'integer' }) integer: number;\n  @Column({ databaseType: 'sqlite', type: 'number' }) number: number;\n  @Column({ databaseType: 'sqlite', type: 'boolean' }) boolean: boolean;\n  @Column({ databaseType: 'sqlite', type: 'bigint' }) bigint: bigint;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'object',\n    target: () => TestObject,\n  })\n  object: TestObject;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'array',\n    items: { type: 'string' },\n  })\n  array: string[];\n  @Column({ databaseType: 'sqlite', type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/TestEntity-1.html":{"url":"entities/TestEntity-1.html","title":"entity - TestEntity-1","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  TestEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/postgres.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                array\n                            \n                            \n                                    \n                                attributes\n                            \n                            \n                                    \n                                bigint\n                            \n                            \n                                    \n                                boolean\n                            \n                            \n                                    \n                                date\n                            \n                            \n                                    \n                                integer\n                            \n                            \n                                    \n                                many\n                            \n                            \n                                    \n                                number\n                            \n                            \n                                    \n                                object\n                            \n                            \n                                    \n                                one\n                            \n                            \n                                    \n                                owner\n                            \n                            \n                                    \n                                string\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        array\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'array', items: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AttributeRelation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Relation({type: 'many-to-many', target: () => AttributeRelation, eager: true, required: false, cascade: undefined, join: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        bigint\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        boolean\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        integer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'integer'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        many\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ManyRelation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Relation({type: 'many-to-many', target: () => ManyRelation, eager: true, required: false, onDelete: 'SET NULL', join: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        object\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TestObject\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'object', target: () => TestObject})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        one\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OneRelation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Relation({type: 'many-to-one', target: () => OneRelation, eager: true, required: false, onDelete: 'SET NULL', join: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OwnerRelation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Relation({type: 'many-to-one', target: () => OwnerRelation, eager: true, required: false, onDelete: 'CASCADE', onUpdate: 'CASCADE', join: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        string\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:35\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ type: 'string' }) key: string;\n  @Column({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ type: 'string' }) string: string;\n  @Column({ type: 'integer' }) integer: number;\n  @Column({ type: 'number' }) number: number;\n  @Column({ type: 'boolean' }) boolean: boolean;\n  @Column({ type: 'bigint' }) bigint: bigint;\n  @Column({ type: 'object', target: () => TestObject }) object: TestObject;\n  @Column({ type: 'array', items: { type: 'string' } }) array: string[];\n  @Column({ type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestObject.html":{"url":"classes/TestObject.html","title":"class - TestObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/better-sqlite3.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) key: string;\n  @Column({ databaseType: 'sqlite', type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) string: string;\n  @Column({ databaseType: 'sqlite', type: 'integer' }) integer: number;\n  @Column({ databaseType: 'sqlite', type: 'number' }) number: number;\n  @Column({ databaseType: 'sqlite', type: 'boolean' }) boolean: boolean;\n  @Column({ databaseType: 'sqlite', type: 'bigint' }) bigint: bigint;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'object',\n    target: () => TestObject,\n  })\n  object: TestObject;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'array',\n    items: { type: 'string' },\n  })\n  array: string[];\n  @Column({ databaseType: 'sqlite', type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestObject-1.html":{"url":"classes/TestObject-1.html","title":"class - TestObject-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/postgres.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ type: 'string' }) key: string;\n  @Column({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ type: 'string' }) string: string;\n  @Column({ type: 'integer' }) integer: number;\n  @Column({ type: 'number' }) number: number;\n  @Column({ type: 'boolean' }) boolean: boolean;\n  @Column({ type: 'bigint' }) bigint: bigint;\n  @Column({ type: 'object', target: () => TestObject }) object: TestObject;\n  @Column({ type: 'array', items: { type: 'string' } }) array: string[];\n  @Column({ type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateResultDto.html":{"url":"classes/UpdateResultDto.html","title":"class - UpdateResultDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateResultDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dto/update-result.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Update result\n\n            \n\n\n            \n                Implements\n            \n            \n                        UpdateResult\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                affected\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        affected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'integer', description: 'The number of items affected by the update operation'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/update-result.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type { UpdateResult } from '@puq/type';\nimport { Dto, Property } from '@puq/property';\n\n/**\n * Update result\n */\n@Dto()\nexport class UpdateResultDto implements UpdateResult {\n  @Property({\n    type: 'integer',\n    description: 'The number of items affected by the update operation',\n  })\n  affected: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationConstraintsDto.html":{"url":"classes/ValidationConstraintsDto.html","title":"class - ValidationConstraintsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationConstraintsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dto/validation-error.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Validation error constraints dto\n\n            \n\n\n            \n                Implements\n            \n            \n                        ValidationConstraints\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                arrayMaxSize\n                            \n                            \n                                    \n                                    Optional\n                                arrayMinSize\n                            \n                            \n                                    \n                                    Optional\n                                isArray\n                            \n                            \n                                    \n                                    Optional\n                                isBoolean\n                            \n                            \n                                    \n                                    Optional\n                                isInt\n                            \n                            \n                                    \n                                    Optional\n                                isNumber\n                            \n                            \n                                    \n                                    Optional\n                                isObject\n                            \n                            \n                                    \n                                    Optional\n                                isString\n                            \n                            \n                                    \n                                    Optional\n                                max\n                            \n                            \n                                    \n                                    Optional\n                                maxLength\n                            \n                            \n                                    \n                                    Optional\n                                min\n                            \n                            \n                                    \n                                    Optional\n                                minLength\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        arrayMaxSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        arrayMinSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isBoolean\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isInt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isObject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isString\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        max\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        maxLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        min\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        minLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type {\n  SingleValidationError,\n  ValidationConstraints,\n  ValidationErrorResult,\n} from '@puq/type';\nimport { Dto, Property } from '@puq/property';\nimport { HttpErrorDto } from './http-error.dto.js';\n\n/**\n * Validation error constraints dto\n */\n@Dto()\nexport class ValidationConstraintsDto implements ValidationConstraints {\n  @Property({ type: 'string' }) min?: string;\n  @Property({ type: 'string' }) max?: string;\n  @Property({ type: 'string' }) minLength?: string;\n  @Property({ type: 'string' }) maxLength?: string;\n  @Property({ type: 'string' }) isString?: string;\n  @Property({ type: 'string' }) isNumber?: string;\n  @Property({ type: 'string' }) isInt?: string;\n  @Property({ type: 'string' }) isBoolean?: string;\n  @Property({ type: 'string' }) isObject?: string;\n  @Property({ type: 'string' }) isArray?: string;\n  @Property({ type: 'string' }) arrayMinSize?: string;\n  @Property({ type: 'string' }) arrayMaxSize?: string;\n}\n\n/**\n * Single validation error dto\n */\n@Dto()\nexport class SingleValidationErrorDto implements SingleValidationError {\n  /**\n   * The related property of the error\n   */\n  @Property({ type: 'string' }) property?: string;\n\n  /**\n   * The error constraints {@link ValidationConstraintsDto}\n   */\n  @Property({ type: 'object', target: () => ValidationConstraintsDto })\n  constraints?: ValidationConstraintsDto;\n}\n\n/**\n * Validation error dto\n */\n@Dto()\nexport class ValidationErrorDto\n  extends HttpErrorDto\n  implements ValidationErrorResult\n{\n  /**\n   * List of validation errors {@link SingleValidationErrorDto}\n   */\n  @Property({\n    type: 'array',\n    items: { type: 'object', target: () => SingleValidationErrorDto },\n  })\n  errors?: SingleValidationErrorDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationErrorDto.html":{"url":"classes/ValidationErrorDto.html","title":"class - ValidationErrorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationErrorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dto/validation-error.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Validation error dto\n\n            \n\n\n            \n                Implements\n            \n            \n                        ValidationErrorResult\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                errors\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        errors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SingleValidationErrorDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'array', items: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:60\n                        \n                    \n\n            \n                \n                    List of validation errors SingleValidationErrorDto\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type {\n  SingleValidationError,\n  ValidationConstraints,\n  ValidationErrorResult,\n} from '@puq/type';\nimport { Dto, Property } from '@puq/property';\nimport { HttpErrorDto } from './http-error.dto.js';\n\n/**\n * Validation error constraints dto\n */\n@Dto()\nexport class ValidationConstraintsDto implements ValidationConstraints {\n  @Property({ type: 'string' }) min?: string;\n  @Property({ type: 'string' }) max?: string;\n  @Property({ type: 'string' }) minLength?: string;\n  @Property({ type: 'string' }) maxLength?: string;\n  @Property({ type: 'string' }) isString?: string;\n  @Property({ type: 'string' }) isNumber?: string;\n  @Property({ type: 'string' }) isInt?: string;\n  @Property({ type: 'string' }) isBoolean?: string;\n  @Property({ type: 'string' }) isObject?: string;\n  @Property({ type: 'string' }) isArray?: string;\n  @Property({ type: 'string' }) arrayMinSize?: string;\n  @Property({ type: 'string' }) arrayMaxSize?: string;\n}\n\n/**\n * Single validation error dto\n */\n@Dto()\nexport class SingleValidationErrorDto implements SingleValidationError {\n  /**\n   * The related property of the error\n   */\n  @Property({ type: 'string' }) property?: string;\n\n  /**\n   * The error constraints {@link ValidationConstraintsDto}\n   */\n  @Property({ type: 'object', target: () => ValidationConstraintsDto })\n  constraints?: ValidationConstraintsDto;\n}\n\n/**\n * Validation error dto\n */\n@Dto()\nexport class ValidationErrorDto\n  extends HttpErrorDto\n  implements ValidationErrorResult\n{\n  /**\n   * List of validation errors {@link SingleValidationErrorDto}\n   */\n  @Property({\n    type: 'array',\n    items: { type: 'object', target: () => SingleValidationErrorDto },\n  })\n  errors?: SingleValidationErrorDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/lib/common/pick-column-type.ts\n            \n            function\n            pickColumnType\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/common/pick-transformer.ts\n            \n            function\n            pickTransformer\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/decorator/column.ts\n            \n            function\n            Column\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/decorator/entity.ts\n            \n            function\n            Entity\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/decorator/relation.ts\n            \n            function\n            Relation\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/decorator/view-column.ts\n            \n            function\n            ViewColumn\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/decorator/view-entity.ts\n            \n            function\n            ViewEntity\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/dto/count-result.dto.ts\n            \n            class\n            CountResultDto\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                        src/lib/dto/create-relation-param-dto.ts\n            \n            function\n            CreateRelationParamDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/dto/create-unset-relation-param-dto.ts\n            \n            function\n            CreateUnsetRelationParamDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/dto/delete-result.dto.ts\n            \n            class\n            DeleteResultDto\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/lib/dto/http-error.dto.ts\n            \n            class\n            HttpErrorDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/lib/dto/update-result.dto.ts\n            \n            class\n            UpdateResultDto\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/lib/dto/validation-error.dto.ts\n            \n            class\n            SingleValidationErrorDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/lib/dto/validation-error.dto.ts\n            \n            class\n            ValidationConstraintsDto\n            \n                7 %\n                (1/13)\n            \n        \n        \n            \n                \n                src/lib/dto/validation-error.dto.ts\n            \n            class\n            ValidationErrorDto\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/lib/entity/base-id.ts\n            \n            class\n            BaseIdEntity\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/entity/base.ts\n            \n            class\n            BaseEntity\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                        src/lib/entity/base.ts\n            \n            variable\n            BASE_ENTITY_COLUMNS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/factory/naming-strategy.ts\n            \n            class\n            TableNamingStrategy\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/lib/integration/better-sqlite3.ts\n            \n            entity\n            AttributeRelation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/better-sqlite3.ts\n            \n            entity\n            ManyRelation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/better-sqlite3.ts\n            \n            entity\n            OneRelation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/better-sqlite3.ts\n            \n            entity\n            OwnerRelation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/better-sqlite3.ts\n            \n            entity\n            TestEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/better-sqlite3.ts\n            \n            class\n            TestObject\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/integration/postgres.ts\n            \n            entity\n            AttributeRelation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/postgres.ts\n            \n            entity\n            ManyRelation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/postgres.ts\n            \n            entity\n            OneRelation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/postgres.ts\n            \n            entity\n            OwnerRelation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/postgres.ts\n            \n            entity\n            TestEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/postgres.ts\n            \n            class\n            TestObject\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/query/common-query-dto.ts\n            \n            class\n            CommonQueryDto\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                        src/lib/query/create-find-operator.ts\n            \n            function\n            createFindOperator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/query/create-query-count-dto.ts\n            \n            function\n            CreateQueryCountDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/query/create-query-many-dto.ts\n            \n            function\n            CreateQueryManyDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/query/create-query-one-dto.ts\n            \n            function\n            CreateQueryOneDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/query/create-query-options.ts\n            \n            type alias\n            CreateQueryOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/query/create-where-option-dto.ts\n            \n            function\n            CreateWhereOptionDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/query/select-transformer.ts\n            \n            function\n            SelectTransformer\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/query/where-query-transformer.ts\n            \n            function\n            WhereQueryTransformer\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/service/base-entity.service.ts\n            \n            class\n            BaseEntityService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/service/entity-query.service.ts\n            \n            class\n            EntityQueryService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/lib/service/entity.service.ts\n            \n            class\n            EntityService\n            \n                21 %\n                (3/14)\n            \n        \n        \n            \n                \n                src/lib/view/base.view.ts\n            \n            class\n            BaseView\n            \n                20 %\n                (1/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @swc/helpers : ~0.5.15\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @puq/type : ^0.4.50\n        \n            @nestjs/common : ^11.0.11\n        \n            @nestjs/config : ^4.0.0\n        \n            class-transformer : ^0.5.1\n        \n            @nestjs/typeorm : ^11.0.0\n        \n            typeorm : ^0.3.20\n        \n            @puq/is : ^0.4.50\n        \n            @puq/property : ^0.4.50\n        \n            @puq/meta : ^0.4.60\n        \n            @puq/query : ^0.4.50\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Column   (src/.../column.ts)\n                        \n                        \n                            createFindOperator   (src/.../create-find-operator.ts)\n                        \n                        \n                            CreateQueryCountDto   (src/.../create-query-count-dto.ts)\n                        \n                        \n                            CreateQueryManyDto   (src/.../create-query-many-dto.ts)\n                        \n                        \n                            CreateQueryOneDto   (src/.../create-query-one-dto.ts)\n                        \n                        \n                            CreateRelationParamDto   (src/.../create-relation-param-dto.ts)\n                        \n                        \n                            CreateUnsetRelationParamDto   (src/.../create-unset-relation-param-dto.ts)\n                        \n                        \n                            CreateWhereOptionDto   (src/.../create-where-option-dto.ts)\n                        \n                        \n                            Entity   (src/.../entity.ts)\n                        \n                        \n                            pickColumnType   (src/.../pick-column-type.ts)\n                        \n                        \n                            pickTransformer   (src/.../pick-transformer.ts)\n                        \n                        \n                            Relation   (src/.../relation.ts)\n                        \n                        \n                            SelectTransformer   (src/.../select-transformer.ts)\n                        \n                        \n                            ViewColumn   (src/.../view-column.ts)\n                        \n                        \n                            ViewEntity   (src/.../view-entity.ts)\n                        \n                        \n                            WhereQueryTransformer   (src/.../where-query-transformer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/decorator/column.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Column\n                        \n                    \n                \n            \n            \n                \nColumn(options: PropertyOptions)\n                \n            \n\n\n\n\n            \n                \n                        Typeorm Column decorator with validation and documentation capabilities.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        PropertyOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    property options PropertyOptions\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     PropertyDecorator\n\n                        \n                            \n                                property decorator {@link PropertyDecorator}\n\n                            \n                \n            \n        \n    \n    src/lib/query/create-find-operator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createFindOperator\n                        \n                    \n                \n            \n            \n                \ncreateFindOperator(query: WhereOption)\n                \n            \n\n\n\n\n            \n                \n                        Create a typeorm find operator from WhereOption\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        WhereOption\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nWhereOption\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Record>\n\n                        \n                            \n                                \nTypeorm find operator\n\n\n                            \n                \n            \n        \n    \n    src/lib/query/create-query-count-dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CreateQueryCountDto\n                        \n                    \n                \n            \n            \n                \nCreateQueryCountDto(options: CreateQueryOptions)\n                \n            \n\n\n\n\n            \n                \n                        Create a query count dto\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            CreateQueryOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nCreateQueryOptions\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Type\n\n                        \n                            \n                                \nquery dto\n\n\n                            \n                \n            \n        \n    \n    src/lib/query/create-query-many-dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CreateQueryManyDto\n                        \n                    \n                \n            \n            \n                \nCreateQueryManyDto(options: CreateQueryOptions)\n                \n            \n\n\n\n\n            \n                \n                        Create query dto to query many entities\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            CreateQueryOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nCreateQueryOptions\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Type>\n\n                        \n                            \n                                \nquery dto\n\n\n                            \n                \n            \n        \n    \n    src/lib/query/create-query-one-dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CreateQueryOneDto\n                        \n                    \n                \n            \n            \n                \nCreateQueryOneDto(options: CreateQueryOptions)\n                \n            \n\n\n\n\n            \n                \n                        Create query dto to query a single entity\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            CreateQueryOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nCreateQueryOptions\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Type>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/dto/create-relation-param-dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CreateRelationParamDto\n                        \n                    \n                \n            \n            \n                \nCreateRelationParamDto(relations: Keys)\n                \n            \n\n\n\n\n            \n                \n                        Create DTO for RelationParam\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                relations\n                                            \n                                                        Keys\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    relation names of the entity\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Type\n\n                        \n                            \n                                Class {@link Type}\n\n                            \n                \n            \n        \n    \n    src/lib/dto/create-unset-relation-param-dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CreateUnsetRelationParamDto\n                        \n                    \n                \n            \n            \n                \nCreateUnsetRelationParamDto(relations: Keys)\n                \n            \n\n\n\n\n            \n                \n                        Create DTO for UnsetRelationParam\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                relations\n                                            \n                                                        Keys\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    relation names of the entity\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Type\n\n                        \n                            \n                                Class {@link Type}\n\n                            \n                \n            \n        \n    \n    src/lib/query/create-where-option-dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CreateWhereOptionDto\n                        \n                    \n                \n            \n            \n                \nCreateWhereOptionDto(options: CreateQueryOptions)\n                \n            \n\n\n\n\n            \n                \n                        Create where option dto\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            CreateQueryOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nCreateQueryOptions\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Type>\n\n                        \n                            \n                                \nwhere option dto\n\n\n                            \n                \n            \n        \n    \n    src/lib/decorator/entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Entity\n                        \n                    \n                \n            \n            \n                \nEntity(uniques?)\n                \n            \n\n\n\n\n            \n                \n                        Typeorm entity decorator with transformer capability\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                uniques\n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    Composite unique constraint must be set on entity classes and must specify entity's fields to be unique\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ClassDecorator\n\n                        \n                            \n                                \n{@link ClassDecorator}\n\n\n                            \n                \n            \n        \n    \n    src/lib/common/pick-column-type.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        pickColumnType\n                        \n                    \n                \n            \n            \n                \npickColumnType(options: PropertyOptions)\n                \n            \n\n\n\n\n            \n                \n                        Pick column type based on provided data type and database driver\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        PropertyOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ColumnType\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/common/pick-transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        pickTransformer\n                        \n                    \n                \n            \n            \n                \npickTransformer(options: PropertyOptions)\n                \n            \n\n\n\n\n            \n                \n                        Some databases do not support a certain data types such as sqlite does not support array type.\nThis function picks the transformer to make none-primitive data types compatible with the provided database driver\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        PropertyOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    property options PropertyOptions\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValueTransformer | undefined\n\n                        \n                            \n                                the {@link ValueTransformer}\n\n                            \n                \n            \n        \n    \n    src/lib/decorator/relation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Relation\n                        \n                    \n                \n            \n            \n                \nRelation(options: RelationOptions)\n                \n            \n\n\n\n\n            \n                \n                        Relation decorator\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            RelationOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    relation options RelationOptions\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     PropertyDecorator\n\n                        \n                            \n                                \n{@link PropertyDecorator}\n\n\n                            \n                \n            \n        \n    \n    src/lib/query/select-transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SelectTransformer\n                        \n                    \n                \n            \n            \n                \nSelectTransformer()\n                \n            \n\n\n\n\n            \n                \n                        Transform the select query param into string array\n\n\n                        \n                            Returns :     PropertyDecorator\n\n                        \n                \n            \n        \n    \n    src/lib/decorator/view-column.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ViewColumn\n                        \n                    \n                \n            \n            \n                \nViewColumn(options: PropertyOptions)\n                \n            \n\n\n\n\n            \n                \n                        TypeORM ___ViewColumn decorator with documentation capability\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        PropertyOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    property options PropertyOptions\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     PropertyDecorator\n\n                        \n                            \n                                \n{@link PropertyDecorator}\n\n\n                            \n                \n            \n        \n    \n    src/lib/decorator/view-entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ViewEntity\n                        \n                    \n                \n            \n            \n                \nViewEntity(expression, selectBaseEntity)\n                \n            \n\n\n\n\n            \n                \n                        TypeORM ___ViewEntity decorator with prebuilt query builder that coverts id and timestamp columns.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expression\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    SelectQueryBuilder query builder\n\n                                            \n                                        \n                                        \n                                                selectBaseEntity\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                            \n                                                    defined whether the fields of BaseEntity class are added or not to the view\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ClassDecorator\n\n                        \n                            \n                                class decorator {@link ClassDecorator}\n\n                            \n                \n            \n        \n    \n    src/lib/query/where-query-transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        WhereQueryTransformer\n                        \n                    \n                \n            \n            \n                \nWhereQueryTransformer(options: CreateQueryOptions)\n                \n            \n\n\n\n\n            \n                \n                        Where query transformer\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            CreateQueryOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     PropertyDecorator\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n@puq/orm\nSummary\nThe custom TypeORM decorators extend standard entity definitions by seamlessly integrating validation and API documentation within a single decorator. These decorators ensure that database entities are not only mapped efficiently but also validated at the DTO level while providing clear API documentation using Swagger.\nDatabase entity development is streamlined through the integration of intuitive and widely adopted implementations within decorators. These decorators are paired with class-validator, class-transformer, and @nestjs/swagger, enhancing efficiency in the development process. This approach achieves a minimum reduction of 60% in both code volume and associated errors.\nInstall\nExample :  pnpm add @puq/ormSQLite\n\nSQLite does not support array or object data types. To accommodate this limitation, data must be transformed into a string format.\n\nPostgres Datasource\nTo optimize datasource performance, implement the following configuration settings:\n\npoolSize: Set to 50. This defines the maximum number of connections allowed in the pool, ensuring efficient resource utilization while accommodating peak demand.\nmin: Set to 10. This specifies the minimum number of connections maintained in the pool, keeping a baseline of readily available connections to reduce latency during low-traffic periods.\nmax: Set to 50. This establishes the upper limit of open connections, balancing system performance with resource availability to prevent overloading.\nidleTimeoutMillis: Configure to 30,000 milliseconds. This determines the duration an idle connection remains open before being closed, minimizing unnecessary resource consumption during periods of inactivity.\nconnectionTimeoutMillis: Configure to 2,000 milliseconds. This sets the maximum time allowed to establish a connection, enhancing application responsiveness by preventing prolonged delays.\n\nPostgres Server\nAdjust the PostgreSQL server configuration file (postgres.conf) with the following settings:\n\nmax_connections: Set to 200 to accommodate both application and administrative connections, ensuring sufficient capacity.\nshared_buffers: Allocate 25-40% of the server's RAM for optimal performance, configured to 4GB.\nwork_mem: Define the memory allocation per query or sort operation, set to 16MB to enhance query efficiency.\n\nNumbers\n\nThe number data type is stored as a string (numeric) to ensure the preservation of precision.\nThe number value is not converted to a JavaScript number to avoid disrupting query operations.\n\nTypeorm Column Transformer\n\nRefrain from using TypeORM column transformers, as they may interfere with query operations. Instead, implement transformations within the data transfer layer.\n\nHashing and encrypion\n\nHashing should be done in database layer. Typeorom column transformer is safe to use\nEncryption is done in controller layer\nFor handling encrypted data, implement a dedicated data transfer object (DTO) class and apply it subsequent to the execution of the initial DTO class within the controller\n\nFunding\nThank you for using @puq/orm It's an open-source project, and maintaining it takes time and effort. If you find this library useful, please consider supporting its ongoing development. Your contributions help ensure that the project stays up-to-date, secure, and well-maintained.\nInstant Funding\nYour funding will go toward\n\nBug fixes and updates to ensure compatibility with the latest versions of dependencies.\nNew features that will make the library even more powerful.\nDocumentation improvements to help users get the most out of [Your Library Name].\nGeneral maintenance to keep the library running smoothly and securely.\n\nContact to the developer: [robert.brightline@gmail.com]\nSupport the developer\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    10 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    17 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.5.0\n        \n            Description : The custom TypeORM decorators extend standard entity definitions by seamlessly integrating validation and API documentation within a single decorator. These decorators ensure that database entities are not only mapped efficiently but also validated at the DTO level while providing clear API documentation using Swagger.\n        \n            Keywords : puq, orm\n        \n            Homepage : https://rbrightline.github.io/puq/orm\n        \n            Bugs : https://rbrightline.github.io\n        \n            License : MIT\n        \n            Repository : https://github.com/rbrightline/puq/tree/main\n        \n            Author : Robert Brightline\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CreateQueryOptions   (src/.../create-query-options.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/query/create-query-options.ts\n    \n    \n        \n            \n                \n                    \n                    CreateQueryOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BASE_ENTITY_COLUMNS   (src/.../base.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/entity/base.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BASE_ENTITY_COLUMNS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.keys(new BaseEntity())\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
