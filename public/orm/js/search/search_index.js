var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/entities/AttributeRelation.html",[0,0.226,1,0.977]],["body/entities/AttributeRelation.html",[0,0.374,1,1.464,2,0.645,3,0.241,4,0.131,5,0.185,6,2.394,7,1.425,8,0.185,9,0.48,10,1.652,11,1.365,12,0.313,13,0.028,14,1.224,15,0.48,16,2.432,17,3.039,18,0.347,19,2.817,20,2.817,21,0.469,22,0.577,23,0.527,24,0.402,25,1.551,26,0.984,27,0.984,28,1.704,29,0.984,30,1.505,31,0.984,32,0.488,33,0.38,34,1.34,35,1.34,36,1.165,37,3.523,38,1.365,39,1.34,40,1.701,41,1.34,42,1.412,43,0.798,44,0.86,45,0.945,46,1.541,47,1.652,48,1.068,49,1.551,50,0.995,51,0.599,52,1.145,53,1.806,54,1.701,55,1.684,56,1.684,57,1.652,58,1.145,59,1.412,60,1.806,61,1.652,62,0.984,63,0.984,64,0.984,65,0.016,66,0.016]],["title/entities/AttributeRelation-1.html",[0,0.191,1,0.823,67,1.26]],["body/entities/AttributeRelation-1.html",[0,0.38,1,1.5,2,0.68,3,0.254,4,0.139,5,0.195,8,0.195,9,0.498,10,1.701,11,1.398,12,0.313,13,0.028,14,1.231,15,0.498,18,0.36,21,0.479,22,0.599,23,0.548,24,0.424,25,1.582,26,1.037,27,1.037,28,1.719,29,1.037,30,1.531,31,1.037,32,0.497,33,0.387,34,1.38,35,1.38,36,1.189,38,1.398,39,1.38,40,1.725,41,1.38,42,1.466,43,0.841,44,0.893,45,0.968,46,1.586,47,1.701,48,1.109,49,1.582,50,1.033,51,0.632,52,1.189,53,1.849,54,1.725,55,1.724,56,1.724,57,1.701,58,1.189,59,1.466,60,1.849,61,1.701,62,1.037,63,1.037,64,1.037,65,0.017,66,0.017,68,1.502,69,2.524,70,2.969,71,2.969]],["title/classes/BaseEntity.html",[30,0.911,33,0.23]],["body/classes/BaseEntity.html",[0,0.384,2,1.136,3,0.325,4,0.177,5,0.249,8,0.249,9,0.589,12,0.301,13,0.027,14,1.141,15,0.696,18,0.503,21,0.503,23,0.765,24,0.542,30,1.46,32,0.425,33,0.253,36,1.248,45,0.694,52,1.566,65,0.02,66,0.02,72,0.749,73,2.808,74,1.075,75,4.963,76,3.225,77,5.132,78,5.132,79,5.132,80,3.672,81,3.887,82,1.999,83,3.325,84,1.91,85,3.795,86,3.795,87,3.795,88,3.795,89,3.795,90,3.795,91,3.2,92,3.2,93,3.795,94,1.236,95,4.963,96,4.963,97,4.963,98,1.422,99,2.808,100,3.795,101,2.515,102,2.808,103,3.2]],["title/classes/BaseEntityService.html",[33,0.23,104,2.287]],["body/classes/BaseEntityService.html",[3,0.412,4,0.225,5,0.315,12,0.288,13,0.027,18,0.412,21,0.493,32,0.412,33,0.321,65,0.023,66,0.023,72,0.95,83,2.893,94,1.567,98,1.804,104,3.816,105,4.855,106,4.057,107,4.812,108,4.812,109,5.588,110,4.812,111,2.646,112,2.435,113,1.938,114,4.057,115,4.057]],["title/classes/BaseIdEntity.html",[33,0.23,81,2.287]],["body/classes/BaseIdEntity.html",[3,0.4,4,0.218,5,0.306,8,0.306,9,0.67,12,0.284,13,0.027,15,0.553,18,0.4,21,0.521,23,0.737,24,0.665,32,0.4,33,0.311,44,0.992,45,1.033,65,0.022,66,0.022,72,0.921,76,3.343,81,3.745,82,2.276,84,1.518,91,3.932,94,1.518,98,1.748,116,4.765,117,3.932,118,4.498,119,4.663,120,5.65]],["title/classes/BaseView.html",[33,0.23,121,2.553]],["body/classes/BaseView.html",[0,0.338,3,0.345,4,0.188,5,0.264,8,0.264,9,0.611,12,0.308,13,0.027,14,1.159,15,0.711,18,0.514,21,0.442,32,0.345,33,0.268,44,1.096,45,0.942,52,1.796,65,0.02,66,0.02,72,0.794,74,1.139,76,3.409,77,4.794,78,4.794,79,4.794,80,3.813,82,2.075,83,3.418,94,1.31,99,3.813,121,3.813,122,3.392,123,4.345,124,5.153,125,5.153,126,5.996,127,4.022,128,4.022,129,4.022,130,4.022,131,4.586,132,4.022,133,4.022]],["title/classes/CommonQueryDto.html",[33,0.23,134,2.553]],["body/classes/CommonQueryDto.html",[3,0.386,4,0.21,5,0.295,8,0.295,9,0.656,12,0.258,13,0.027,15,0.534,18,0.386,21,0.386,22,0.891,23,0.721,24,0.642,32,0.386,33,0.3,46,2.033,51,1.176,56,1.801,65,0.022,66,0.022,72,0.889,74,1.695,84,1.466,113,2.227,134,4.092,135,4.663,136,2.919,137,3.331,138,4.663,139,5.986,140,5.53,141,5.53,142,5.53,143,4.092,144,4.501]],["title/classes/CountResultDto.html",[33,0.23,145,2.553]],["body/classes/CountResultDto.html",[3,0.386,4,0.21,5,0.295,8,0.295,9,0.656,12,0.279,13,0.027,15,0.534,18,0.386,21,0.474,22,0.789,23,0.721,24,0.642,32,0.386,33,0.3,44,1.176,45,1.141,51,1.176,65,0.022,66,0.022,72,0.889,74,1.695,82,2.227,84,1.466,94,1.466,136,2.586,145,4.092,146,4.663,147,2.984,148,3.853,149,4.092,150,5.047,151,5.53,152,3.331]],["title/modules/DataSourceModule.html",[153,2.553,154,2.553]],["body/modules/DataSourceModule.html",[0,0.344,2,0.781,3,0.292,4,0.245,5,0.224,12,0.262,13,0.028,18,0.449,21,0.531,32,0.292,33,0.227,54,1.309,65,0.018,66,0.018,82,1.373,98,1.278,101,3.475,111,2.541,112,2.338,113,1.861,114,2.875,115,2.875,153,4.158,154,4.158,155,2.523,156,3.725,157,3.41,158,2.26,159,5.62,160,3.41,161,4.621,162,4.105,163,3.41,164,4.158,165,3.152,166,5.873,167,3.41,168,4.621,169,3.41,170,3.42,171,5.873,172,3.41,173,3.42,174,3.42,175,3.42,176,3.897,177,3.41,178,4.621,179,4.42,180,2.875,181,4.952,182,3.063,183,4.621,184,2.523,185,3.475,186,3.41,187,3.41,188,3.897,189,2.875,190,3.41,191,3.41,192,3.063,193,3.41,194,3.41,195,3.41,196,3.897,197,4.621,198,4.621,199,4.621,200,3.41,201,2.523,202,3.41]],["title/classes/DeleteResultDto.html",[33,0.23,203,2.553]],["body/classes/DeleteResultDto.html",[3,0.382,4,0.208,5,0.292,8,0.292,9,0.652,12,0.278,13,0.027,15,0.529,18,0.382,21,0.471,22,0.888,23,0.717,24,0.636,32,0.382,33,0.297,44,1.169,45,1.137,51,1.169,65,0.022,66,0.022,72,0.88,74,1.688,82,2.214,84,1.451,94,1.451,147,2.954,149,4.067,152,3.298,203,4.067,204,4.635,205,5.246,206,5.96,207,4.729,208,4.067]],["title/classes/EntityQueryService.html",[33,0.23,209,2.287]],["body/classes/EntityQueryService.html",[0,0.324,2,0.863,3,0.219,4,0.119,5,0.168,8,0.168,12,0.279,13,0.028,18,0.472,21,0.472,32,0.219,33,0.171,36,0.802,38,1.545,65,0.015,66,0.015,72,0.505,74,1.268,76,3.217,83,1.538,94,0.833,98,1.414,99,1.893,101,2.968,104,2.968,111,3.032,112,2.79,113,2.22,118,4.218,136,3.098,148,3.168,150,2.158,158,2.5,165,3.703,170,4.611,173,1.893,185,3.654,192,2.5,201,3.657,209,2.5,210,4.807,211,2.158,212,3.771,213,2.79,214,3.314,215,3.18,216,3.18,217,3.776,218,3.18,219,3.18,220,4.167,221,2.559,222,3.18,223,3.18,224,4.648,225,2.559,226,3.18,227,5.465,228,2.559,229,3.18,230,2.559,231,3.878,232,3.776,233,2.158,234,2.559,235,4.167,236,2.074,237,3.18,238,2.559,239,3.771,240,3.18,241,2.158,242,2.559,243,4.479,244,3.771,245,3.771,246,3.771,247,3.771,248,2.559,249,2.559,250,2.559,251,2.559,252,2.559,253,2.559,254,2.267,255,3.771,256,5.513,257,2.559,258,2.158,259,2.559,260,2.559]],["title/classes/EntityService.html",[33,0.23,261,2.553]],["body/classes/EntityService.html",[0,0.418,2,0.972,3,0.138,4,0.075,5,0.106,8,0.106,11,1.323,12,0.289,13,0.028,18,0.516,21,0.364,23,0.654,25,1.732,32,0.138,33,0.108,36,0.561,38,1.323,40,1.29,58,0.746,65,0.01,66,0.01,67,1.975,72,0.319,74,0.945,76,3.244,83,0.97,92,3.841,94,0.526,98,0.988,101,3.019,111,3.309,112,3.045,113,2.424,118,4.614,136,2.553,148,2.007,158,1.746,165,3.866,170,4.525,185,3.692,201,2.851,205,3.841,207,2.851,209,3.437,213,1.95,214,2.317,215,2.222,216,2.222,217,2.222,218,2.222,219,1.361,220,2.222,222,4.779,223,1.361,224,2.815,226,1.361,227,4.497,229,1.361,231,4.022,232,2.815,233,1.361,235,1.361,236,0.888,237,1.361,240,2.815,258,2.222,261,1.95,262,1.361,263,2.635,264,2.635,265,2.851,266,2.851,267,2.635,268,3.853,269,4.555,270,2.635,271,2.635,272,2.635,273,2.635,274,3.249,275,2.635,276,4.497,277,1.614,278,2.222,279,2.635,280,5.012,281,3.853,282,1.614,283,2.635,284,1.614,285,2.635,286,3.853,287,2.635,288,3.853,289,1.614,290,2.635,291,1.614,292,2.635,293,2.635,294,1.614,295,2.635,296,4.806,297,1.614,298,2.635,299,1.614,300,2.635,301,1.614,302,2.635,303,1.614,304,2.635,305,2.635,306,3.249,307,1.614,308,1.95,309,2.635,310,3.853,311,1.614,312,1.614,313,1.614,314,1.614,315,1.614,316,1.614,317,1.614,318,1.614,319,1.614,320,1.361,321,1.614,322,1.614,323,1.614,324,1.614,325,1.614,326,1.614,327,1.614,328,1.614,329,1.614,330,3.338,331,3.58,332,3.853,333,3.853,334,3.853,335,3.853,336,1.614,337,1.614,338,1.614,339,1.614]],["title/classes/HttpErrorDto.html",[33,0.23,340,1.898]],["body/classes/HttpErrorDto.html",[3,0.373,4,0.203,5,0.285,8,0.285,9,0.642,12,0.288,13,0.028,14,1.128,15,0.642,18,0.464,21,0.373,22,0.773,23,0.769,24,0.621,32,0.373,33,0.29,44,1.152,45,0.99,65,0.021,66,0.021,72,0.859,74,1.232,84,1.763,138,4.565,236,3.393,340,2.978,341,4.971,342,2.615,343,5.414,344,6.346,345,5.895,346,4.35,347,3.668,348,5.414,349,4.565]],["title/classes/IDDto.html",[33,0.23,350,2.553]],["body/classes/IDDto.html",[3,0.408,4,0.222,5,0.312,8,0.312,9,0.679,12,0.267,13,0.027,15,0.565,18,0.408,21,0.408,22,0.816,23,0.746,24,0.679,32,0.408,33,0.318,44,1.217,45,1.046,54,1.62,55,1.863,65,0.023,66,0.023,67,2.48,72,0.94,76,3.373,84,1.55,350,4.234,351,4.015,352,4.825,353,4.761]],["title/entities/ManyRelation.html",[0,0.226,39,0.977]],["body/entities/ManyRelation.html",[0,0.376,1,1.357,2,0.659,3,0.247,4,0.134,5,0.189,6,2.079,7,1.457,8,0.189,9,0.487,10,1.006,11,1.085,12,0.312,13,0.028,14,1.219,15,0.342,16,1.731,17,3.029,18,0.247,21,0.473,22,0.586,23,0.536,24,0.411,25,1.564,26,1.006,27,1.006,28,1.71,29,1.006,30,1.516,31,1.006,32,0.492,33,0.383,34,1.357,35,1.357,36,1.175,37,3.537,38,1.379,39,1.479,40,1.767,41,1.357,42,1.435,43,0.815,44,0.874,45,0.955,46,1.56,47,1.673,48,1.085,49,1.564,50,1.011,51,0.613,52,1.164,53,1.824,54,1.711,55,1.701,56,1.701,57,1.673,58,1.164,59,1.435,60,1.824,61,1.673,62,1.006,63,1.006,64,1.006,65,0.016,66,0.016,354,2.879]],["title/entities/ManyRelation-1.html",[0,0.191,39,0.823,67,1.26]],["body/entities/ManyRelation-1.html",[0,0.382,1,1.393,2,0.692,3,0.259,4,0.141,5,0.198,8,0.198,9,0.504,10,1.056,11,1.123,12,0.313,13,0.028,14,1.226,15,0.359,18,0.259,21,0.482,22,0.607,23,0.555,24,0.431,25,1.593,26,1.056,27,1.056,28,1.724,29,1.056,30,1.541,31,1.056,32,0.5,33,0.389,34,1.393,35,1.393,36,1.197,38,1.409,39,1.512,40,1.785,41,1.393,42,1.485,43,0.856,44,0.905,45,0.976,46,1.602,47,1.718,48,1.123,49,1.593,50,1.046,51,0.643,52,1.204,53,1.864,54,1.733,55,1.738,56,1.738,57,1.718,58,1.204,59,1.485,60,1.864,61,1.718,62,1.056,63,1.056,64,1.056,65,0.017,66,0.017,68,1.53,69,1.818,355,3.023]],["title/entities/OneRelation.html",[0,0.226,35,0.977]],["body/entities/OneRelation.html",[0,0.376,1,1.357,2,0.659,3,0.247,4,0.134,5,0.189,6,2.079,7,1.457,8,0.189,9,0.487,10,1.006,11,1.085,12,0.312,13,0.028,14,1.219,15,0.342,16,1.731,17,3.029,18,0.247,21,0.473,22,0.586,23,0.536,24,0.411,25,1.564,26,1.006,27,1.006,28,1.71,29,1.006,30,1.516,31,1.006,32,0.492,33,0.383,34,1.357,35,1.479,36,1.175,37,3.537,38,1.516,39,1.357,40,1.711,41,1.357,42,1.435,43,0.815,44,0.874,45,0.955,46,1.56,47,1.673,48,1.085,49,1.564,50,1.011,51,0.613,52,1.164,53,1.824,54,1.711,55,1.701,56,1.701,57,1.673,58,1.164,59,1.435,60,1.824,61,1.673,62,1.006,63,1.006,64,1.006,65,0.016,66,0.016,356,2.879]],["title/entities/OneRelation-1.html",[0,0.191,35,0.823,67,1.26]],["body/entities/OneRelation-1.html",[0,0.382,1,1.393,2,0.692,3,0.259,4,0.141,5,0.198,8,0.198,9,0.504,10,1.056,11,1.123,12,0.313,13,0.028,14,1.226,15,0.359,18,0.259,21,0.482,22,0.607,23,0.555,24,0.431,25,1.593,26,1.056,27,1.056,28,1.724,29,1.056,30,1.541,31,1.056,32,0.5,33,0.389,34,1.393,35,1.512,36,1.197,38,1.541,39,1.393,40,1.733,41,1.393,42,1.485,43,0.856,44,0.905,45,0.976,46,1.602,47,1.718,48,1.123,49,1.593,50,1.046,51,0.643,52,1.204,53,1.864,54,1.733,55,1.738,56,1.738,57,1.718,58,1.204,59,1.485,60,1.864,61,1.718,62,1.056,63,1.056,64,1.056,65,0.017,66,0.017,68,1.53,69,1.818,357,3.023]],["title/entities/OwnerRelation.html",[0,0.226,41,0.977]],["body/entities/OwnerRelation.html",[0,0.376,1,1.357,2,0.659,3,0.247,4,0.134,5,0.189,6,2.079,7,1.457,8,0.189,9,0.487,10,1.006,11,1.085,12,0.312,13,0.028,14,1.219,15,0.342,16,1.731,17,3.029,18,0.247,21,0.473,22,0.586,23,0.536,24,0.411,25,1.564,26,1.006,27,1.006,28,1.71,29,1.006,30,1.516,31,1.006,32,0.492,33,0.383,34,1.357,35,1.357,36,1.175,37,3.537,38,1.379,39,1.357,40,1.711,41,1.479,42,1.824,43,0.815,44,0.874,45,0.955,46,1.56,47,1.673,48,1.085,49,1.564,50,1.011,51,0.613,52,1.164,53,1.824,54,1.711,55,1.701,56,1.701,57,1.673,58,1.164,59,1.435,60,1.824,61,1.673,62,1.006,63,1.006,64,1.006,65,0.016,66,0.016,358,2.879]],["title/entities/OwnerRelation-1.html",[0,0.191,41,0.823,67,1.26]],["body/entities/OwnerRelation-1.html",[0,0.382,1,1.393,2,0.692,3,0.259,4,0.141,5,0.198,8,0.198,9,0.504,10,1.056,11,1.123,12,0.313,13,0.028,14,1.226,15,0.359,18,0.259,21,0.482,22,0.607,23,0.555,24,0.431,25,1.593,26,1.056,27,1.056,28,1.724,29,1.056,30,1.541,31,1.056,32,0.5,33,0.389,34,1.393,35,1.393,36,1.197,38,1.409,39,1.393,40,1.733,41,1.512,42,1.864,43,0.856,44,0.905,45,0.976,46,1.602,47,1.718,48,1.123,49,1.593,50,1.046,51,0.643,52,1.204,53,1.864,54,1.733,55,1.738,56,1.738,57,1.718,58,1.204,59,1.485,60,1.864,61,1.718,62,1.056,63,1.056,64,1.056,65,0.017,66,0.017,68,1.53,69,1.818,359,3.023]],["title/classes/SingleValidationErrorDto.html",[33,0.23,360,2.075]],["body/classes/SingleValidationErrorDto.html",[3,0.268,4,0.146,5,0.205,8,0.205,9,0.517,12,0.313,13,0.028,14,1.252,15,0.517,18,0.373,21,0.429,22,0.881,23,0.881,24,0.446,32,0.429,33,0.334,36,0.665,48,1.323,49,1.419,50,0.769,51,0.665,65,0.017,66,0.017,72,0.617,74,0.886,82,2.182,84,1.418,94,1.018,113,2.182,236,3.394,254,2.618,340,2.395,342,1.88,360,3.425,361,3.321,362,2.395,363,3.133,364,3.707,365,4.364,366,3.638,367,3.128,368,3.128,369,3.222,370,3.222,371,3.222,372,2.314,373,2.314,374,2.073,375,2.073,376,2.314,377,2.314,378,2.314,379,2.314,380,2.314,381,2.314,382,2.314,383,2.314,384,2.314,385,2.314,386,1.88,387,2.314,388,2.887]],["title/classes/TableNamingStrategy.html",[33,0.23,389,2.553]],["body/classes/TableNamingStrategy.html",[3,0.323,4,0.176,5,0.247,8,0.247,12,0.273,13,0.027,14,1.261,18,0.501,21,0.323,28,1.305,32,0.323,33,0.252,36,1.051,65,0.02,66,0.02,72,0.744,74,1.068,98,1.414,111,3.217,112,2.961,113,2.356,158,3.276,165,3.517,185,3.878,331,4.167,389,3.657,390,5.122,391,3.18,392,3.276,393,4.167,394,4.942,395,4.942,396,5.513,397,4.942,398,4.942,399,4.942,400,5.513,401,4.942,402,3.771,403,4.942,404,3.771,405,5.851,406,4.942,407,3.771,408,3.771,409,5.513,410,3.771,411,4.942,412,5.851,413,3.771]],["title/entities/TestEntity.html",[0,0.226,43,0.977]],["body/entities/TestEntity.html",[0,0.34,1,1.391,2,0.497,3,0.186,4,0.101,5,0.142,6,3.082,7,1.099,8,0.142,9,0.395,10,0.759,11,0.88,12,0.315,13,0.028,14,1.196,15,0.713,16,3.347,17,3.021,18,0.515,21,0.421,22,0.476,23,0.435,24,0.31,25,1.391,26,0.759,27,0.759,28,1.625,29,0.759,30,1.368,31,0.759,32,0.444,33,0.346,34,1.391,35,1.391,36,1.045,37,3.349,38,1.47,39,1.391,40,1.775,41,1.391,42,1.59,43,0.944,44,1.045,45,1.044,46,1.757,47,1.81,48,1.296,49,1.651,50,1.208,51,0.709,52,1.391,53,1.944,54,1.775,55,1.813,56,1.813,57,1.81,58,1.289,59,1.59,60,1.944,61,1.81,62,1.165,63,0.759,64,1.417,65,0.013,66,0.013,414,2.21,415,2.173,416,3.838,417,2.173,418,2.173,419,2.173,420,2.173,421,2.173,422,2.173,423,2.173,424,2.173,425,2.173,426,2.173,427,2.173]],["title/entities/TestEntity-1.html",[0,0.191,43,0.823,67,1.26]],["body/entities/TestEntity-1.html",[0,0.349,1,1.433,2,0.532,3,0.199,4,0.109,5,0.152,8,0.152,9,0.417,10,0.812,11,0.927,12,0.313,13,0.028,14,1.206,15,0.724,18,0.523,21,0.434,22,0.501,23,0.458,24,0.332,25,1.433,26,0.812,27,0.812,28,1.647,29,0.812,30,1.405,31,0.812,32,0.456,33,0.355,34,1.433,35,1.433,36,1.077,38,1.502,39,1.433,40,1.796,41,1.433,42,1.646,43,0.995,44,1.077,45,1.064,46,1.799,47,1.858,48,1.336,49,1.68,50,1.245,51,0.747,52,1.433,53,1.986,54,1.796,55,1.852,56,1.852,57,1.858,58,1.335,59,1.646,60,1.986,61,1.858,62,1.227,63,0.812,64,1.478,65,0.014,66,0.014,68,1.177,69,3.42,414,2.328,416,3.975,428,2.326,429,2.326,430,2.326,431,2.326,432,2.326,433,2.326,434,2.326,435,2.326,436,2.326,437,2.326,438,2.326,439,2.326]],["title/classes/TestObject.html",[33,0.23,34,0.977]],["body/classes/TestObject.html",[0,0.377,1,1.359,3,0.248,4,0.135,5,0.189,6,2.084,7,1.462,8,0.189,9,0.488,10,1.009,11,1.381,12,0.311,13,0.028,14,1.22,15,0.343,17,3.009,18,0.248,21,0.474,22,0.588,23,0.537,24,0.412,25,1.566,26,1.009,27,1.009,28,1.711,29,1.009,30,1.518,31,1.009,32,0.493,33,0.383,34,1.481,35,1.359,36,1.176,37,3.539,38,1.381,39,1.359,40,1.713,41,1.359,42,1.438,43,0.818,44,0.876,45,0.956,46,1.562,47,1.676,48,1.087,49,1.566,50,1.013,51,0.615,52,1.166,53,1.827,54,1.713,55,1.703,56,1.703,57,1.676,58,1.166,59,1.438,60,1.827,61,1.676,62,1.009,63,1.009,64,1.009,65,0.016,66,0.016,72,0.57,84,0.941,440,2.889]],["title/classes/TestObject-1.html",[33,0.194,34,0.823,67,1.26]],["body/classes/TestObject-1.html",[0,0.382,1,1.393,3,0.259,4,0.141,5,0.198,8,0.198,9,0.504,10,1.056,11,1.409,12,0.313,13,0.028,14,1.226,15,0.359,18,0.259,21,0.482,22,0.607,23,0.555,24,0.431,25,1.593,26,1.056,27,1.056,28,1.724,29,1.056,30,1.541,31,1.056,32,0.5,33,0.389,34,1.512,35,1.393,36,1.197,38,1.409,39,1.393,40,1.733,41,1.393,42,1.485,43,0.856,44,0.905,45,0.976,46,1.602,47,1.718,48,1.123,49,1.593,50,1.046,51,0.643,52,1.204,53,1.864,54,1.733,55,1.738,56,1.738,57,1.718,58,1.204,59,1.485,60,1.864,61,1.718,62,1.056,63,1.056,64,1.056,65,0.017,66,0.017,68,1.53,72,0.597,84,0.984,441,3.023]],["title/classes/UpdateResultDto.html",[33,0.23,442,2.553]],["body/classes/UpdateResultDto.html",[3,0.384,4,0.209,5,0.294,8,0.294,9,0.654,12,0.279,13,0.027,15,0.531,18,0.384,21,0.472,22,0.787,23,0.719,24,0.639,32,0.384,33,0.299,44,1.173,45,1.139,51,1.173,65,0.022,66,0.022,72,0.884,74,1.692,82,2.22,84,1.458,94,1.458,147,2.969,149,4.079,152,3.314,207,4.735,208,4.079,274,5.255,320,5.036,442,4.079,443,4.649]],["title/classes/ValidationConstraintsDto.html",[33,0.23,366,2.075]],["body/classes/ValidationConstraintsDto.html",[3,0.219,4,0.119,5,0.167,8,0.167,9,0.447,12,0.315,13,0.028,14,1.264,15,0.739,18,0.534,21,0.383,22,0.834,23,0.85,24,0.365,32,0.383,33,0.298,36,0.544,48,0.995,49,1.067,50,0.628,51,0.544,65,0.015,66,0.015,72,0.504,74,0.724,82,1.989,84,2.029,94,0.832,113,2.685,236,3.03,254,2.265,340,2.072,342,1.536,347,2.154,360,2.969,361,4.172,362,1.405,363,2.896,364,2.788,365,3.654,366,3.166,369,1.891,370,3.311,371,2.788,372,1.891,373,1.891,374,2.966,375,2.966,376,3.311,377,3.311,378,3.311,379,3.311,380,3.311,381,3.311,382,3.311,383,3.311,384,3.311,385,3.311,386,1.536,387,1.891,388,2.497,444,2.555,445,2.555,446,2.555,447,2.555,448,2.555,449,2.555,450,2.555,451,2.555,452,2.555,453,2.555,454,2.555]],["title/classes/ValidationErrorDto.html",[33,0.23,386,2.075]],["body/classes/ValidationErrorDto.html",[3,0.277,4,0.151,5,0.212,8,0.212,9,0.529,12,0.313,13,0.028,14,1.252,15,0.384,18,0.277,21,0.437,22,0.888,23,0.876,24,0.461,32,0.437,33,0.34,36,0.688,48,1.177,49,1.262,50,1.096,51,0.948,65,0.018,66,0.018,72,0.638,74,0.916,82,2.214,84,1.053,94,1.053,113,1.795,236,3.277,254,2.679,340,2.451,342,1.944,360,3.583,361,2.954,362,1.778,363,3.277,364,3.298,365,3.773,366,3.304,369,2.393,370,3.298,371,3.773,372,2.393,373,2.393,374,2.143,375,2.143,376,2.393,377,2.393,378,2.393,379,2.393,380,2.393,381,2.393,382,2.393,383,2.393,384,2.393,385,2.393,386,2.679,387,3.298,388,3.821,414,2.143,455,3.234]],["title/coverage.html",[456,3.928]],["body/coverage.html",[0,0.413,1,1.038,4,0.204,5,0.161,6,2.751,7,2.751,12,0.204,13,0.027,25,1.24,28,0.968,30,0.65,33,0.432,34,1.038,35,1.038,38,0.65,39,1.038,40,0.697,41,1.038,43,1.038,65,0.015,66,0.015,68,2.751,73,2.712,81,1.631,102,1.821,104,1.631,105,2.076,106,2.076,116,2.076,117,2.076,121,1.821,122,2.076,131,1.821,134,1.821,135,2.076,136,2.542,137,4.281,145,1.821,146,2.076,147,2.902,148,1.48,156,2.429,162,1.631,164,1.821,174,1.821,175,1.821,182,1.631,184,1.821,192,1.631,203,1.821,204,2.076,209,1.631,210,2.076,211,2.076,214,1.48,231,2.429,261,1.821,262,2.076,265,1.821,266,1.821,308,1.821,340,1.354,341,2.076,342,2.916,350,1.821,351,2.076,360,1.48,361,2.902,366,1.48,386,1.48,389,1.821,390,2.076,391,2.076,393,2.076,442,1.821,443,2.076,456,2.076,457,1.631,458,2.461,459,2.461,460,3.09,461,2.076,462,5.58,463,2.076,464,6.639,465,6.512,466,3.691,467,2.076,468,2.076,469,2.076,470,2.076,471,3.09,472,2.076,473,2.076,474,2.076,475,4.089,476,4.85,477,3.691,478,2.076,479,6.595,480,6.443,481,2.076,482,2.076,483,3.665,484,5.185,485,2.461,486,2.461,487,2.461,488,4.378,489,4.378,490,2.461,491,3.239,492,3.665,493,3.691,494,3.691,495,2.076,496,2.076,497,2.076,498,2.076,499,4.022,500,2.076,501,2.076,502,2.076,503,2.076,504,2.076,505,1.821,506,2.076,507,2.076,508,2.076,509,2.076,510,3.09,511,2.076,512,2.076,513,2.076,514,2.461,515,2.461,516,2.461]],["title/dependencies.html",[517,2.451,518,2.741]],["body/dependencies.html",[13,0.027,24,0.69,33,0.323,65,0.023,66,0.023,94,1.575,98,1.813,173,3.579,180,4.079,241,4.079,518,3.829,519,4.837,520,5.595,521,4.837,522,4.837,523,4.837,524,4.837,525,4.837,526,4.837,527,4.837,528,4.837,529,4.837,530,3.579,531,4.837,532,4.837]],["title/miscellaneous/functions.html",[533,1.599,534,3.488]],["body/miscellaneous/functions.html",[0,0.412,2,0.431,4,0.197,8,0.123,11,0.497,12,0.305,13,0.027,14,0.545,17,0.881,22,0.78,23,0.549,25,1.585,28,1.29,33,0.281,38,0.788,40,1.049,50,0.734,54,0.534,58,0.534,65,0.012,66,0.012,72,0.372,74,1.71,80,1.394,98,1.721,111,3.477,112,3.2,113,2.547,123,1.588,131,2.208,136,2.921,137,4.418,143,1.394,148,2.227,156,1.249,162,2.793,164,4.679,165,3.841,174,2.208,175,2.208,176,1.588,179,3.553,182,3.043,184,2.208,189,1.588,213,3.118,214,2.533,231,3.043,254,3.077,265,2.208,266,2.208,276,1.588,306,1.588,308,2.208,362,1.036,363,1.036,392,1.977,414,1.249,457,1.977,460,2.516,461,2.516,462,1.588,463,2.516,466,4.119,467,2.516,468,1.588,469,1.588,470,1.588,471,2.516,472,2.516,473,2.516,474,2.516,477,3.124,478,2.516,481,2.516,482,2.516,491,2.208,493,1.588,494,3.553,495,3.124,496,1.588,497,2.516,498,2.516,499,3.398,500,2.516,501,2.516,502,2.516,503,2.516,504,2.516,505,4.418,506,3.553,507,2.516,508,1.588,509,3.124,510,2.516,511,2.516,512,2.516,513,2.516,530,2.741,533,1.036,534,1.588,535,1.884,536,4.475,537,1.884,538,1.588,539,3.704,540,1.884,541,2.984,542,1.884,543,1.884,544,2.984,545,2.984,546,1.884,547,5.711,548,3.786,549,1.884,550,5.465,551,1.884,552,4.213,553,5.117,554,2.984,555,1.884,556,1.884,557,4.884,558,1.884,559,3.704,560,1.884,561,1.884,562,1.884,563,2.984,564,2.984,565,1.884,566,1.884,567,1.884,568,2.984,569,1.884,570,1.884,571,1.884,572,2.984,573,1.884,574,1.884,575,1.884,576,1.884,577,3.704,578,1.884,579,2.984,580,2.984,581,1.884,582,1.884,583,1.884,584,1.884,585,1.884,586,1.884,587,2.984,588,1.884,589,1.884,590,1.884,591,2.984,592,2.984,593,1.884,594,1.884,595,1.884,596,2.516,597,1.884,598,2.516,599,1.884,600,1.884,601,1.588,602,1.884,603,1.884,604,1.884,605,2.984,606,1.884,607,3.704,608,1.884,609,1.884,610,1.884,611,1.884,612,1.884,613,2.984,614,1.884,615,1.884,616,1.884,617,1.884,618,1.884]],["title/index.html",[8,0.191,619,2.907,620,2.907]],["body/index.html",[0,0.25,2,0.596,4,0.121,5,0.171,11,0.687,12,0.121,13,0.018,14,0.698,15,0.591,17,1.217,22,0.645,28,1.194,33,0.332,45,0.97,48,1.008,50,0.64,52,0.737,58,1.503,65,0.015,66,0.015,98,1.695,112,1.317,136,2.33,181,3.22,182,3.676,192,1.725,208,1.926,214,1.565,278,2.195,349,2.195,352,3.22,362,1.431,363,1.431,374,1.725,375,1.725,388,1.725,392,2.998,457,2.998,475,3.22,518,1.725,530,3.347,548,1.926,596,3.22,598,2.195,601,2.195,621,3.819,622,2.603,623,2.195,624,2.195,625,2.195,626,2.195,627,2.195,628,2.195,629,3.22,630,4.202,631,4.202,632,2.195,633,2.195,634,2.195,635,2.195,636,2.195,637,2.195,638,3.814,639,2.195,640,4.523,641,2.603,642,2.603,643,2.603,644,2.603,645,2.603,646,2.603,647,2.603,648,2.603,649,2.603,650,2.603,651,3.819,652,3.819,653,2.603,654,2.603,655,2.603,656,2.603,657,2.603,658,3.819,659,2.603,660,2.603,661,2.603,662,2.603,663,2.603,664,2.603,665,3.819,666,2.603,667,2.603,668,2.603,669,3.819,670,2.603,671,4.523,672,4.523,673,3.819,674,3.819,675,3.819,676,2.603,677,2.603,678,3.819,679,5.306,680,3.819,681,3.819,682,3.819,683,2.603,684,4.523,685,2.603,686,2.603,687,2.603,688,2.603,689,2.195,690,2.603,691,3.819,692,2.603,693,2.603,694,2.603,695,2.195,696,2.603,697,2.603,698,3.819,699,2.603,700,2.603,701,3.819,702,2.603,703,2.603,704,2.603,705,4.523,706,2.603,707,2.603,708,2.603,709,2.603,710,2.603,711,2.603,712,3.819,713,2.603,714,3.819,715,2.603,716,2.603,717,2.603,718,3.819,719,2.603,720,2.603,721,2.603,722,2.603,723,2.603,724,2.603,725,2.603,726,2.603,727,2.603,728,2.603,729,2.603,730,3.819,731,2.603,732,3.819,733,2.603,734,2.603,735,2.603,736,2.603,737,3.819,738,2.603,739,2.603,740,2.603,741,2.603,742,2.603,743,2.603,744,2.603,745,2.603,746,2.603,747,2.603,748,2.603,749,2.603,750,2.603,751,2.603,752,2.603,753,2.603,754,2.603,755,2.603,756,2.603,757,2.603,758,2.603,759,2.603,760,2.603,761,2.603,762,2.603,763,2.603,764,2.603,765,2.603,766,2.603,767,2.603,768,2.603,769,2.603,770,2.603,771,2.603,772,3.819,773,2.603,774,2.603,775,2.603,776,2.603,777,2.603,778,3.819,779,4.523,780,3.819,781,2.603,782,3.819,783,2.603,784,2.603,785,2.603,786,2.603,787,3.819,788,2.603,789,2.603,790,2.603,791,2.603,792,2.603,793,2.603,794,2.603,795,4.523,796,2.603,797,2.603,798,3.819,799,2.603,800,2.603,801,2.603,802,4.983,803,2.603,804,2.603,805,2.603,806,2.603,807,2.603,808,2.603,809,3.819,810,2.603,811,2.603,812,2.603,813,2.603,814,2.603,815,2.603,816,2.603,817,2.603,818,2.603,819,2.603,820,2.603,821,2.603,822,2.603,823,2.603,824,2.603,825,2.603,826,2.603,827,2.603,828,2.603,829,2.195,830,2.603,831,2.603,832,2.603,833,2.603,834,2.603,835,2.603,836,2.603,837,3.819,838,2.603]],["title/modules.html",[155,3.447]],["body/modules.html",[13,0.024,65,0.024,66,0.024,154,3.948,155,3.948,695,4.499,839,5.335,840,5.335]],["title/overview.html",[841,3.928]],["body/overview.html",[2,1.176,13,0.024,65,0.024,66,0.024,67,2.228,72,1.014,153,4.429,188,4.333,196,4.333,518,3.406,689,4.333,829,4.333,841,4.333,842,5.139,843,5.139,844,5.139,845,5.986,846,5.139,847,5.139]],["title/properties.html",[9,0.491,517,2.451]],["body/properties.html",[0,0.304,2,1.062,9,0.55,13,0.027,15,0.668,22,0.662,65,0.022,66,0.022,74,1.314,98,1.739,109,3.912,362,2.551,363,2.551,392,3.075,457,3.734,520,3.912,548,3.433,623,3.912,624,3.912,625,3.912,626,3.912,627,3.912,628,3.912,629,4.75,630,3.912,631,3.912,632,3.912,633,3.912,634,3.912,635,3.912,636,3.912,637,3.912,638,3.912,639,3.912,848,4.639,849,4.639,850,4.639,851,4.639,852,4.639,853,4.639,854,4.639,855,4.639,856,4.639,857,4.639,858,4.639,859,4.639,860,4.639,861,4.639]],["title/miscellaneous/typealiases.html",[533,1.599,862,4.136]],["body/miscellaneous/typealiases.html",[4,0.277,8,0.331,12,0.293,13,0.023,65,0.023,66,0.023,136,2.772,156,3.349,162,3.929,491,4.801,499,3.739,505,4.386,533,2.779,536,4.261,538,4.261,863,5.053,864,5.927]],["title/miscellaneous/variables.html",[533,1.599,865,3.488]],["body/miscellaneous/variables.html",[8,0.343,11,1.38,13,0.025,30,1.38,65,0.024,66,0.024,73,3.868,102,4.474,103,4.408,143,3.868,533,2.875,865,4.408,866,5.228]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"modules/DataSourceModule.html":{},"classes/DeleteResultDto.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/HttpErrorDto.html":{},"classes/IDDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":479,"title":{},"body":{"coverage.html":{}}}],["0.3.20",{"_index":532,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":531,"title":{},"body":{"dependencies.html":{}}}],["0.5.15",{"_index":522,"title":{},"body":{"dependencies.html":{}}}],["0.6.2",{"_index":520,"title":{},"body":{"dependencies.html":{},"properties.html":{}}}],["0/1",{"_index":480,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":484,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":67,"title":{"entities/AttributeRelation-1.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity-1.html":{},"classes/TestObject-1.html":{}},"body":{"classes/EntityService.html":{},"classes/IDDto.html":{},"overview.html":{}}}],["1/1",{"_index":465,"title":{},"body":{"coverage.html":{}}}],["1/13",{"_index":486,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":476,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":489,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":689,"title":{},"body":{"index.html":{},"overview.html":{}}}],["100",{"_index":464,"title":{},"body":{"coverage.html":{}}}],["11.0.0",{"_index":527,"title":{},"body":{"dependencies.html":{}}}],["11.0.11",{"_index":524,"title":{},"body":{"dependencies.html":{}}}],["16mb",{"_index":761,"title":{},"body":{"index.html":{}}}],["18",{"_index":847,"title":{},"body":{"overview.html":{}}}],["19/19",{"_index":515,"title":{},"body":{"coverage.html":{}}}],["2,000",{"_index":728,"title":{},"body":{"index.html":{}}}],["2/2",{"_index":487,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":488,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":742,"title":{},"body":{"index.html":{}}}],["25",{"_index":748,"title":{},"body":{"index.html":{}}}],["3/3",{"_index":483,"title":{},"body":{"coverage.html":{}}}],["30,000",{"_index":713,"title":{},"body":{"index.html":{}}}],["4.0.0",{"_index":525,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":749,"title":{},"body":{"index.html":{}}}],["4gb",{"_index":754,"title":{},"body":{"index.html":{}}}],["50",{"_index":475,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["60",{"_index":657,"title":{},"body":{"index.html":{}}}],["7",{"_index":485,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":514,"title":{},"body":{"coverage.html":{}}}],["___viewcolumn",{"_index":611,"title":{},"body":{"miscellaneous/functions.html":{}}}],["_tablename",{"_index":405,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["accommodate",{"_index":665,"title":{},"body":{"index.html":{}}}],["accommodating",{"_index":686,"title":{},"body":{"index.html":{}}}],["achieves",{"_index":655,"title":{},"body":{"index.html":{}}}],["add",{"_index":278,"title":{},"body":{"classes/EntityService.html":{},"index.html":{}}}],["add(relationid",{"_index":336,"title":{},"body":{"classes/EntityService.html":{}}}],["addrelation",{"_index":264,"title":{},"body":{"classes/EntityService.html":{}}}],["addrelation(relation",{"_index":275,"title":{},"body":{"classes/EntityService.html":{}}}],["adjust",{"_index":738,"title":{},"body":{"index.html":{}}}],["administrative",{"_index":743,"title":{},"body":{"index.html":{}}}],["adopted",{"_index":646,"title":{},"body":{"index.html":{}}}],["affected",{"_index":207,"title":{},"body":{"classes/DeleteResultDto.html":{},"classes/EntityService.html":{},"classes/UpdateResultDto.html":{}}}],["alias",{"_index":492,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":863,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allocate",{"_index":747,"title":{},"body":{"index.html":{}}}],["allocation",{"_index":758,"title":{},"body":{"index.html":{}}}],["allowed",{"_index":680,"title":{},"body":{"index.html":{}}}],["api",{"_index":629,"title":{},"body":{"index.html":{},"properties.html":{}}}],["application",{"_index":732,"title":{},"body":{"index.html":{}}}],["apply",{"_index":791,"title":{},"body":{"index.html":{}}}],["approach",{"_index":654,"title":{},"body":{"index.html":{}}}],["array",{"_index":50,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["arraymaxsize",{"_index":385,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["arrayminsize",{"_index":384,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["asc",{"_index":251,"title":{},"body":{"classes/EntityQueryService.html":{}}}],["associated",{"_index":660,"title":{},"body":{"index.html":{}}}],["async",{"_index":170,"title":{},"body":{"modules/DataSourceModule.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{}}}],["attributerelation",{"_index":1,"title":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{}}}],["attributes",{"_index":64,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["author",{"_index":859,"title":{},"body":{"properties.html":{}}}],["availability",{"_index":708,"title":{},"body":{"index.html":{}}}],["available",{"_index":695,"title":{},"body":{"index.html":{},"modules.html":{}}}],["avoid",{"_index":770,"title":{},"body":{"index.html":{}}}],["await",{"_index":201,"title":{},"body":{"modules/DataSourceModule.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{}}}],["balancing",{"_index":706,"title":{},"body":{"index.html":{}}}],["base",{"_index":99,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseView.html":{},"classes/EntityQueryService.html":{}}}],["base_entity_columns",{"_index":102,"title":{},"body":{"classes/BaseEntity.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["based",{"_index":590,"title":{},"body":{"miscellaneous/functions.html":{}}}],["baseentity",{"_index":30,"title":{"classes/BaseEntity.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["baseentityservice",{"_index":104,"title":{"classes/BaseEntityService.html":{}},"body":{"classes/BaseEntityService.html":{},"classes/EntityQueryService.html":{},"coverage.html":{}}}],["baseidentity",{"_index":81,"title":{"classes/BaseIdEntity.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"coverage.html":{}}}],["baseidentity:8",{"_index":93,"title":{},"body":{"classes/BaseEntity.html":{}}}],["baseline",{"_index":693,"title":{},"body":{"index.html":{}}}],["basemodel",{"_index":83,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseView.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{}}}],["baseview",{"_index":121,"title":{"classes/BaseView.html":{}},"body":{"classes/BaseView.html":{},"coverage.html":{}}}],["before",{"_index":720,"title":{},"body":{"index.html":{}}}],["being",{"_index":721,"title":{},"body":{"index.html":{}}}],["bigint",{"_index":47,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["body",{"_index":280,"title":{},"body":{"classes/EntityService.html":{}}}],["boolean",{"_index":46,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/CommonQueryDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["bootstrap",{"_index":844,"title":{},"body":{"overview.html":{}}}],["both",{"_index":658,"title":{},"body":{"index.html":{}}}],["brightline",{"_index":861,"title":{},"body":{"properties.html":{}}}],["browse",{"_index":840,"title":{},"body":{"modules.html":{}}}],["bug",{"_index":817,"title":{},"body":{"index.html":{}}}],["bugs",{"_index":854,"title":{},"body":{"properties.html":{}}}],["builder",{"_index":615,"title":{},"body":{"miscellaneous/functions.html":{}}}],["builder/querypartialentity.js",{"_index":319,"title":{},"body":{"classes/EntityService.html":{}}}],["capabilities",{"_index":549,"title":{},"body":{"miscellaneous/functions.html":{}}}],["capability",{"_index":568,"title":{},"body":{"miscellaneous/functions.html":{}}}],["capacity",{"_index":745,"title":{},"body":{"index.html":{}}}],["cascade",{"_index":61,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["certain",{"_index":597,"title":{},"body":{"miscellaneous/functions.html":{}}}],["class",{"_index":33,"title":{"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/HttpErrorDto.html":{},"classes/IDDto.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"modules/DataSourceModule.html":{},"classes/DeleteResultDto.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/HttpErrorDto.html":{},"classes/IDDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["classdecorator",{"_index":577,"title":{},"body":{"miscellaneous/functions.html":{}}}],["classes",{"_index":72,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/HttpErrorDto.html":{},"classes/IDDto.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["clear",{"_index":637,"title":{},"body":{"index.html":{},"properties.html":{}}}],["closed",{"_index":722,"title":{},"body":{"index.html":{}}}],["code",{"_index":349,"title":{},"body":{"classes/HttpErrorDto.html":{},"index.html":{}}}],["column",{"_index":28,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["column(options",{"_index":546,"title":{},"body":{"miscellaneous/functions.html":{}}}],["column({databasetype",{"_index":16,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/ManyRelation.html":{},"entities/OneRelation.html":{},"entities/OwnerRelation.html":{},"entities/TestEntity.html":{}}}],["column({type",{"_index":69,"title":{},"body":{"entities/AttributeRelation-1.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity-1.html":{}}}],["column.js",{"_index":133,"title":{},"body":{"classes/BaseView.html":{}}}],["column.ts",{"_index":472,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["columns",{"_index":80,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseView.html":{},"miscellaneous/functions.html":{}}}],["columntype",{"_index":593,"title":{},"body":{"miscellaneous/functions.html":{}}}],["common",{"_index":138,"title":{},"body":{"classes/CommonQueryDto.html":{},"classes/HttpErrorDto.html":{}}}],["commonquerydto",{"_index":134,"title":{"classes/CommonQueryDto.html":{}},"body":{"classes/CommonQueryDto.html":{},"coverage.html":{}}}],["compatibility",{"_index":820,"title":{},"body":{"index.html":{}}}],["compatible",{"_index":604,"title":{},"body":{"miscellaneous/functions.html":{}}}],["composite",{"_index":571,"title":{},"body":{"miscellaneous/functions.html":{}}}],["config",{"_index":579,"title":{},"body":{"miscellaneous/functions.html":{}}}],["configmodule",{"_index":178,"title":{},"body":{"modules/DataSourceModule.html":{}}}],["configservice",{"_index":179,"title":{},"body":{"modules/DataSourceModule.html":{},"miscellaneous/functions.html":{}}}],["configuration",{"_index":674,"title":{},"body":{"index.html":{}}}],["configure",{"_index":712,"title":{},"body":{"index.html":{}}}],["configured",{"_index":753,"title":{},"body":{"index.html":{}}}],["connection",{"_index":718,"title":{},"body":{"index.html":{}}}],["connections",{"_index":679,"title":{},"body":{"index.html":{}}}],["connectiontimeoutmillis",{"_index":727,"title":{},"body":{"index.html":{}}}],["consider",{"_index":805,"title":{},"body":{"index.html":{}}}],["const",{"_index":101,"title":{},"body":{"classes/BaseEntity.html":{},"modules/DataSourceModule.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{}}}],["constraint",{"_index":573,"title":{},"body":{"miscellaneous/functions.html":{}}}],["constraints",{"_index":365,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["constructor",{"_index":107,"title":{},"body":{"classes/BaseEntityService.html":{}}}],["constructor(protected",{"_index":114,"title":{},"body":{"classes/BaseEntityService.html":{},"modules/DataSourceModule.html":{}}}],["constructor(repository",{"_index":108,"title":{},"body":{"classes/BaseEntityService.html":{}}}],["consumption",{"_index":725,"title":{},"body":{"index.html":{}}}],["contact",{"_index":836,"title":{},"body":{"index.html":{}}}],["contributions",{"_index":808,"title":{},"body":{"index.html":{}}}],["controller",{"_index":787,"title":{},"body":{"index.html":{}}}],["converted",{"_index":768,"title":{},"body":{"index.html":{}}}],["copy.ts",{"_index":497,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["count",{"_index":148,"title":{},"body":{"classes/CountResultDto.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["count(query",{"_index":219,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{}}}],["countresult",{"_index":150,"title":{},"body":{"classes/CountResultDto.html":{},"classes/EntityQueryService.html":{}}}],["countresultdto",{"_index":145,"title":{"classes/CountResultDto.html":{}},"body":{"classes/CountResultDto.html":{},"coverage.html":{}}}],["coverage",{"_index":456,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":553,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createdat",{"_index":77,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseView.html":{}}}],["createdatecolumn",{"_index":95,"title":{},"body":{"classes/BaseEntity.html":{}}}],["createfindoperator",{"_index":501,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createfindoperator(query",{"_index":551,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createincrementdecrementdto",{"_index":478,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createincrementdecrementdto(columns",{"_index":556,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createquerybuilder",{"_index":333,"title":{},"body":{"classes/EntityService.html":{}}}],["createquerycountdto",{"_index":502,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createquerycountdto(options",{"_index":558,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createquerymanydto",{"_index":503,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createquerymanydto(options",{"_index":560,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createqueryonedto",{"_index":504,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createqueryonedto(options",{"_index":561,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createqueryoptions",{"_index":505,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["createrelationparamdto",{"_index":481,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createrelationparamdto(relations",{"_index":562,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createunsetrelationparamdto",{"_index":482,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createunsetrelationparamdto(relations",{"_index":565,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createwhereoptiondto",{"_index":507,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createwhereoptiondto(options",{"_index":566,"title":{},"body":{"miscellaneous/functions.html":{}}}],["custom",{"_index":623,"title":{},"body":{"index.html":{},"properties.html":{}}}],["data",{"_index":182,"title":{},"body":{"modules/DataSourceModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["database",{"_index":392,"title":{},"body":{"classes/TableNamingStrategy.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["databases",{"_index":595,"title":{},"body":{"miscellaneous/functions.html":{}}}],["databasetype",{"_index":37,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/ManyRelation.html":{},"entities/OneRelation.html":{},"entities/OwnerRelation.html":{},"entities/TestEntity.html":{},"classes/TestObject.html":{}}}],["datasource",{"_index":181,"title":{},"body":{"modules/DataSourceModule.html":{},"index.html":{}}}],["datasource(getdatasourceoptions(config",{"_index":195,"title":{},"body":{"modules/DataSourceModule.html":{}}}],["datasource(getdatasourceoptions(options",{"_index":193,"title":{},"body":{"modules/DataSourceModule.html":{}}}],["datasourcemodule",{"_index":154,"title":{"modules/DataSourceModule.html":{}},"body":{"modules/DataSourceModule.html":{},"modules.html":{}}}],["datasourcemoduleoptions",{"_index":162,"title":{},"body":{"modules/DataSourceModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["datasourceoptions",{"_index":580,"title":{},"body":{"miscellaneous/functions.html":{}}}],["date",{"_index":52,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseView.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"index.html":{}}}],["date'})@createdatecolumn",{"_index":85,"title":{},"body":{"classes/BaseEntity.html":{}}}],["date'})@deletedatecolumn",{"_index":87,"title":{},"body":{"classes/BaseEntity.html":{}}}],["date'})@updatedatecolumn",{"_index":89,"title":{},"body":{"classes/BaseEntity.html":{}}}],["declarations",{"_index":843,"title":{},"body":{"overview.html":{}}}],["decorator",{"_index":548,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["decorator/column.js",{"_index":29,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["decorator/entity.js",{"_index":27,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["decorator/relation.js",{"_index":26,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["decorator/view",{"_index":132,"title":{},"body":{"classes/BaseView.html":{}}}],["decorators",{"_index":15,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/HttpErrorDto.html":{},"classes/IDDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"index.html":{},"properties.html":{}}}],["decrement",{"_index":265,"title":{},"body":{"classes/EntityService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["decrement(param",{"_index":279,"title":{},"body":{"classes/EntityService.html":{}}}],["decrementparam",{"_index":281,"title":{},"body":{"classes/EntityService.html":{}}}],["dedicated",{"_index":790,"title":{},"body":{"index.html":{}}}],["deeppartial",{"_index":296,"title":{},"body":{"classes/EntityService.html":{}}}],["default",{"_index":143,"title":{},"body":{"classes/CommonQueryDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defaultnamingstrategy",{"_index":396,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["define",{"_index":756,"title":{},"body":{"index.html":{}}}],["defined",{"_index":18,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"modules/DataSourceModule.html":{},"classes/DeleteResultDto.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/HttpErrorDto.html":{},"classes/IDDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["defines",{"_index":677,"title":{},"body":{"index.html":{}}}],["definitions",{"_index":626,"title":{},"body":{"index.html":{},"properties.html":{}}}],["delays",{"_index":736,"title":{},"body":{"index.html":{}}}],["delete",{"_index":205,"title":{},"body":{"classes/DeleteResultDto.html":{},"classes/EntityService.html":{}}}],["delete(objectid",{"_index":283,"title":{},"body":{"classes/EntityService.html":{}}}],["deleted",{"_index":141,"title":{},"body":{"classes/CommonQueryDto.html":{}}}],["deletedat",{"_index":79,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseView.html":{}}}],["deletedatecolumn",{"_index":96,"title":{},"body":{"classes/BaseEntity.html":{}}}],["deleteresult",{"_index":206,"title":{},"body":{"classes/DeleteResultDto.html":{}}}],["deleteresultdto",{"_index":203,"title":{"classes/DeleteResultDto.html":{}},"body":{"classes/DeleteResultDto.html":{},"coverage.html":{}}}],["demand",{"_index":688,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":518,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{},"overview.html":{}}}],["description",{"_index":74,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/HttpErrorDto.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{},"properties.html":{}}}],["determines",{"_index":715,"title":{},"body":{"index.html":{}}}],["developer",{"_index":837,"title":{},"body":{"index.html":{}}}],["development",{"_index":640,"title":{},"body":{"index.html":{}}}],["direction",{"_index":250,"title":{},"body":{"classes/EntityQueryService.html":{}}}],["disrupting",{"_index":771,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":457,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["done",{"_index":782,"title":{},"body":{"index.html":{}}}],["driver",{"_index":592,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dto",{"_index":22,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/HttpErrorDto.html":{},"classes/IDDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["dto.ts",{"_index":137,"title":{},"body":{"classes/CommonQueryDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["dto.ts:13",{"_index":144,"title":{},"body":{"classes/CommonQueryDto.html":{}}}],["durable",{"_index":190,"title":{},"body":{"modules/DataSourceModule.html":{}}}],["duration",{"_index":716,"title":{},"body":{"index.html":{}}}],["during",{"_index":698,"title":{},"body":{"index.html":{}}}],["dynamicmodule",{"_index":166,"title":{},"body":{"modules/DataSourceModule.html":{}}}],["eager",{"_index":53,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["efficiency",{"_index":652,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":683,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":633,"title":{},"body":{"index.html":{},"properties.html":{}}}],["effort",{"_index":801,"title":{},"body":{"index.html":{}}}],["encrypion",{"_index":781,"title":{},"body":{"index.html":{}}}],["encrypted",{"_index":789,"title":{},"body":{"index.html":{}}}],["encryption",{"_index":786,"title":{},"body":{"index.html":{}}}],["enhance",{"_index":762,"title":{},"body":{"index.html":{}}}],["enhancing",{"_index":651,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":631,"title":{},"body":{"index.html":{},"properties.html":{}}}],["ensuring",{"_index":682,"title":{},"body":{"index.html":{}}}],["entities",{"_index":2,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"modules/DataSourceModule.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"miscellaneous/functions.html":{},"index.html":{},"overview.html":{},"properties.html":{}}}],["entities.map((entity",{"_index":198,"title":{},"body":{"modules/DataSourceModule.html":{}}}],["entity",{"_index":0,"title":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseView.html":{},"modules/DataSourceModule.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["entity's",{"_index":575,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entity(uniques",{"_index":567,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entity.service.js",{"_index":242,"title":{},"body":{"classes/EntityQueryService.html":{}}}],["entity.service.ts",{"_index":106,"title":{},"body":{"classes/BaseEntityService.html":{},"coverage.html":{}}}],["entity.service.ts:4",{"_index":110,"title":{},"body":{"classes/BaseEntityService.html":{}}}],["entity.ts",{"_index":473,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["entity/base.js",{"_index":31,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["entityqueryservice",{"_index":209,"title":{"classes/EntityQueryService.html":{}},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"coverage.html":{}}}],["entityqueryservice:17",{"_index":313,"title":{},"body":{"classes/EntityService.html":{}}}],["entityqueryservice:36",{"_index":314,"title":{},"body":{"classes/EntityService.html":{}}}],["entityqueryservice:45",{"_index":317,"title":{},"body":{"classes/EntityService.html":{}}}],["entityqueryservice:56",{"_index":315,"title":{},"body":{"classes/EntityService.html":{}}}],["entityqueryservice:68",{"_index":316,"title":{},"body":{"classes/EntityService.html":{}}}],["entityqueryservice:82",{"_index":312,"title":{},"body":{"classes/EntityService.html":{}}}],["entityservice",{"_index":261,"title":{"classes/EntityService.html":{}},"body":{"classes/EntityService.html":{},"coverage.html":{}}}],["entityserviceproviders",{"_index":197,"title":{},"body":{"modules/DataSourceModule.html":{}}}],["entityservicetokens",{"_index":199,"title":{},"body":{"modules/DataSourceModule.html":{}}}],["error",{"_index":236,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/HttpErrorDto.html":{},"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["error.dto.js",{"_index":373,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["error.dto.ts",{"_index":342,"title":{},"body":{"classes/HttpErrorDto.html":{},"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{}}}],["error.dto.ts:11",{"_index":346,"title":{},"body":{"classes/HttpErrorDto.html":{}}}],["error.dto.ts:14",{"_index":454,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:15",{"_index":452,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:16",{"_index":347,"title":{},"body":{"classes/HttpErrorDto.html":{},"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:17",{"_index":453,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:18",{"_index":451,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:19",{"_index":449,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:20",{"_index":448,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:21",{"_index":447,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:22",{"_index":450,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:23",{"_index":446,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:24",{"_index":445,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:25",{"_index":444,"title":{},"body":{"classes/ValidationConstraintsDto.html":{}}}],["error.dto.ts:36",{"_index":368,"title":{},"body":{"classes/SingleValidationErrorDto.html":{}}}],["error.dto.ts:42",{"_index":367,"title":{},"body":{"classes/SingleValidationErrorDto.html":{}}}],["error.dto.ts:60",{"_index":455,"title":{},"body":{"classes/ValidationErrorDto.html":{}}}],["errors",{"_index":388,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"index.html":{}}}],["establish",{"_index":731,"title":{},"body":{"index.html":{}}}],["establishes",{"_index":702,"title":{},"body":{"index.html":{}}}],["even",{"_index":824,"title":{},"body":{"index.html":{}}}],["example",{"_index":662,"title":{},"body":{"index.html":{}}}],["execution",{"_index":793,"title":{},"body":{"index.html":{}}}],["export",{"_index":32,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"modules/DataSourceModule.html":{},"classes/DeleteResultDto.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/HttpErrorDto.html":{},"classes/IDDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["exports",{"_index":196,"title":{},"body":{"modules/DataSourceModule.html":{},"overview.html":{}}}],["expression",{"_index":614,"title":{},"body":{"miscellaneous/functions.html":{}}}],["extend",{"_index":624,"title":{},"body":{"index.html":{},"properties.html":{}}}],["extends",{"_index":36,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["factory",{"_index":616,"title":{},"body":{"miscellaneous/functions.html":{}}}],["false",{"_index":56,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/CommonQueryDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["features",{"_index":823,"title":{},"body":{"index.html":{}}}],["fields",{"_index":576,"title":{},"body":{"miscellaneous/functions.html":{}}}],["file",{"_index":5,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"modules/DataSourceModule.html":{},"classes/DeleteResultDto.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/HttpErrorDto.html":{},"classes/IDDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{},"index.html":{}}}],["find",{"_index":214,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["find(query",{"_index":223,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{}}}],["findone",{"_index":215,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{}}}],["findone(query",{"_index":226,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{}}}],["findonebyid",{"_index":216,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{}}}],["findonebyid(param",{"_index":229,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{}}}],["findonebyidorthrow",{"_index":217,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{}}}],["findonebyidorthrow(param",{"_index":233,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{}}}],["findoneorthrow",{"_index":218,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{}}}],["findoneorthrow(query",{"_index":237,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{}}}],["findoptionsorder",{"_index":239,"title":{},"body":{"classes/EntityQueryService.html":{}}}],["findoptionswhere",{"_index":240,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{}}}],["firsttablename",{"_index":411,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["firsttablename}_${secondtablename",{"_index":413,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["fixes",{"_index":818,"title":{},"body":{"index.html":{}}}],["following",{"_index":673,"title":{},"body":{"index.html":{}}}],["forfeature",{"_index":160,"title":{},"body":{"modules/DataSourceModule.html":{}}}],["forfeature(options",{"_index":161,"title":{},"body":{"modules/DataSourceModule.html":{}}}],["format",{"_index":668,"title":{},"body":{"index.html":{}}}],["forroot",{"_index":167,"title":{},"body":{"modules/DataSourceModule.html":{}}}],["forroot(options",{"_index":168,"title":{},"body":{"modules/DataSourceModule.html":{}}}],["found",{"_index":256,"title":{},"body":{"classes/EntityQueryService.html":{}}}],["function",{"_index":462,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":534,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funding",{"_index":795,"title":{},"body":{"index.html":{}}}],["general",{"_index":830,"title":{},"body":{"index.html":{}}}],["getdatasourceoptions",{"_index":184,"title":{},"body":{"modules/DataSourceModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getdatasourceoptions(config",{"_index":578,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getentityservicetoken",{"_index":174,"title":{},"body":{"modules/DataSourceModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getentityservicetoken(entity",{"_index":581,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getsqlitedatasourceoptions",{"_index":498,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getsqlitedatasourceoptions(config",{"_index":588,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getting",{"_index":619,"title":{"index.html":{}},"body":{}}],["global",{"_index":186,"title":{},"body":{"modules/DataSourceModule.html":{}}}],["go",{"_index":815,"title":{},"body":{"index.html":{}}}],["graph",{"_index":839,"title":{},"body":{"modules.html":{}}}],["handling",{"_index":788,"title":{},"body":{"index.html":{}}}],["hard",{"_index":285,"title":{},"body":{"classes/EntityService.html":{}}}],["hashing",{"_index":780,"title":{},"body":{"index.html":{}}}],["help",{"_index":809,"title":{},"body":{"index.html":{}}}],["homepage",{"_index":852,"title":{},"body":{"properties.html":{}}}],["http",{"_index":372,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["httperrordto",{"_index":340,"title":{"classes/HttpErrorDto.html":{}},"body":{"classes/HttpErrorDto.html":{},"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{}}}],["https://github.com/rbrightline/puq/tree/main",{"_index":858,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io",{"_index":855,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io/puq/orm",{"_index":853,"title":{},"body":{"properties.html":{}}}],["id",{"_index":76,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/IDDto.html":{}}}],["id.js",{"_index":100,"title":{},"body":{"classes/BaseEntity.html":{}}}],["id.ts",{"_index":117,"title":{},"body":{"classes/BaseIdEntity.html":{},"coverage.html":{}}}],["id.ts:8",{"_index":119,"title":{},"body":{"classes/BaseIdEntity.html":{}}}],["iddto",{"_index":350,"title":{"classes/IDDto.html":{}},"body":{"classes/IDDto.html":{},"coverage.html":{}}}],["identifier",{"_index":458,"title":{},"body":{"coverage.html":{}}}],["idle",{"_index":717,"title":{},"body":{"index.html":{}}}],["idletimeoutmillis",{"_index":711,"title":{},"body":{"index.html":{}}}],["idmodel",{"_index":118,"title":{},"body":{"classes/BaseIdEntity.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{}}}],["implement",{"_index":672,"title":{},"body":{"index.html":{}}}],["implementations",{"_index":647,"title":{},"body":{"index.html":{}}}],["implements",{"_index":82,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CountResultDto.html":{},"modules/DataSourceModule.html":{},"classes/DeleteResultDto.html":{},"classes/SingleValidationErrorDto.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["import",{"_index":21,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"modules/DataSourceModule.html":{},"classes/DeleteResultDto.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/HttpErrorDto.html":{},"classes/IDDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["imports",{"_index":187,"title":{},"body":{"modules/DataSourceModule.html":{}}}],["improvements",{"_index":827,"title":{},"body":{"index.html":{}}}],["in([param.id",{"_index":258,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{}}}],["inactivity",{"_index":726,"title":{},"body":{"index.html":{}}}],["include",{"_index":140,"title":{},"body":{"classes/CommonQueryDto.html":{}}}],["includes",{"_index":124,"title":{},"body":{"classes/BaseView.html":{}}}],["increment",{"_index":266,"title":{},"body":{"classes/EntityService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["increment(param",{"_index":287,"title":{},"body":{"classes/EntityService.html":{}}}],["incrementparam",{"_index":288,"title":{},"body":{"classes/EntityService.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/HttpErrorDto.html":{},"classes/IDDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"modules/DataSourceModule.html":{},"classes/DeleteResultDto.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/HttpErrorDto.html":{},"classes/IDDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["inherited",{"_index":92,"title":{},"body":{"classes/BaseEntity.html":{},"classes/EntityService.html":{}}}],["initial",{"_index":794,"title":{},"body":{"index.html":{}}}],["inject",{"_index":189,"title":{},"body":{"modules/DataSourceModule.html":{},"miscellaneous/functions.html":{}}}],["injectentityservice",{"_index":495,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["insert",{"_index":63,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["install",{"_index":661,"title":{},"body":{"index.html":{}}}],["instant",{"_index":814,"title":{},"body":{"index.html":{}}}],["instead",{"_index":776,"title":{},"body":{"index.html":{}}}],["integer",{"_index":44,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/HttpErrorDto.html":{},"classes/IDDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{}}}],["integer'})@primarygeneratedcolumn",{"_index":91,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{}}}],["integrating",{"_index":628,"title":{},"body":{"index.html":{},"properties.html":{}}}],["integration",{"_index":643,"title":{},"body":{"index.html":{}}}],["interfere",{"_index":775,"title":{},"body":{"index.html":{}}}],["intuitive",{"_index":644,"title":{},"body":{"index.html":{}}}],["isarray",{"_index":383,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["isboolean",{"_index":381,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["isint",{"_index":380,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["isnumber",{"_index":379,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["isobject",{"_index":382,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["isstring",{"_index":378,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["it's",{"_index":797,"title":{},"body":{"index.html":{}}}],["items",{"_index":51,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["javascript",{"_index":769,"title":{},"body":{"index.html":{}}}],["join",{"_index":60,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["joincolumnname",{"_index":397,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["joincolumnname(relationname",{"_index":401,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["jointablecolumnname",{"_index":398,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["jointablecolumnname(_tablename",{"_index":403,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["jointableinversecolumnname",{"_index":399,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["jointableinversecolumnname(_tablename",{"_index":406,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["jointablename",{"_index":400,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["jointablename(firsttablename",{"_index":408,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["keep",{"_index":832,"title":{},"body":{"index.html":{}}}],["keeping",{"_index":692,"title":{},"body":{"index.html":{}}}],["key",{"_index":10,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["keys",{"_index":557,"title":{},"body":{"miscellaneous/functions.html":{}}}],["keywords",{"_index":849,"title":{},"body":{"properties.html":{}}}],["last",{"_index":253,"title":{},"body":{"classes/EntityQueryService.html":{}}}],["latency",{"_index":697,"title":{},"body":{"index.html":{}}}],["latest",{"_index":821,"title":{},"body":{"index.html":{}}}],["layer",{"_index":779,"title":{},"body":{"index.html":{}}}],["legend",{"_index":842,"title":{},"body":{"overview.html":{}}}],["level",{"_index":635,"title":{},"body":{"index.html":{},"properties.html":{}}}],["library",{"_index":802,"title":{},"body":{"index.html":{}}}],["license",{"_index":856,"title":{},"body":{"properties.html":{}}}],["limit",{"_index":704,"title":{},"body":{"index.html":{}}}],["limitation",{"_index":666,"title":{},"body":{"index.html":{}}}],["link",{"_index":254,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{}}}],["list",{"_index":387,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["literal",{"_index":864,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["load",{"_index":142,"title":{},"body":{"classes/CommonQueryDto.html":{}}}],["low",{"_index":699,"title":{},"body":{"index.html":{}}}],["maintained",{"_index":691,"title":{},"body":{"index.html":{}}}],["maintaining",{"_index":799,"title":{},"body":{"index.html":{}}}],["maintenance",{"_index":831,"title":{},"body":{"index.html":{}}}],["make",{"_index":601,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["many",{"_index":40,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/EntityService.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["manyrelation",{"_index":39,"title":{"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{}}}],["mapped",{"_index":632,"title":{},"body":{"index.html":{},"properties.html":{}}}],["matched",{"_index":151,"title":{},"body":{"classes/CountResultDto.html":{}}}],["matching",{"_index":66,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"modules/DataSourceModule.html":{},"classes/DeleteResultDto.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/HttpErrorDto.html":{},"classes/IDDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":375,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"index.html":{}}}],["max_connections",{"_index":741,"title":{},"body":{"index.html":{}}}],["maximum",{"_index":678,"title":{},"body":{"index.html":{}}}],["maxlength",{"_index":377,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["memory",{"_index":757,"title":{},"body":{"index.html":{}}}],["message",{"_index":344,"title":{},"body":{"classes/HttpErrorDto.html":{}}}],["methods",{"_index":158,"title":{},"body":{"modules/DataSourceModule.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/TableNamingStrategy.html":{}}}],["milliseconds",{"_index":714,"title":{},"body":{"index.html":{}}}],["min",{"_index":374,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"index.html":{}}}],["minimizing",{"_index":723,"title":{},"body":{"index.html":{}}}],["minimum",{"_index":352,"title":{},"body":{"classes/IDDto.html":{},"index.html":{}}}],["minlength",{"_index":376,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["miscellaneous",{"_index":533,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":857,"title":{},"body":{"properties.html":{}}}],["module",{"_index":153,"title":{"modules/DataSourceModule.html":{}},"body":{"modules/DataSourceModule.html":{},"overview.html":{}}}],["modules",{"_index":155,"title":{"modules.html":{}},"body":{"modules/DataSourceModule.html":{},"modules.html":{}}}],["more",{"_index":825,"title":{},"body":{"index.html":{}}}],["name",{"_index":112,"title":{},"body":{"classes/BaseEntityService.html":{},"modules/DataSourceModule.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/TableNamingStrategy.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["names",{"_index":564,"title":{},"body":{"miscellaneous/functions.html":{}}}],["naming",{"_index":394,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["nestjs/common",{"_index":173,"title":{},"body":{"modules/DataSourceModule.html":{},"classes/EntityQueryService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":180,"title":{},"body":{"modules/DataSourceModule.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":650,"title":{},"body":{"index.html":{}}}],["nestjs/typeorm",{"_index":526,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":192,"title":{},"body":{"modules/DataSourceModule.html":{},"classes/EntityQueryService.html":{},"coverage.html":{},"index.html":{}}}],["none",{"_index":602,"title":{},"body":{"miscellaneous/functions.html":{}}}],["notfoundexception",{"_index":243,"title":{},"body":{"classes/EntityQueryService.html":{}}}],["null",{"_index":59,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["nulls",{"_index":252,"title":{},"body":{"classes/EntityQueryService.html":{}}}],["number",{"_index":45,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/HttpErrorDto.html":{},"classes/IDDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"index.html":{}}}],["numbers",{"_index":763,"title":{},"body":{"index.html":{}}}],["numeric",{"_index":765,"title":{},"body":{"index.html":{}}}],["object",{"_index":48,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"index.html":{}}}],["object.keys(new",{"_index":103,"title":{},"body":{"classes/BaseEntity.html":{},"miscellaneous/variables.html":{}}}],["objectid",{"_index":286,"title":{},"body":{"classes/EntityService.html":{}}}],["of(id",{"_index":335,"title":{},"body":{"classes/EntityService.html":{}}}],["ondelete",{"_index":57,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["one",{"_index":38,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["onerelation",{"_index":35,"title":{"entities/OneRelation.html":{},"entities/OneRelation-1.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{}}}],["ongoing",{"_index":807,"title":{},"body":{"index.html":{}}}],["onmoduleinit",{"_index":171,"title":{},"body":{"modules/DataSourceModule.html":{}}}],["onupdate",{"_index":62,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["open",{"_index":705,"title":{},"body":{"index.html":{}}}],["operation",{"_index":208,"title":{},"body":{"classes/DeleteResultDto.html":{},"classes/UpdateResultDto.html":{},"index.html":{}}}],["operations",{"_index":772,"title":{},"body":{"index.html":{}}}],["operator",{"_index":554,"title":{},"body":{"miscellaneous/functions.html":{}}}],["operator.ts",{"_index":500,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["optimal",{"_index":752,"title":{},"body":{"index.html":{}}}],["optimize",{"_index":670,"title":{},"body":{"index.html":{}}}],["option",{"_index":506,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["optional",{"_index":113,"title":{},"body":{"classes/BaseEntityService.html":{},"classes/CommonQueryDto.html":{},"modules/DataSourceModule.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":164,"title":{},"body":{"modules/DataSourceModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["options.js",{"_index":183,"title":{},"body":{"modules/DataSourceModule.html":{}}}],["options.ts",{"_index":491,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["order",{"_index":249,"title":{},"body":{"classes/EntityQueryService.html":{}}}],["orderby",{"_index":244,"title":{},"body":{"classes/EntityQueryService.html":{}}}],["orderdir",{"_index":245,"title":{},"body":{"classes/EntityQueryService.html":{}}}],["ordernulls",{"_index":246,"title":{},"body":{"classes/EntityQueryService.html":{}}}],["orm",{"_index":851,"title":{},"body":{"properties.html":{}}}],["out",{"_index":829,"title":{},"body":{"index.html":{},"overview.html":{}}}],["overloading",{"_index":710,"title":{},"body":{"index.html":{}}}],["override",{"_index":412,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["overview",{"_index":841,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":42,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["ownerrelation",{"_index":41,"title":{"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{}}}],["package",{"_index":517,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["paired",{"_index":648,"title":{},"body":{"index.html":{}}}],["param",{"_index":231,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["parameter",{"_index":585,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parameterdecorator",{"_index":584,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parameters",{"_index":111,"title":{},"body":{"classes/BaseEntityService.html":{},"modules/DataSourceModule.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/TableNamingStrategy.html":{},"miscellaneous/functions.html":{}}}],["peak",{"_index":687,"title":{},"body":{"index.html":{}}}],["peer",{"_index":523,"title":{},"body":{"dependencies.html":{}}}],["per",{"_index":759,"title":{},"body":{"index.html":{}}}],["performance",{"_index":671,"title":{},"body":{"index.html":{}}}],["periods",{"_index":701,"title":{},"body":{"index.html":{}}}],["pick",{"_index":559,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pickcolumntype",{"_index":463,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["pickcolumntype(options",{"_index":589,"title":{},"body":{"miscellaneous/functions.html":{}}}],["picks",{"_index":600,"title":{},"body":{"miscellaneous/functions.html":{}}}],["picktransformer",{"_index":467,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["picktransformer(options",{"_index":594,"title":{},"body":{"miscellaneous/functions.html":{}}}],["please",{"_index":804,"title":{},"body":{"index.html":{}}}],["pnpm",{"_index":663,"title":{},"body":{"index.html":{}}}],["pool",{"_index":681,"title":{},"body":{"index.html":{}}}],["poolsize",{"_index":676,"title":{},"body":{"index.html":{}}}],["postgres",{"_index":669,"title":{},"body":{"index.html":{}}}],["postgres.conf",{"_index":740,"title":{},"body":{"index.html":{}}}],["postgresql",{"_index":739,"title":{},"body":{"index.html":{}}}],["powerful",{"_index":826,"title":{},"body":{"index.html":{}}}],["precision",{"_index":767,"title":{},"body":{"index.html":{}}}],["preservation",{"_index":766,"title":{},"body":{"index.html":{}}}],["prevent",{"_index":709,"title":{},"body":{"index.html":{}}}],["preventing",{"_index":734,"title":{},"body":{"index.html":{}}}],["primarygeneratedcolumn",{"_index":120,"title":{},"body":{"classes/BaseIdEntity.html":{}}}],["primitive",{"_index":603,"title":{},"body":{"miscellaneous/functions.html":{}}}],["process",{"_index":653,"title":{},"body":{"index.html":{}}}],["project",{"_index":798,"title":{},"body":{"index.html":{}}}],["prolonged",{"_index":735,"title":{},"body":{"index.html":{}}}],["promise",{"_index":222,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{}}}],["properties",{"_index":9,"title":{"properties.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/HttpErrorDto.html":{},"classes/IDDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"properties.html":{}}}],["property",{"_index":23,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityService.html":{},"classes/HttpErrorDto.html":{},"classes/IDDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{}}}],["property({type",{"_index":84,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/HttpErrorDto.html":{},"classes/IDDto.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["property.ts",{"_index":511,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["propertydecorator",{"_index":550,"title":{},"body":{"miscellaneous/functions.html":{}}}],["propertyoptions",{"_index":547,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provide",{"_index":176,"title":{},"body":{"modules/DataSourceModule.html":{},"miscellaneous/functions.html":{}}}],["provided",{"_index":591,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provideentityservice",{"_index":175,"title":{},"body":{"modules/DataSourceModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["provideentityservice(entity",{"_index":586,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provider",{"_index":587,"title":{},"body":{"miscellaneous/functions.html":{}}}],["providers",{"_index":188,"title":{},"body":{"modules/DataSourceModule.html":{},"overview.html":{}}}],["provides",{"_index":75,"title":{},"body":{"classes/BaseEntity.html":{}}}],["providing",{"_index":636,"title":{},"body":{"index.html":{},"properties.html":{}}}],["puq",{"_index":850,"title":{},"body":{"properties.html":{}}}],["puq/env",{"_index":519,"title":{},"body":{"dependencies.html":{}}}],["puq/is",{"_index":528,"title":{},"body":{"dependencies.html":{}}}],["puq/meta",{"_index":529,"title":{},"body":{"dependencies.html":{}}}],["puq/orm",{"_index":621,"title":{},"body":{"index.html":{}}}],["puq/ormsqlite",{"_index":664,"title":{},"body":{"index.html":{}}}],["puq/property",{"_index":24,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseIdEntity.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/HttpErrorDto.html":{},"classes/IDDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"dependencies.html":{}}}],["puq/query",{"_index":241,"title":{},"body":{"classes/EntityQueryService.html":{},"dependencies.html":{}}}],["puq/type",{"_index":94,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/SingleValidationErrorDto.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"dependencies.html":{}}}],["query",{"_index":136,"title":{},"body":{"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["query.service.js",{"_index":321,"title":{},"body":{"classes/EntityService.html":{}}}],["query.service.ts",{"_index":211,"title":{},"body":{"classes/EntityQueryService.html":{},"coverage.html":{}}}],["query.service.ts:17",{"_index":225,"title":{},"body":{"classes/EntityQueryService.html":{}}}],["query.service.ts:36",{"_index":228,"title":{},"body":{"classes/EntityQueryService.html":{}}}],["query.service.ts:45",{"_index":238,"title":{},"body":{"classes/EntityQueryService.html":{}}}],["query.service.ts:56",{"_index":230,"title":{},"body":{"classes/EntityQueryService.html":{}}}],["query.service.ts:68",{"_index":234,"title":{},"body":{"classes/EntityQueryService.html":{}}}],["query.service.ts:82",{"_index":221,"title":{},"body":{"classes/EntityQueryService.html":{}}}],["querycount",{"_index":220,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{}}}],["querydeeppartialentity",{"_index":310,"title":{},"body":{"classes/EntityService.html":{}}}],["querymany",{"_index":224,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{}}}],["queryone",{"_index":227,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{}}}],["ram",{"_index":751,"title":{},"body":{"index.html":{}}}],["read",{"_index":212,"title":{},"body":{"classes/EntityQueryService.html":{}}}],["readily",{"_index":694,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":115,"title":{},"body":{"classes/BaseEntityService.html":{},"modules/DataSourceModule.html":{}}}],["record",{"_index":555,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reduce",{"_index":696,"title":{},"body":{"index.html":{}}}],["reduction",{"_index":656,"title":{},"body":{"index.html":{}}}],["refrain",{"_index":773,"title":{},"body":{"index.html":{}}}],["related",{"_index":369,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["relation",{"_index":25,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/EntityService.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["relation(options",{"_index":606,"title":{},"body":{"miscellaneous/functions.html":{}}}],["relation(relationname",{"_index":334,"title":{},"body":{"classes/EntityService.html":{}}}],["relation({type",{"_index":416,"title":{},"body":{"entities/TestEntity.html":{},"entities/TestEntity-1.html":{}}}],["relationid",{"_index":330,"title":{},"body":{"classes/EntityService.html":{}}}],["relationname",{"_index":331,"title":{},"body":{"classes/EntityService.html":{},"classes/TableNamingStrategy.html":{}}}],["relationoptions",{"_index":607,"title":{},"body":{"miscellaneous/functions.html":{}}}],["relationparam",{"_index":276,"title":{},"body":{"classes/EntityService.html":{},"miscellaneous/functions.html":{}}}],["relations",{"_index":563,"title":{},"body":{"miscellaneous/functions.html":{}}}],["remains",{"_index":719,"title":{},"body":{"index.html":{}}}],["remove",{"_index":292,"title":{},"body":{"classes/EntityService.html":{}}}],["remove(relationid",{"_index":337,"title":{},"body":{"classes/EntityService.html":{}}}],["removerelation",{"_index":267,"title":{},"body":{"classes/EntityService.html":{}}}],["removerelation(relation",{"_index":290,"title":{},"body":{"classes/EntityService.html":{}}}],["repository",{"_index":109,"title":{},"body":{"classes/BaseEntityService.html":{},"properties.html":{}}}],["required",{"_index":55,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/IDDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{}}}],["reset",{"_index":846,"title":{},"body":{"overview.html":{}}}],["resource",{"_index":684,"title":{},"body":{"index.html":{}}}],["responsiveness",{"_index":733,"title":{},"body":{"index.html":{}}}],["restore",{"_index":268,"title":{},"body":{"classes/EntityService.html":{}}}],["restore(objectid",{"_index":293,"title":{},"body":{"classes/EntityService.html":{}}}],["restquery",{"_index":247,"title":{},"body":{"classes/EntityQueryService.html":{}}}],["result",{"_index":149,"title":{},"body":{"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/UpdateResultDto.html":{}}}],["result.dto.ts",{"_index":147,"title":{},"body":{"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/UpdateResultDto.html":{},"coverage.html":{}}}],["result.dto.ts:13",{"_index":152,"title":{},"body":{"classes/CountResultDto.html":{},"classes/DeleteResultDto.html":{},"classes/UpdateResultDto.html":{}}}],["results",{"_index":65,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"modules/DataSourceModule.html":{},"classes/DeleteResultDto.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/HttpErrorDto.html":{},"classes/IDDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":185,"title":{},"body":{"modules/DataSourceModule.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/TableNamingStrategy.html":{}}}],["returns",{"_index":165,"title":{},"body":{"modules/DataSourceModule.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/TableNamingStrategy.html":{},"miscellaneous/functions.html":{}}}],["robert",{"_index":860,"title":{},"body":{"properties.html":{}}}],["robert.brightline@gmail.com",{"_index":838,"title":{},"body":{"index.html":{}}}],["running",{"_index":833,"title":{},"body":{"index.html":{}}}],["safe",{"_index":784,"title":{},"body":{"index.html":{}}}],["save",{"_index":269,"title":{},"body":{"classes/EntityService.html":{}}}],["save(entity",{"_index":295,"title":{},"body":{"classes/EntityService.html":{}}}],["savemany",{"_index":270,"title":{},"body":{"classes/EntityService.html":{}}}],["savemany(entities",{"_index":298,"title":{},"body":{"classes/EntityService.html":{}}}],["seamlessly",{"_index":627,"title":{},"body":{"index.html":{},"properties.html":{}}}],["secondtablename",{"_index":409,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["secure",{"_index":812,"title":{},"body":{"index.html":{}}}],["securely",{"_index":835,"title":{},"body":{"index.html":{}}}],["select",{"_index":609,"title":{},"body":{"miscellaneous/functions.html":{}}}],["selectbaseentity",{"_index":613,"title":{},"body":{"miscellaneous/functions.html":{}}}],["selecttransformer",{"_index":509,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["server",{"_index":737,"title":{},"body":{"index.html":{}}}],["server's",{"_index":750,"title":{},"body":{"index.html":{}}}],["service",{"_index":213,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"miscellaneous/functions.html":{}}}],["service.js",{"_index":177,"title":{},"body":{"modules/DataSourceModule.html":{}}}],["service.ts",{"_index":494,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["set",{"_index":58,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/EntityService.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["set(null",{"_index":339,"title":{},"body":{"classes/EntityService.html":{}}}],["set(relationid",{"_index":338,"title":{},"body":{"classes/EntityService.html":{}}}],["setrelation",{"_index":271,"title":{},"body":{"classes/EntityService.html":{}}}],["setrelation(relation",{"_index":300,"title":{},"body":{"classes/EntityService.html":{}}}],["sets",{"_index":729,"title":{},"body":{"index.html":{}}}],["settings",{"_index":675,"title":{},"body":{"index.html":{}}}],["shared_buffers",{"_index":746,"title":{},"body":{"index.html":{}}}],["single",{"_index":362,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["singlevalidationerror",{"_index":364,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["singlevalidationerrordto",{"_index":360,"title":{"classes/SingleValidationErrorDto.html":{}},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{}}}],["smoothly",{"_index":834,"title":{},"body":{"index.html":{}}}],["soft",{"_index":304,"title":{},"body":{"classes/EntityService.html":{}}}],["softdelete",{"_index":272,"title":{},"body":{"classes/EntityService.html":{}}}],["softdelete(objectid",{"_index":302,"title":{},"body":{"classes/EntityService.html":{}}}],["sort",{"_index":760,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"modules/DataSourceModule.html":{},"classes/DeleteResultDto.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/HttpErrorDto.html":{},"classes/IDDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["source.module.ts",{"_index":157,"title":{},"body":{"modules/DataSourceModule.html":{}}}],["source.module.ts:14",{"_index":169,"title":{},"body":{"modules/DataSourceModule.html":{}}}],["source.module.ts:34",{"_index":163,"title":{},"body":{"modules/DataSourceModule.html":{}}}],["source.module.ts:53",{"_index":172,"title":{},"body":{"modules/DataSourceModule.html":{}}}],["specifies",{"_index":690,"title":{},"body":{"index.html":{}}}],["specify",{"_index":574,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sqlite",{"_index":17,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/ManyRelation.html":{},"entities/OneRelation.html":{},"entities/OwnerRelation.html":{},"entities/TestEntity.html":{},"classes/TestObject.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["sqlite3.ts",{"_index":7,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/ManyRelation.html":{},"entities/OneRelation.html":{},"entities/OwnerRelation.html":{},"entities/TestEntity.html":{},"classes/TestObject.html":{},"coverage.html":{}}}],["sqlite3.ts:14",{"_index":356,"title":{},"body":{"entities/OneRelation.html":{}}}],["sqlite3.ts:19",{"_index":354,"title":{},"body":{"entities/ManyRelation.html":{}}}],["sqlite3.ts:24",{"_index":358,"title":{},"body":{"entities/OwnerRelation.html":{}}}],["sqlite3.ts:29",{"_index":19,"title":{},"body":{"entities/AttributeRelation.html":{}}}],["sqlite3.ts:30",{"_index":20,"title":{},"body":{"entities/AttributeRelation.html":{}}}],["sqlite3.ts:35",{"_index":427,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:36",{"_index":421,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:37",{"_index":423,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:38",{"_index":419,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:39",{"_index":418,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:45",{"_index":424,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:51",{"_index":415,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:52",{"_index":420,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:62",{"_index":425,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:72",{"_index":422,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:83",{"_index":426,"title":{},"body":{"entities/TestEntity.html":{}}}],["sqlite3.ts:9",{"_index":440,"title":{},"body":{"classes/TestObject.html":{}}}],["sqlite3.ts:93",{"_index":417,"title":{},"body":{"entities/TestEntity.html":{}}}],["src/.../base.ts",{"_index":866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../column.ts",{"_index":535,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../create",{"_index":536,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../data",{"_index":538,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../entity.ts",{"_index":537,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../pick",{"_index":541,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../provide",{"_index":539,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../relation.ts",{"_index":542,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../select",{"_index":543,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../sqlite",{"_index":540,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../view",{"_index":544,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../where",{"_index":545,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/lib/common/pick",{"_index":460,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/decorator/column.ts",{"_index":468,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/decorator/entity.ts",{"_index":469,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/decorator/relation.ts",{"_index":470,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/decorator/view",{"_index":471,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/dto/count",{"_index":146,"title":{},"body":{"classes/CountResultDto.html":{},"coverage.html":{}}}],["src/lib/dto/create",{"_index":477,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/dto/delete",{"_index":204,"title":{},"body":{"classes/DeleteResultDto.html":{},"coverage.html":{}}}],["src/lib/dto/http",{"_index":341,"title":{},"body":{"classes/HttpErrorDto.html":{},"coverage.html":{}}}],["src/lib/dto/id.dto.ts",{"_index":351,"title":{},"body":{"classes/IDDto.html":{},"coverage.html":{}}}],["src/lib/dto/id.dto.ts:6",{"_index":353,"title":{},"body":{"classes/IDDto.html":{}}}],["src/lib/dto/update",{"_index":443,"title":{},"body":{"classes/UpdateResultDto.html":{},"coverage.html":{}}}],["src/lib/dto/validation",{"_index":361,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{}}}],["src/lib/entity/base",{"_index":116,"title":{},"body":{"classes/BaseIdEntity.html":{},"coverage.html":{}}}],["src/lib/entity/base.ts",{"_index":73,"title":{},"body":{"classes/BaseEntity.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/entity/base.ts:12",{"_index":86,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/lib/entity/base.ts:16",{"_index":90,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/lib/entity/base.ts:20",{"_index":88,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/lib/factory/naming",{"_index":390,"title":{},"body":{"classes/TableNamingStrategy.html":{},"coverage.html":{}}}],["src/lib/integration/better",{"_index":6,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/ManyRelation.html":{},"entities/OneRelation.html":{},"entities/OwnerRelation.html":{},"entities/TestEntity.html":{},"classes/TestObject.html":{},"coverage.html":{}}}],["src/lib/integration/postgres.ts",{"_index":68,"title":{},"body":{"entities/AttributeRelation-1.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity-1.html":{},"classes/TestObject-1.html":{},"coverage.html":{}}}],["src/lib/integration/postgres.ts:14",{"_index":357,"title":{},"body":{"entities/OneRelation-1.html":{}}}],["src/lib/integration/postgres.ts:19",{"_index":355,"title":{},"body":{"entities/ManyRelation-1.html":{}}}],["src/lib/integration/postgres.ts:24",{"_index":359,"title":{},"body":{"entities/OwnerRelation-1.html":{}}}],["src/lib/integration/postgres.ts:29",{"_index":70,"title":{},"body":{"entities/AttributeRelation-1.html":{}}}],["src/lib/integration/postgres.ts:30",{"_index":71,"title":{},"body":{"entities/AttributeRelation-1.html":{}}}],["src/lib/integration/postgres.ts:35",{"_index":439,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:36",{"_index":433,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:37",{"_index":435,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:38",{"_index":431,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:39",{"_index":430,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:40",{"_index":436,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:41",{"_index":428,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:42",{"_index":432,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:52",{"_index":437,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:62",{"_index":434,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:73",{"_index":438,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:83",{"_index":429,"title":{},"body":{"entities/TestEntity-1.html":{}}}],["src/lib/integration/postgres.ts:9",{"_index":441,"title":{},"body":{"classes/TestObject-1.html":{}}}],["src/lib/module/data",{"_index":156,"title":{},"body":{"modules/DataSourceModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/module/provide",{"_index":493,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/module/sqlite",{"_index":496,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/query/common",{"_index":135,"title":{},"body":{"classes/CommonQueryDto.html":{},"coverage.html":{}}}],["src/lib/query/create",{"_index":499,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/query/select",{"_index":508,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/query/where",{"_index":510,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/service/base",{"_index":105,"title":{},"body":{"classes/BaseEntityService.html":{},"coverage.html":{}}}],["src/lib/service/entity",{"_index":210,"title":{},"body":{"classes/EntityQueryService.html":{},"coverage.html":{}}}],["src/lib/service/entity.service.ts",{"_index":262,"title":{},"body":{"classes/EntityService.html":{},"coverage.html":{}}}],["src/lib/service/entity.service.ts:107",{"_index":277,"title":{},"body":{"classes/EntityService.html":{}}}],["src/lib/service/entity.service.ts:122",{"_index":291,"title":{},"body":{"classes/EntityService.html":{}}}],["src/lib/service/entity.service.ts:137",{"_index":301,"title":{},"body":{"classes/EntityService.html":{}}}],["src/lib/service/entity.service.ts:152",{"_index":307,"title":{},"body":{"classes/EntityService.html":{}}}],["src/lib/service/entity.service.ts:24",{"_index":297,"title":{},"body":{"classes/EntityService.html":{}}}],["src/lib/service/entity.service.ts:33",{"_index":299,"title":{},"body":{"classes/EntityService.html":{}}}],["src/lib/service/entity.service.ts:43",{"_index":311,"title":{},"body":{"classes/EntityService.html":{}}}],["src/lib/service/entity.service.ts:52",{"_index":284,"title":{},"body":{"classes/EntityService.html":{}}}],["src/lib/service/entity.service.ts:61",{"_index":303,"title":{},"body":{"classes/EntityService.html":{}}}],["src/lib/service/entity.service.ts:70",{"_index":294,"title":{},"body":{"classes/EntityService.html":{}}}],["src/lib/service/entity.service.ts:79",{"_index":289,"title":{},"body":{"classes/EntityService.html":{}}}],["src/lib/service/entity.service.ts:93",{"_index":282,"title":{},"body":{"classes/EntityService.html":{}}}],["src/lib/view/base.view.ts",{"_index":122,"title":{},"body":{"classes/BaseView.html":{},"coverage.html":{}}}],["src/lib/view/base.view.ts:10",{"_index":130,"title":{},"body":{"classes/BaseView.html":{}}}],["src/lib/view/base.view.ts:11",{"_index":128,"title":{},"body":{"classes/BaseView.html":{}}}],["src/lib/view/base.view.ts:8",{"_index":129,"title":{},"body":{"classes/BaseView.html":{}}}],["src/lib/view/base.view.ts:9",{"_index":127,"title":{},"body":{"classes/BaseView.html":{}}}],["standard",{"_index":625,"title":{},"body":{"index.html":{},"properties.html":{}}}],["started",{"_index":620,"title":{"index.html":{}},"body":{}}],["statements",{"_index":459,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":159,"title":{},"body":{"modules/DataSourceModule.html":{}}}],["status",{"_index":348,"title":{},"body":{"classes/HttpErrorDto.html":{}}}],["statuscode",{"_index":345,"title":{},"body":{"classes/HttpErrorDto.html":{}}}],["stays",{"_index":810,"title":{},"body":{"index.html":{}}}],["stored",{"_index":764,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":395,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["strategy.ts",{"_index":391,"title":{},"body":{"classes/TableNamingStrategy.html":{},"coverage.html":{}}}],["strategy.ts:13",{"_index":402,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["strategy.ts:17",{"_index":404,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["strategy.ts:21",{"_index":407,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["strategy.ts:6",{"_index":410,"title":{},"body":{"classes/TableNamingStrategy.html":{}}}],["streamlined",{"_index":641,"title":{},"body":{"index.html":{}}}],["string",{"_index":14,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseView.html":{},"classes/HttpErrorDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["structure",{"_index":343,"title":{},"body":{"classes/HttpErrorDto.html":{}}}],["subsequent",{"_index":792,"title":{},"body":{"index.html":{}}}],["such",{"_index":599,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sufficient",{"_index":744,"title":{},"body":{"index.html":{}}}],["summary",{"_index":622,"title":{},"body":{"index.html":{}}}],["support",{"_index":596,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["supporting",{"_index":806,"title":{},"body":{"index.html":{}}}],["swagger",{"_index":639,"title":{},"body":{"index.html":{},"properties.html":{}}}],["swc/helpers",{"_index":521,"title":{},"body":{"dependencies.html":{}}}],["system",{"_index":707,"title":{},"body":{"index.html":{}}}],["table",{"_index":393,"title":{},"body":{"classes/TableNamingStrategy.html":{},"coverage.html":{}}}],["tablenamingstrategy",{"_index":389,"title":{"classes/TableNamingStrategy.html":{}},"body":{"classes/TableNamingStrategy.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":516,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":800,"title":{},"body":{"index.html":{}}}],["target",{"_index":49,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["testentity",{"_index":43,"title":{"entities/TestEntity.html":{},"entities/TestEntity-1.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{}}}],["testobject",{"_index":34,"title":{"classes/TestObject.html":{},"classes/TestObject-1.html":{}},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"coverage.html":{}}}],["thank",{"_index":796,"title":{},"body":{"index.html":{}}}],["this.datasource.initialize",{"_index":202,"title":{},"body":{"modules/DataSourceModule.html":{}}}],["this.datasource.isinitialized",{"_index":200,"title":{},"body":{"modules/DataSourceModule.html":{}}}],["this.findonebyid(param",{"_index":259,"title":{},"body":{"classes/EntityQueryService.html":{}}}],["this.findoneorthrow",{"_index":257,"title":{},"body":{"classes/EntityQueryService.html":{}}}],["this.repository",{"_index":332,"title":{},"body":{"classes/EntityService.html":{}}}],["this.repository.count(query",{"_index":260,"title":{},"body":{"classes/EntityQueryService.html":{}}}],["this.repository.decrement",{"_index":329,"title":{},"body":{"classes/EntityService.html":{}}}],["this.repository.delete(objectid.id",{"_index":325,"title":{},"body":{"classes/EntityService.html":{}}}],["this.repository.find",{"_index":248,"title":{},"body":{"classes/EntityQueryService.html":{}}}],["this.repository.findone(query",{"_index":255,"title":{},"body":{"classes/EntityQueryService.html":{}}}],["this.repository.increment",{"_index":328,"title":{},"body":{"classes/EntityService.html":{}}}],["this.repository.restore(objectid.id",{"_index":327,"title":{},"body":{"classes/EntityService.html":{}}}],["this.repository.save(entities",{"_index":323,"title":{},"body":{"classes/EntityService.html":{}}}],["this.repository.save(entity",{"_index":322,"title":{},"body":{"classes/EntityService.html":{}}}],["this.repository.softdelete(objectid.id",{"_index":326,"title":{},"body":{"classes/EntityService.html":{}}}],["this.repository.update(objectid.id",{"_index":324,"title":{},"body":{"classes/EntityService.html":{}}}],["through",{"_index":642,"title":{},"body":{"index.html":{}}}],["throw",{"_index":235,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{}}}],["time",{"_index":730,"title":{},"body":{"index.html":{}}}],["timestamp",{"_index":125,"title":{},"body":{"classes/BaseView.html":{}}}],["token",{"_index":582,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tokenf",{"_index":583,"title":{},"body":{"miscellaneous/functions.html":{}}}],["toward",{"_index":816,"title":{},"body":{"index.html":{}}}],["traffic",{"_index":700,"title":{},"body":{"index.html":{}}}],["transfer",{"_index":778,"title":{},"body":{"index.html":{}}}],["transform",{"_index":608,"title":{},"body":{"miscellaneous/functions.html":{}}}],["transformations",{"_index":777,"title":{},"body":{"index.html":{}}}],["transformed",{"_index":667,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":530,"title":{},"body":{"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["transformer.ts",{"_index":466,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["transformers",{"_index":774,"title":{},"body":{"index.html":{}}}],["true",{"_index":54,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"modules/DataSourceModule.html":{},"classes/IDDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"miscellaneous/functions.html":{}}}],["type",{"_index":12,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"classes/BaseView.html":{},"classes/CommonQueryDto.html":{},"classes/CountResultDto.html":{},"modules/DataSourceModule.html":{},"classes/DeleteResultDto.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/HttpErrorDto.html":{},"classes/IDDto.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"classes/SingleValidationErrorDto.html":{},"classes/TableNamingStrategy.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"classes/UpdateResultDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["type.ts",{"_index":461,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["typealiases",{"_index":862,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeorm",{"_index":98,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityService.html":{},"classes/BaseIdEntity.html":{},"modules/DataSourceModule.html":{},"classes/EntityQueryService.html":{},"classes/EntityService.html":{},"classes/TableNamingStrategy.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["typeorm/query",{"_index":318,"title":{},"body":{"classes/EntityService.html":{}}}],["typeorom",{"_index":783,"title":{},"body":{"index.html":{}}}],["types",{"_index":598,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["undefined",{"_index":414,"title":{},"body":{"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{}}}],["unique",{"_index":572,"title":{},"body":{"miscellaneous/functions.html":{}}}],["uniques",{"_index":569,"title":{},"body":{"miscellaneous/functions.html":{}}}],["unknown",{"_index":232,"title":{},"body":{"classes/EntityQueryService.html":{},"classes/EntityService.html":{}}}],["unnecessary",{"_index":724,"title":{},"body":{"index.html":{}}}],["unset",{"_index":308,"title":{},"body":{"classes/EntityService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["unsetrelation",{"_index":273,"title":{},"body":{"classes/EntityService.html":{}}}],["unsetrelation(relation",{"_index":305,"title":{},"body":{"classes/EntityService.html":{}}}],["unsetrelationparam",{"_index":306,"title":{},"body":{"classes/EntityService.html":{},"miscellaneous/functions.html":{}}}],["up",{"_index":811,"title":{},"body":{"index.html":{}}}],["update",{"_index":274,"title":{},"body":{"classes/EntityService.html":{},"classes/UpdateResultDto.html":{}}}],["update(objectid",{"_index":309,"title":{},"body":{"classes/EntityService.html":{}}}],["updatedat",{"_index":78,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseView.html":{}}}],["updatedatecolumn",{"_index":97,"title":{},"body":{"classes/BaseEntity.html":{}}}],["updateresult",{"_index":320,"title":{},"body":{"classes/EntityService.html":{},"classes/UpdateResultDto.html":{}}}],["updateresultdto",{"_index":442,"title":{"classes/UpdateResultDto.html":{}},"body":{"classes/UpdateResultDto.html":{},"coverage.html":{}}}],["updates",{"_index":819,"title":{},"body":{"index.html":{}}}],["upper",{"_index":703,"title":{},"body":{"index.html":{}}}],["use",{"_index":785,"title":{},"body":{"index.html":{}}}],["usefactory(config",{"_index":194,"title":{},"body":{"modules/DataSourceModule.html":{}}}],["useful",{"_index":803,"title":{},"body":{"index.html":{}}}],["users",{"_index":828,"title":{},"body":{"index.html":{}}}],["usevalue",{"_index":191,"title":{},"body":{"modules/DataSourceModule.html":{}}}],["using",{"_index":638,"title":{},"body":{"index.html":{},"properties.html":{}}}],["utilization",{"_index":685,"title":{},"body":{"index.html":{}}}],["validated",{"_index":634,"title":{},"body":{"index.html":{},"properties.html":{}}}],["validation",{"_index":363,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["validationconstraints",{"_index":370,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["validationconstraintsdto",{"_index":366,"title":{"classes/ValidationConstraintsDto.html":{}},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{}}}],["validationerrordto",{"_index":386,"title":{"classes/ValidationErrorDto.html":{}},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{},"coverage.html":{}}}],["validationerrorresult",{"_index":371,"title":{},"body":{"classes/SingleValidationErrorDto.html":{},"classes/ValidationConstraintsDto.html":{},"classes/ValidationErrorDto.html":{}}}],["validator",{"_index":649,"title":{},"body":{"index.html":{}}}],["value",{"_index":11,"title":{},"body":{"entities/AttributeRelation.html":{},"entities/AttributeRelation-1.html":{},"classes/EntityService.html":{},"entities/ManyRelation.html":{},"entities/ManyRelation-1.html":{},"entities/OneRelation.html":{},"entities/OneRelation-1.html":{},"entities/OwnerRelation.html":{},"entities/OwnerRelation-1.html":{},"entities/TestEntity.html":{},"entities/TestEntity-1.html":{},"classes/TestObject.html":{},"classes/TestObject-1.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["valuetransformer",{"_index":605,"title":{},"body":{"miscellaneous/functions.html":{}}}],["variable",{"_index":490,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":865,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":848,"title":{},"body":{"properties.html":{}}}],["versions",{"_index":822,"title":{},"body":{"index.html":{}}}],["view",{"_index":123,"title":{},"body":{"classes/BaseView.html":{},"miscellaneous/functions.html":{}}}],["viewcolumn",{"_index":131,"title":{},"body":{"classes/BaseView.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["viewcolumn(options",{"_index":610,"title":{},"body":{"miscellaneous/functions.html":{}}}],["viewcolumn({type",{"_index":126,"title":{},"body":{"classes/BaseView.html":{}}}],["viewentity",{"_index":474,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["viewentity(expression",{"_index":612,"title":{},"body":{"miscellaneous/functions.html":{}}}],["volume",{"_index":659,"title":{},"body":{"index.html":{}}}],["well",{"_index":813,"title":{},"body":{"index.html":{}}}],["whereoption",{"_index":552,"title":{},"body":{"miscellaneous/functions.html":{}}}],["whereproperty",{"_index":512,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["whereproperty(options",{"_index":617,"title":{},"body":{"miscellaneous/functions.html":{}}}],["wherequerytransformer",{"_index":513,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["wherequerytransformer(options",{"_index":618,"title":{},"body":{"miscellaneous/functions.html":{}}}],["widely",{"_index":645,"title":{},"body":{"index.html":{}}}],["withdeleted",{"_index":139,"title":{},"body":{"classes/CommonQueryDto.html":{}}}],["within",{"_index":630,"title":{},"body":{"index.html":{},"properties.html":{}}}],["work_mem",{"_index":755,"title":{},"body":{"index.html":{}}}],["write",{"_index":263,"title":{},"body":{"classes/EntityService.html":{}}}],["yes",{"_index":570,"title":{},"body":{"miscellaneous/functions.html":{}}}],["zoom",{"_index":845,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"entities/AttributeRelation.html":{"url":"entities/AttributeRelation.html","title":"entity - AttributeRelation","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  AttributeRelation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/better-sqlite3.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                key\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:30\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) key: string;\n  @Column({ databaseType: 'sqlite', type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) string: string;\n  @Column({ databaseType: 'sqlite', type: 'integer' }) integer: number;\n  @Column({ databaseType: 'sqlite', type: 'number' }) number: number;\n  @Column({ databaseType: 'sqlite', type: 'boolean' }) boolean: boolean;\n  @Column({ databaseType: 'sqlite', type: 'bigint' }) bigint: bigint;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'object',\n    target: () => TestObject,\n  })\n  object: TestObject;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'array',\n    items: { type: 'string' },\n  })\n  array: string[];\n  @Column({ databaseType: 'sqlite', type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/AttributeRelation-1.html":{"url":"entities/AttributeRelation-1.html","title":"entity - AttributeRelation-1","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  AttributeRelation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/postgres.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                key\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:30\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ type: 'string' }) key: string;\n  @Column({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ type: 'string' }) string: string;\n  @Column({ type: 'integer' }) integer: number;\n  @Column({ type: 'number' }) number: number;\n  @Column({ type: 'boolean' }) boolean: boolean;\n  @Column({ type: 'bigint' }) bigint: bigint;\n  @Column({ type: 'object', target: () => TestObject }) object: TestObject;\n  @Column({ type: 'array', items: { type: 'string' } }) array: string[];\n  @Column({ type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/entity/base.ts\n        \n\n\n            \n                Description\n            \n            \n                All entities extends this entity. The entity provides id, createdAt, updatedAt, and deletedAt columns\n\n            \n\n            \n                Extends\n            \n            \n                            BaseIdEntity\n            \n\n            \n                Implements\n            \n            \n                        BaseModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'date'})@CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/entity/base.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'date'})@DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/entity/base.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'date'})@UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/entity/base.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'integer'})@PrimaryGeneratedColumn()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseIdEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseIdEntity:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type { BaseModel } from '@puq/type';\nimport { Property } from '@puq/property';\nimport { CreateDateColumn, DeleteDateColumn, UpdateDateColumn } from 'typeorm';\nimport { BaseIdEntity } from './base-id.js';\n\n/**\n * All entities extends this entity. The entity provides id, createdAt, updatedAt, and deletedAt columns\n */\nexport class BaseEntity extends BaseIdEntity implements BaseModel {\n  @Property({ type: 'date' })\n  @CreateDateColumn()\n  createdAt: string;\n\n  @Property({ type: 'date' })\n  @UpdateDateColumn()\n  updatedAt: string;\n\n  @Property({ type: 'date' })\n  @DeleteDateColumn()\n  deletedAt: string;\n}\n\nexport const BASE_ENTITY_COLUMNS = Object.keys(new BaseEntity());\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntityService.html":{"url":"classes/BaseEntityService.html","title":"class - BaseEntityService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/service/base-entity.service.ts\n        \n\n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/lib/service/base-entity.service.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type { Repository } from 'typeorm';\nimport type { BaseModel } from '@puq/type';\n\nexport class BaseEntityService {\n  constructor(protected readonly repository: Repository) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseIdEntity.html":{"url":"classes/BaseIdEntity.html","title":"class - BaseIdEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseIdEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/entity/base-id.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IDModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'integer'})@PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/entity/base-id.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type { IDModel } from '@puq/type';\nimport { Property } from '@puq/property';\nimport { PrimaryGeneratedColumn } from 'typeorm';\n\nexport class BaseIdEntity implements IDModel {\n  @Property({ type: 'integer' })\n  @PrimaryGeneratedColumn()\n  id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseView.html":{"url":"classes/BaseView.html","title":"class - BaseView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/view/base.view.ts\n        \n\n\n            \n                Description\n            \n            \n                Base view entity that includes id and timestamp columns\n\n            \n\n\n            \n                Implements\n            \n            \n                        BaseModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewColumn({type: 'date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/view/base.view.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewColumn({type: 'date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/view/base.view.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewColumn({type: 'integer'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/view/base.view.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewColumn({type: 'date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/view/base.view.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type { BaseModel } from '@puq/type';\nimport { ViewColumn } from './../decorator/view-column.js';\n\n/**\n * Base view entity that includes `id` and `timestamp` columns\n */\nexport class BaseView implements BaseModel {\n  @ViewColumn({ type: 'integer' }) id: number;\n  @ViewColumn({ type: 'date' }) createdAt: string;\n  @ViewColumn({ type: 'date' }) updatedAt: string;\n  @ViewColumn({ type: 'date' }) deletedAt: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommonQueryDto.html":{"url":"classes/CommonQueryDto.html","title":"class - CommonQueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommonQueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/query/common-query-dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Common query dto\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                withDeleted\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        withDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'boolean', description: 'Include deleted items to the load', default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/query/common-query-dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\n\n/**\n * Common query dto\n */\n@Dto()\nexport class CommonQueryDto {\n  @Property({\n    type: 'boolean',\n    description: 'Include deleted items to the load',\n    default: false,\n  })\n  withDeleted?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CountResultDto.html":{"url":"classes/CountResultDto.html","title":"class - CountResultDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CountResultDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dto/count-result.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Count result\n\n            \n\n\n            \n                Implements\n            \n            \n                        CountResult\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                count\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        count\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'integer', description: 'The number of items matched the query'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/count-result.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type { CountResult } from '@puq/type';\nimport { Dto, Property } from '@puq/property';\n\n/**\n * Count result\n */\n@Dto()\nexport class CountResultDto implements CountResult {\n  @Property({\n    type: 'integer',\n    description: 'The number of items matched the query',\n  })\n  count: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataSourceModule.html":{"url":"modules/DataSourceModule.html","title":"module - DataSourceModule","body":"\n                   \n\n\n\n\n    Modules\n    DataSourceModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/module/data-source.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forFeature\n                        \n                    \n                \n            \n            \n                \n                        \n                    forFeature(options: DataSourceModuleOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/module/data-source.module.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            DataSourceModuleOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options: DataSourceModuleOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/module/data-source.module.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            DataSourceModuleOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/module/data-source.module.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n\n\n    \n        import type { DynamicModule, OnModuleInit } from '@nestjs/common';\nimport { Module } from '@nestjs/common';\nimport {\n  getEntityServiceToken,\n  provideEntityService,\n} from './provide-entity-service.js';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { DataSource } from 'typeorm';\nimport type { DataSourceModuleOptions } from './data-source-options.js';\nimport { getDataSourceOptions } from './data-source-options.js';\n\n@Module({})\nexport class DataSourceModule implements OnModuleInit {\n  static forRoot(options: DataSourceModuleOptions): DynamicModule {\n    return {\n      global: true,\n      module: DataSourceModule,\n      imports: [ConfigModule],\n      providers: [\n        {\n          provide: DataSource,\n          inject: [ConfigService],\n          durable: true,\n          // useValue: new DataSource(getDataSourceOptions(options)),\n          useFactory(config: ConfigService) {\n            return new DataSource(getDataSourceOptions(config, options));\n          },\n        },\n      ],\n      exports: [DataSource],\n    };\n  }\n\n  static forFeature(options: DataSourceModuleOptions): DynamicModule {\n    const { entities } = options;\n    const entityServiceProviders = entities.map((entity) =>\n      provideEntityService(() => entity),\n    );\n\n    const entityServiceTokens = entities.map((entity) =>\n      getEntityServiceToken(() => entity),\n    );\n\n    return {\n      module: DataSourceModule,\n      providers: [...entityServiceProviders],\n      exports: [...entityServiceTokens],\n    };\n  }\n\n  constructor(protected readonly dataSource: DataSource) {}\n\n  async onModuleInit() {\n    if (!this.dataSource.isInitialized) {\n      await this.dataSource.initialize();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteResultDto.html":{"url":"classes/DeleteResultDto.html","title":"class - DeleteResultDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteResultDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dto/delete-result.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Delete result dto\n\n            \n\n\n            \n                Implements\n            \n            \n                        DeleteResult\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                affected\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        affected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'integer', description: 'The number of items affected by the delete operation'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/delete-result.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type { DeleteResult } from '@puq/type';\nimport { Dto, Property } from '@puq/property';\n\n/**\n * Delete result dto\n */\n@Dto()\nexport class DeleteResultDto implements DeleteResult {\n  @Property({\n    type: 'integer',\n    description: 'The number of items affected by the delete operation',\n  })\n  affected: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EntityQueryService.html":{"url":"classes/EntityQueryService.html","title":"class - EntityQueryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EntityQueryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/service/entity-query.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Read service\n\n            \n\n            \n                Extends\n            \n            \n                            BaseEntityService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                count\n                            \n                            \n                                find\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                findOneByIdOrThrow\n                            \n                            \n                                    Async\n                                findOneOrThrow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(query: QueryCount)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/entity-query.service.ts:82\n                        \n                    \n\n\n            \n                \n                        Count\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        QueryCount\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \nfind(query: QueryMany)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/entity-query.service.ts:17\n                        \n                    \n\n\n            \n                \n                        Query all entities QueryMany[]>\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        QueryMany\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(query: QueryOne)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/entity-query.service.ts:36\n                        \n                    \n\n\n            \n                \n                        Query one entity\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        QueryOne\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    QueryOne\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(param: IDModel, query: QueryOne)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/entity-query.service.ts:56\n                        \n                    \n\n\n            \n                \n                        Find one by id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                param\n                                            \n                                                        IDModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                        QueryOne\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneByIdOrThrow\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByIdOrThrow(param: IDModel, query: QueryOne)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/entity-query.service.ts:68\n                        \n                    \n\n\n            \n                \n                        Find one by id or throw error\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                param\n                                            \n                                                        IDModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                        QueryOne\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneOrThrow\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneOrThrow(query: QueryOne)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/entity-query.service.ts:45\n                        \n                    \n\n\n            \n                \n                        Query one entity\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        QueryOne\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    QueryOne\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type { FindOptionsOrder, FindOptionsWhere } from 'typeorm';\nimport { In } from 'typeorm';\nimport type { BaseModel, CountResult, IDModel } from '@puq/type';\nimport type { QueryCount, QueryMany, QueryOne } from '@puq/query';\nimport { BaseEntityService } from './base-entity.service.js';\nimport { NotFoundException } from '@nestjs/common';\n\n/**\n * Read service\n */\nexport class EntityQueryService extends BaseEntityService {\n  /**\n   * Query all entities QueryMany[]>\n   */\n  find(query: QueryMany) {\n    const { orderBy, orderDir, orderNulls, ...restQuery } = query;\n\n    return this.repository.find({\n      ...restQuery,\n      order: {\n        [orderBy ?? 'id']: {\n          direction: orderDir ?? 'asc',\n          nulls: orderNulls ?? 'LAST',\n        },\n      } as FindOptionsOrder,\n    });\n  }\n\n  /**\n   * Query one entity\n   * @param query {@link QueryOne}\n   * @returns\n   */\n  findOne(query: QueryOne[]>) {\n    return this.repository.findOne(query);\n  }\n\n  /**\n   * Query one entity\n   * @param query {@link QueryOne}\n   * @returns\n   */\n  async findOneOrThrow(query: QueryOne[]>) {\n    const found = await this.repository.findOne(query);\n    if (!found) throw new NotFoundException();\n    return found;\n  }\n\n  /**\n   * Find one by id\n   * @param id\n   * @returns\n   */\n  async findOneById(param: IDModel, query: QueryOne[]>) {\n    return await this.findOneOrThrow({\n      where: [{ id: In([param.id]) } as FindOptionsWhere],\n      ...query,\n    });\n  }\n\n  /**\n   * Find one by id or throw error\n   * @param id\n   * @returns\n   */\n  async findOneByIdOrThrow(\n    param: IDModel,\n    query: QueryOne[]>,\n  ) {\n    const found = await this.findOneById(param, query);\n    if (!found) throw new NotFoundException();\n    return found;\n  }\n\n  /**\n   * Count\n   * @param query\n   * @returns\n   */\n  async count(query: QueryCount[]>): Promise {\n    return { count: await this.repository.count(query) };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EntityService.html":{"url":"classes/EntityService.html","title":"class - EntityService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EntityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/service/entity.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Write service\n\n            \n\n            \n                Extends\n            \n            \n                            EntityQueryService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addRelation\n                            \n                            \n                                decrement\n                            \n                            \n                                delete\n                            \n                            \n                                increment\n                            \n                            \n                                    Async\n                                removeRelation\n                            \n                            \n                                restore\n                            \n                            \n                                save\n                            \n                            \n                                saveMany\n                            \n                            \n                                    Async\n                                setRelation\n                            \n                            \n                                softDelete\n                            \n                            \n                                    Async\n                                unsetRelation\n                            \n                            \n                                update\n                            \n                            \n                                    Async\n                                count\n                            \n                            \n                                find\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                findOneByIdOrThrow\n                            \n                            \n                                    Async\n                                findOneOrThrow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    addRelation(relation: RelationParam)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/entity.service.ts:107\n                        \n                    \n\n\n            \n                \n                        Add relation (*-to-many) to the entity\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relation\n                                            \n                                                            RelationParam\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        decrement\n                        \n                    \n                \n            \n            \n                \ndecrement(param: IDModel, body: DecrementParam)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/entity.service.ts:93\n                        \n                    \n\n\n            \n                \n                        Decrement property by value\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                param\n                                            \n                                                        IDModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                        DecrementParam\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(objectId: IDModel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/entity.service.ts:52\n                        \n                    \n\n\n            \n                \n                        Hard delete entity\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                objectId\n                                            \n                                                        IDModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increment\n                        \n                    \n                \n            \n            \n                \nincrement(param: IDModel, body: IncrementParam)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/entity.service.ts:79\n                        \n                    \n\n\n            \n                \n                        Increment property by value\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                param\n                                            \n                                                        IDModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                        IncrementParam\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeRelation(relation: RelationParam)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/entity.service.ts:122\n                        \n                    \n\n\n            \n                \n                        Remove relation (*-to-many) to the entity\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relation\n                                            \n                                                            RelationParam\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restore\n                        \n                    \n                \n            \n            \n                \nrestore(objectId: IDModel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/entity.service.ts:70\n                        \n                    \n\n\n            \n                \n                        Restore entity by id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                objectId\n                                            \n                                                        IDModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        save\n                        \n                    \n                \n            \n            \n                \nsave(entity: DeepPartial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/entity.service.ts:24\n                        \n                    \n\n\n            \n                \n                        Save entity\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveMany\n                        \n                    \n                \n            \n            \n                \nsaveMany(entities: DeepPartial[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/entity.service.ts:33\n                        \n                    \n\n\n            \n                \n                        Save many entities\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        DeepPartial[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    setRelation(relation: RelationParam)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/entity.service.ts:137\n                        \n                    \n\n\n            \n                \n                        Set relation (*-to-one) to the entity\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relation\n                                            \n                                                            RelationParam\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        softDelete\n                        \n                    \n                \n            \n            \n                \nsoftDelete(objectId: IDModel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/entity.service.ts:61\n                        \n                    \n\n\n            \n                \n                        Soft delete entity by id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                objectId\n                                            \n                                                        IDModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        unsetRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    unsetRelation(relation: UnsetRelationParam)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/entity.service.ts:152\n                        \n                    \n\n\n            \n                \n                        Unset relation (*-to-one) to the entity\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relation\n                                            \n                                                            UnsetRelationParam\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(objectId: IDModel, entity: QueryDeepPartialEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/service/entity.service.ts:43\n                        \n                    \n\n\n            \n                \n                        Update entity\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                objectId\n                                            \n                                                        IDModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                            QueryDeepPartialEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(query: QueryCount)\n                \n            \n\n\n                    \n                        \n                            Inherited from         EntityQueryService\n\n                        \n                    \n                    \n                        \n                                Defined in         EntityQueryService:82\n\n                        \n                    \n\n\n            \n                \n                        Count\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        QueryCount\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \nfind(query: QueryMany)\n                \n            \n\n\n                    \n                        \n                            Inherited from         EntityQueryService\n\n                        \n                    \n                    \n                        \n                                Defined in         EntityQueryService:17\n\n                        \n                    \n\n\n            \n                \n                        Query all entities QueryMany[]>\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        QueryMany\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(query: QueryOne)\n                \n            \n\n\n                    \n                        \n                            Inherited from         EntityQueryService\n\n                        \n                    \n                    \n                        \n                                Defined in         EntityQueryService:36\n\n                        \n                    \n\n\n            \n                \n                        Query one entity\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        QueryOne\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    QueryOne\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(param: IDModel, query: QueryOne)\n                \n            \n\n\n                    \n                        \n                            Inherited from         EntityQueryService\n\n                        \n                    \n                    \n                        \n                                Defined in         EntityQueryService:56\n\n                        \n                    \n\n\n            \n                \n                        Find one by id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                param\n                                            \n                                                        IDModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                        QueryOne\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneByIdOrThrow\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByIdOrThrow(param: IDModel, query: QueryOne)\n                \n            \n\n\n                    \n                        \n                            Inherited from         EntityQueryService\n\n                        \n                    \n                    \n                        \n                                Defined in         EntityQueryService:68\n\n                        \n                    \n\n\n            \n                \n                        Find one by id or throw error\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                param\n                                            \n                                                        IDModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                        QueryOne\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneOrThrow\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneOrThrow(query: QueryOne)\n                \n            \n\n\n                    \n                        \n                            Inherited from         EntityQueryService\n\n                        \n                    \n                    \n                        \n                                Defined in         EntityQueryService:45\n\n                        \n                    \n\n\n            \n                \n                        Query one entity\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        QueryOne\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    QueryOne\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type { QueryDeepPartialEntity } from 'typeorm/query-builder/QueryPartialEntity.js';\nimport type {\n  BaseModel,\n  DecrementParam,\n  IDModel,\n  IncrementParam,\n  RelationParam,\n  UnsetRelationParam,\n  UpdateResult,\n} from '@puq/type';\nimport { EntityQueryService } from './entity-query.service.js';\nimport type { FindOptionsWhere } from 'typeorm';\nimport { In, type DeepPartial } from 'typeorm';\n\n/**\n * Write service\n */\nexport class EntityService extends EntityQueryService {\n  /**\n   * Save entity\n   * @param entity\n   * @returns\n   */\n  save(entity: DeepPartial): Promise {\n    return this.repository.save(entity);\n  }\n\n  /**\n   * Save many entities\n   * @param entities\n   * @returns\n   */\n  saveMany(entities: DeepPartial[]): Promise {\n    return this.repository.save(entities);\n  }\n\n  /**\n   * Update entity\n   * @param id\n   * @param entity\n   * @returns\n   */\n  update(objectId: IDModel, entity: QueryDeepPartialEntity) {\n    return this.repository.update(objectId.id, entity);\n  }\n\n  /**\n   * Hard delete entity\n   * @param id\n   * @returns\n   */\n  delete(objectId: IDModel) {\n    return this.repository.delete(objectId.id);\n  }\n\n  /**\n   * Soft delete entity by id\n   * @param id\n   * @returns\n   */\n  softDelete(objectId: IDModel) {\n    return this.repository.softDelete(objectId.id);\n  }\n\n  /**\n   * Restore entity by id\n   * @param id\n   * @returns\n   */\n  restore(objectId: IDModel) {\n    return this.repository.restore(objectId.id);\n  }\n\n  /**\n   * Increment property by value\n   * @param param\n   * @returns\n   */\n  increment(param: IDModel, body: IncrementParam) {\n    const { property, value } = body;\n    return this.repository.increment(\n      { id: In([param.id]) } as FindOptionsWhere,\n      property,\n      value ?? 1,\n    );\n  }\n\n  /**\n   * Decrement property by value\n   * @param param\n   * @returns\n   */\n  decrement(param: IDModel, body: DecrementParam) {\n    const { property, value } = body;\n    return this.repository.decrement(\n      { id: In([param.id]) } as FindOptionsWhere,\n      property,\n      value ?? 1,\n    );\n  }\n\n  /**\n   * Add relation (*-to-many) to the entity\n   * @param relation\n   * @returns\n   */\n  async addRelation(relation: RelationParam): Promise {\n    const { id, relationId, relationName } = relation;\n    await this.repository\n      .createQueryBuilder()\n      .relation(relationName)\n      .of(id)\n      .add(relationId);\n    return { affected: 1 };\n  }\n\n  /**\n   * Remove relation (*-to-many) to the entity\n   * @param relation\n   * @returns\n   */\n  async removeRelation(relation: RelationParam): Promise {\n    const { id, relationId, relationName: relationName } = relation;\n    await this.repository\n      .createQueryBuilder()\n      .relation(relationName)\n      .of(id)\n      .remove(relationId);\n    return { affected: 1 };\n  }\n\n  /**\n   * Set relation (*-to-one) to the entity\n   * @param relation\n   * @returns\n   */\n  async setRelation(relation: RelationParam): Promise {\n    const { id, relationId, relationName } = relation;\n    await this.repository\n      .createQueryBuilder()\n      .relation(relationName)\n      .of(id)\n      .set(relationId);\n    return { affected: 1 };\n  }\n\n  /**\n   * Unset relation (*-to-one) to the entity\n   * @param relation\n   * @returns\n   */\n  async unsetRelation(relation: UnsetRelationParam): Promise {\n    const { id, relationName } = relation;\n    await this.repository\n      .createQueryBuilder()\n      .relation(relationName)\n      .of(id)\n      .set(null);\n    return { affected: 1 };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpErrorDto.html":{"url":"classes/HttpErrorDto.html","title":"class - HttpErrorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpErrorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dto/http-error.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                This is the common error structure\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                message\n                            \n                            \n                                    \n                                statusCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/http-error.dto.ts:11\n                        \n                    \n\n            \n                \n                    error message\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'integer'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/http-error.dto.ts:16\n                        \n                    \n\n            \n                \n                    status code\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\n\n/**\n * This is the common error structure\n */\n@Dto()\nexport class HttpErrorDto {\n  /**\n   * error message\n   */\n  @Property({ type: 'string' }) message: string;\n\n  /**\n   * status code\n   */\n  @Property({ type: 'integer' }) statusCode: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IDDto.html":{"url":"classes/IDDto.html","title":"class - IDDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IDDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dto/id.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'integer', minimum: 1, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/id.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\n\n@Dto()\nexport class IDDto {\n  @Property({ type: 'integer', minimum: 1, required: true })\n  id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ManyRelation.html":{"url":"entities/ManyRelation.html","title":"entity - ManyRelation","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ManyRelation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/better-sqlite3.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                many\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        many\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:19\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) key: string;\n  @Column({ databaseType: 'sqlite', type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) string: string;\n  @Column({ databaseType: 'sqlite', type: 'integer' }) integer: number;\n  @Column({ databaseType: 'sqlite', type: 'number' }) number: number;\n  @Column({ databaseType: 'sqlite', type: 'boolean' }) boolean: boolean;\n  @Column({ databaseType: 'sqlite', type: 'bigint' }) bigint: bigint;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'object',\n    target: () => TestObject,\n  })\n  object: TestObject;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'array',\n    items: { type: 'string' },\n  })\n  array: string[];\n  @Column({ databaseType: 'sqlite', type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ManyRelation-1.html":{"url":"entities/ManyRelation-1.html","title":"entity - ManyRelation-1","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ManyRelation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/postgres.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                many\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        many\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:19\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ type: 'string' }) key: string;\n  @Column({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ type: 'string' }) string: string;\n  @Column({ type: 'integer' }) integer: number;\n  @Column({ type: 'number' }) number: number;\n  @Column({ type: 'boolean' }) boolean: boolean;\n  @Column({ type: 'bigint' }) bigint: bigint;\n  @Column({ type: 'object', target: () => TestObject }) object: TestObject;\n  @Column({ type: 'array', items: { type: 'string' } }) array: string[];\n  @Column({ type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/OneRelation.html":{"url":"entities/OneRelation.html","title":"entity - OneRelation","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  OneRelation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/better-sqlite3.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                one\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        one\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:14\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) key: string;\n  @Column({ databaseType: 'sqlite', type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) string: string;\n  @Column({ databaseType: 'sqlite', type: 'integer' }) integer: number;\n  @Column({ databaseType: 'sqlite', type: 'number' }) number: number;\n  @Column({ databaseType: 'sqlite', type: 'boolean' }) boolean: boolean;\n  @Column({ databaseType: 'sqlite', type: 'bigint' }) bigint: bigint;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'object',\n    target: () => TestObject,\n  })\n  object: TestObject;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'array',\n    items: { type: 'string' },\n  })\n  array: string[];\n  @Column({ databaseType: 'sqlite', type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/OneRelation-1.html":{"url":"entities/OneRelation-1.html","title":"entity - OneRelation-1","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  OneRelation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/postgres.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                one\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        one\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:14\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ type: 'string' }) key: string;\n  @Column({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ type: 'string' }) string: string;\n  @Column({ type: 'integer' }) integer: number;\n  @Column({ type: 'number' }) number: number;\n  @Column({ type: 'boolean' }) boolean: boolean;\n  @Column({ type: 'bigint' }) bigint: bigint;\n  @Column({ type: 'object', target: () => TestObject }) object: TestObject;\n  @Column({ type: 'array', items: { type: 'string' } }) array: string[];\n  @Column({ type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/OwnerRelation.html":{"url":"entities/OwnerRelation.html","title":"entity - OwnerRelation","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  OwnerRelation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/better-sqlite3.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                owner\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:24\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) key: string;\n  @Column({ databaseType: 'sqlite', type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) string: string;\n  @Column({ databaseType: 'sqlite', type: 'integer' }) integer: number;\n  @Column({ databaseType: 'sqlite', type: 'number' }) number: number;\n  @Column({ databaseType: 'sqlite', type: 'boolean' }) boolean: boolean;\n  @Column({ databaseType: 'sqlite', type: 'bigint' }) bigint: bigint;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'object',\n    target: () => TestObject,\n  })\n  object: TestObject;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'array',\n    items: { type: 'string' },\n  })\n  array: string[];\n  @Column({ databaseType: 'sqlite', type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/OwnerRelation-1.html":{"url":"entities/OwnerRelation-1.html","title":"entity - OwnerRelation-1","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  OwnerRelation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/postgres.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                owner\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:24\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ type: 'string' }) key: string;\n  @Column({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ type: 'string' }) string: string;\n  @Column({ type: 'integer' }) integer: number;\n  @Column({ type: 'number' }) number: number;\n  @Column({ type: 'boolean' }) boolean: boolean;\n  @Column({ type: 'bigint' }) bigint: bigint;\n  @Column({ type: 'object', target: () => TestObject }) object: TestObject;\n  @Column({ type: 'array', items: { type: 'string' } }) array: string[];\n  @Column({ type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SingleValidationErrorDto.html":{"url":"classes/SingleValidationErrorDto.html","title":"class - SingleValidationErrorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SingleValidationErrorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dto/validation-error.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Single validation error dto\n\n            \n\n\n            \n                Implements\n            \n            \n                        SingleValidationError\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                constraints\n                            \n                            \n                                    \n                                    Optional\n                                property\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        constraints\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ValidationConstraintsDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'object', target: () => ValidationConstraintsDto})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:42\n                        \n                    \n\n            \n                \n                    The error constraints ValidationConstraintsDto\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        property\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:36\n                        \n                    \n\n            \n                \n                    The related property of the error\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type {\n  SingleValidationError,\n  ValidationConstraints,\n  ValidationErrorResult,\n} from '@puq/type';\nimport { Dto, Property } from '@puq/property';\nimport { HttpErrorDto } from './http-error.dto.js';\n\n/**\n * Validation error constraints dto\n */\n@Dto()\nexport class ValidationConstraintsDto implements ValidationConstraints {\n  @Property({ type: 'string' }) min?: string;\n  @Property({ type: 'string' }) max?: string;\n  @Property({ type: 'string' }) minLength?: string;\n  @Property({ type: 'string' }) maxLength?: string;\n  @Property({ type: 'string' }) isString?: string;\n  @Property({ type: 'string' }) isNumber?: string;\n  @Property({ type: 'string' }) isInt?: string;\n  @Property({ type: 'string' }) isBoolean?: string;\n  @Property({ type: 'string' }) isObject?: string;\n  @Property({ type: 'string' }) isArray?: string;\n  @Property({ type: 'string' }) arrayMinSize?: string;\n  @Property({ type: 'string' }) arrayMaxSize?: string;\n}\n\n/**\n * Single validation error dto\n */\n@Dto()\nexport class SingleValidationErrorDto implements SingleValidationError {\n  /**\n   * The related property of the error\n   */\n  @Property({ type: 'string' }) property?: string;\n\n  /**\n   * The error constraints {@link ValidationConstraintsDto}\n   */\n  @Property({ type: 'object', target: () => ValidationConstraintsDto })\n  constraints?: ValidationConstraintsDto;\n}\n\n/**\n * Validation error dto\n */\n@Dto()\nexport class ValidationErrorDto\n  extends HttpErrorDto\n  implements ValidationErrorResult\n{\n  /**\n   * List of validation errors {@link SingleValidationErrorDto}\n   */\n  @Property({\n    type: 'array',\n    items: { type: 'object', target: () => SingleValidationErrorDto },\n  })\n  errors?: SingleValidationErrorDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TableNamingStrategy.html":{"url":"classes/TableNamingStrategy.html","title":"class - TableNamingStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TableNamingStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/factory/naming-strategy.ts\n        \n\n\n            \n                Description\n            \n            \n                Database table and column naming strategy\n\n            \n\n            \n                Extends\n            \n            \n                        DefaultNamingStrategy\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                joinColumnName\n                            \n                            \n                                    \n                                joinTableColumnName\n                            \n                            \n                                    \n                                joinTableInverseColumnName\n                            \n                            \n                                    \n                                joinTableName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        joinColumnName\n                        \n                    \n                \n            \n            \n                \n                        \n                    joinColumnName(relationName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/factory/naming-strategy.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relationName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        joinTableColumnName\n                        \n                    \n                \n            \n            \n                \n                        \n                    joinTableColumnName(_tableName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/factory/naming-strategy.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _tableName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        joinTableInverseColumnName\n                        \n                    \n                \n            \n            \n                \n                        \n                    joinTableInverseColumnName(_tableName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/factory/naming-strategy.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _tableName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        joinTableName\n                        \n                    \n                \n            \n            \n                \n                        \n                    joinTableName(firstTableName: string, secondTableName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/factory/naming-strategy.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                firstTableName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                secondTableName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DefaultNamingStrategy } from 'typeorm';\n/**\n * Database table and column naming strategy\n */\nexport class TableNamingStrategy extends DefaultNamingStrategy {\n  override joinTableName(\n    firstTableName: string,\n    secondTableName: string,\n  ): string {\n    return `${firstTableName}_${secondTableName}`;\n  }\n\n  override joinColumnName(relationName: string): string {\n    return relationName;\n  }\n\n  override joinTableColumnName(_tableName: string): string {\n    return _tableName;\n  }\n\n  override joinTableInverseColumnName(_tableName: string): string {\n    return _tableName;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/TestEntity.html":{"url":"entities/TestEntity.html","title":"entity - TestEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  TestEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/better-sqlite3.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                array\n                            \n                            \n                                    \n                                attributes\n                            \n                            \n                                    \n                                bigint\n                            \n                            \n                                    \n                                boolean\n                            \n                            \n                                    \n                                date\n                            \n                            \n                                    \n                                integer\n                            \n                            \n                                    \n                                many\n                            \n                            \n                                    \n                                number\n                            \n                            \n                                    \n                                object\n                            \n                            \n                                    \n                                one\n                            \n                            \n                                    \n                                owner\n                            \n                            \n                                    \n                                string\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        array\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'array', items: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AttributeRelation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Relation({type: 'many-to-many', target: () => AttributeRelation, eager: true, required: false, cascade: undefined, join: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        bigint\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'bigint'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        boolean\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        integer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'integer'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        many\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ManyRelation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Relation({type: 'many-to-many', target: () => ManyRelation, eager: true, required: false, onDelete: 'SET NULL', join: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        object\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TestObject\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'object', target: () => TestObject})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        one\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OneRelation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Relation({type: 'many-to-one', target: () => OneRelation, eager: true, required: false, onDelete: 'SET NULL', join: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OwnerRelation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Relation({type: 'many-to-one', target: () => OwnerRelation, eager: true, required: false, onDelete: 'CASCADE', onUpdate: 'CASCADE', join: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        string\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({databaseType: 'sqlite', type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:35\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) key: string;\n  @Column({ databaseType: 'sqlite', type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) string: string;\n  @Column({ databaseType: 'sqlite', type: 'integer' }) integer: number;\n  @Column({ databaseType: 'sqlite', type: 'number' }) number: number;\n  @Column({ databaseType: 'sqlite', type: 'boolean' }) boolean: boolean;\n  @Column({ databaseType: 'sqlite', type: 'bigint' }) bigint: bigint;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'object',\n    target: () => TestObject,\n  })\n  object: TestObject;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'array',\n    items: { type: 'string' },\n  })\n  array: string[];\n  @Column({ databaseType: 'sqlite', type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/TestEntity-1.html":{"url":"entities/TestEntity-1.html","title":"entity - TestEntity-1","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  TestEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/postgres.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                array\n                            \n                            \n                                    \n                                attributes\n                            \n                            \n                                    \n                                bigint\n                            \n                            \n                                    \n                                boolean\n                            \n                            \n                                    \n                                date\n                            \n                            \n                                    \n                                integer\n                            \n                            \n                                    \n                                many\n                            \n                            \n                                    \n                                number\n                            \n                            \n                                    \n                                object\n                            \n                            \n                                    \n                                one\n                            \n                            \n                                    \n                                owner\n                            \n                            \n                                    \n                                string\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        array\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'array', items: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AttributeRelation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Relation({type: 'many-to-many', target: () => AttributeRelation, eager: true, required: false, cascade: undefined, join: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        bigint\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        boolean\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        integer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'integer'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        many\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ManyRelation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Relation({type: 'many-to-many', target: () => ManyRelation, eager: true, required: false, onDelete: 'SET NULL', join: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        object\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TestObject\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'object', target: () => TestObject})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        one\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OneRelation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Relation({type: 'many-to-one', target: () => OneRelation, eager: true, required: false, onDelete: 'SET NULL', join: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OwnerRelation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Relation({type: 'many-to-one', target: () => OwnerRelation, eager: true, required: false, onDelete: 'CASCADE', onUpdate: 'CASCADE', join: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        string\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:35\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ type: 'string' }) key: string;\n  @Column({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ type: 'string' }) string: string;\n  @Column({ type: 'integer' }) integer: number;\n  @Column({ type: 'number' }) number: number;\n  @Column({ type: 'boolean' }) boolean: boolean;\n  @Column({ type: 'bigint' }) bigint: bigint;\n  @Column({ type: 'object', target: () => TestObject }) object: TestObject;\n  @Column({ type: 'array', items: { type: 'string' } }) array: string[];\n  @Column({ type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestObject.html":{"url":"classes/TestObject.html","title":"class - TestObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/better-sqlite3.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/better-sqlite3.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) key: string;\n  @Column({ databaseType: 'sqlite', type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ databaseType: 'sqlite', type: 'string' }) string: string;\n  @Column({ databaseType: 'sqlite', type: 'integer' }) integer: number;\n  @Column({ databaseType: 'sqlite', type: 'number' }) number: number;\n  @Column({ databaseType: 'sqlite', type: 'boolean' }) boolean: boolean;\n  @Column({ databaseType: 'sqlite', type: 'bigint' }) bigint: bigint;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'object',\n    target: () => TestObject,\n  })\n  object: TestObject;\n  @Column({\n    databaseType: 'sqlite',\n    type: 'array',\n    items: { type: 'string' },\n  })\n  array: string[];\n  @Column({ databaseType: 'sqlite', type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestObject-1.html":{"url":"classes/TestObject-1.html","title":"class - TestObject-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/integration/postgres.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/integration/postgres.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Dto, Property } from '@puq/property';\nimport { Relation } from '../decorator/relation.js';\nimport { Entity } from '../decorator/entity.js';\nimport { Column } from '../decorator/column.js';\nimport { BaseEntity } from '../entity/base.js';\n\n@Dto()\nexport class TestObject {\n  @Property({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class OneRelation extends BaseEntity {\n  @Column({ type: 'string' }) one: string;\n}\n\n@Entity()\nexport class ManyRelation extends BaseEntity {\n  @Column({ type: 'string' }) many: string;\n}\n\n@Entity()\nexport class OwnerRelation extends BaseEntity {\n  @Column({ type: 'string' }) owner: string;\n}\n\n@Entity()\nexport class AttributeRelation extends BaseEntity {\n  @Column({ type: 'string' }) key: string;\n  @Column({ type: 'string' }) value: string;\n}\n\n@Entity()\nexport class TestEntity extends BaseEntity {\n  @Column({ type: 'string' }) string: string;\n  @Column({ type: 'integer' }) integer: number;\n  @Column({ type: 'number' }) number: number;\n  @Column({ type: 'boolean' }) boolean: boolean;\n  @Column({ type: 'bigint' }) bigint: bigint;\n  @Column({ type: 'object', target: () => TestObject }) object: TestObject;\n  @Column({ type: 'array', items: { type: 'string' } }) array: string[];\n  @Column({ type: 'date' }) date: string;\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OneRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  one: OneRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => ManyRelation,\n    eager: true,\n    required: false,\n    onDelete: 'SET NULL',\n    join: true,\n  })\n  many: ManyRelation[];\n\n  @Relation({\n    type: 'many-to-one',\n    target: () => OwnerRelation,\n    eager: true,\n    required: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    join: true,\n  })\n  owner: OwnerRelation;\n\n  @Relation({\n    type: 'many-to-many',\n    target: () => AttributeRelation,\n    eager: true,\n    required: false,\n    cascade: ['insert'],\n    join: true,\n  })\n  attributes: AttributeRelation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateResultDto.html":{"url":"classes/UpdateResultDto.html","title":"class - UpdateResultDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateResultDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dto/update-result.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Update result\n\n            \n\n\n            \n                Implements\n            \n            \n                        UpdateResult\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                affected\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        affected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'integer', description: 'The number of items affected by the update operation'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/update-result.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type { UpdateResult } from '@puq/type';\nimport { Dto, Property } from '@puq/property';\n\n/**\n * Update result\n */\n@Dto()\nexport class UpdateResultDto implements UpdateResult {\n  @Property({\n    type: 'integer',\n    description: 'The number of items affected by the update operation',\n  })\n  affected: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationConstraintsDto.html":{"url":"classes/ValidationConstraintsDto.html","title":"class - ValidationConstraintsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationConstraintsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dto/validation-error.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Validation error constraints dto\n\n            \n\n\n            \n                Implements\n            \n            \n                        ValidationConstraints\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                arrayMaxSize\n                            \n                            \n                                    \n                                    Optional\n                                arrayMinSize\n                            \n                            \n                                    \n                                    Optional\n                                isArray\n                            \n                            \n                                    \n                                    Optional\n                                isBoolean\n                            \n                            \n                                    \n                                    Optional\n                                isInt\n                            \n                            \n                                    \n                                    Optional\n                                isNumber\n                            \n                            \n                                    \n                                    Optional\n                                isObject\n                            \n                            \n                                    \n                                    Optional\n                                isString\n                            \n                            \n                                    \n                                    Optional\n                                max\n                            \n                            \n                                    \n                                    Optional\n                                maxLength\n                            \n                            \n                                    \n                                    Optional\n                                min\n                            \n                            \n                                    \n                                    Optional\n                                minLength\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        arrayMaxSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        arrayMinSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isBoolean\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isInt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isObject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isString\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        max\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        maxLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        min\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        minLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type {\n  SingleValidationError,\n  ValidationConstraints,\n  ValidationErrorResult,\n} from '@puq/type';\nimport { Dto, Property } from '@puq/property';\nimport { HttpErrorDto } from './http-error.dto.js';\n\n/**\n * Validation error constraints dto\n */\n@Dto()\nexport class ValidationConstraintsDto implements ValidationConstraints {\n  @Property({ type: 'string' }) min?: string;\n  @Property({ type: 'string' }) max?: string;\n  @Property({ type: 'string' }) minLength?: string;\n  @Property({ type: 'string' }) maxLength?: string;\n  @Property({ type: 'string' }) isString?: string;\n  @Property({ type: 'string' }) isNumber?: string;\n  @Property({ type: 'string' }) isInt?: string;\n  @Property({ type: 'string' }) isBoolean?: string;\n  @Property({ type: 'string' }) isObject?: string;\n  @Property({ type: 'string' }) isArray?: string;\n  @Property({ type: 'string' }) arrayMinSize?: string;\n  @Property({ type: 'string' }) arrayMaxSize?: string;\n}\n\n/**\n * Single validation error dto\n */\n@Dto()\nexport class SingleValidationErrorDto implements SingleValidationError {\n  /**\n   * The related property of the error\n   */\n  @Property({ type: 'string' }) property?: string;\n\n  /**\n   * The error constraints {@link ValidationConstraintsDto}\n   */\n  @Property({ type: 'object', target: () => ValidationConstraintsDto })\n  constraints?: ValidationConstraintsDto;\n}\n\n/**\n * Validation error dto\n */\n@Dto()\nexport class ValidationErrorDto\n  extends HttpErrorDto\n  implements ValidationErrorResult\n{\n  /**\n   * List of validation errors {@link SingleValidationErrorDto}\n   */\n  @Property({\n    type: 'array',\n    items: { type: 'object', target: () => SingleValidationErrorDto },\n  })\n  errors?: SingleValidationErrorDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationErrorDto.html":{"url":"classes/ValidationErrorDto.html","title":"class - ValidationErrorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationErrorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/dto/validation-error.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Validation error dto\n\n            \n\n\n            \n                Implements\n            \n            \n                        ValidationErrorResult\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                errors\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        errors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SingleValidationErrorDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: 'array', items: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/dto/validation-error.dto.ts:60\n                        \n                    \n\n            \n                \n                    List of validation errors SingleValidationErrorDto\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type {\n  SingleValidationError,\n  ValidationConstraints,\n  ValidationErrorResult,\n} from '@puq/type';\nimport { Dto, Property } from '@puq/property';\nimport { HttpErrorDto } from './http-error.dto.js';\n\n/**\n * Validation error constraints dto\n */\n@Dto()\nexport class ValidationConstraintsDto implements ValidationConstraints {\n  @Property({ type: 'string' }) min?: string;\n  @Property({ type: 'string' }) max?: string;\n  @Property({ type: 'string' }) minLength?: string;\n  @Property({ type: 'string' }) maxLength?: string;\n  @Property({ type: 'string' }) isString?: string;\n  @Property({ type: 'string' }) isNumber?: string;\n  @Property({ type: 'string' }) isInt?: string;\n  @Property({ type: 'string' }) isBoolean?: string;\n  @Property({ type: 'string' }) isObject?: string;\n  @Property({ type: 'string' }) isArray?: string;\n  @Property({ type: 'string' }) arrayMinSize?: string;\n  @Property({ type: 'string' }) arrayMaxSize?: string;\n}\n\n/**\n * Single validation error dto\n */\n@Dto()\nexport class SingleValidationErrorDto implements SingleValidationError {\n  /**\n   * The related property of the error\n   */\n  @Property({ type: 'string' }) property?: string;\n\n  /**\n   * The error constraints {@link ValidationConstraintsDto}\n   */\n  @Property({ type: 'object', target: () => ValidationConstraintsDto })\n  constraints?: ValidationConstraintsDto;\n}\n\n/**\n * Validation error dto\n */\n@Dto()\nexport class ValidationErrorDto\n  extends HttpErrorDto\n  implements ValidationErrorResult\n{\n  /**\n   * List of validation errors {@link SingleValidationErrorDto}\n   */\n  @Property({\n    type: 'array',\n    items: { type: 'object', target: () => SingleValidationErrorDto },\n  })\n  errors?: SingleValidationErrorDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/lib/common/pick-column-type.ts\n            \n            function\n            pickColumnType\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/common/pick-transformer.ts\n            \n            function\n            pickTransformer\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/decorator/column.ts\n            \n            function\n            Column\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/decorator/entity.ts\n            \n            function\n            Entity\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/decorator/relation.ts\n            \n            function\n            Relation\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/decorator/view-column.ts\n            \n            function\n            ViewColumn\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/decorator/view-entity.ts\n            \n            function\n            ViewEntity\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/dto/count-result.dto.ts\n            \n            class\n            CountResultDto\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                        src/lib/dto/create-increment-decrement-dto.ts\n            \n            function\n            CreateIncrementDecrementDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/dto/create-relation-param-dto.ts\n            \n            function\n            CreateRelationParamDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/dto/create-unset-relation-param-dto.ts\n            \n            function\n            CreateUnsetRelationParamDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/dto/delete-result.dto.ts\n            \n            class\n            DeleteResultDto\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/lib/dto/http-error.dto.ts\n            \n            class\n            HttpErrorDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/lib/dto/id.dto.ts\n            \n            class\n            IDDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/dto/update-result.dto.ts\n            \n            class\n            UpdateResultDto\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/lib/dto/validation-error.dto.ts\n            \n            class\n            SingleValidationErrorDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/lib/dto/validation-error.dto.ts\n            \n            class\n            ValidationConstraintsDto\n            \n                7 %\n                (1/13)\n            \n        \n        \n            \n                \n                src/lib/dto/validation-error.dto.ts\n            \n            class\n            ValidationErrorDto\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/lib/entity/base-id.ts\n            \n            class\n            BaseIdEntity\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/entity/base.ts\n            \n            class\n            BaseEntity\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                        src/lib/entity/base.ts\n            \n            variable\n            BASE_ENTITY_COLUMNS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/factory/naming-strategy.ts\n            \n            class\n            TableNamingStrategy\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/lib/integration/better-sqlite3.ts\n            \n            entity\n            AttributeRelation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/better-sqlite3.ts\n            \n            entity\n            ManyRelation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/better-sqlite3.ts\n            \n            entity\n            OneRelation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/better-sqlite3.ts\n            \n            entity\n            OwnerRelation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/better-sqlite3.ts\n            \n            entity\n            TestEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/better-sqlite3.ts\n            \n            class\n            TestObject\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/integration/postgres.ts\n            \n            entity\n            AttributeRelation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/postgres.ts\n            \n            entity\n            ManyRelation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/postgres.ts\n            \n            entity\n            OneRelation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/postgres.ts\n            \n            entity\n            OwnerRelation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/postgres.ts\n            \n            entity\n            TestEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/integration/postgres.ts\n            \n            class\n            TestObject\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/lib/module/data-source-options.ts\n            \n            function\n            getDataSourceOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/module/data-source-options.ts\n            \n            type alias\n            DataSourceModuleOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/module/provide-entity-service.ts\n            \n            function\n            getEntityServiceToken\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/module/provide-entity-service.ts\n            \n            function\n            InjectEntityService\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/module/provide-entity-service.ts\n            \n            function\n            provideEntityService\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/module/sqlite-data-source-options copy.ts\n            \n            function\n            getSqliteDataSourceOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/query/common-query-dto.ts\n            \n            class\n            CommonQueryDto\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                        src/lib/query/create-find-operator.ts\n            \n            function\n            createFindOperator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/query/create-query-count-dto.ts\n            \n            function\n            CreateQueryCountDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/query/create-query-many-dto.ts\n            \n            function\n            CreateQueryManyDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/query/create-query-one-dto.ts\n            \n            function\n            CreateQueryOneDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/query/create-query-options.ts\n            \n            type alias\n            CreateQueryOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/query/create-where-option-dto.ts\n            \n            function\n            CreateWhereOptionDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/query/select-transformer.ts\n            \n            function\n            SelectTransformer\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/query/where-property.ts\n            \n            function\n            WhereProperty\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/query/where-query-transformer.ts\n            \n            function\n            WhereQueryTransformer\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/service/base-entity.service.ts\n            \n            class\n            BaseEntityService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/service/entity-query.service.ts\n            \n            class\n            EntityQueryService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/lib/service/entity.service.ts\n            \n            class\n            EntityService\n            \n                100 %\n                (19/19)\n            \n        \n        \n            \n                \n                src/lib/view/base.view.ts\n            \n            class\n            BaseView\n            \n                20 %\n                (1/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @puq/env : ^0.6.2\n        \n            @swc/helpers : ~0.5.15\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @nestjs/common : ^11.0.11\n        \n            @nestjs/config : ^4.0.0\n        \n            @nestjs/typeorm : ^11.0.0\n        \n            @puq/is : ^0.6.2\n        \n            @puq/meta : ^0.6.2\n        \n            @puq/property : ^0.6.2\n        \n            @puq/query : ^0.6.2\n        \n            @puq/type : ^0.6.2\n        \n            class-transformer : ^0.5.1\n        \n            typeorm : ^0.3.20\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Column   (src/.../column.ts)\n                        \n                        \n                            createFindOperator   (src/.../create-find-operator.ts)\n                        \n                        \n                            CreateIncrementDecrementDto   (src/.../create-increment-decrement-dto.ts)\n                        \n                        \n                            CreateQueryCountDto   (src/.../create-query-count-dto.ts)\n                        \n                        \n                            CreateQueryManyDto   (src/.../create-query-many-dto.ts)\n                        \n                        \n                            CreateQueryOneDto   (src/.../create-query-one-dto.ts)\n                        \n                        \n                            CreateRelationParamDto   (src/.../create-relation-param-dto.ts)\n                        \n                        \n                            CreateUnsetRelationParamDto   (src/.../create-unset-relation-param-dto.ts)\n                        \n                        \n                            CreateWhereOptionDto   (src/.../create-where-option-dto.ts)\n                        \n                        \n                            Entity   (src/.../entity.ts)\n                        \n                        \n                            getDataSourceOptions   (src/.../data-source-options.ts)\n                        \n                        \n                            getEntityServiceToken   (src/.../provide-entity-service.ts)\n                        \n                        \n                            getSqliteDataSourceOptions   (src/.../sqlite-data-source-options copy.ts)\n                        \n                        \n                            InjectEntityService   (src/.../provide-entity-service.ts)\n                        \n                        \n                            pickColumnType   (src/.../pick-column-type.ts)\n                        \n                        \n                            pickTransformer   (src/.../pick-transformer.ts)\n                        \n                        \n                            provideEntityService   (src/.../provide-entity-service.ts)\n                        \n                        \n                            Relation   (src/.../relation.ts)\n                        \n                        \n                            SelectTransformer   (src/.../select-transformer.ts)\n                        \n                        \n                            ViewColumn   (src/.../view-column.ts)\n                        \n                        \n                            ViewEntity   (src/.../view-entity.ts)\n                        \n                        \n                            WhereProperty   (src/.../where-property.ts)\n                        \n                        \n                            WhereQueryTransformer   (src/.../where-query-transformer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/decorator/column.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Column\n                        \n                    \n                \n            \n            \n                \nColumn(options: PropertyOptions)\n                \n            \n\n\n\n\n            \n                \n                        Typeorm Column decorator with validation and documentation capabilities.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        PropertyOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    property options PropertyOptions\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     PropertyDecorator\n\n                        \n                            \n                                property decorator {@link PropertyDecorator}\n\n                            \n                \n            \n        \n    \n    src/lib/query/create-find-operator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createFindOperator\n                        \n                    \n                \n            \n            \n                \ncreateFindOperator(query: WhereOption)\n                \n            \n\n\n\n\n            \n                \n                        Create a typeorm find operator from WhereOption\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        WhereOption\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nWhereOption\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Record>\n\n                        \n                            \n                                \nTypeorm find operator\n\n\n                            \n                \n            \n        \n    \n    src/lib/dto/create-increment-decrement-dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CreateIncrementDecrementDto\n                        \n                    \n                \n            \n            \n                \nCreateIncrementDecrementDto(columns: Keys)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                columns\n                                            \n                                                        Keys\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Type\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/query/create-query-count-dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CreateQueryCountDto\n                        \n                    \n                \n            \n            \n                \nCreateQueryCountDto(options: Pick)\n                \n            \n\n\n\n\n            \n                \n                        Create a query count dto\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        Pick\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nCreateQueryOptions\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Type\n\n                        \n                            \n                                \nquery dto\n\n\n                            \n                \n            \n        \n    \n    src/lib/query/create-query-many-dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CreateQueryManyDto\n                        \n                    \n                \n            \n            \n                \nCreateQueryManyDto(options: CreateQueryOptions)\n                \n            \n\n\n\n\n            \n                \n                        Create query dto to query many entities\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            CreateQueryOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nCreateQueryOptions\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Type>\n\n                        \n                            \n                                \nquery dto\n\n\n                            \n                \n            \n        \n    \n    src/lib/query/create-query-one-dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CreateQueryOneDto\n                        \n                    \n                \n            \n            \n                \nCreateQueryOneDto(options: CreateQueryOptions)\n                \n            \n\n\n\n\n            \n                \n                        Create query dto to query a single entity\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            CreateQueryOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nCreateQueryOptions\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Type>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/dto/create-relation-param-dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CreateRelationParamDto\n                        \n                    \n                \n            \n            \n                \nCreateRelationParamDto(relations: Keys)\n                \n            \n\n\n\n\n            \n                \n                        Create DTO for RelationParam\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                relations\n                                            \n                                                        Keys\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    relation names of the entity\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Type\n\n                        \n                            \n                                Class {@link Type}\n\n                            \n                \n            \n        \n    \n    src/lib/dto/create-unset-relation-param-dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CreateUnsetRelationParamDto\n                        \n                    \n                \n            \n            \n                \nCreateUnsetRelationParamDto(relations: Keys)\n                \n            \n\n\n\n\n            \n                \n                        Create DTO for UnsetRelationParam\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                relations\n                                            \n                                                        Keys\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    relation names of the entity\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Type\n\n                        \n                            \n                                Class {@link Type}\n\n                            \n                \n            \n        \n    \n    src/lib/query/create-where-option-dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CreateWhereOptionDto\n                        \n                    \n                \n            \n            \n                \nCreateWhereOptionDto(options: CreateQueryOptions)\n                \n            \n\n\n\n\n            \n                \n                        Create where option dto\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            CreateQueryOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nCreateQueryOptions\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Type>\n\n                        \n                            \n                                \nwhere option dto\n\n\n                            \n                \n            \n        \n    \n    src/lib/decorator/entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Entity\n                        \n                    \n                \n            \n            \n                \nEntity(uniques?)\n                \n            \n\n\n\n\n            \n                \n                        Typeorm entity decorator with transformer capability\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                uniques\n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    Composite unique constraint must be set on entity classes and must specify entity's fields to be unique\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ClassDecorator\n\n                        \n                            \n                                \n{@link ClassDecorator}\n\n\n                            \n                \n            \n        \n    \n    src/lib/module/data-source-options.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getDataSourceOptions\n                        \n                    \n                \n            \n            \n                \ngetDataSourceOptions(config: ConfigService, options: DataSourceModuleOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                config\n                                            \n                                                        ConfigService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            DataSourceModuleOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DataSourceOptions\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/module/provide-entity-service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getEntityServiceToken\n                        \n                    \n                \n            \n            \n                \ngetEntityServiceToken(entity)\n                \n            \n\n\n\n\n            \n                \n                        Get the entity service token\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                entity\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nentity class\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \nentity service tokenF\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        InjectEntityService\n                        \n                    \n                \n            \n            \n                \nInjectEntityService()\n                \n            \n\n\n\n\n            \n                \n                        Inject entity service\n\n\n                        \n                            Returns :     ParameterDecorator\n\n                        \n                            \n                                \nParameter decorator\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        provideEntityService\n                        \n                    \n                \n            \n            \n                \nprovideEntityService(entity)\n                \n            \n\n\n\n\n            \n                \n                        Provide entity service\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                entity\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nentity class\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Provider\n\n                        \n                            \n                                \nProvider\n\n\n                            \n                \n            \n        \n    \n    src/lib/module/sqlite-data-source-options copy.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getSqliteDataSourceOptions\n                        \n                    \n                \n            \n            \n                \ngetSqliteDataSourceOptions(config: ConfigService, options: DataSourceModuleOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                config\n                                            \n                                                        ConfigService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            DataSourceModuleOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DataSourceOptions\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/common/pick-column-type.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        pickColumnType\n                        \n                    \n                \n            \n            \n                \npickColumnType(options: PropertyOptions)\n                \n            \n\n\n\n\n            \n                \n                        Pick column type based on provided data type and database driver\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        PropertyOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ColumnType\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/common/pick-transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        pickTransformer\n                        \n                    \n                \n            \n            \n                \npickTransformer(options: PropertyOptions)\n                \n            \n\n\n\n\n            \n                \n                        Some databases do not support a certain data types such as sqlite does not support array type.\nThis function picks the transformer to make none-primitive data types compatible with the provided database driver\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        PropertyOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    property options PropertyOptions\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValueTransformer | undefined\n\n                        \n                            \n                                the {@link ValueTransformer}\n\n                            \n                \n            \n        \n    \n    src/lib/decorator/relation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Relation\n                        \n                    \n                \n            \n            \n                \nRelation(options: RelationOptions)\n                \n            \n\n\n\n\n            \n                \n                        Relation decorator\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            RelationOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    relation options RelationOptions\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     PropertyDecorator\n\n                        \n                            \n                                \n{@link PropertyDecorator}\n\n\n                            \n                \n            \n        \n    \n    src/lib/query/select-transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SelectTransformer\n                        \n                    \n                \n            \n            \n                \nSelectTransformer()\n                \n            \n\n\n\n\n            \n                \n                        Transform the select query param into string array\n\n\n                        \n                            Returns :     PropertyDecorator\n\n                        \n                \n            \n        \n    \n    src/lib/decorator/view-column.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ViewColumn\n                        \n                    \n                \n            \n            \n                \nViewColumn(options: PropertyOptions)\n                \n            \n\n\n\n\n            \n                \n                        TypeORM ___ViewColumn decorator with documentation capability\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        PropertyOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    property options PropertyOptions\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     PropertyDecorator\n\n                        \n                            \n                                \n{@link PropertyDecorator}\n\n\n                            \n                \n            \n        \n    \n    src/lib/decorator/view-entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ViewEntity\n                        \n                    \n                \n            \n            \n                \nViewEntity(expression, selectBaseEntity)\n                \n            \n\n\n\n\n            \n                \n                        View entity decorator\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expression\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    Query builder factory\n\n                                            \n                                        \n                                        \n                                                selectBaseEntity\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ClassDecorator\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/query/where-property.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        WhereProperty\n                        \n                    \n                \n            \n            \n                \nWhereProperty(options: CreateQueryOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            CreateQueryOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     PropertyDecorator\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/query/where-query-transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        WhereQueryTransformer\n                        \n                    \n                \n            \n            \n                \nWhereQueryTransformer(options: CreateQueryOptions)\n                \n            \n\n\n\n\n            \n                \n                        Where query transformer\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            CreateQueryOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     PropertyDecorator\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n@puq/orm\nSummary\nThe custom TypeORM decorators extend standard entity definitions by seamlessly integrating validation and API documentation within a single decorator. These decorators ensure that database entities are not only mapped efficiently but also validated at the DTO level while providing clear API documentation using Swagger.\nDatabase entity development is streamlined through the integration of intuitive and widely adopted implementations within decorators. These decorators are paired with class-validator, class-transformer, and @nestjs/swagger, enhancing efficiency in the development process. This approach achieves a minimum reduction of 60% in both code volume and associated errors.\nInstall\nExample :  pnpm add @puq/ormSQLite\n\nSQLite does not support array or object data types. To accommodate this limitation, data must be transformed into a string format.\n\nPostgres Datasource\nTo optimize datasource performance, implement the following configuration settings:\n\npoolSize: Set to 50. This defines the maximum number of connections allowed in the pool, ensuring efficient resource utilization while accommodating peak demand.\nmin: Set to 10. This specifies the minimum number of connections maintained in the pool, keeping a baseline of readily available connections to reduce latency during low-traffic periods.\nmax: Set to 50. This establishes the upper limit of open connections, balancing system performance with resource availability to prevent overloading.\nidleTimeoutMillis: Configure to 30,000 milliseconds. This determines the duration an idle connection remains open before being closed, minimizing unnecessary resource consumption during periods of inactivity.\nconnectionTimeoutMillis: Configure to 2,000 milliseconds. This sets the maximum time allowed to establish a connection, enhancing application responsiveness by preventing prolonged delays.\n\nPostgres Server\nAdjust the PostgreSQL server configuration file (postgres.conf) with the following settings:\n\nmax_connections: Set to 200 to accommodate both application and administrative connections, ensuring sufficient capacity.\nshared_buffers: Allocate 25-40% of the server's RAM for optimal performance, configured to 4GB.\nwork_mem: Define the memory allocation per query or sort operation, set to 16MB to enhance query efficiency.\n\nNumbers\n\nThe number data type is stored as a string (numeric) to ensure the preservation of precision.\nThe number value is not converted to a JavaScript number to avoid disrupting query operations.\n\nTypeorm Column Transformer\n\nRefrain from using TypeORM column transformers, as they may interfere with query operations. Instead, implement transformations within the data transfer layer.\n\nHashing and encrypion\n\nHashing should be done in database layer. Typeorom column transformer is safe to use\nEncryption is done in controller layer\nFor handling encrypted data, implement a dedicated data transfer object (DTO) class and apply it subsequent to the execution of the initial DTO class within the controller\n\nFunding\nThank you for using @puq/orm It's an open-source project, and maintaining it takes time and effort. If you find this library useful, please consider supporting its ongoing development. Your contributions help ensure that the project stays up-to-date, secure, and well-maintained.\nInstant Funding\nYour funding will go toward\n\nBug fixes and updates to ensure compatibility with the latest versions of dependencies.\nNew features that will make the library even more powerful.\nDocumentation improvements to help users get the most out of [Your Library Name].\nGeneral maintenance to keep the library running smoothly and securely.\n\nContact to the developer: [robert.brightline@gmail.com]\nSupport the developer\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        DataSourceModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    10 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    18 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.6.2\n        \n            Description : The custom TypeORM decorators extend standard entity definitions by seamlessly integrating validation and API documentation within a single decorator. These decorators ensure that database entities are not only mapped efficiently but also validated at the DTO level while providing clear API documentation using Swagger.\n        \n            Keywords : puq, orm\n        \n            Homepage : https://rbrightline.github.io/puq/orm\n        \n            Bugs : https://rbrightline.github.io\n        \n            License : MIT\n        \n            Repository : https://github.com/rbrightline/puq/tree/main\n        \n            Author : Robert Brightline\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CreateQueryOptions   (src/.../create-query-options.ts)\n                        \n                        \n                            DataSourceModuleOptions   (src/.../data-source-options.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/query/create-query-options.ts\n    \n    \n        \n            \n                \n                    \n                    CreateQueryOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/lib/module/data-source-options.ts\n    \n    \n        \n            \n                \n                    \n                    DataSourceModuleOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BASE_ENTITY_COLUMNS   (src/.../base.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/entity/base.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BASE_ENTITY_COLUMNS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.keys(new BaseEntity())\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
