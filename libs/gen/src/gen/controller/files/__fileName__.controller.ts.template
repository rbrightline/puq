import { Rest } from '@puq/rest';
import { Body, Param, Query } from '@nestjs/common';
import {
  <%- className %>,
  Create<%- className %>Dto,
  Update<%- className %>Dto,
  <%- className %>RelationParamDto,
  <%- className %>UnsetRelationParamDto,
  QueryCount<%- className %>Dto,
  Increment<%- className %>Dto,
  Decrement<%- className %>Dto,
  QueryMany<%- className %>Dto,
  QueryOne<%- className %>Dto,
} from '@puq/entity';
import { EntityService, IDDto, InjectEntityService } from '@puq/orm';

@Rest.Controller()
export class <%- className %>Controller {
  @Rest.SetResourceMetadata({ entity: () => <%- className %> })
  protected readonly __metadata__ = '';

  constructor(
    @InjectEntityService() protected readonly service: EntityService<<%- className %>>,
  ) {}

  @Rest.Find()
  find(@Query() query: QueryMany<%- className %>Dto) {
    return this.service.find(query);
  }

  @Rest.FindOneById()
  findOneById(@Param() param: IDDto, @Query() query: QueryOne<%- className %>Dto) {
    return this.service.findOneByIdOrThrow(param, query);
  }

  @Rest.Count()
  count(@Query() query: QueryCount<%- className %>Dto) {
    return this.service.count(query);
  }

  @Rest.SaveOne()
  saveOne(@Body() body: Create<%- className %>Dto) {
    return this.service.save(body);
  }

  @Rest.UpdateOneById()
  updateOneById(@Param() param: IDDto, @Body() body: Update<%- className %>Dto) {
    return this.service.update(param, body);
  }

  @Rest.DeleteOneById()
  deleteOneById(@Param() param: IDDto) {
    return this.service.softDelete(param);
  }

  @Rest.RestoreOneById()
  restore(@Param() param: IDDto) {
    return this.service.restore(param);
  }

  @Rest.AddRelation()
  addRelation(@Param() param: <%- className %>RelationParamDto) {
    return this.service.addRelation(param);
  }

  @Rest.RemoveRelation()
  removeRelation(@Param() param: <%- className %>RelationParamDto) {
    return this.service.removeRelation(param);
  }

  @Rest.SetRelation()
  setRelation(@Param() param: <%- className %>RelationParamDto) {
    return this.service.setRelation(param);
  }

  @Rest.UnsetRelation()
  unsetRelation(@Param() param: <%- className %>UnsetRelationParamDto) {
    return this.service.unsetRelation(param);
  }

  @Rest.Increment()
  increment(@Param() param: IDDto, @Body() body: Increment<%- className %>Dto) {
    return this.service.increment(param, body);
  }

  @Rest.Decrement()
  decrement(@Param() param: IDDto, @Body() body: Decrement<%- className %>Dto) {
    return this.service.decrement(param, body);
  }
}
